/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^6 * w^1               = Coefficient of   x^5 * y^1 * z^1         = Coefficient of   x^3 * w^3               = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^2 * z^2 * w^1   = Coefficient of   x^1 * z^5               = Coefficient of   y^5 * w^1               = Coefficient of   y^3 * z^3               = Coefficient of   w^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^1*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 179
[6, 0, 0, 0, 0]  	60	5  <--- 1
[5, 1, 0, 0, 0]  	62	3 
[5, 0, 1, 0, 0]  	63	3 
[3, 0, 0, 3, 0]  	75	4 
[1, 0, 5, 0, 0]  	75	2 
[4, 2, 1, 0, 0]  	77	5 
[4, 1, 2, 0, 0]  	78	5 
[2, 0, 4, 1, 0]  	87	3 
[1, 4, 0, 2, 0]  	88	3 
[4, 0, 4, 0, 0]  	92	6 
[3, 4, 0, 1, 0]  	93	6 
[4, 1, 1, 2, 0]  	95	5 
[3, 6, 0, 0, 0]  	102	5 
[2, 7, 0, 0, 0]  	104	8 
[2, 3, 4, 0, 0]  	108	6 
[3, 2, 2, 2, 0]  	110	5 
[1, 4, 3, 1, 0]  	112	6 
[2, 2, 3, 2, 0]  	113	6 
[3, 5, 2, 0, 0]  	116	7 
[2, 2, 1, 4, 0]  	117	3 
[2, 5, 2, 1, 0]  	121	8 
[2, 0, 1, 6, 0]  	123	7 
[1, 6, 2, 1, 0]  	123	7 
[2, 0, 0, 7, 0]  	125	6 
[2, 3, 2, 3, 0]  	127	5 
[1, 1, 0, 7, 0]  	127	5 
[1, 0, 0, 8, 0]  	130	4 
[2, 6, 3, 0, 0]  	131	8 
[2, 3, 0, 5, 0]  	131	8 
[1, 8, 2, 0, 0]  	132	8 
[2, 1, 2, 5, 0]  	133	5 
[1, 9, 0, 1, 0]  	133	4 
[2, 2, 0, 6, 0]  	134	8 
[1, 8, 1, 1, 0]  	134	8 
[1, 3, 0, 6, 0]  	136	7 
[1, 0, 4, 5, 0]  	137	5 
[1, 0, 3, 6, 0]  	139	5 
[1, 0, 2, 7, 0]  	141	4 
[0, 4, 6, 1, 0]  	141	4 
[1, 11, 0, 0, 0]  	142	5 
[0, 5, 4, 2, 0]  	142	4 
[1, 10, 1, 0, 0]  	143	4 
[1, 3, 4, 3, 0]  	143	4 
[0, 4, 5, 2, 0]  	143	4 
[0, 12, 0, 0, 0]  	144	5  <--- 2
[0, 7, 0, 4, 0]  	144	5 
[1, 7, 4, 0, 0]  	146	5 
[1, 2, 4, 4, 0]  	146	4 
[0, 5, 2, 4, 0]  	146	4 
[1, 3, 2, 5, 0]  	147	6 
[0, 11, 0, 1, 0]  	147	5 
[0, 4, 3, 4, 0]  	147	4 
[0, 10, 1, 1, 0]  	148	4 
[0, 7, 5, 0, 0]  	149	4 
[0, 10, 0, 2, 0]  	150	5 
[0, 6, 6, 0, 0]  	150	5 
[0, 9, 1, 2, 0]  	151	4 
[0, 5, 7, 0, 0]  	151	4 
[0, 6, 5, 1, 0]  	152	4 
[0, 9, 0, 3, 0]  	153	4 
[0, 3, 1, 7, 0]  	154	3 
[0, 3, 0, 8, 0]  	156	2 
[0, 2, 9, 1, 0]  	156	2 
[0, 1, 3, 7, 0]  	156	2 
[0, 2, 1, 8, 0]  	157	3 
[0, 11, 2, 0, 0]  	158	3 
[0, 10, 3, 0, 0]  	159	3 
[0, 3, 6, 3, 0]  	159	3 
[0, 2, 0, 9, 0]  	159	3 
[0, 2, 6, 4, 0]  	162	3 
[0, 4, 2, 6, 0]  	164	3 
[0, 5, 0, 7, 0]  	165	3 
[0, 4, 9, 0, 0]  	165	4 
[0, 3, 10, 0, 0]  	166	3 
[0, 0, 13, 0, 0]  	169	1  <--- 3
[0, 0, 12, 1, 0]  	171	1 
[0, 2, 8, 3, 0]  	173	2 
[0, 1, 2, 9, 0]  	173	2 
[0, 1, 8, 4, 0]  	176	2 
[0, 1, 0, 11, 0]  	177	2 
[0, 1, 7, 5, 0]  	178	2 
[0, 2, 5, 6, 0]  	179	1 
[0, 0, 8, 5, 0]  	179	1 
[0, 2, 12, 0, 0]  	180	2 
[0, 1, 6, 6, 0]  	180	2 
[0, 0, 7, 6, 0]  	181	1 
[0, 0, 6, 7, 0]  	183	1 
[0, 0, 3, 10, 0]  	189	1 
[0, 0, 2, 11, 0]  	191	1 
[0, 0, 1, 12, 0]  	193	1 
[0, 0, 0, 13, 0]  	195	1  <--- 4
[0, 0, 11, 4, 0]  	203	1 
[5, 0, 0, 1, 1]  	65	5 
[3, 1, 0, 2, 1]  	72	5 
[3, 0, 1, 2, 1]  	73	5 
[3, 2, 2, 1, 1]  	95	6 
[2, 6, 1, 0, 1]  	105	6 
[2, 6, 0, 1, 1]  	107	5 
[2, 5, 1, 1, 1]  	108	5 
[2, 3, 3, 1, 1]  	110	7 
[2, 2, 2, 3, 1]  	115	5 
[0, 6, 0, 3, 1]  	117	4 
[2, 5, 3, 0, 1]  	119	9 
[2, 2, 0, 5, 1]  	119	7 
[2, 0, 2, 5, 1]  	121	6 
[1, 8, 0, 1, 1]  	121	7 
[2, 1, 0, 6, 1]  	122	8 
[1, 7, 1, 1, 1]  	122	7 
[1, 3, 4, 2, 1]  	128	5 
[2, 1, 3, 4, 1]  	131	6 
[1, 9, 1, 0, 1]  	131	6 
[1, 3, 2, 4, 1]  	132	6 
[1, 7, 3, 0, 1]  	133	5 
[1, 2, 3, 4, 1]  	133	5 
[1, 6, 4, 0, 1]  	134	6 
[1, 3, 1, 5, 1]  	134	6 
[1, 2, 2, 5, 1]  	135	6 
[1, 1, 2, 6, 1]  	138	6 
[0, 9, 0, 2, 1]  	138	5 
[0, 7, 3, 1, 1]  	138	5 
[0, 6, 3, 2, 1]  	141	4 
[0, 5, 3, 3, 1]  	144	5 
[0, 11, 1, 0, 1]  	145	4 
[0, 10, 2, 0, 1]  	146	4 
[0, 9, 3, 0, 1]  	147	5 
[0, 8, 4, 0, 1]  	148	5 
[0, 4, 0, 7, 1]  	153	4 
[0, 3, 8, 1, 1]  	155	4 
[0, 3, 7, 2, 1]  	157	3 
[0, 2, 8, 2, 1]  	158	3 
[0, 3, 5, 4, 1]  	161	3 
[0, 5, 1, 6, 1]  	163	4 
[0, 3, 3, 6, 1]  	165	3 
[0, 2, 4, 6, 1]  	166	2 
[0, 2, 11, 0, 1]  	167	2 
[0, 1, 12, 0, 1]  	168	2 
[1, 0, 2, 6, 2]  	126	6 
[0, 10, 0, 1, 2]  	135	6 
[1, 2, 1, 6, 2]  	137	5 
[0, 8, 1, 2, 2]  	139	5 
[0, 9, 2, 1, 2]  	149	4 
[0, 3, 9, 0, 2]  	153	3 
[0, 1, 9, 2, 2]  	159	2 
[1, 1, 2, 5, 3]  	123	6 
[2, 1, 1, 5, 4]  	120	5 
[0, 3, 6, 2, 4]  	144	4 
[0, 3, 4, 5, 5]  	163	3 
[0, 1, 7, 4, 250]  	163	2 
[0, 2, 0, 8, 252]  	144	3 
[1, 2, 2, 4, 253]  	120	4 
[0, 2, 3, 6, 253]  	153	2 
[1, 0, 4, 4, 254]  	122	4 
[0, 6, 5, 0, 254]  	137	2 
[0, 5, 6, 0, 254]  	138	2 
[0, 4, 2, 5, 254]  	149	2 
[0, 4, 8, 0, 254]  	152	2 
[0, 0, 3, 8, 254]  	159	1 
[0, 1, 0, 10, 254]  	162	2 
[0, 1, 5, 6, 254]  	167	1 
[0, 0, 6, 6, 254]  	168	1 
[4, 1, 1, 0, 255]  	65	3 
[2, 0, 4, 0, 255]  	72	3 
[1, 4, 0, 1, 255]  	73	3 
[0, 0, 0, 7, 255]  	105	1 
[1, 7, 1, 0, 255]  	107	3 
[1, 0, 4, 3, 255]  	107	2 
[1, 6, 2, 0, 255]  	108	3 
[0, 4, 0, 4, 255]  	108	2 
[0, 9, 0, 1, 255]  	123	5 
[0, 7, 3, 0, 255]  	123	4 
[0, 6, 3, 1, 255]  	126	4 
[0, 4, 6, 0, 255]  	126	2 
[0, 4, 3, 3, 255]  	132	3 
[0, 2, 9, 0, 255]  	141	2 
[0, 2, 7, 2, 255]  	145	3 
[0, 2, 6, 3, 255]  	147	3 
[0, 0, 6, 5, 255]  	153	1 
[0, 0, 5, 6, 255]  	155	1 
[0, 0, 12, 0, 255]  	156	1 
------
The gap is between 6 and 249.
Lengths: 2 2 7 7 2 4.
For 175 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1*w^10
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10*w^3

For 100 = 2*d-d1-d2-d3-d4 you get 7 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1*w^5

For 25 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[10997495302292898974 + 9402439576813827669*2^64 + 2035973557546085094*2^128 + 1096038108*2^192,7198967096315525514 + 4005459168615794808*2^64 + 9139990711489845340*2^128 + 1425892373*2^192,1428000713180409396 + 16323242384224966318*2^64 + 12037487860493322261*2^128 + 214568875*2^192,16076635880187185976 + 9241696637047577222*2^64 + 6380174235662540612*2^128 + 1294038553*2^192,9966689876586620080 + 12842848599632052236*2^64 + 6138271464021205880*2^128 + 3136867610*2^192,10515810311718448488 + 3584597546839414508*2^64 + 5322751879537819797*2^128 + 984919989*2^192,8968635350331965196 + 9689805367324756855*2^64 + 3487756518225644001*2^128 + 264740125*2^192,8170202018312076380 + 11974607367321068058*2^64 + 4134062203654130544*2^128 + 1112605175*2^192,8450399898302551124 + 9083220943030063777*2^64 + 9886942300383519871*2^128 + 3323501197*2^192,15089661803277902944 + 6894274383573574183*2^64 + 3502237190559429749*2^128 + 3757519795*2^192,13974979522312222832 + 8093301497783108185*2^64 + 14825922723931030528*2^128 + 1322643372*2^192;\
9016154791043734148 + 343167837896315370*2^64 + 14305250763440614270*2^128 + 1508768036*2^192,858550991643926248 + 17433397449879177052*2^64 + 388630290534728143*2^128 + 2629520012*2^192,2387682174882382680 + 6239434977392554693*2^64 + 8174569807243320*2^128 + 441620732*2^192,8305384274430234512 + 15786916836994695487*2^64 + 7713541816200449349*2^128 + 1972733014*2^192,16267246108933249152 + 7586893977949806584*2^64 + 12442938887055659305*2^128 + 3063993413*2^192,323728491239501424 + 752618339840455203*2^64 + 7607114721048662520*2^128 + 3553211825*2^192,7466509482390221352 + 13202904387127195617*2^64 + 7982576244210124975*2^128 + 1233892563*2^192,14966020666630617112 + 9977076579920710362*2^64 + 11542802770389273331*2^128 + 1461398288*2^192,17981989412993839656 + 18263424720827714516*2^64 + 16918512482384888027*2^128 + 3087683714*2^192,17285667443969848800 + 4867159437500689567*2^64 + 7482727277277285867*2^128 + 2624736213*2^192,15980261981523256160 + 13194374789516410913*2^64 + 14585075715499080382*2^128 + 1680644148*2^192;\
0 + 0*2^64 + 0*2^128 + 1493172224*2^192,0 + 0*2^64 + 0*2^128 + 67108864*2^192,10250701138584141832 + 5237561937588078428*2^64 + 15069447012531778926*2^128 + 800928990*2^192,0 + 0*2^64 + 0*2^128 + 738197504*2^192,0 + 0*2^64 + 0*2^128 + 218103808*2^192,0 + 0*2^64 + 0*2^128 + 1694498816*2^192,0 + 0*2^64 + 0*2^128 + 1644167168*2^192,0 + 0*2^64 + 0*2^128 + 218103808*2^192,0 + 0*2^64 + 0*2^128 + 1778384896*2^192,0 + 0*2^64 + 0*2^128 + 33554432*2^192,0 + 0*2^64 + 0*2^128 + 1862270976*2^192;\
724648448952178668 + 269780020851741758*2^64 + 9290520965706413427*2^128 + 1454416865*2^192,11970774971245060354 + 13249361339112065009*2^64 + 4258697656156701209*2^128 + 4233451027*2^192,9740950478560737712 + 13137771398636858669*2^64 + 3210908907214085823*2^128 + 3318524783*2^192,17511249849131913832 + 4648351288272504323*2^64 + 2132293237917805226*2^128 + 3394814764*2^192,3021522579558181384 + 2044926578309768025*2^64 + 3940535278124553927*2^128 + 2051672436*2^192,4774161146454615456 + 6607425554733459754*2^64 + 11701836994349430212*2^128 + 3738813603*2^192,10085820295629702976 + 16386916540939858038*2^64 + 3661692983643217145*2^128 + 852430814*2^192,8550285067057982288 + 1246322013981198913*2^64 + 9732142898657226343*2^128 + 579849895*2^192,8804572799753481696 + 622832190422058705*2^64 + 9822768104408629038*2^128 + 603977544*2^192,10856751069112948000 + 1404171497626864280*2^64 + 15934697979730567779*2^128 + 571148485*2^192,3173151487957972864 + 9908452497423660232*2^64 + 11195919433196639303*2^128 + 2546466407*2^192;\
12652313992978538112 + 14664885168330299693*2^64 + 15755321898158314990*2^128 + 612092593*2^192,17057766775187381172 + 8849529396805176222*2^64 + 17148716943177419308*2^128 + 1373755215*2^192,4107396765500017696 + 3390505756710337396*2^64 + 9819923400541973321*2^128 + 555339674*2^192,4035129893452743152 + 15255453825265237480*2^64 + 5641772117630510845*2^128 + 87319677*2^192,6182258463457490256 + 831544079095274554*2^64 + 3336258765004088016*2^128 + 1951283213*2^192,12681516851705498688 + 18063191728201089479*2^64 + 17341958207271968462*2^128 + 197811090*2^192,13781443718241866528 + 16230822793898022337*2^64 + 16249475788046664109*2^128 + 1305621542*2^192,5997305856622962464 + 3070474865510640259*2^64 + 1930138157072361183*2^128 + 493075475*2^192,15265329235196114192 + 18089618056908840836*2^64 + 17263779565371375072*2^128 + 435364454*2^192,14765095571825906944 + 852842761991502087*2^64 + 9020149186272798276*2^128 + 535025838*2^192,2610792323999178896 + 17453823518129618404*2^64 + 187836103930710587*2^128 + 1855856375*2^192;\
13277147478678130808 + 9891341338401841729*2^64 + 11106468500132344510*2^128 + 3522500661*2^192,2648346265922431198 + 9272064041405300218*2^64 + 85305257424987333*2^128 + 2666352305*2^192,7061029832652197704 + 11067170452966003464*2^64 + 10785603896515895190*2^128 + 1498541486*2^192,18212940775364218168 + 12852033371273590620*2^64 + 18256700768504420949*2^128 + 2239418398*2^192,2300539955703636800 + 10911983430335929700*2^64 + 4308442887885008173*2^128 + 2312631384*2^192,8820151679788143496 + 18389573023258857817*2^64 + 7116536001518355460*2^128 + 3576953663*2^192,55492991456507480 + 4966295610923313952*2^64 + 17117114907802620318*2^128 + 1106869763*2^192,1626586133598809736 + 9759091187155707766*2^64 + 6190289750803001731*2^128 + 3466524346*2^192,15704921750589365368 + 5339474978037339924*2^64 + 1360759110745155172*2^128 + 2720683672*2^192,16347312422368058640 + 18288295904808319944*2^64 + 8488253896449200972*2^128 + 961760421*2^192,12665658157619253712 + 9658513906791443746*2^64 + 3567136747090158099*2^128 + 2026335060*2^192;\
14857032955943068342 + 7055984174621864154*2^64 + 12127107823731576731*2^128 + 4205826002*2^192,17571861382612680306 + 6761345814723342945*2^64 + 10262602890424106141*2^128 + 2473619817*2^192,13343615603208031252 + 9088034860880445111*2^64 + 18078843292056804686*2^128 + 2966085121*2^192,1118557722031376912 + 11755577470204625145*2^64 + 2502075907472358109*2^128 + 2867468170*2^192,10382028083078603384 + 13491755958376402277*2^64 + 5137872350723380549*2^128 + 2074697302*2^192,7331041744018820152 + 2181669173616257183*2^64 + 3789558642213647650*2^128 + 117182677*2^192,708666779022018380 + 15962432965786062834*2^64 + 6699225083198253985*2^128 + 1663888390*2^192,1256273828148610900 + 11519587394231014861*2^64 + 10368184313202408473*2^128 + 2682198364*2^192,17427603964591170436 + 11493402122158067911*2^64 + 8814641106518006221*2^128 + 242398903*2^192,13241929269953180144 + 8714552553633443277*2^64 + 9689980649440171947*2^128 + 3265612133*2^192,4064327812768484544 + 13833748006725675384*2^64 + 495231514333902487*2^128 + 3691064997*2^192;\
0 + 0*2^64 + 0*2^128 + 213909504*2^192,0 + 0*2^64 + 0*2^128 + 4070572032*2^192,0 + 0*2^64 + 0*2^128 + 880803840*2^192,0 + 0*2^64 + 0*2^128 + 3061841920*2^192,0 + 0*2^64 + 0*2^128 + 559939584*2^192,0 + 0*2^64 + 0*2^128 + 251658240*2^192,0 + 0*2^64 + 0*2^128 + 1704984576*2^192,10250701138584141832 + 5237561937588078428*2^64 + 15069447012531778926*2^128 + 1178416350*2^192,0 + 0*2^64 + 0*2^128 + 2116026368*2^192,0 + 0*2^64 + 0*2^128 + 3380609024*2^192,0 + 0*2^64 + 0*2^128 + 4179623936*2^192;\
12523863816361576375 + 16477654508073694858*2^64 + 12368654719256093885*2^128 + 3447464655*2^192,882204021948987909 + 769425080523650304*2^64 + 1155369718789178265*2^128 + 1406599961*2^192,460853169940905146 + 12764841656499536384*2^64 + 16987950307758212627*2^128 + 842826105*2^192,3181838580960818212 + 9918508580903096946*2^64 + 14530926388001990852*2^128 + 4112688667*2^192,17212850341713501824 + 7900193000330158923*2^64 + 1608795603750686282*2^128 + 829667422*2^192,16305745344892781572 + 5836329709224011690*2^64 + 14086783154944902467*2^128 + 671285091*2^192,225173718332588566 + 2088667982663287048*2^64 + 10512177083074889341*2^128 + 4130542623*2^192,6532783299631388182 + 3866864663747160754*2^64 + 7211841231155892541*2^128 + 2243456896*2^192,10939755431573510922 + 6998534365541797163*2^64 + 11942868305939569496*2^128 + 614097009*2^192,17499329536848272400 + 1518201539472999165*2^64 + 8112749263964271668*2^128 + 3851065211*2^192,721408596661827432 + 10021404171755751749*2^64 + 4340810183158913586*2^128 + 2784477235*2^192;\
12105009809736215732 + 3422524300802957644*2^64 + 1106139374840486146*2^128 + 487129770*2^192,4460889806857887210 + 814240170435331451*2^64 + 874227990628049512*2^128 + 1537475109*2^192,13817504520267196640 + 14700987339078096544*2^64 + 9869919996980130313*2^128 + 2657836662*2^192,8555356594165129632 + 15759868079110264271*2^64 + 8358122075531633802*2^128 + 3843470734*2^192,836355740681196680 + 5362582635299196602*2^64 + 17732056987791189982*2^128 + 3033813470*2^192,16494228761132949520 + 1051938228340998372*2^64 + 9763735105729265248*2^128 + 2817225446*2^192,8251733104455979600 + 14384358705381065851*2^64 + 14746594227878267176*2^128 + 4186208422*2^192,9620359115198601176 + 8070857730572216626*2^64 + 1473007567311084903*2^128 + 2677749938*2^192,9932581624603586096 + 5591847734655955365*2^64 + 16523031504036775220*2^128 + 3372879107*2^192,13935552893307958880 + 9209177773548764637*2^64 + 13190553582177180354*2^128 + 2136092084*2^192,905842506089820656 + 18347635729522813323*2^64 + 10349242677125059362*2^128 + 1525000541*2^192;\
15011263680036723098 + 13292425648577939238*2^64 + 6686885238116553434*2^128 + 2656182006*2^192,4048491041983724764 + 2531558284575424208*2^64 + 14060502517733245209*2^128 + 4187621103*2^192,989265285988920052 + 9074571225084470615*2^64 + 4919851598296191730*2^128 + 1838622229*2^192,1767409038565731000 + 1336033626157126323*2^64 + 14503371431734144871*2^128 + 1093388693*2^192,9282949597372809768 + 2102038550481747442*2^64 + 15190885147281859444*2^128 + 4066547981*2^192,3601795836489669816 + 13581934500786419107*2^64 + 4027177000082655877*2^128 + 2929010018*2^192,2853062964545635932 + 7267952220446342458*2^64 + 14175670983426204483*2^128 + 1744039675*2^192,10218274042562671988 + 3800483494096264097*2^64 + 6465081232332499501*2^128 + 1488093518*2^192,9405469227606812980 + 8109292310970129409*2^64 + 161554308832422079*2^128 + 441609777*2^192,12424660210446103120 + 8684658708128519283*2^64 + 2111178466911717476*2^128 + 2810269036*2^192,8276861002767001728 + 4287030531695554566*2^64 + 266356680167908275*2^128 + 3604692865*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4517 lists. */
