/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^6 * y^3               = Coefficient of   x^4 * y^1 * z^1 * w^1   = Coefficient of   x^3 * y^5               = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * z^4               = Coefficient of   y^7                     = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 128
[1, 3, 1, 0, 0]  	63	2 
[1, 3, 0, 1, 0]  	65	2 
[9, 0, 0, 0, 0]  	72	4  <--- 1
[8, 1, 0, 0, 0]  	76	4 
[1, 0, 4, 0, 0]  	84	2 
[0, 3, 0, 4, 0]  	120	2 
[5, 7, 0, 0, 0]  	124	5 
[0, 9, 0, 1, 0]  	129	3 
[0, 6, 1, 2, 0]  	133	3 
[2, 0, 1, 5, 0]  	140	5 
[5, 0, 1, 4, 0]  	143	5 
[5, 0, 0, 5, 0]  	145	5 
[8, 0, 0, 4, 0]  	148	4 
[7, 1, 0, 4, 0]  	152	4 
[4, 10, 0, 0, 0]  	152	5 
[0, 8, 0, 3, 0]  	159	4 
[1, 1, 3, 4, 0]  	161	3 
[3, 1, 0, 6, 0]  	162	3 
[2, 2, 2, 4, 0]  	162	3 
[0, 7, 3, 1, 0]  	162	3 
[4, 1, 2, 4, 0]  	166	3 
[2, 2, 0, 6, 0]  	166	3 
[0, 4, 4, 2, 0]  	166	3 
[1, 1, 0, 7, 0]  	167	2 
[0, 6, 4, 1, 0]  	169	2 
[1, 0, 3, 5, 0]  	170	2 
[0, 11, 2, 0, 0]  	170	2 
[1, 0, 1, 7, 0]  	174	2 
[0, 5, 6, 0, 0]  	174	2 
[1, 2, 2, 5, 0]  	175	2 
[0, 13, 1, 0, 0]  	175	2 
[0, 3, 4, 3, 0]  	175	2 
[1, 14, 0, 0, 0]  	176	5 
[1, 2, 1, 6, 0]  	177	2 
[0, 10, 3, 0, 0]  	177	2 
[0, 2, 7, 1, 0]  	178	2 
[0, 7, 5, 0, 0]  	179	2 
[0, 2, 5, 3, 0]  	182	1 
[0, 4, 6, 1, 0]  	183	2 
[0, 1, 9, 0, 0]  	183	2 
[0, 1, 8, 1, 0]  	185	2 
[0, 2, 3, 5, 0]  	186	1 
[0, 2, 1, 7, 0]  	190	1 
[0, 0, 10, 0, 0]  	190	1  <--- 3
[0, 1, 5, 4, 0]  	191	1 
[0, 16, 0, 0, 0]  	192	4  <--- 2
[0, 1, 4, 5, 0]  	193	1 
[0, 0, 8, 2, 0]  	194	1 
[1, 0, 0, 9, 0]  	197	2 
[0, 0, 6, 4, 0]  	198	1 
[0, 1, 1, 8, 0]  	199	1 
[4, 0, 0, 8, 0]  	200	3 
[0, 1, 0, 9, 0]  	201	1 
[0, 0, 4, 6, 0]  	202	1 
[0, 0, 2, 8, 0]  	206	1 
[0, 0, 0, 10, 0]  	210	1  <--- 4
[3, 5, 0, 0, 1]  	84	3 
[5, 0, 0, 4, 1]  	124	5 
[4, 2, 0, 4, 1]  	140	5 
[3, 0, 0, 7, 1]  	171	4 
[4, 0, 3, 4, 1]  	173	3 
[7, 0, 0, 3, 2]  	119	4 
[8, 0, 3, 0, 2]  	121	4 
[0, 6, 5, 0, 2]  	167	2 
[0, 3, 6, 1, 2]  	171	3 
[0, 15, 0, 0, 2]  	180	4 
[0, 5, 3, 3, 2]  	180	3 
[0, 4, 7, 0, 2]  	181	2 
[2, 2, 0, 3, 3]  	103	3 
[3, 2, 3, 0, 3]  	105	3 
[4, 0, 3, 3, 3]  	152	5 
[7, 0, 3, 2, 4]  	155	4 
[0, 3, 7, 0, 4]  	169	2 
[0, 1, 7, 2, 4]  	187	2 
[0, 1, 6, 3, 4]  	189	2 
[2, 0, 3, 2, 5]  	115	3 
[2, 0, 2, 3, 5]  	117	3 
[1, 0, 0, 6, 5]  	134	3 
[1, 13, 0, 0, 5]  	164	4 
[1, 0, 2, 5, 7]  	151	3 
[0, 10, 2, 0, 238]  	158	2 
[0, 11, 1, 0, 241]  	151	2 
[0, 9, 2, 0, 243]  	146	2 
[0, 8, 3, 0, 243]  	153	2 
[1, 2, 2, 4, 243]  	154	3 
[0, 6, 3, 1, 245]  	150	2 
[0, 8, 2, 0, 248]  	134	2 
[0, 8, 0, 2, 248]  	138	2 
[1, 1, 2, 4, 248]  	142	2 
[0, 7, 2, 1, 248]  	143	2 
[0, 4, 4, 1, 248]  	145	3 
[0, 5, 3, 2, 250]  	159	3 
[0, 5, 2, 3, 250]  	161	2 
[0, 2, 2, 5, 250]  	167	1 
[0, 2, 1, 6, 250]  	169	1 
[0, 2, 0, 7, 250]  	171	2 
[0, 2, 6, 2, 250]  	180	2 
[0, 8, 1, 0, 251]  	115	2 
[0, 8, 0, 1, 251]  	117	2 
[1, 1, 1, 4, 251]  	123	2 
[1, 1, 0, 5, 251]  	125	2 
[1, 0, 1, 5, 252]  	132	2 
[0, 5, 5, 0, 252]  	155	2 
[0, 14, 0, 0, 252]  	168	2 
[0, 3, 5, 2, 252]  	173	2 
[0, 0, 5, 4, 252]  	179	1 
[0, 0, 4, 5, 252]  	181	1 
[0, 0, 1, 8, 252]  	187	1 
[0, 0, 0, 9, 252]  	189	1 
[0, 7, 1, 0, 253]  	103	2 
[0, 7, 0, 1, 253]  	105	2 
[1, 0, 1, 4, 253]  	111	2 
[1, 0, 0, 5, 253]  	113	1 
[0, 6, 3, 0, 253]  	129	2 
[1, 12, 0, 0, 253]  	152	4 
[0, 5, 2, 1, 254]  	119	2 
[0, 5, 1, 2, 254]  	121	2 
[0, 2, 1, 4, 254]  	127	1 
[0, 2, 0, 5, 254]  	129	1 
[0, 4, 5, 0, 254]  	143	2 
[0, 12, 0, 0, 254]  	144	1 
[0, 3, 6, 0, 254]  	150	2 
[0, 2, 7, 0, 254]  	157	2 
[0, 2, 4, 3, 254]  	163	1 
[0, 0, 0, 8, 254]  	168	1 
[0, 7, 0, 0, 255]  	84	2 
[3, 0, 0, 4, 255]  	108	3 
[0, 4, 3, 3, 255]  	168	2 
------
The gap is between 8 and 237.
Lengths: 2 2 5 7 2 5.
For 192 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8
1 + 0*2^64 + 0*2^128 + 0*2^192*z^9*w^1

For 108 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^9
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[10366510298670040320 + 16019034706582166885*2^64 + 3540409786116562567*2^128 + 5385099600*2^192,2862370123219707580 + 13857963369501315098*2^64 + 17187239580021096670*2^128 + 19644691189*2^192,14760407492635354878 + 14804049535913359227*2^64 + 7076843303362262433*2^128 + 16697794105*2^192,11191188397751267736 + 1812207344312589201*2^64 + 5412034095009287560*2^128 + 19994355681*2^192,5118749448841558104 + 12472717181117254217*2^64 + 7231947579106925872*2^128 + 5450543031*2^192,7667623162161471408 + 6211419749220265041*2^64 + 16725698098454430091*2^128 + 16908294033*2^192,8986926213526416000 + 238638382535967730*2^64 + 11204521958264200056*2^128 + 24152713590*2^192,775012444401235424 + 1812918068431604949*2^64 + 18285251066512446813*2^128 + 20628305870*2^192,7905716304729024848 + 15087814285817873084*2^64 + 10441275071092538808*2^128 + 5327161075*2^192;\
7568071885552725120 + 13352926826839223963*2^64 + 16400637557426922546*2^128 + 8016151313*2^192,7832093090864108976 + 12911424058293580311*2^64 + 171678077022025911*2^128 + 4210226611*2^192,6665005005838544456 + 3185612014041947756*2^64 + 8134728814713250870*2^128 + 11553989868*2^192,3946644844561432736 + 12407978396475483668*2^64 + 3780503894525686027*2^128 + 22818875584*2^192,3866344369737354144 + 14228522348003155020*2^64 + 9593993306141171891*2^128 + 28053268426*2^192,2646763822025212736 + 9163582407325034638*2^64 + 17732475423836140870*2^128 + 891394735*2^192,16420036896664606208 + 1652000413030243392*2^64 + 15233713430205740997*2^128 + 29448461281*2^192,10860522201164641920 + 17009083839185025386*2^64 + 5446687438376216504*2^128 + 29987245161*2^192,2564471410239333568 + 3261984188148162175*2^64 + 987790976916950852*2^128 + 27565754874*2^192;\
4409341226520246400 + 542125568549014167*2^64 + 9269444434936253932*2^128 + 15028573637*2^192,2517702569162538848 + 2507273624679064519*2^64 + 1261423200418516305*2^128 + 10782445874*2^192,8172839658111243648 + 2870168008306054487*2^64 + 9951608226472102480*2^128 + 10070942506*2^192,3463889981711420800 + 17180555744676448586*2^64 + 15359485312903690742*2^128 + 8346445673*2^192,14436767228565966336 + 5870464383664288208*2^64 + 78332695648728498*2^128 + 15001331055*2^192,18019063792070668800 + 805294828834832777*2^64 + 4131432156699762711*2^128 + 5291099715*2^192,9960688339272289792 + 12115288409890712191*2^64 + 14877581943046357925*2^128 + 1231222092*2^192,358420640609374080 + 2929006118358041687*2^64 + 7222781577596176458*2^128 + 2688811670*2^192,13765576213733838848 + 15174745237843168212*2^64 + 1586098944925900390*2^128 + 9305859881*2^192;\
11657692746673976992 + 449943396803429461*2^64 + 16880345333798838675*2^128 + 16540150190*2^192,6532566265493112372 + 13779104079751732852*2^64 + 3474753375526915428*2^128 + 20665253637*2^192,11252294270282787390 + 11242098549569811539*2^64 + 384889827508858787*2^128 + 12509081848*2^192,4361678514803526712 + 12028069507699580956*2^64 + 16738899854326072181*2^128 + 9488309206*2^192,13086752685973838360 + 551811493771369612*2^64 + 3289124260126930983*2^128 + 31769145055*2^192,5004022502957868656 + 13473752781251389357*2^64 + 1008587101899208291*2^128 + 7224472677*2^192,18322870822468698240 + 8594099986612627837*2^64 + 16910657360490940511*2^128 + 19251399580*2^192,5427575525472520608 + 11460114531056106836*2^64 + 410704321464417909*2^128 + 4546363522*2^192,9013946647783054224 + 406467612921270239*2^64 + 668244024680508025*2^128 + 6014658446*2^192;\
1460432717179554944 + 15017423330016760833*2^64 + 11096546298405479459*2^128 + 22325699578*2^192,18104716365131272272 + 7629094582245999664*2^64 + 7421548286565312114*2^128 + 33600827843*2^192,6800898823310770728 + 1791808865680667458*2^64 + 1973403861231334042*2^128 + 25338861067*2^192,4783424333317307168 + 14276942421725639992*2^64 + 4310748669233195552*2^128 + 30529752123*2^192,6945553337117434912 + 11839090009041307879*2^64 + 6198578290162708318*2^128 + 23233339812*2^192,15315024248812841280 + 18153340439155948501*2^64 + 12733023060405202689*2^128 + 5746502043*2^192,13606344617221891840 + 10465253467581793424*2^64 + 2477248307783039788*2^128 + 1152454682*2^192,567352486032121216 + 5764402022934602854*2^64 + 1920157315789359874*2^128 + 22979467267*2^192,9686014105951052992 + 14415966284956316318*2^64 + 6174485874373402999*2^128 + 5506290755*2^192;\
4397021708817909200 + 10714591933299273712*2^64 + 6586671804515092022*2^128 + 4135689205*2^192,18231888248914203050 + 12125330725321258892*2^64 + 3648082437012845158*2^128 + 27362504421*2^192,13091745598684696495 + 13232520894767730206*2^64 + 5275069874565484141*2^128 + 25899396506*2^192,1138980154169341020 + 11219392481736909990*2^64 + 16359495898016379502*2^128 + 24195215788*2^192,16685472762202448876 + 9606679406947782858*2^64 + 6273977337069403410*2^128 + 5155067705*2^192,9815938258980962872 + 14882423837677403452*2^64 + 14709237250495198299*2^128 + 9745033548*2^192,6579120243064700480 + 5913081600886937588*2^64 + 2100217450738500662*2^128 + 19462111323*2^192,17631146162067968336 + 9239397229580203342*2^64 + 8767247439750100850*2^128 + 18796510497*2^192,17858942093267241928 + 6945471361780646019*2^64 + 14638586008992211924*2^128 + 9913486949*2^192;\
13906337492569626032 + 12602250305729476660*2^64 + 11840348570747735509*2^128 + 14711867553*2^192,13885166749289104148 + 17410190357234607278*2^64 + 17941308566555084643*2^128 + 29565415869*2^192,9396105034666853980 + 1112873887561618988*2^64 + 16624459120714469965*2^128 + 13231518899*2^192,16984865039511386752 + 8915340297128917955*2^64 + 13254316931753316950*2^128 + 517713739*2^192,16464571271399379504 + 6886614360227739821*2^64 + 10135190853922325152*2^128 + 13527563124*2^192,16442363211903381504 + 478850163726162918*2^64 + 15135352820094686157*2^128 + 7365291176*2^192,6609515367332336704 + 3201933223075111933*2^64 + 12074156841105688595*2^128 + 19388629739*2^192,7146727948696133024 + 17762754131460786713*2^64 + 3471507849236721197*2^128 + 18432519506*2^192,11800918546700643136 + 987562369163711312*2^64 + 4960085620801109660*2^128 + 1792165306*2^192;\
14786873505428877536 + 9572162899619660570*2^64 + 4018404348413601989*2^128 + 10460131328*2^192,7741162052261023580 + 11111970044419880222*2^64 + 10391810407721323884*2^128 + 21166056845*2^192,6274762307099130458 + 914578294116948728*2^64 + 13305050530897475783*2^128 + 33351541241*2^192,1887524931527299880 + 7185684594115415872*2^64 + 12780453416208314684*2^128 + 6392809414*2^192,7005698365770005896 + 17393320721104817928*2^64 + 14702814264241390758*2^128 + 20391463654*2^192,16054885819664928848 + 979754852509604705*2^64 + 2604825092697592015*2^128 + 26659044684*2^192,2427597281538679168 + 14863800130489832450*2^64 + 8020085133669155317*2^128 + 9054064226*2^192,16325559367579082464 + 13008332199820159432*2^64 + 12492918914554865946*2^128 + 34159197234*2^192,16568530476896944048 + 13473053886440652490*2^64 + 12214765901584404303*2^128 + 23704789787*2^192;\
10951223328499903488 + 14191682687891611093*2^64 + 11599483162897008041*2^128 + 17147145073*2^192,14183773343976320080 + 3127529554265351298*2^64 + 10146307414943733775*2^128 + 4038364649*2^192,13496055657064451560 + 13390567145025963646*2^64 + 11539029201285807100*2^128 + 6093553891*2^192,1908367258441695520 + 12577732532581338058*2^64 + 8004499328169285291*2^128 + 2208442017*2^192,12311785440405192224 + 15472372505662956779*2^64 + 15570566141680536857*2^128 + 13778834334*2^192,6349223377154528320 + 9862557286896238106*2^64 + 8723774994994953082*2^128 + 4476722971*2^192,8144794549696015872 + 17341495247481173284*2^64 + 539813243275491326*2^128 + 5703132467*2^192,15193372763436513408 + 18310972332849448658*2^64 + 14072551907647585649*2^128 + 10795312195*2^192,8716978777252637248 + 16478381288137292660*2^64 + 17010634828752045717*2^128 + 7587162851*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 3545 lists. */
