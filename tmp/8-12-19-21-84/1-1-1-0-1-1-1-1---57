/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^6 * y^3               = Coefficient of   x^4 * y^1 * z^1 * w^1   = Coefficient of   x^3 * y^5               = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * z^4               = Coefficient of   y^7                     = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 172
[4, 1, 1, 0, 0]  	63	3 
[4, 1, 0, 1, 0]  	65	3 
[9, 0, 0, 0, 0]  	72	5  <--- 1
[8, 1, 0, 0, 0]  	76	5 
[6, 3, 0, 0, 0]  	84	4 
[1, 0, 4, 0, 0]  	84	2 
[3, 5, 1, 0, 0]  	103	5 
[3, 5, 0, 1, 0]  	105	5 
[3, 7, 0, 0, 0]  	108	4 
[2, 3, 1, 2, 0]  	113	5 
[3, 3, 2, 1, 0]  	119	6 
[2, 7, 1, 0, 0]  	119	6 
[3, 1, 0, 4, 0]  	120	3 
[2, 7, 0, 1, 0]  	121	6 
[3, 0, 1, 4, 0]  	127	5 
[3, 0, 0, 5, 0]  	129	4 
[2, 6, 0, 2, 0]  	130	6 
[6, 0, 0, 4, 0]  	132	5 
[1, 7, 1, 1, 0]  	132	5 
[2, 5, 2, 1, 0]  	135	6 
[2, 10, 0, 0, 0]  	136	7 
[1, 9, 0, 1, 0]  	137	5 
[0, 10, 0, 1, 0]  	141	4 
[2, 4, 3, 1, 0]  	142	5 
[2, 2, 1, 4, 0]  	143	5 
[2, 6, 3, 0, 0]  	145	4 
[2, 2, 0, 5, 0]  	145	5 
[0, 7, 1, 2, 0]  	145	4 
[1, 8, 0, 2, 0]  	146	5 
[1, 10, 1, 0, 0]  	147	6 
[1, 5, 1, 3, 0]  	150	4 
[0, 9, 0, 2, 0]  	150	4 
[0, 11, 1, 0, 0]  	151	3 
[1, 12, 0, 0, 0]  	152	6 
[0, 8, 3, 0, 0]  	153	3 
[1, 9, 2, 0, 0]  	154	4 
[1, 2, 2, 4, 0]  	154	4 
[1, 4, 3, 2, 0]  	155	5 
[1, 2, 1, 5, 0]  	156	5 
[2, 0, 3, 4, 0]  	157	5 
[1, 6, 3, 1, 0]  	158	3 
[1, 2, 0, 6, 0]  	158	3 
[0, 10, 2, 0, 0]  	158	3 
[1, 4, 1, 4, 0]  	159	4 
[0, 8, 0, 3, 0]  	159	4 
[2, 5, 0, 4, 0]  	160	6 
[1, 4, 0, 5, 0]  	161	3 
[1, 1, 3, 4, 0]  	161	3 
[0, 7, 3, 1, 0]  	162	3 
[0, 4, 6, 0, 0]  	162	3 
[2, 0, 0, 7, 0]  	163	3 
[1, 6, 0, 4, 0]  	164	4 
[0, 4, 4, 2, 0]  	166	3 
[1, 1, 0, 7, 0]  	167	2 
[0, 9, 2, 1, 0]  	167	2 
[0, 6, 5, 0, 0]  	167	2 
[0, 6, 4, 1, 0]  	169	2 
[0, 3, 7, 0, 0]  	169	2 
[1, 0, 3, 5, 0]  	170	2 
[0, 4, 2, 4, 0]  	170	2 
[0, 6, 3, 2, 0]  	171	3 
[0, 3, 6, 1, 0]  	171	3 
[0, 6, 2, 3, 0]  	173	3 
[1, 0, 1, 7, 0]  	174	2 
[0, 4, 0, 6, 0]  	174	2 
[0, 6, 1, 4, 0]  	175	2 
[0, 3, 4, 3, 0]  	175	2 
[0, 6, 0, 5, 0]  	177	2 
[0, 3, 3, 4, 0]  	177	2 
[0, 2, 7, 1, 0]  	178	2 
[0, 3, 2, 5, 0]  	179	2 
[0, 15, 0, 0, 0]  	180	3  <--- 2
[0, 5, 3, 3, 0]  	180	3 
[0, 3, 1, 6, 0]  	181	2 
[0, 2, 5, 3, 0]  	182	1 
[0, 3, 0, 7, 0]  	183	2 
[0, 1, 9, 0, 0]  	183	2 
[0, 1, 8, 1, 0]  	185	2 
[0, 2, 3, 5, 0]  	186	1 
[0, 1, 7, 2, 0]  	187	2 
[0, 1, 6, 3, 0]  	189	2 
[0, 2, 1, 7, 0]  	190	1 
[0, 0, 10, 0, 0]  	190	1  <--- 3
[0, 1, 5, 4, 0]  	191	1 
[0, 1, 4, 5, 0]  	193	1 
[0, 0, 8, 2, 0]  	194	1 
[1, 0, 0, 9, 0]  	197	2 
[0, 0, 6, 4, 0]  	198	1 
[0, 1, 1, 8, 0]  	199	1 
[0, 1, 0, 9, 0]  	201	1 
[0, 0, 4, 6, 0]  	202	1 
[0, 0, 2, 8, 0]  	206	1 
[0, 0, 0, 10, 0]  	210	1  <--- 4
[5, 5, 0, 0, 1]  	100	6 
[5, 0, 0, 4, 1]  	124	7 
[2, 9, 0, 0, 1]  	124	6 
[2, 0, 1, 5, 1]  	140	6 
[1, 3, 2, 3, 1]  	145	4 
[2, 1, 2, 4, 1]  	150	4 
[1, 0, 2, 5, 1]  	151	3 
[1, 0, 1, 6, 1]  	153	3 
[2, 1, 0, 6, 1]  	154	4 
[1, 0, 0, 8, 1]  	176	4 
[4, 0, 0, 3, 2]  	95	6 
[5, 0, 3, 0, 2]  	97	6 
[3, 2, 2, 1, 2]  	107	6 
[3, 2, 1, 2, 2]  	109	6 
[3, 2, 0, 3, 2]  	111	5 
[2, 3, 0, 3, 2]  	115	4 
[3, 3, 3, 0, 2]  	117	4 
[3, 1, 3, 2, 2]  	135	6 
[3, 1, 2, 3, 2]  	137	5 
[2, 0, 2, 4, 2]  	138	6 
[2, 0, 0, 6, 2]  	142	5 
[1, 6, 0, 3, 2]  	143	5 
[1, 3, 3, 2, 2]  	143	4 
[3, 0, 3, 3, 2]  	144	5 
[1, 7, 3, 0, 2]  	149	5 
[1, 0, 0, 7, 2]  	155	4 
[0, 14, 0, 0, 2]  	168	5 
[2, 5, 3, 0, 3]  	133	6 
[3, 0, 3, 2, 4]  	123	5 
[3, 0, 2, 3, 4]  	125	5 
[2, 1, 2, 3, 4]  	129	5 
[1, 7, 0, 2, 4]  	134	5 
[2, 2, 3, 2, 4]  	139	5 
[1, 5, 3, 1, 5]  	146	4 
[1, 1, 0, 6, 251]  	146	3 
[0, 8, 2, 1, 251]  	155	3 
[2, 4, 2, 1, 252]  	123	4 
[1, 8, 0, 1, 252]  	125	3 
[1, 5, 1, 2, 252]  	129	4 
[2, 1, 0, 5, 252]  	133	5 
[1, 6, 2, 1, 252]  	139	3 
[0, 10, 1, 0, 252]  	139	3 
[1, 0, 3, 4, 252]  	149	3 
[0, 4, 3, 3, 252]  	168	3 
[2, 1, 1, 4, 253]  	131	4 
[1, 0, 0, 6, 253]  	134	3 
[0, 8, 0, 2, 253]  	138	4 
[1, 8, 2, 0, 253]  	142	4 
[0, 7, 2, 1, 253]  	143	3 
[2, 5, 1, 0, 254]  	95	3 
[2, 5, 0, 1, 254]  	97	3 
[0, 7, 1, 0, 254]  	103	2 
[0, 7, 0, 1, 254]  	105	2 
[2, 3, 2, 1, 254]  	111	2 
[1, 5, 2, 1, 254]  	127	2 
[1, 2, 1, 4, 254]  	135	3 
[1, 2, 0, 5, 254]  	137	3 
[1, 5, 0, 4, 254]  	152	3 
[0, 13, 0, 0, 254]  	156	4 
[0, 2, 7, 0, 254]  	157	2 
[0, 5, 1, 4, 254]  	163	2 
[0, 5, 0, 5, 254]  	165	2 
[3, 3, 1, 1, 255]  	100	5 
[2, 0, 1, 4, 255]  	119	3 
[0, 5, 2, 1, 255]  	119	2 
[2, 0, 0, 5, 255]  	121	3 
[0, 5, 1, 2, 255]  	121	2 
[1, 4, 3, 1, 255]  	134	4 
[0, 4, 5, 0, 255]  	143	1 
[1, 1, 1, 5, 255]  	144	3 
[0, 12, 0, 0, 255]  	144	2 
[0, 4, 4, 1, 255]  	145	1 
[0, 4, 1, 4, 255]  	151	1 
[0, 4, 0, 5, 255]  	153	1 
[0, 2, 4, 3, 255]  	163	1 
[0, 2, 3, 4, 255]  	165	1 
[0, 2, 0, 7, 255]  	171	1 
[0, 3, 5, 2, 255]  	173	2 
[0, 1, 0, 8, 255]  	180	1 
------
The gap is between 6 and 250.
Lengths: 2 2 5 5 2 3.
For 192 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8
1 + 0*2^64 + 0*2^128 + 0*2^192*z^9*w^1

For 108 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^9
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[4396036723779805938 + 10964070597863860247*2^64 + 6452677928465187472*2^128 + 75010994*2^192,14994297429071886864 + 6034755615550050027*2^64 + 10161630826399836681*2^128 + 713885683*2^192,3178388704431275356 + 6467411675140467392*2^64 + 1477497357601111313*2^128 + 830728274*2^192,14202829307500911056 + 8992765370515996397*2^64 + 17411646593680413785*2^128 + 732349357*2^192,14464053443095519324 + 7193890287012682356*2^64 + 15617396341489553855*2^128 + 2038907338*2^192,8012880688592015176 + 3438606715973445545*2^64 + 10600499822222758732*2^128 + 282479359*2^192,10227324421811608404 + 2883985131401612505*2^64 + 12866198064630843817*2^128 + 613416147*2^192,602679222052325480 + 5380673626572000449*2^64 + 14446635876673044410*2^128 + 715131787*2^192,7031825272677777880 + 9845578194654748693*2^64 + 7451009116129420519*2^128 + 1121247605*2^192;\
16840678303963708192 + 1793384204803437627*2^64 + 2549937088778325861*2^128 + 263926413*2^192,13940698144770928434 + 4202405878773611653*2^64 + 13363523457736970304*2^128 + 998003551*2^192,7723113301435485328 + 7676211080730040862*2^64 + 7680966581861828597*2^128 + 376696390*2^192,10300622794616144768 + 9143490955571048070*2^64 + 8394179625094680471*2^128 + 1683872246*2^192,4719586969580384560 + 11178008616387240364*2^64 + 2356989233317948534*2^128 + 98848257*2^192,2581242346367825952 + 14972521657684923535*2^64 + 9070383907196461392*2^128 + 1546767306*2^192,14000984293927772336 + 2326716229755948339*2^64 + 7692267500410383954*2^128 + 1536002579*2^192,2807249663928636000 + 16788808698048167444*2^64 + 5185287197000257999*2^128 + 451312145*2^192,2436341965505039328 + 7449336908053712955*2^64 + 5153257576281658374*2^128 + 1083158226*2^192;\
13209085072714797827 + 8318958532705921227*2^64 + 15042935385652864420*2^128 + 2072567246*2^192,12015269566180019308 + 9597780345194692084*2^64 + 3724233980975459161*2^128 + 611175089*2^192,10431254838599394534 + 13537287279161997307*2^64 + 3575600199785872078*2^128 + 879900761*2^192,149732114689393244 + 414908428506423955*2^64 + 1394340424107625331*2^128 + 136442115*2^192,4482335294495103494 + 9535544938276624727*2^64 + 14765619823560520668*2^128 + 1238565277*2^192,1055016119999822360 + 14939783969420770194*2^64 + 9802542457727053685*2^128 + 641479089*2^192,6878686732900072582 + 6826446845087991616*2^64 + 14399966121178833149*2^128 + 1705692326*2^192,18373319682805429884 + 4215091029216143076*2^64 + 18246129434542130943*2^128 + 395565646*2^192,4166058564442814204 + 8908889825448611364*2^64 + 4958684876696738603*2^128 + 303488205*2^192;\
1912562372291110903 + 2601635427122124501*2^64 + 3204398618600722428*2^128 + 846215154*2^192,10516568925131399581 + 17324893945529939103*2^64 + 543291463814340436*2^128 + 519616565*2^192,10494908513488201018 + 9348215469686614169*2^64 + 9048491802950735859*2^128 + 240049928*2^192,16074984471675593516 + 14561468770085197518*2^64 + 14799456999458310745*2^128 + 40223836*2^192,18086233044635712362 + 929092403892206762*2^64 + 96440415175445238*2^128 + 10642415*2^192,13022256376915846124 + 14543155035301808147*2^64 + 4498355684004062041*2^128 + 316614283*2^192,12418186073432507214 + 5975496321015640970*2^64 + 15284613873280978239*2^128 + 334300987*2^192,14057294131745246268 + 9586566978073210268*2^64 + 4706513474287209118*2^128 + 649801645*2^192,8859363222180568772 + 4842437812650317187*2^64 + 12959021894900540095*2^128 + 475050416*2^192;\
5676118073313038686 + 15735514370514302280*2^64 + 6416442569180727351*2^128 + 1280065017*2^192,1709630553731323496 + 3286049812566579569*2^64 + 372425342432478537*2^128 + 782342380*2^192,5065633422241872432 + 10203247551124530630*2^64 + 5558219038533462417*2^128 + 1985660033*2^192,102113477085253784 + 17039146716990189584*2^64 + 10481657049934182748*2^128 + 606465232*2^192,8251679220097531624 + 8358437099080294572*2^64 + 13833633292708728593*2^128 + 1306778385*2^192,976478911998728268 + 1758087128825919770*2^64 + 9367564327058911727*2^128 + 1724203705*2^192,15902864335361694256 + 203725099196234016*2^64 + 7389197868586543465*2^128 + 1832858019*2^192,16194824549848445120 + 14534731687020096876*2^64 + 3998026729330896450*2^128 + 574972468*2^192,13002024127932554616 + 12143313274987092786*2^64 + 1246616859671693971*2^128 + 664942928*2^192;\
2338319928676958311 + 13168423426271057579*2^64 + 12674211876991836070*2^128 + 1695022651*2^192,4193677971829599883 + 17890966860499443806*2^64 + 15378874840942710984*2^128 + 253239123*2^192,3420821896378213510 + 5529476217656720284*2^64 + 7715223306719040615*2^128 + 614829690*2^192,16375279810228196812 + 13552626204165591944*2^64 + 15867165797811556387*2^128 + 1251772915*2^192,8598682875260738802 + 13687207954873375715*2^64 + 5973992236793364737*2^128 + 101486465*2^192,14562272001663938256 + 11257469784974515862*2^64 + 8458563738904608448*2^128 + 355180466*2^192,6396629170594077938 + 17580647296554314722*2^64 + 1923949163988281364*2^128 + 1227058464*2^192,2032919901122648356 + 7181624656972052335*2^64 + 4676086856155921440*2^128 + 1969238154*2^192,9170589713602441908 + 3380235948668091442*2^64 + 15043738959295349742*2^128 + 1113373687*2^192;\
16362409576369960049 + 13681965059800761682*2^64 + 9547949492212181312*2^128 + 1907662131*2^192,14607010834987988950 + 4196837945214176891*2^64 + 10397539246934694708*2^128 + 1126791309*2^192,10989130323414518994 + 12546332528706082594*2^64 + 5128605754879136396*2^128 + 1740224953*2^192,15964124037003047640 + 176800468581221437*2^64 + 17329507407738104438*2^128 + 732239584*2^192,2177580069993396474 + 12409982551828655989*2^64 + 8256654780809552545*2^128 + 1540347481*2^192,9502157270169884652 + 7020201939963192476*2^64 + 3179771781179956453*2^128 + 1485911773*2^192,2375130749155963290 + 8189550512504902534*2^64 + 18321109855195686451*2^128 + 1263241156*2^192,11923252704102930700 + 11952794418881752651*2^64 + 14359181146983272104*2^128 + 769855736*2^192,15233554967435078372 + 1953625624592722256*2^64 + 13276499371781596884*2^128 + 63776448*2^192;\
8679145612268097446 + 15338577564130591906*2^64 + 4491645245391473748*2^128 + 954798525*2^192,430575262477562754 + 14925675975949415239*2^64 + 9883478291676179864*2^128 + 698057287*2^192,15199983065701459668 + 16138386067838541953*2^64 + 6160457130839785400*2^128 + 340941149*2^192,7072796002713415128 + 2164321905600503980*2^64 + 11120467681071308879*2^128 + 649042088*2^192,961040003217715156 + 5133359928188644342*2^64 + 17591095636218920327*2^128 + 567274855*2^192,6108707893769720664 + 11879655994859441764*2^64 + 16903982899426030435*2^128 + 818619464*2^192,9763780249387459740 + 11565893993480301943*2^64 + 15961241242610070852*2^128 + 573251334*2^192,14678581674234087936 + 9901102040714590840*2^64 + 3308395440633628845*2^128 + 61919001*2^192,18386839351208927816 + 9235303541036490589*2^64 + 18415363561040480829*2^128 + 91373189*2^192;\
14864604016969160800 + 7233280221407951603*2^64 + 5862523718477919781*2^128 + 1432237813*2^192,3940627637066828650 + 12504992695493837970*2^64 + 451036602417387492*2^128 + 1869253651*2^192,18308281248498109620 + 16090956548349043723*2^64 + 7421845926519103866*2^128 + 534848742*2^192,674128766862717952 + 17644715340084239294*2^64 + 13826073204068444051*2^128 + 2059130747*2^192,13836397700744673124 + 9099965211880303750*2^64 + 16240822912217882102*2^128 + 1579864946*2^192,3959344274903199884 + 4848305477721503746*2^64 + 10879522086635491006*2^128 + 1443907778*2^192,2107873561657733820 + 16089220329101573756*2^64 + 13258021820056732602*2^128 + 508048639*2^192,18317772216767389208 + 11960141974293557866*2^64 + 7129160385575526524*2^128 + 1957436223*2^192,17763202417577507960 + 14178882581956571619*2^64 + 16049849775311609074*2^128 + 1856906356*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3735 lists. */
The sign is: 1
The characteristic polynomial is: x^9 + x^7 + 2*x^6 - 12*x^5 + 24*x^4 - 16*x^3 - 32*x^2 - 512
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x^8 + 2*x^7 + 5*x^6 + 12*x^5 + 12*x^4 + 48*x^3 + 80*x^2 + 128*x + 256, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 28
