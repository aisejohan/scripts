/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 257
[9, 0, 0, 0, 0]  	63	3  <--- 1
[8, 0, 1, 0, 0]  	73	4 
[5, 0, 0, 2, 0]  	75	5 
[8, 2, 0, 0, 0]  	80	4 
[4, 1, 0, 2, 0]  	80	3 
[1, 3, 1, 1, 0]  	80	3 
[5, 3, 1, 0, 0]  	88	6 
[6, 2, 1, 1, 0]  	103	6 
[7, 5, 0, 0, 0]  	109	7 
[5, 2, 2, 1, 0]  	113	6 
[5, 1, 4, 0, 0]  	115	5 
[3, 5, 2, 0, 0]  	115	7 
[7, 4, 0, 1, 0]  	117	6 
[4, 2, 4, 0, 0]  	120	4 
[2, 6, 2, 0, 0]  	120	6 
[3, 5, 0, 2, 0]  	121	6 
[4, 0, 2, 3, 0]  	122	8 
[5, 0, 4, 1, 0]  	123	6 
[4, 1, 5, 0, 0]  	125	6 
[4, 0, 1, 4, 0]  	125	6 
[2, 5, 3, 0, 0]  	125	6 
[6, 7, 0, 0, 0]  	126	7 
[4, 0, 0, 5, 0]  	128	5 
[1, 2, 1, 4, 0]  	128	3 
[4, 7, 1, 0, 0]  	129	7 
[1, 2, 0, 5, 0]  	131	3 
[2, 2, 2, 3, 0]  	132	5 
[4, 0, 5, 1, 0]  	133	6 
[7, 0, 5, 0, 0]  	134	6 
[2, 3, 5, 0, 0]  	135	5 
[1, 4, 0, 4, 0]  	135	4 
[4, 0, 4, 2, 0]  	136	6 
[3, 0, 1, 5, 0]  	138	6 
[2, 9, 1, 0, 0]  	139	7 
[1, 4, 5, 0, 0]  	140	5 
[2, 0, 4, 3, 0]  	142	6 
[5, 9, 0, 0, 0]  	143	7 
[1, 1, 5, 2, 0]  	144	4 
[1, 0, 1, 6, 0]  	144	4 
[1, 3, 6, 0, 0]  	145	5 
[3, 0, 5, 2, 0]  	146	7 
[2, 11, 0, 0, 0]  	146	6 
[2, 1, 0, 6, 0]  	146	5 
[4, 0, 7, 0, 0]  	147	6 
[1, 9, 2, 0, 0]  	149	6 
[3, 0, 3, 4, 0]  	152	5 
[1, 0, 5, 3, 0]  	152	4 
[3, 2, 4, 2, 0]  	153	6 
[2, 0, 0, 7, 0]  	154	5 
[1, 1, 8, 0, 0]  	155	4 
[1, 0, 4, 4, 0]  	155	4 
[3, 0, 8, 0, 0]  	157	6 
[2, 7, 0, 3, 0]  	158	4 
[1, 0, 3, 5, 0]  	158	4 
[1, 11, 0, 1, 0]  	159	4 
[1, 7, 4, 0, 0]  	159	4 
[1, 2, 4, 3, 0]  	159	4 
[1, 1, 0, 7, 0]  	159	4 
[0, 5, 0, 5, 0]  	160	4 
[2, 9, 0, 2, 0]  	162	4 
[1, 13, 0, 0, 0]  	163	5 
[1, 0, 8, 1, 0]  	163	3 
[1, 0, 7, 2, 0]  	166	3 
[0, 11, 2, 0, 0]  	166	4 
[2, 0, 9, 0, 0]  	167	5 
[1, 0, 0, 8, 0]  	167	4 
[0, 14, 0, 0, 0]  	168	5  <--- 2
[0, 4, 0, 6, 0]  	168	3 
[0, 11, 1, 1, 0]  	169	2 
[0, 5, 3, 3, 0]  	171	3 
[0, 13, 1, 0, 0]  	173	4 
[0, 3, 1, 6, 0]  	173	2 
[1, 9, 0, 3, 0]  	175	3 
[0, 7, 3, 2, 0]  	175	2 
[0, 13, 0, 1, 0]  	176	3 
[0, 4, 4, 3, 0]  	176	2 
[0, 3, 0, 7, 0]  	176	2 
[1, 0, 10, 0, 0]  	177	5 
[0, 7, 2, 3, 0]  	178	1 
[0, 3, 6, 2, 0]  	178	1 
[0, 2, 2, 6, 0]  	178	1 
[0, 4, 3, 4, 0]  	179	2 
[0, 2, 8, 1, 0]  	180	3 
[0, 9, 2, 2, 0]  	182	3 
[0, 4, 2, 5, 0]  	182	3 
[0, 2, 7, 2, 0]  	183	1 
[0, 1, 3, 6, 0]  	183	1 
[0, 9, 1, 3, 0]  	185	1 
[0, 5, 5, 2, 0]  	185	1 
[0, 1, 9, 1, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 7, 6, 0, 0]  	186	1 
[0, 6, 2, 4, 0]  	186	1 
[0, 2, 6, 3, 0]  	186	1 
[0, 1, 2, 7, 0]  	186	1 
[0, 3, 3, 5, 0]  	187	2 
[0, 0, 10, 1, 0]  	190	1 
[0, 11, 0, 3, 0]  	192	1 
[0, 2, 4, 5, 0]  	192	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 9, 5, 0, 0]  	193	1 
[0, 8, 1, 4, 0]  	193	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 5, 7, 1, 0]  	199	1 
[0, 1, 11, 0, 0]  	199	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 10, 0, 4, 0]  	200	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 3, 10, 0, 0]  	206	1 
[0, 0, 3, 8, 0]  	211	1 
[0, 5, 9, 0, 0]  	213	1 
[4, 1, 0, 1, 1]  	60	4 
[8, 1, 0, 0, 1]  	68	5 
[1, 1, 4, 0, 1]  	87	3 
[3, 5, 0, 1, 1]  	101	6 
[5, 0, 4, 0, 1]  	103	8 
[4, 0, 0, 4, 1]  	108	7 
[4, 0, 5, 0, 1]  	113	7 
[3, 0, 1, 4, 1]  	118	6 
[3, 2, 0, 4, 1]  	125	6 
[0, 6, 4, 0, 1]  	140	4 
[2, 9, 0, 1, 1]  	142	6 
[2, 1, 1, 5, 1]  	143	5 
[2, 6, 0, 3, 1]  	146	6 
[0, 5, 4, 1, 1]  	148	4 
[2, 8, 0, 2, 1]  	150	6 
[2, 0, 8, 0, 1]  	150	5 
[1, 7, 0, 3, 1]  	151	4 
[1, 1, 2, 5, 1]  	153	5 
[1, 11, 1, 0, 1]  	156	4 
[0, 13, 0, 0, 1]  	156	4 
[0, 8, 0, 3, 1]  	156	4 
[1, 0, 9, 0, 1]  	160	5 
[0, 7, 1, 3, 1]  	161	3 
[0, 5, 6, 0, 1]  	162	3 
[0, 6, 3, 2, 1]  	163	3 
[0, 4, 1, 5, 1]  	165	3 
[0, 6, 2, 3, 1]  	166	3 
[0, 2, 6, 2, 1]  	166	2 
[0, 6, 1, 4, 1]  	169	3 
[0, 2, 5, 3, 1]  	169	2 
[0, 8, 2, 2, 1]  	170	3 
[0, 4, 6, 1, 1]  	170	3 
[0, 1, 7, 2, 1]  	171	2 
[0, 4, 5, 2, 1]  	173	2 
[0, 3, 7, 1, 1]  	175	2 
[0, 2, 9, 0, 1]  	177	3 
[0, 9, 3, 1, 1]  	179	3 
[0, 1, 10, 0, 1]  	182	2 
[0, 1, 6, 4, 1]  	194	2 
[3, 3, 3, 0, 2]  	108	7 
[3, 4, 0, 2, 2]  	109	5 
[4, 0, 4, 1, 2]  	116	5 
[4, 6, 1, 0, 2]  	117	6 
[3, 0, 0, 5, 2]  	121	5 
[2, 0, 2, 4, 2]  	128	5 
[3, 9, 0, 0, 2]  	129	8 
[1, 9, 1, 0, 2]  	132	6 
[3, 8, 1, 0, 2]  	134	6 
[2, 10, 0, 0, 2]  	134	6 
[2, 7, 0, 2, 2]  	138	5 
[1, 12, 0, 0, 2]  	151	4 
[0, 11, 0, 1, 2]  	152	4 
[1, 9, 0, 2, 2]  	155	4 
[2, 0, 6, 2, 2]  	156	6 
[0, 9, 2, 1, 2]  	162	3 
[0, 10, 3, 0, 2]  	171	3 
[0, 1, 4, 5, 2]  	180	2 
[7, 4, 0, 0, 3]  	97	5 
[4, 5, 1, 0, 3]  	105	7 
[6, 6, 0, 0, 3]  	114	6 
[3, 7, 1, 0, 3]  	122	8 
[5, 8, 0, 0, 3]  	131	6 
[3, 2, 3, 2, 3]  	136	5 
[1, 7, 3, 0, 3]  	142	5 
[3, 1, 3, 3, 3]  	144	4 
[7, 3, 0, 0, 4]  	85	6 
[6, 5, 0, 0, 4]  	102	8 
[5, 7, 0, 0, 4]  	119	9 
[7, 2, 3, 0, 4]  	124	4 
[0, 11, 1, 0, 4]  	149	4 
[0, 10, 1, 1, 4]  	157	4 
[3, 0, 7, 1, 4]  	160	5 
[0, 9, 1, 2, 4]  	165	4 
[0, 5, 2, 4, 4]  	174	3 
[3, 0, 5, 1, 5]  	126	6 
[1, 8, 2, 0, 5]  	137	5 
[2, 0, 5, 2, 5]  	139	7 
[1, 0, 6, 2, 5]  	149	4 
[0, 9, 1, 1, 6]  	145	4 
[0, 10, 2, 0, 6]  	154	4 
[0, 9, 3, 0, 6]  	159	3 
[2, 0, 7, 1, 7]  	153	5 
[0, 7, 2, 2, 7]  	158	3 
[0, 7, 0, 4, 10]  	164	3 
[0, 3, 8, 0, 10]  	172	3 
[0, 3, 4, 3, 245]  	164	2 
[0, 2, 4, 4, 245]  	172	2 
[0, 3, 6, 1, 249]  	158	2 
[0, 5, 5, 0, 250]  	145	3 
[0, 4, 5, 1, 250]  	153	2 
[0, 4, 3, 3, 250]  	159	2 
[0, 1, 9, 0, 251]  	165	2 
[4, 0, 1, 2, 252]  	85	5 
[3, 2, 1, 3, 252]  	122	5 
[0, 1, 5, 2, 252]  	137	2 
[1, 6, 0, 3, 252]  	139	4 
[0, 3, 5, 1, 252]  	141	2 
[1, 2, 3, 3, 252]  	142	4 
[0, 6, 1, 3, 252]  	149	3 
[0, 5, 2, 3, 252]  	154	3 
[0, 0, 0, 9, 252]  	180	1 
[1, 2, 1, 3, 253]  	108	4 
[2, 6, 0, 2, 253]  	126	5 
[2, 0, 0, 6, 253]  	134	4 
[1, 8, 0, 2, 253]  	143	5 
[1, 0, 0, 7, 253]  	147	2 
[0, 0, 1, 7, 253]  	157	1 
[0, 0, 0, 8, 253]  	160	1 
[0, 2, 0, 7, 253]  	164	1 
[0, 0, 3, 6, 253]  	171	1 
[2, 5, 2, 0, 254]  	108	2 
[1, 2, 0, 4, 254]  	111	2 
[0, 3, 5, 0, 254]  	121	2 
[0, 3, 4, 1, 254]  	124	2 
[1, 0, 0, 6, 254]  	127	1 
[0, 0, 4, 3, 254]  	128	1 
[3, 0, 4, 2, 254]  	129	3 
[0, 6, 0, 3, 254]  	132	3 
[0, 3, 0, 5, 254]  	136	2 
[0, 10, 1, 0, 254]  	137	4 
[0, 0, 1, 6, 254]  	137	1 
[1, 0, 8, 0, 254]  	143	2 
[0, 2, 0, 6, 254]  	144	1 
[0, 5, 3, 2, 254]  	151	3 
[0, 0, 8, 1, 254]  	156	1 
[0, 2, 8, 0, 254]  	160	2 
[1, 3, 1, 0, 255]  	60	2 
[4, 0, 0, 2, 255]  	68	4 
[1, 0, 0, 4, 255]  	87	1 
[3, 3, 0, 2, 255]  	97	3 
[0, 1, 5, 0, 255]  	97	2 
[0, 0, 1, 4, 255]  	97	1 
[2, 5, 0, 2, 255]  	114	3 
[0, 4, 4, 0, 255]  	116	2 
[0, 3, 0, 4, 255]  	116	1 
[2, 7, 0, 1, 255]  	118	3 
[0, 10, 0, 0, 255]  	120	3 
[0, 5, 0, 3, 255]  	120	2 
[0, 1, 4, 2, 255]  	120	1 
[3, 1, 3, 2, 255]  	124	3 
[0, 2, 0, 5, 255]  	124	1 
[0, 9, 0, 1, 255]  	128	3 
[1, 7, 0, 2, 255]  	131	3 
[0, 0, 8, 0, 255]  	136	1 
------
The gap is between 11 and 244.
Lengths: 2 2 5 6 2 6.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 13.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[3394295297596953896 + 17852901615000311469*2^64 + 15755127563281422828*2^128 + 752528427062*2^192,6758637904464533104 + 11196011671301305257*2^64 + 7129750871221556990*2^128 + 2074943547844*2^192,7056653935217628404 + 15398457249590513061*2^64 + 9575777119231395124*2^128 + 1233487102895*2^192,15845451849253775080 + 4034429750740042519*2^64 + 5778413099726680411*2^128 + 1302555561164*2^192,16111908310473923376 + 15893986529369972762*2^64 + 1939128442661000015*2^128 + 196392716741*2^192,12709206813958084208 + 5785174891072094173*2^64 + 15816322436283753092*2^128 + 1086348150379*2^192,10597336435530536256 + 10121240356715494701*2^64 + 2074702143840323485*2^128 + 2158134367595*2^192,6845382093431219752 + 8662286683425467294*2^64 + 5253910818493679664*2^128 + 1846331035168*2^192,10574326076629556928 + 11244348034046101261*2^64 + 13194457516126096191*2^128 + 1158017298873*2^192;\
6924394145755318300 + 971603111105015106*2^64 + 4522791032911428964*2^128 + 1945181959451*2^192,14181110773981969896 + 11940776954143933294*2^64 + 14929679145789881270*2^128 + 588248716673*2^192,2864547257011316254 + 18306572981260416444*2^64 + 16023428062785700556*2^128 + 680197983440*2^192,1582933816184535996 + 4489489437978930418*2^64 + 3865864583406833948*2^128 + 1192149577171*2^192,17850229677979201032 + 4863025651644673068*2^64 + 18044350591068961517*2^128 + 1220926978052*2^192,6394902442705407464 + 4515934909776909302*2^64 + 3826870587005526924*2^128 + 1515771622799*2^192,12809923715252847328 + 1973310935218280785*2^64 + 12581746155181210813*2^128 + 1713535500074*2^192,712293855580929436 + 9624986166690325075*2^64 + 13760367249742712601*2^128 + 1810497009549*2^192,12043849493497045792 + 16342974214584466380*2^64 + 7118698599691090924*2^128 + 1125263440543*2^192;\
14338112794458841632 + 10818608880473094639*2^64 + 8455662830095266867*2^128 + 1062453708480*2^192,2245075100628054720 + 9551018657939813224*2^64 + 2055168560191037070*2^128 + 1741203867305*2^192,4239448117350220944 + 13098948042776558977*2^64 + 5844629317822046951*2^128 + 693123016137*2^192,12219199652596256032 + 10966708240915026954*2^64 + 6323109154567702632*2^128 + 2093257408353*2^192,18210088283860163008 + 17083211548506077111*2^64 + 11778216582484287207*2^128 + 925083898596*2^192,1412896248614482624 + 242072358086034665*2^64 + 16482665862931579451*2^128 + 1363454547571*2^192,11314858597878104320 + 6182003345618676524*2^64 + 14239322997010662286*2^128 + 50543589226*2^192,14707510064941487648 + 14852135846941536841*2^64 + 12857528105664696688*2^128 + 272204115031*2^192,534375933001322240 + 9231706633400622876*2^64 + 13042285131372459046*2^128 + 947380826705*2^192;\
455819990369247568 + 6009456839876367252*2^64 + 9831420647214952272*2^128 + 1851943359652*2^192,1646332019854620384 + 18178518752783827604*2^64 + 17738234397155048603*2^128 + 2116276861188*2^192,4863265816266836328 + 6456840655732610233*2^64 + 11016210289885949421*2^128 + 1875196405252*2^192,17639200662593993936 + 425216736089425883*2^64 + 11714677513307647737*2^128 + 2181714023297*2^192,11183057765425281120 + 7834594909424038970*2^64 + 5506767785225041277*2^128 + 5868280351*2^192,702299475679082208 + 4302840288890958481*2^64 + 10405342149639719711*2^128 + 1896797339733*2^192,14343188657387979392 + 2055104320339788532*2^64 + 10000036664100399318*2^128 + 1380965334875*2^192,9064746896520848208 + 6764492793231264690*2^64 + 13750223481810912006*2^128 + 511981445165*2^192,177176387014690176 + 10825911211501099832*2^64 + 10991352269622365696*2^128 + 173210706681*2^192;\
13728654598919793872 + 16759176889658525594*2^64 + 11552410239549372741*2^128 + 1679278292856*2^192,5393569488957436896 + 18089041686735146386*2^64 + 14969613520347159634*2^128 + 144511434111*2^192,1192439908389667112 + 1749981255650794800*2^64 + 1340269250831463156*2^128 + 738835973988*2^192,7831751316056767568 + 18308876773299075450*2^64 + 14442799464218726256*2^128 + 1253421669828*2^192,7826961431887352160 + 11801232041848224737*2^64 + 14743608684269624989*2^128 + 1069389797692*2^192,14810350672984101856 + 15966215676445751424*2^64 + 732808991295376565*2^128 + 1589660129320*2^192,3222127090312986240 + 7756794597094717932*2^64 + 691451133618246222*2^128 + 1404216538562*2^192,17034783510311329488 + 1768719292994941814*2^64 + 3864179719586241448*2^128 + 2061863500133*2^192,16405542983481096576 + 9034549136515995115*2^64 + 157215621519659185*2^128 + 1834853250354*2^192;\
7260542139958471104 + 9672935518916104604*2^64 + 16259230822138931007*2^128 + 1166804282176*2^192,1572062863387774592 + 4795342050420030898*2^64 + 6490004537917046240*2^128 + 180278273016*2^192,16210615641881402848 + 15982914170405861953*2^64 + 1913771051016202139*2^128 + 981112822560*2^192,3599558828035105728 + 13131424605996254697*2^64 + 17558381326901922799*2^128 + 1530492503166*2^192,4388161243756341376 + 825709246343716000*2^64 + 703687738371259823*2^128 + 1698365685263*2^192,15669026288994934400 + 6493635456841531984*2^64 + 6607517790765038676*2^128 + 2808291870*2^192,3580393445544635904 + 4044742166194396869*2^64 + 9348990280718237353*2^128 + 1458891678687*2^192,11618235237231587776 + 1373643554658535045*2^64 + 14778857415974025172*2^128 + 814501128968*2^192,10757449788454240768 + 228982238097532154*2^64 + 1292199483390335634*2^128 + 1780016396064*2^192;\
3481231561392110930 + 18324581259707274006*2^64 + 2227009558494184550*2^128 + 1415324547341*2^192,14051520929629573964 + 14851978772998307736*2^64 + 2949552496048152237*2^128 + 439351589917*2^192,5453161889936823329 + 12866989096097454402*2^64 + 11438400896520028712*2^128 + 1613136357216*2^192,1033836671146126466 + 9758590316394772518*2^64 + 7719700877073497134*2^128 + 100913873603*2^192,14713735678577469500 + 990893296216175595*2^64 + 11237145393966286038*2^128 + 1306327094182*2^192,15251940013139157836 + 17178826792199239884*2^64 + 10831158626009810212*2^128 + 114963244095*2^192,10014276357476280720 + 15507885109172578623*2^64 + 4430451493243718257*2^128 + 830990780497*2^192,4628440058000166546 + 12981343774758972768*2^64 + 3553040770244239752*2^128 + 1711464366556*2^192,13663972114243466096 + 3830643354586758817*2^64 + 2750844555200932859*2^128 + 1834587296571*2^192;\
15020500201916780576 + 9558637810809201161*2^64 + 7449090010937823948*2^128 + 1013519640670*2^192,1761793918182569664 + 13789787944853466335*2^64 + 1927553761562488357*2^128 + 817243355346*2^192,6477568660536173456 + 6985982743048218234*2^64 + 9324174123323220028*2^128 + 815821285907*2^192,15825237098872380192 + 9576430221717724989*2^64 + 1715843772512891494*2^128 + 1957019221438*2^192,6220177312795643328 + 13987595594337607676*2^64 + 1241567608785257128*2^128 + 1885231075480*2^192,2459624648666281664 + 7988223111006223744*2^64 + 10406819531985243107*2^128 + 666325036454*2^192,10079342476004823296 + 742857704122606569*2^64 + 4294532724771397228*2^128 + 797402583523*2^192,6064367510428804128 + 6968156481122898224*2^64 + 3218053237450192493*2^128 + 984814235495*2^192,10432748332715065088 + 17593268814858527377*2^64 + 1613676965369204607*2^128 + 656429278789*2^192;\
7162011676497470272 + 3449446185117967207*2^64 + 7012475840103426488*2^128 + 907281797383*2^192,5903473657735577472 + 4882520128024727971*2^64 + 7579370782176884575*2^128 + 1837043310751*2^192,984539265947794592 + 2714445289909027785*2^64 + 14017334124529523286*2^128 + 788781549702*2^192,3897562085319258432 + 5684678052900052706*2^64 + 14984559357253361913*2^128 + 2130085543280*2^192,2725873808864220544 + 247427817478311984*2^64 + 8798687976201565303*2^128 + 641691504514*2^192,15111611878390562688 + 9787766390164529900*2^64 + 7405170695254138421*2^128 + 2172514356264*2^192,6044830556869990912 + 6541042203335821934*2^64 + 2786613568643616115*2^128 + 374246104844*2^192,10453226216284203840 + 9624477981814674744*2^64 + 10193765120291403159*2^128 + 1870368934051*2^192,532202805387060736 + 14430627221245539679*2^64 + 13746616399634457818*2^128 + 1084915179508*2^192]
/* 
This matrix times 2^(-11) should be the matrix of frobenius.
*/ 
B = 2^(-11) * A; 
/* Freed 4067 lists. */
