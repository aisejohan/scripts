/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 218
[9, 0, 0, 0, 0]  	63	4  <--- 1
[8, 0, 1, 0, 0]  	73	5 
[5, 0, 0, 2, 0]  	75	6 
[8, 2, 0, 0, 0]  	80	4 
[4, 1, 0, 2, 0]  	80	3 
[2, 1, 2, 1, 0]  	80	4 
[2, 3, 1, 1, 0]  	87	4 
[6, 1, 2, 0, 0]  	88	8 
[3, 1, 4, 0, 0]  	101	7 
[7, 3, 1, 0, 0]  	102	8 
[7, 0, 2, 1, 0]  	103	8 
[4, 0, 0, 4, 0]  	108	8 
[3, 3, 3, 0, 0]  	108	8 
[7, 5, 0, 0, 0]  	109	7 
[7, 2, 1, 1, 0]  	110	8 
[2, 1, 5, 0, 0]  	111	5 
[2, 0, 1, 4, 0]  	111	5 
[6, 0, 3, 1, 0]  	113	9 
[3, 5, 2, 0, 0]  	115	8 
[7, 4, 0, 1, 0]  	117	8 
[2, 6, 2, 0, 0]  	120	7 
[3, 5, 0, 2, 0]  	121	6 
[3, 0, 0, 5, 0]  	121	6 
[1, 5, 2, 1, 0]  	121	6 
[4, 0, 2, 3, 0]  	122	8 
[3, 7, 1, 0, 0]  	122	8 
[3, 0, 6, 0, 0]  	123	6 
[3, 7, 0, 1, 0]  	125	7 
[2, 5, 3, 0, 0]  	125	7 
[6, 7, 0, 0, 0]  	126	6 
[6, 0, 5, 0, 0]  	127	8 
[1, 7, 1, 1, 0]  	128	5 
[1, 3, 5, 0, 0]  	128	5 
[1, 2, 1, 4, 0]  	128	5 
[5, 8, 0, 0, 0]  	131	6 
[1, 7, 0, 2, 0]  	131	5 
[2, 0, 7, 0, 0]  	133	6 
[1, 9, 0, 1, 0]  	135	5 
[4, 0, 4, 2, 0]  	136	8 
[2, 2, 0, 5, 0]  	138	6 
[2, 9, 1, 0, 0]  	139	6 
[2, 4, 0, 4, 0]  	142	5 
[2, 0, 4, 3, 0]  	142	5 
[1, 7, 3, 0, 0]  	142	5 
[1, 4, 4, 1, 0]  	143	6 
[1, 10, 1, 0, 0]  	144	6 
[1, 5, 1, 3, 0]  	144	6 
[1, 0, 1, 6, 0]  	144	5 
[0, 9, 1, 1, 0]  	145	4 
[2, 6, 0, 3, 0]  	146	5 
[2, 1, 0, 6, 0]  	146	5 
[1, 4, 3, 2, 0]  	146	5 
[1, 5, 0, 4, 0]  	147	5 
[0, 9, 0, 2, 0]  	148	5 
[1, 9, 2, 0, 0]  	149	4 
[1, 4, 2, 3, 0]  	149	4 
[0, 11, 1, 0, 0]  	149	4 
[1, 12, 0, 0, 0]  	151	5 
[1, 3, 4, 2, 0]  	151	4 
[1, 0, 5, 3, 0]  	152	5 
[0, 11, 0, 1, 0]  	152	4 
[3, 11, 0, 0, 0]  	153	6 
[1, 1, 2, 5, 0]  	153	5 
[2, 0, 0, 7, 0]  	154	4 
[1, 3, 3, 3, 0]  	154	4 
[1, 4, 0, 5, 0]  	155	5 
[1, 0, 4, 4, 0]  	155	4 
[2, 0, 6, 2, 0]  	156	4 
[1, 2, 5, 2, 0]  	156	4 
[0, 13, 0, 0, 0]  	156	4  <--- 2
[0, 8, 0, 3, 0]  	156	4 
[1, 0, 3, 5, 0]  	158	3 
[0, 7, 2, 2, 0]  	158	3 
[1, 2, 4, 3, 0]  	159	3 
[1, 1, 0, 7, 0]  	159	3 
[0, 9, 3, 0, 0]  	159	3 
[0, 5, 6, 0, 0]  	162	3 
[1, 3, 0, 6, 0]  	163	4 
[0, 6, 3, 2, 0]  	163	3 
[0, 7, 0, 4, 0]  	164	3 
[0, 4, 1, 5, 0]  	165	3 
[1, 0, 7, 2, 0]  	166	2 
[0, 6, 2, 3, 0]  	166	2 
[0, 2, 6, 2, 0]  	166	2 
[1, 2, 8, 0, 0]  	167	5 
[0, 5, 4, 2, 0]  	168	3 
[0, 4, 0, 6, 0]  	168	3 
[0, 6, 1, 4, 0]  	169	2 
[0, 2, 5, 3, 0]  	169	2 
[1, 2, 7, 1, 0]  	170	4 
[0, 5, 3, 3, 0]  	171	2 
[0, 1, 7, 2, 0]  	171	2 
[1, 1, 9, 0, 0]  	172	3 
[0, 6, 0, 5, 0]  	172	3 
[0, 3, 8, 0, 0]  	172	3 
[0, 4, 5, 2, 0]  	173	2 
[0, 3, 1, 6, 0]  	173	2 
[0, 5, 2, 4, 0]  	174	3 
[0, 3, 7, 1, 0]  	175	2 
[0, 3, 0, 7, 0]  	176	2 
[1, 0, 10, 0, 0]  	177	3 
[0, 2, 9, 0, 0]  	177	3 
[0, 2, 2, 6, 0]  	178	1 
[1, 0, 9, 1, 0]  	180	2 
[0, 2, 8, 1, 0]  	180	2 
[0, 1, 4, 5, 0]  	180	2 
[0, 1, 10, 0, 0]  	182	2 
[0, 1, 3, 6, 0]  	183	1 
[0, 1, 9, 1, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 1, 2, 7, 0]  	186	1 
[1, 0, 0, 9, 0]  	187	2 
[0, 3, 3, 5, 0]  	187	2 
[0, 0, 10, 1, 0]  	190	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 0, 3, 8, 0]  	211	1 
[4, 1, 0, 1, 1]  	60	5 
[8, 1, 0, 0, 1]  	68	6 
[3, 5, 0, 1, 1]  	101	6 
[1, 5, 1, 1, 1]  	104	4 
[6, 0, 4, 0, 1]  	110	9 
[2, 5, 0, 2, 1]  	114	6 
[5, 7, 0, 0, 1]  	119	8 
[3, 2, 0, 4, 1]  	125	7 
[2, 1, 0, 5, 1]  	126	6 
[3, 0, 3, 3, 1]  	132	8 
[1, 9, 1, 0, 1]  	132	7 
[1, 5, 4, 0, 1]  	135	5 
[1, 8, 2, 0, 1]  	137	6 
[1, 0, 6, 2, 1]  	149	4 
[1, 2, 0, 6, 1]  	151	4 
[1, 2, 6, 1, 1]  	153	5 
[0, 10, 2, 0, 1]  	154	4 
[1, 1, 7, 1, 1]  	158	3 
[1, 0, 8, 1, 1]  	163	3 
[0, 8, 4, 0, 1]  	164	3 
[0, 5, 5, 1, 1]  	165	3 
[0, 7, 5, 0, 1]  	169	2 
[0, 7, 4, 1, 1]  	172	3 
[0, 4, 4, 3, 1]  	176	2 
[0, 4, 3, 4, 1]  	179	2 
[0, 1, 6, 4, 1]  	194	2 
[2, 5, 0, 1, 2]  	94	6 
[3, 4, 0, 2, 2]  	109	6 
[2, 0, 6, 0, 2]  	116	7 
[5, 4, 2, 0, 2]  	117	7 
[3, 9, 0, 0, 2]  	129	7 
[2, 0, 5, 2, 2]  	139	7 
[0, 10, 0, 1, 2]  	140	5 
[2, 11, 0, 0, 2]  	146	5 
[0, 7, 4, 0, 2]  	152	4 
[1, 1, 8, 0, 2]  	155	4 
[0, 6, 5, 0, 2]  	157	4 
[0, 6, 4, 1, 2]  	160	5 
[0, 7, 1, 3, 2]  	161	3 
[1, 0, 0, 8, 2]  	167	4 
[7, 4, 0, 0, 3]  	97	5 
[5, 3, 2, 0, 3]  	105	9 
[6, 6, 0, 0, 3]  	114	6 
[6, 5, 1, 0, 3]  	119	8 
[1, 1, 6, 0, 3]  	121	5 
[1, 11, 0, 0, 3]  	139	6 
[1, 1, 5, 2, 3]  	144	5 
[0, 4, 6, 1, 3]  	170	3 
[7, 3, 0, 0, 4]  	85	7 
[6, 5, 0, 0, 4]  	102	8 
[4, 8, 0, 0, 4]  	124	7 
[2, 10, 0, 0, 4]  	134	6 
[1, 0, 9, 0, 4]  	160	5 
[1, 6, 0, 3, 251]  	139	5 
[4, 0, 1, 2, 252]  	85	6 
[1, 4, 2, 2, 252]  	129	5 
[1, 0, 2, 5, 252]  	141	4 
[1, 1, 1, 4, 253]  	116	4 
[1, 0, 2, 4, 253]  	121	4 
[1, 0, 1, 5, 253]  	124	4 
[1, 3, 4, 1, 253]  	131	4 
[2, 0, 0, 6, 253]  	134	5 
[0, 12, 0, 0, 253]  	144	2 
[1, 0, 7, 1, 253]  	146	4 
[0, 5, 0, 5, 253]  	160	4 
[0, 2, 8, 0, 253]  	160	3 
[0, 3, 2, 5, 253]  	170	2 
[2, 1, 4, 0, 254]  	94	4 
[1, 3, 2, 1, 254]  	97	3 
[2, 0, 0, 5, 254]  	114	5 
[1, 1, 5, 1, 254]  	124	5 
[0, 11, 0, 0, 254]  	132	2 
[0, 5, 0, 4, 254]  	140	3 
[0, 4, 0, 5, 254]  	148	2 
[0, 3, 5, 2, 254]  	161	2 
[2, 1, 2, 0, 255]  	60	3 
[4, 0, 0, 2, 255]  	68	5 
[3, 3, 0, 2, 255]  	97	4 
[1, 0, 1, 4, 255]  	104	2 
[2, 7, 1, 0, 255]  	115	2 
[1, 8, 1, 0, 255]  	120	3 
[3, 2, 1, 3, 255]  	122	4 
[1, 7, 2, 0, 255]  	125	2 
[0, 5, 2, 2, 255]  	134	2 
[1, 0, 4, 3, 255]  	135	2 
[0, 2, 1, 5, 255]  	141	1 
[0, 2, 5, 2, 255]  	149	1 
[0, 7, 3, 1, 255]  	155	2 
[0, 3, 7, 0, 255]  	155	1 
[0, 1, 3, 5, 255]  	163	1 
[0, 2, 0, 7, 255]  	164	1 
[0, 1, 9, 0, 255]  	165	1 
[0, 1, 1, 7, 255]  	169	1 
[0, 1, 0, 8, 255]  	172	1 
[0, 0, 8, 2, 255]  	176	1 
[0, 0, 1, 8, 255]  	177	1 
[0, 0, 7, 3, 255]  	179	1 
------
The gap is between 5 and 250.
Lengths: 2 2 5 6 2 3.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[2012536166584872544 + 12866506827198637588*2^64 + 7443283089475489116*2^128 + 7929989641*2^192,13042907997146866912 + 10888729694378730754*2^64 + 8722212325778965226*2^128 + 6526804957*2^192,11046833646689438304 + 6343127488533688689*2^64 + 14006117367022037284*2^128 + 6684836570*2^192,11576512096987341888 + 2043058525697459104*2^64 + 12495854389020259683*2^128 + 5977002490*2^192,7959706041878696064 + 396551121054412714*2^64 + 17705736180803725898*2^128 + 5106220562*2^192,15719220715311576032 + 3005256818808568334*2^64 + 4024291703335198582*2^128 + 1818294283*2^192,8524960032339246848 + 12838102396960947690*2^64 + 10075861311793627745*2^128 + 5959017422*2^192,14995074674816630656 + 18226724719815855547*2^64 + 8956513511127826710*2^128 + 2846977071*2^192,2362901413523214528 + 16328936587340823441*2^64 + 15214591553963055360*2^128 + 477400046*2^192;\
1416481727170449748 + 13005468442127117224*2^64 + 5528573607365333865*2^128 + 7954356230*2^192,15415392662205559952 + 267061341757977970*2^64 + 6627577566807340525*2^128 + 2573822437*2^192,5460787075428873696 + 13972124601150960356*2^64 + 13519765853214822923*2^128 + 6821435416*2^192,9921207550485669568 + 6031206966121810795*2^64 + 10179375578995054433*2^128 + 1220915895*2^192,2665083507164365856 + 12757224264233880963*2^64 + 298523094089267887*2^128 + 3611122419*2^192,9885639358643686064 + 6208759473469454879*2^64 + 16105494527823687602*2^128 + 1588807081*2^192,6040732400528718304 + 7525040283928016439*2^64 + 11591700913910508092*2^128 + 5867933959*2^192,1484070417604306272 + 11788989364897336495*2^64 + 7258622520968166375*2^128 + 175389028*2^192,2528534809062240896 + 15157497601780347141*2^64 + 16771876159604961612*2^128 + 5350811661*2^192;\
12967401675695704322 + 4545304092845188063*2^64 + 2157012764778168780*2^128 + 1675398965*2^192,8328225627981968984 + 11809169420266815946*2^64 + 16422406024739577271*2^128 + 3527006770*2^192,62640957814375744 + 3639024566361629539*2^64 + 15476821975241193789*2^128 + 3957305493*2^192,16087172421825712256 + 13229640280164083499*2^64 + 17562841063415214872*2^128 + 247857751*2^192,9419872993359818800 + 13505817594621302025*2^64 + 15244651461424335441*2^128 + 7239759125*2^192,1941949011705544552 + 1595925600846215249*2^64 + 5478103727748202254*2^128 + 3878442430*2^192,16779615593868400704 + 12060561451863073211*2^64 + 4982831270160779091*2^128 + 5487098734*2^192,11850651002614006160 + 15337879216525973299*2^64 + 8136798084685176685*2^128 + 4845713136*2^192,4018231253536153024 + 11883978380819677866*2^64 + 16103286300111235212*2^128 + 4055231932*2^192;\
8899848483009027467 + 10037004650275234519*2^64 + 15487194455640317944*2^128 + 5684991774*2^192,12504554044575814588 + 3284871143815587381*2^64 + 12966032602364819388*2^128 + 1072259859*2^192,13149332399375445648 + 14430044846216087617*2^64 + 13776592546730860754*2^128 + 1458415591*2^192,16193328499851674552 + 8341968846568761903*2^64 + 15157447067739957542*2^128 + 55751994*2^192,18207906130259407216 + 8593727079214042611*2^64 + 7323530073917963124*2^128 + 3015086338*2^192,1423734267697756772 + 11221840758757177093*2^64 + 10793593414235565219*2^128 + 7647910522*2^192,4735794831996111104 + 11577238637124659353*2^64 + 12749430372150732253*2^128 + 3492977482*2^192,9574309981857868440 + 10916637522435212266*2^64 + 9601032939657240260*2^128 + 3185358936*2^192,16786514412780820608 + 2958596791742071420*2^64 + 16388557526657340788*2^128 + 4892221106*2^192;\
17194910323552083545 + 3364726540653796145*2^64 + 4197913348138370030*2^128 + 2783943377*2^192,2416917343787126140 + 6752401084959888457*2^64 + 5092669408505243503*2^128 + 2850088666*2^192,1749385919863527664 + 8031992391764058291*2^64 + 1999267469710840782*2^128 + 1939117967*2^192,11469440165195340168 + 7384677582265830865*2^64 + 12681717288324837979*2^128 + 3060480186*2^192,3099904928647928176 + 5890757041531371987*2^64 + 17862326538002847048*2^128 + 6672741969*2^192,12104412465218352540 + 11666109364154217400*2^64 + 17879697448520445984*2^128 + 5575545005*2^192,11605617042440619648 + 4427384605115148940*2^64 + 9848256317444451987*2^128 + 462278015*2^192,10528629836988485672 + 16101656883567139102*2^64 + 14802749991204107733*2^128 + 7113972130*2^192,11219066961523767328 + 613529790536278239*2^64 + 2126997873359679986*2^128 + 6528054910*2^192;\
9646403190380783474 + 5478519841250135719*2^64 + 18079418305234549648*2^128 + 603452892*2^192,2163916702746505568 + 6985448169844477292*2^64 + 2217833981072320785*2^128 + 4743289393*2^192,16294948986314674080 + 13417769669454932183*2^64 + 1646099168455225799*2^128 + 5971285730*2^192,17854543675931857408 + 9876121640535810300*2^64 + 9799286697373955417*2^128 + 6408958552*2^192,4126695560131437008 + 15140947120065671154*2^64 + 7502406450986277784*2^128 + 1187160305*2^192,4742130484701515784 + 10182497275748104364*2^64 + 9207646389038454816*2^128 + 4814774214*2^192,12659534933510631808 + 9247166586113528578*2^64 + 16541399655641386597*2^128 + 6388248005*2^192,16718831120550092272 + 1141786612954978775*2^64 + 11648344389728803003*2^128 + 6596892968*2^192,11951996681221941920 + 5238637832416135321*2^64 + 9065121606458694419*2^128 + 3553899551*2^192;\
494667172378160848 + 10038726630609244352*2^64 + 12911094155069581263*2^128 + 7728083796*2^192,15789982221845338696 + 4182381832236663079*2^64 + 11780387437172597615*2^128 + 3587126583*2^192,4315651735710440752 + 5088974783201376609*2^64 + 13726335368693248169*2^128 + 600488401*2^192,18223197192208128656 + 3048570833925504331*2^64 + 13520827391848681492*2^128 + 710598949*2^192,18297153848502041456 + 16324604925979690300*2^64 + 9662172981679373268*2^128 + 2720663699*2^192,14966007028713001072 + 1792773402979966673*2^64 + 3080803150691698868*2^128 + 1253002464*2^192,8103131852753371072 + 6445257004687336270*2^64 + 5697555285154145492*2^128 + 7841946476*2^192,6486708414722000896 + 528457309569213020*2^64 + 11896613854479888285*2^128 + 5174952616*2^192,14142216796922437824 + 13733504370533417196*2^64 + 9532873964530772662*2^128 + 5415083246*2^192;\
14638377958005413148 + 2126918431702484331*2^64 + 11998375135146853026*2^128 + 7528773320*2^192,12869498032534333040 + 665950482725020108*2^64 + 15376409526146664676*2^128 + 6485554940*2^192,1757444426014349696 + 8942282012433394601*2^64 + 4587899716669907283*2^128 + 5791960096*2^192,16032249015763859200 + 1936078368526265251*2^64 + 4733235045423091188*2^128 + 459448393*2^192,16004320456811135648 + 15364646947948941789*2^64 + 5127961312823168029*2^128 + 4960432770*2^192,7690241590765551152 + 2614991042468771420*2^64 + 834505481774338360*2^128 + 8571611412*2^192,1730713269396494208 + 2011077461411883879*2^64 + 5839036118047775388*2^128 + 1543722696*2^192,1516098993406979136 + 10433069153622877211*2^64 + 3529517841365377394*2^128 + 6283823174*2^192,1127667741956223488 + 5124119236301385353*2^64 + 4380065151609121750*2^128 + 3329041166*2^192;\
4211775628834746834 + 7267440762710996398*2^64 + 13800844127516969091*2^128 + 1088374283*2^192,3807442442996573944 + 13102966001825783889*2^64 + 1394020142810935698*2^128 + 8016673024*2^192,13552478910666236256 + 17585061165992358223*2^64 + 14614834113192393460*2^128 + 2029729542*2^192,7377585999010611728 + 10489702709453991559*2^64 + 6239529597219152332*2^128 + 5469401365*2^192,7629607418800658080 + 2426894690422609853*2^64 + 6831998791756663206*2^128 + 4271436416*2^192,17915636228153916344 + 12567477804708595617*2^64 + 11535158847702558345*2^128 + 6615412807*2^192,1621564047157896704 + 6738369768777998325*2^64 + 14739103871008286521*2^128 + 4791692694*2^192,9679758222922045168 + 4097109978864877436*2^64 + 13112228040228819980*2^128 + 5992167834*2^192,8836168824014700192 + 14769914854003273617*2^64 + 5949814308144140678*2^128 + 7073170761*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4268 lists. */
