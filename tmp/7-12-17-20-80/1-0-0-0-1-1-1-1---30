/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 73
[1, 3, 1, 0, 0]  	60	3 
[9, 0, 0, 0, 0]  	63	3  <--- 1
[1, 2, 1, 1, 0]  	68	3 
[8, 0, 1, 0, 0]  	73	2 
[0, 5, 0, 1, 0]  	80	2 
[0, 1, 4, 0, 0]  	80	2 
[1, 0, 1, 4, 0]  	104	2 
[7, 5, 0, 0, 0]  	109	3 
[7, 4, 0, 1, 0]  	117	3 
[7, 0, 0, 4, 0]  	129	2 
[7, 0, 5, 0, 0]  	134	3 
[1, 0, 4, 3, 0]  	135	3 
[1, 0, 8, 0, 0]  	143	2 
[6, 2, 0, 4, 0]  	146	2 
[6, 9, 0, 0, 0]  	150	4 
[0, 9, 3, 0, 0]  	159	3 
[6, 0, 7, 0, 0]  	161	4 
[5, 4, 0, 4, 0]  	163	2 
[2, 1, 0, 7, 0]  	166	2 
[1, 0, 7, 2, 0]  	166	2 
[0, 11, 2, 0, 0]  	166	2 
[0, 13, 1, 0, 0]  	173	2 
[5, 0, 0, 7, 0]  	175	2 
[1, 14, 0, 0, 0]  	175	2 
[0, 2, 2, 6, 0]  	178	1 
[5, 12, 0, 0, 0]  	179	2 
[0, 15, 0, 0, 0]  	180	2  <--- 2
[1, 3, 0, 7, 0]  	183	1 
[0, 1, 3, 6, 0]  	183	1 
[0, 4, 1, 6, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 1, 2, 7, 0]  	186	1 
[0, 0, 10, 1, 0]  	190	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 3, 1, 7, 0]  	193	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 4, 3, 5, 0]  	199	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 0, 3, 8, 0]  	211	1 
[1, 2, 0, 4, 1]  	111	3 
[1, 1, 0, 5, 1]  	119	3 
[0, 4, 0, 4, 1]  	128	2 
[1, 0, 0, 7, 1]  	147	3 
[7, 0, 1, 3, 2]  	126	4 
[0, 3, 0, 5, 2]  	136	2 
[5, 0, 3, 3, 2]  	146	5 
[3, 0, 6, 2, 2]  	163	3 
[6, 0, 5, 2, 2]  	167	4 
[0, 0, 10, 0, 253]  	170	1 
[0, 0, 8, 2, 253]  	176	1 
[0, 0, 7, 3, 253]  	179	1 
[6, 7, 0, 0, 254]  	126	2 
[0, 0, 8, 0, 254]  	136	1 
[5, 9, 0, 0, 254]  	143	2 
[0, 0, 5, 3, 254]  	145	1 
[2, 11, 0, 0, 254]  	146	2 
[0, 4, 3, 3, 254]  	159	2 
[1, 13, 0, 0, 254]  	163	1 
[0, 0, 3, 6, 254]  	171	1 
[0, 5, 3, 0, 255]  	111	1 
[0, 7, 2, 0, 255]  	118	1 
[0, 4, 3, 1, 255]  	119	2 
[0, 9, 1, 0, 255]  	125	1 
[1, 0, 7, 0, 255]  	126	2 
[0, 0, 4, 3, 255]  	128	1 
[0, 0, 3, 4, 255]  	131	1 
[0, 11, 0, 0, 255]  	132	1 
[0, 2, 2, 4, 255]  	138	1 
[0, 1, 0, 7, 255]  	152	1 
[0, 0, 1, 7, 255]  	157	1 
------
The gap is between 3 and 252.
Lengths: 2 2 5 5 2 4.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^13
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^1*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^3*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[17810749570533039892 + 5102143782805664599*2^64 + 4403680319867191657*2^128 + 11000460*2^192,1889543834499556558 + 9905561622512139812*2^64 + 4011865656407400204*2^128 + 1299989684*2^192,8713485455938907840 + 3806036823693973562*2^64 + 16290792836089340018*2^128 + 1858569604*2^192,15528842172236560344 + 8616641436598710041*2^64 + 2255332572843314441*2^128 + 1594404152*2^192,13608004614224304648 + 14698726937769641531*2^64 + 10186174204955910257*2^128 + 373913080*2^192,271396881612981834 + 3519280747620176448*2^64 + 8601732675705729777*2^128 + 1122047734*2^192,6308968579191525952 + 6748305255334652190*2^64 + 3098589811140565349*2^128 + 515313354*2^192,8025766440041139120 + 8264169606807226362*2^64 + 1009359877864518448*2^128 + 1189665271*2^192,9032747642805828432 + 10575014917182410499*2^64 + 4276556192219359943*2^128 + 1930663238*2^192;\
8382086729034568048 + 11233115548682913137*2^64 + 17662608381058084446*2^128 + 1194975850*2^192,1667629852498883454 + 9076417066197392754*2^64 + 11766038752076771348*2^128 + 575680841*2^192,12848813447361161076 + 8438739116177612703*2^64 + 7460818106528801489*2^128 + 554026138*2^192,13616656257891726048 + 10266774526737132155*2^64 + 4770181374607230554*2^128 + 783878759*2^192,15730670908166847056 + 11668612469076276526*2^64 + 4634638813380284633*2^128 + 1045835236*2^192,7560602280948047984 + 7441726295154924503*2^64 + 15233917432526117284*2^128 + 2139216006*2^192,17120727327792527612 + 1275706287277003219*2^64 + 7307191717691746444*2^128 + 1697808196*2^192,8301630337388360376 + 14533072669254909953*2^64 + 13946095475029644429*2^128 + 1579088067*2^192,8558991499384178536 + 17795593821541140877*2^64 + 5948056442726744031*2^128 + 968236640*2^192;\
0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 67108864*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 375298671*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 67108864*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 469762048*2^192,0 + 0*2^64 + 0*2^128 + 134217728*2^192,0 + 0*2^64 + 0*2^128 + 134217728*2^192;\
3386792509530400908 + 8926874177872554141*2^64 + 7625213536295283259*2^128 + 217699778*2^192,16937701442899298148 + 5907989922848818930*2^64 + 11703329902939790244*2^128 + 139588588*2^192,15713000824754822976 + 5376827342374015912*2^64 + 880788986237286506*2^128 + 561287522*2^192,3040290591044050256 + 5566176396075301868*2^64 + 8153524035770122693*2^128 + 162767335*2^192,11374685828668145328 + 2742716221101704051*2^64 + 2295620929549644794*2^128 + 772361274*2^192,12575148953456604268 + 14603938877343558817*2^64 + 12749959041507441592*2^128 + 810625971*2^192,7660518273878624192 + 15101681511307505241*2^64 + 13320941761150632898*2^128 + 707436116*2^192,13108149414799337440 + 4162575302378859348*2^64 + 227637515040284427*2^128 + 761053147*2^192,11560179358411115296 + 8322021271640366592*2^64 + 13834092985317042325*2^128 + 1062658181*2^192;\
4427332747317767696 + 4556485716115853999*2^64 + 17463470466594714304*2^128 + 505686343*2^192,11255476999827721323 + 16352992468706421398*2^64 + 5489955425845507697*2^128 + 1005942533*2^192,10824306625017979438 + 14226613743216532862*2^64 + 17958192423658115*2^128 + 790690550*2^192,1905125159569514708 + 10968874248714500382*2^64 + 4418046280252179435*2^128 + 933964786*2^192,1895039435358692404 + 5104562347181244159*2^64 + 6379810169317277178*2^128 + 353302086*2^192,2945293871268356022 + 8874694900946193559*2^64 + 7995092087350444878*2^128 + 947895362*2^192,15827398254246707834 + 296341947805866467*2^64 + 15637863332441870587*2^128 + 9279625*2^192,17228603979230322468 + 11636904169907343059*2^64 + 9954119030356107824*2^128 + 985697678*2^192,1963155414780459724 + 4406220512948682898*2^64 + 15423924092537131049*2^128 + 898788268*2^192;\
7921140309439161144 + 10052511204597673564*2^64 + 3056658619204628949*2^128 + 822251973*2^192,6941097095153854350 + 16026408248657239851*2^64 + 10855702586760085101*2^128 + 559920978*2^192,15396400088419347484 + 8237953439326801018*2^64 + 14389172059886162927*2^128 + 341118565*2^192,2489690396464489480 + 11376800658448188304*2^64 + 9931529393018837555*2^128 + 866511968*2^192,1373180695544195592 + 15878541270399872495*2^64 + 15210906469496995264*2^128 + 897362458*2^192,6380542528236070396 + 511849153817873180*2^64 + 1249229559525955976*2^128 + 204678829*2^192,1929060743813417524 + 1632139406914632656*2^64 + 6093086337971024903*2^128 + 751846307*2^192,11277740159715849120 + 10473964124791443231*2^64 + 18300280476084710960*2^128 + 201404196*2^192,10448136011108947864 + 2924942527740342614*2^64 + 1933397962978195063*2^128 + 852854274*2^192;\
5771010196258975776 + 5513144989522829254*2^64 + 2682131105981838796*2^128 + 603513698*2^192,16331024358517737074 + 9690681343823123356*2^64 + 1256404925696063055*2^128 + 1337768785*2^192,9072981700135545208 + 3285335700029370218*2^64 + 17545850195112884883*2^128 + 654837067*2^192,17514154098236925780 + 2099769592917909126*2^64 + 7761195187615899958*2^128 + 916676634*2^192,8898452078550121020 + 16644540091931983136*2^64 + 14158662894937476217*2^128 + 1470837846*2^192,5727905569488969938 + 14499564650486163066*2^64 + 17300116414281789186*2^128 + 378842195*2^192,18415808154488717868 + 1959326892955389747*2^64 + 3386031746247800023*2^128 + 2030204613*2^192,9413074286178237128 + 8754007092506779084*2^64 + 3075277071046912999*2^128 + 1159437987*2^192,12815589211685455312 + 1456361223614231169*2^64 + 14928968096030222380*2^128 + 479358287*2^192;\
1123706106056973464 + 9984700515405484952*2^64 + 2915393496991727697*2^128 + 21030265*2^192,15376795047587698826 + 13782760782069135845*2^64 + 6216667920173220340*2^128 + 332547226*2^192,11571307770665907668 + 3342911280081772043*2^64 + 3667989162580540535*2^128 + 641719100*2^192,18066408839021636740 + 2116601859140467856*2^64 + 8356904578069419650*2^128 + 772781386*2^192,12979506592665096088 + 3247202434239607493*2^64 + 691075691219165272*2^128 + 758287742*2^192,2276317524333734636 + 9810718169493829322*2^64 + 12078440600995354379*2^128 + 1193214199*2^192,15661000047444991772 + 6875196094614925496*2^64 + 15517033786361870078*2^128 + 754554081*2^192,6477873588868316072 + 16617253761306674329*2^64 + 7648741904283945991*2^128 + 614333463*2^192,13343543581650283656 + 15486458036074318452*2^64 + 11459974973452172462*2^128 + 1422745135*2^192;\
9375637796631588176 + 17970217706772469705*2^64 + 9512382873596758031*2^128 + 125672949*2^192,6497723171530795948 + 14811248408247628169*2^64 + 8855196184959266806*2^128 + 1019897819*2^192,7120107056430565800 + 11187659681307755761*2^64 + 6376872232596742876*2^128 + 1580314704*2^192,13564319099954137852 + 7001241690193211659*2^64 + 15808329050932863082*2^128 + 471471843*2^192,4234023685081842896 + 17335332608491107030*2^64 + 15521425736558182338*2^128 + 1688129063*2^192,18351815066261159424 + 15844487385345407258*2^64 + 18050479100739269489*2^128 + 1615573733*2^192,11281561889272416312 + 11900652316771530670*2^64 + 5065780800476683288*2^128 + 785664899*2^192,2820514617130625456 + 2869699215004529559*2^64 + 16894257682755862884*2^128 + 1762443677*2^192,2699291987477301272 + 8421104285689163778*2^64 + 5847089230584709702*2^128 + 1557568095*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 2194 lists. */
The sign is: -1
The characteristic polynomial is: x^9 - x^8 - 8*x^5 - 16*x^4 - 128*x + 512
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 1; x^2 - 2*x + 4, 1; x^2 + 4, 1; x^2 + 3*x + 4, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^9*z^1 + 1*x^1*y^3*z^1*w^1 + 1*y^5*w^1 + 1*y^1*z^4 + 1*w^4
Total 373: 3 
Look at the ideal generated by: 
1*z^1
1*w^1
