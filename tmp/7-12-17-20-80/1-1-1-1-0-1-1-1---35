/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 216
[9, 0, 0, 0, 0]  	63	3  <--- 1
[8, 0, 1, 0, 0]  	73	4 
[5, 0, 0, 2, 0]  	75	6 
[8, 2, 0, 0, 0]  	80	3 
[4, 1, 0, 2, 0]  	80	3 
[2, 1, 2, 1, 0]  	80	3 
[6, 1, 2, 0, 0]  	88	6 
[3, 1, 4, 0, 0]  	101	7 
[7, 0, 2, 1, 0]  	103	7 
[4, 0, 0, 4, 0]  	108	6 
[3, 3, 3, 0, 0]  	108	8 
[7, 5, 0, 0, 0]  	109	6 
[6, 4, 0, 1, 0]  	110	6 
[2, 1, 5, 0, 0]  	111	5 
[2, 0, 1, 4, 0]  	111	4 
[6, 0, 3, 1, 0]  	113	9 
[6, 6, 0, 0, 0]  	114	5 
[2, 5, 0, 2, 0]  	114	4 
[6, 5, 1, 0, 0]  	119	8 
[3, 0, 0, 5, 0]  	121	5 
[4, 5, 2, 0, 0]  	122	9 
[4, 0, 2, 3, 0]  	122	8 
[3, 0, 6, 0, 0]  	123	6 
[3, 2, 0, 4, 0]  	125	7 
[1, 2, 1, 4, 0]  	128	5 
[3, 9, 0, 0, 0]  	129	8 
[3, 0, 3, 3, 0]  	132	7 
[1, 9, 1, 0, 0]  	132	7 
[2, 0, 7, 0, 0]  	133	5 
[2, 10, 0, 0, 0]  	134	5 
[1, 9, 0, 1, 0]  	135	5 
[4, 0, 4, 2, 0]  	136	7 
[2, 2, 0, 5, 0]  	138	6 
[3, 7, 2, 0, 0]  	139	7 
[2, 4, 1, 3, 0]  	139	7 
[1, 11, 0, 0, 0]  	139	6 
[0, 10, 0, 1, 0]  	140	5 
[2, 5, 4, 0, 0]  	142	5 
[2, 4, 0, 4, 0]  	142	6 
[2, 0, 4, 3, 0]  	142	6 
[1, 1, 5, 2, 0]  	144	5 
[1, 0, 1, 6, 0]  	144	5 
[0, 9, 1, 1, 0]  	145	4 
[2, 1, 0, 6, 0]  	146	5 
[0, 9, 0, 2, 0]  	148	4 
[2, 7, 3, 0, 0]  	149	4 
[1, 4, 2, 3, 0]  	149	5 
[0, 11, 1, 0, 0]  	149	4 
[1, 3, 4, 2, 0]  	151	4 
[1, 0, 5, 3, 0]  	152	4 
[1, 6, 2, 2, 0]  	153	7 
[2, 0, 0, 7, 0]  	154	4 
[0, 10, 2, 0, 0]  	154	4 
[1, 4, 0, 5, 0]  	155	4 
[1, 1, 8, 0, 0]  	155	4 
[1, 0, 4, 4, 0]  	155	4 
[2, 0, 6, 2, 0]  	156	4 
[0, 13, 0, 0, 0]  	156	4  <--- 2
[0, 8, 0, 3, 0]  	156	4 
[1, 5, 3, 2, 0]  	158	5 
[1, 0, 3, 5, 0]  	158	4 
[1, 6, 0, 4, 0]  	159	3 
[1, 2, 4, 3, 0]  	159	3 
[1, 1, 0, 7, 0]  	159	3 
[0, 9, 3, 0, 0]  	159	3 
[0, 5, 6, 0, 0]  	162	3 
[1, 3, 0, 6, 0]  	163	4 
[0, 6, 3, 2, 0]  	163	3 
[0, 4, 1, 5, 0]  	165	3 
[0, 6, 2, 3, 0]  	166	2 
[0, 2, 6, 2, 0]  	166	2 
[1, 0, 0, 8, 0]  	167	4 
[0, 6, 1, 4, 0]  	169	2 
[0, 8, 2, 2, 0]  	170	4 
[0, 3, 8, 0, 0]  	172	3 
[0, 4, 5, 2, 0]  	173	2 
[0, 3, 1, 6, 0]  	173	2 
[0, 3, 0, 7, 0]  	176	2 
[1, 4, 6, 1, 0]  	177	4 
[0, 2, 9, 0, 0]  	177	3 
[0, 2, 2, 6, 0]  	178	1 
[0, 2, 8, 1, 0]  	180	3 
[0, 1, 10, 0, 0]  	182	2 
[1, 0, 8, 2, 0]  	183	1 
[0, 1, 3, 6, 0]  	183	1 
[0, 1, 9, 1, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 1, 2, 7, 0]  	186	1 
[0, 4, 7, 1, 0]  	187	2 
[0, 3, 3, 5, 0]  	187	2 
[0, 0, 10, 1, 0]  	190	1 
[0, 6, 0, 6, 0]  	192	1 
[0, 2, 4, 5, 0]  	192	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 0, 3, 8, 0]  	211	1 
[4, 1, 0, 1, 1]  	60	4 
[8, 1, 0, 0, 1]  	68	5 
[2, 3, 1, 1, 1]  	87	4 
[2, 5, 0, 1, 1]  	94	4 
[6, 5, 0, 0, 1]  	102	8 
[1, 5, 1, 1, 1]  	104	3 
[6, 0, 4, 0, 1]  	110	8 
[3, 5, 2, 0, 1]  	115	7 
[2, 6, 2, 0, 1]  	120	5 
[2, 5, 3, 0, 1]  	125	7 
[2, 1, 0, 5, 1]  	126	6 
[1, 3, 5, 0, 1]  	128	5 
[1, 7, 0, 2, 1]  	131	5 
[1, 5, 4, 0, 1]  	135	3 
[1, 4, 4, 1, 1]  	143	6 
[1, 4, 3, 2, 1]  	146	5 
[1, 0, 6, 2, 1]  	149	4 
[1, 2, 0, 6, 1]  	151	4 
[1, 8, 3, 0, 1]  	154	4 
[1, 3, 3, 3, 1]  	154	4 
[0, 7, 2, 2, 1]  	158	3 
[0, 5, 0, 5, 1]  	160	4 
[0, 7, 1, 3, 1]  	161	3 
[0, 7, 0, 4, 1]  	164	3 
[0, 5, 4, 2, 1]  	168	3 
[0, 4, 0, 6, 1]  	168	3 
[0, 7, 5, 0, 1]  	169	3 
[0, 4, 6, 1, 1]  	170	3 
[0, 5, 3, 3, 1]  	171	3 
[0, 4, 4, 3, 1]  	176	2 
[1, 0, 10, 0, 1]  	177	4 
[0, 4, 3, 4, 1]  	179	2 
[1, 0, 9, 1, 1]  	180	3 
[0, 1, 4, 5, 1]  	180	2 
[3, 4, 0, 2, 2]  	109	6 
[2, 0, 6, 0, 2]  	116	6 
[5, 4, 2, 0, 2]  	117	6 
[1, 1, 6, 0, 2]  	121	5 
[4, 7, 1, 0, 2]  	129	7 
[1, 7, 3, 0, 2]  	142	5 
[1, 5, 0, 4, 2]  	147	5 
[0, 7, 4, 0, 2]  	152	4 
[1, 1, 2, 5, 2]  	153	5 
[1, 0, 8, 1, 2]  	163	3 
[0, 2, 5, 3, 2]  	169	2 
[0, 3, 7, 1, 2]  	175	2 
[7, 4, 0, 0, 3]  	97	5 
[7, 3, 1, 0, 3]  	102	7 
[5, 3, 2, 0, 3]  	105	8 
[5, 8, 0, 0, 3]  	131	6 
[1, 8, 2, 0, 3]  	137	6 
[0, 6, 5, 0, 3]  	157	4 
[0, 5, 5, 1, 3]  	165	3 
[7, 3, 0, 0, 4]  	85	7 
[5, 7, 0, 0, 4]  	119	8 
[5, 6, 1, 0, 4]  	124	5 
[3, 8, 1, 0, 4]  	134	6 
[3, 0, 5, 2, 4]  	146	5 
[1, 0, 9, 0, 4]  	160	5 
[0, 1, 6, 4, 4]  	194	2 
[2, 0, 5, 2, 5]  	139	6 
[0, 5, 2, 4, 5]  	174	3 
[0, 1, 7, 2, 6]  	171	2 
[3, 7, 1, 0, 8]  	122	8 
[0, 0, 3, 6, 248]  	171	1 
[3, 2, 1, 3, 249]  	122	7 
[0, 0, 2, 7, 251]  	174	1 
[4, 0, 1, 2, 252]  	85	6 
[1, 6, 0, 3, 252]  	139	5 
[1, 4, 2, 2, 253]  	129	4 
[2, 0, 0, 6, 253]  	134	5 
[1, 0, 0, 7, 253]  	147	2 
[0, 8, 1, 2, 253]  	153	3 
[0, 0, 1, 7, 253]  	157	1 
[0, 0, 0, 8, 253]  	160	1 
[0, 2, 0, 7, 253]  	164	1 
[0, 1, 9, 0, 253]  	165	1 
[0, 3, 2, 5, 253]  	170	2 
[2, 0, 0, 5, 254]  	114	5 
[1, 1, 1, 4, 254]  	116	2 
[0, 10, 0, 0, 254]  	120	3 
[1, 0, 2, 4, 254]  	121	2 
[1, 1, 5, 1, 254]  	124	4 
[1, 0, 1, 5, 254]  	124	2 
[1, 3, 4, 1, 254]  	131	5 
[1, 3, 2, 3, 254]  	137	3 
[0, 7, 1, 2, 254]  	141	2 
[1, 0, 7, 1, 254]  	146	4 
[0, 6, 2, 2, 254]  	146	2 
[0, 1, 8, 0, 254]  	148	1 
[0, 0, 3, 5, 254]  	151	1 
[0, 6, 0, 4, 254]  	152	2 
[0, 2, 2, 5, 254]  	158	1 
[0, 1, 6, 3, 254]  	174	2 
[0, 0, 8, 2, 254]  	176	1 
[0, 0, 7, 3, 254]  	179	1 
[2, 1, 2, 0, 255]  	60	2 
[4, 0, 0, 2, 255]  	68	4 
[1, 0, 0, 4, 255]  	87	1 
[3, 3, 0, 2, 255]  	97	4 
[1, 3, 2, 1, 255]  	97	3 
[0, 0, 1, 4, 255]  	97	1 
[2, 0, 2, 3, 255]  	108	3 
[2, 2, 1, 3, 255]  	115	2 
[1, 9, 0, 0, 255]  	115	1 
[0, 3, 0, 4, 255]  	116	1 
[0, 1, 4, 2, 255]  	120	1 
[2, 4, 0, 3, 255]  	122	3 
[0, 2, 0, 5, 255]  	124	1 
[1, 2, 2, 3, 255]  	125	2 
[0, 9, 1, 0, 255]  	125	1 
[0, 0, 4, 3, 255]  	128	1 
[0, 5, 2, 2, 255]  	134	1 
[0, 4, 2, 3, 255]  	142	2 
[0, 3, 6, 1, 255]  	158	2 
[0, 6, 4, 1, 255]  	160	3 
------
The gap is between 9 and 247.
Lengths: 2 2 5 6 2 5.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[4570354389965977052 + 1633678174868877345*2^64 + 13944363464583738387*2^128 + 446287458*2^192,7732462463340458972 + 7933010423173056197*2^64 + 1176527026092317358*2^128 + 584982159*2^192,18354460757800542140 + 17564584489899070828*2^64 + 11936200504923024103*2^128 + 899431177*2^192,18258014076789541800 + 16871180791463508343*2^64 + 5720851500592158167*2^128 + 1037138776*2^192,2269710856108617982 + 10023415271409268019*2^64 + 13378453630534921514*2^128 + 576215736*2^192,11996431608123774092 + 3393772397871181530*2^64 + 13472848998842312928*2^128 + 180938055*2^192,2454775753348032400 + 5013316741342458238*2^64 + 6564790598081651832*2^128 + 379315786*2^192,17201591074554482736 + 7877455946078974135*2^64 + 16886455551710767893*2^128 + 852512440*2^192,9604902192344731696 + 13493751518864042926*2^64 + 13244327663667127469*2^128 + 496788576*2^192;\
7240972077391328665 + 15295074715642332970*2^64 + 291293900364905417*2^128 + 663087772*2^192,13505791122269621063 + 18138992394768082251*2^64 + 1094458100400293932*2^128 + 713505850*2^192,17576358086011280069 + 17639585932285669075*2^64 + 8484668645623964777*2^128 + 1051238787*2^192,10234081020706030149 + 2634981413841516648*2^64 + 1945164520789966582*2^128 + 137837148*2^192,2307106652590720742 + 6025099960078426658*2^64 + 12876301585462829276*2^128 + 101599348*2^192,15961867432419379042 + 9431716818582866291*2^64 + 13394575330810888295*2^128 + 59137904*2^192,15725779133791200553 + 2623028851630611962*2^64 + 4416814207115490243*2^128 + 868796082*2^192,4442189997195447769 + 4124830971914600181*2^64 + 8522205883971267704*2^128 + 285707650*2^192,10065882660113170299 + 1641875988739624090*2^64 + 17585656277161540765*2^128 + 94457256*2^192;\
7649383975101872414 + 14257615187819361131*2^64 + 8717609776207163983*2^128 + 725520695*2^192,14235772346488277440 + 15960039339929776195*2^64 + 7791086139993264040*2^128 + 719482104*2^192,4006255730385969344 + 14238126100077652860*2^64 + 11616465792613962691*2^128 + 959351668*2^192,16753717654485883876 + 15357447885748612342*2^64 + 7931204210533667856*2^128 + 207945746*2^192,15241004120239525644 + 9684534369966705772*2^64 + 6242235280674759462*2^128 + 13038345*2^192,14419268093233577668 + 13098540531225675799*2^64 + 14902613761638112148*2^128 + 889844199*2^192,17664586784913806644 + 11383667961718932230*2^64 + 3977628681455545106*2^128 + 582814057*2^192,10348933664166173120 + 7743309658004658431*2^64 + 2381481994919638915*2^128 + 500641420*2^192,12059745217706345488 + 14251918549037473289*2^64 + 13920702713728112106*2^128 + 565296143*2^192;\
5349547742774070961 + 6167493707633255671*2^64 + 13004465352237847156*2^128 + 474336539*2^192,11175304938689299848 + 6477839897016306413*2^64 + 17856781566535982707*2^128 + 779668520*2^192,16135074375178294992 + 5563414967932629251*2^64 + 9852835393521321945*2^128 + 799559353*2^192,7390604878358915416 + 6670202177590561121*2^64 + 15938302288281688212*2^128 + 55633317*2^192,13598183435214129860 + 2978549913093761466*2^64 + 1516868759339050138*2^128 + 714847223*2^192,3277447111886838230 + 16867195330598924594*2^64 + 16365362630260705192*2^128 + 708340990*2^192,10367585436124171058 + 10912560898400559845*2^64 + 13253038422695237346*2^128 + 923062452*2^192,14706992096636392864 + 2005655394975140040*2^64 + 12087331786901479931*2^128 + 572064730*2^192,15044422536069984568 + 8952139181535969545*2^64 + 12557346319117560022*2^128 + 667667672*2^192;\
15995418875306460033 + 16349412160309482754*2^64 + 5083591012284328751*2^128 + 793916824*2^192,9495349835503053630 + 4233417874253094563*2^64 + 1137610558833645044*2^128 + 315493719*2^192,9213900470085727080 + 12593234369032547244*2^64 + 16660338826674128894*2^128 + 235507241*2^192,14709098436291041130 + 17284754306102261800*2^64 + 18204226336207992064*2^128 + 891979558*2^192,14379746406793693010 + 15223823889679613714*2^64 + 3165144215650291324*2^128 + 40871976*2^192,16919436894949192014 + 6140957717624729095*2^64 + 18306918403458528993*2^128 + 423286170*2^192,9842325673197823690 + 14283794894688072642*2^64 + 17677579448735156440*2^128 + 316062498*2^192,15171217698107245698 + 2546649356324448423*2^64 + 16189369783759670371*2^128 + 990952401*2^192,15120062138274985918 + 10541643623129478141*2^64 + 17256010617637544248*2^128 + 742350259*2^192;\
9887879623721726066 + 5607770450475210038*2^64 + 18377656447402021789*2^128 + 293294684*2^192,7975124694690974324 + 15615021861750497113*2^64 + 14826501413475528778*2^128 + 564736973*2^192,12816602820801452850 + 8276835340615040771*2^64 + 15567506205795562977*2^128 + 829103607*2^192,6838863143692921742 + 1640230898476886600*2^64 + 8719008364659190497*2^128 + 928921430*2^192,15572328467165478411 + 1205256588070755327*2^64 + 13258512362136173847*2^128 + 291360794*2^192,16273042619896074240 + 12415087514138810517*2^64 + 3125952944282403263*2^128 + 980805819*2^192,16836962013042997034 + 11171739432778623634*2^64 + 11865617022984947288*2^128 + 50439252*2^192,17791324794909958610 + 1670703463154717647*2^64 + 3320040273446374425*2^128 + 928117995*2^192,13105057309380725818 + 7630910359094057407*2^64 + 13225816336022673343*2^128 + 287198554*2^192;\
10563539573248974730 + 5119038824793163070*2^64 + 15359527055708631635*2^128 + 755918044*2^192,3453840150437381435 + 8217601296896412155*2^64 + 7380624056787273405*2^128 + 1016966302*2^192,14666643165018887483 + 4984818294781974130*2^64 + 13227709696335434475*2^128 + 936939965*2^192,17354714175899836619 + 17638355318113539387*2^64 + 3525937856904875589*2^128 + 422301231*2^192,4548649707782199004 + 9797213307063997552*2^64 + 89903957201476547*2^128 + 395934381*2^192,4723375138596070636 + 6158956531523417287*2^64 + 10919007198265554755*2^128 + 215335086*2^192,2142100216730264297 + 6355387086796817051*2^64 + 15341227956037288009*2^128 + 32201907*2^192,11139712833817259099 + 2377806868313011926*2^64 + 15920432403674315063*2^128 + 805988584*2^192,17564920185836655529 + 7320578042044121750*2^64 + 16474509051175244615*2^128 + 968021694*2^192;\
3139948638574439940 + 3462269725738852791*2^64 + 175082337189921365*2^128 + 679186657*2^192,12698281551662537040 + 13964516542198448417*2^64 + 9651605223648639021*2^128 + 870268789*2^192,3826200947645449232 + 1510556202175686015*2^64 + 6334949918757915431*2^128 + 744077428*2^192,13778196093867081352 + 7440869193273389393*2^64 + 1119453849926074959*2^128 + 1008664846*2^192,16957779250462942840 + 12729165608022722132*2^64 + 9461919520763825476*2^128 + 844449334*2^192,18104190741673466840 + 4873457253224312940*2^64 + 4812693181730569943*2^128 + 862359451*2^192,2623288312932164712 + 3071934479119250365*2^64 + 1311317171604231805*2^128 + 671928343*2^192,3719355299981861964 + 17928001218677671021*2^64 + 16175730692638409511*2^128 + 515000848*2^192,7427753025884791344 + 8873840788898478952*2^64 + 2550727265264279251*2^128 + 421463883*2^192;\
4649066990637997861 + 4405676984681922149*2^64 + 12349155611203231293*2^128 + 768446012*2^192,15563970558622313823 + 5613492732128938657*2^64 + 17802652455024942486*2^128 + 904886081*2^192,12041727849092679573 + 4152278596005097644*2^64 + 12888820403325041792*2^128 + 225517417*2^192,14466842454412494459 + 16642603807091164006*2^64 + 17331905793027561309*2^128 + 432183395*2^192,1287458315801366352 + 10102629911797274398*2^64 + 12976248454616916031*2^128 + 158435362*2^192,9997388163464715350 + 2799259880634027138*2^64 + 10212275814171494618*2^128 + 315455810*2^192,5185414606809145411 + 12672773968901986334*2^64 + 1928255594223113953*2^128 + 420414951*2^192,10731708493349486667 + 17582251494926768322*2^64 + 792323098430524435*2^128 + 230291031*2^192,9334418887612323389 + 13826430022077768561*2^64 + 636137005391188600*2^128 + 91792857*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4253 lists. */
