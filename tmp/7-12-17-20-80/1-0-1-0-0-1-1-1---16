/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 99
[9, 0, 0, 0, 0]  	63	2  <--- 1
[4, 0, 0, 2, 0]  	68	3 
[8, 0, 1, 0, 0]  	73	2 
[0, 5, 0, 1, 0]  	80	3 
[5, 5, 0, 0, 0]  	95	4 
[5, 4, 0, 1, 0]  	103	3 
[4, 5, 1, 0, 0]  	105	4 
[0, 9, 0, 0, 0]  	108	3  <--- 2
[4, 4, 1, 1, 0]  	113	3 
[5, 1, 4, 0, 0]  	115	2 
[1, 4, 0, 3, 0]  	115	3 
[5, 0, 4, 1, 0]  	123	4 
[4, 8, 0, 0, 0]  	124	3 
[4, 1, 5, 0, 0]  	125	4 
[1, 1, 4, 2, 0]  	127	2 
[1, 0, 0, 6, 0]  	127	2 
[0, 4, 0, 4, 0]  	128	2 
[4, 0, 5, 1, 0]  	133	4 
[1, 5, 4, 0, 0]  	135	2 
[1, 0, 4, 3, 0]  	135	2 
[4, 4, 4, 0, 0]  	144	3 
[1, 1, 8, 0, 0]  	155	2 
[0, 4, 4, 2, 0]  	156	2 
[0, 3, 0, 6, 0]  	156	2 
[1, 0, 8, 1, 0]  	163	2 
[4, 0, 8, 0, 0]  	164	4 
[0, 3, 6, 2, 0]  	178	1 
[0, 2, 2, 6, 0]  	178	1 
[0, 2, 7, 2, 0]  	183	1 
[0, 1, 3, 6, 0]  	183	1 
[0, 1, 9, 1, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 7, 6, 0, 0]  	186	1 
[0, 2, 6, 3, 0]  	186	1 
[0, 1, 2, 7, 0]  	186	1 
[0, 0, 10, 1, 0]  	190	1 
[0, 3, 8, 1, 0]  	192	1 
[0, 2, 4, 5, 0]  	192	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 1, 11, 0, 0]  	199	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 3, 10, 0, 0]  	206	1 
[0, 0, 3, 8, 0]  	211	1 
[0, 5, 9, 0, 0]  	213	1 
[4, 1, 0, 1, 1]  	60	3 
[5, 0, 4, 0, 1]  	103	4 
[4, 0, 5, 0, 1]  	113	4 
[0, 5, 4, 0, 1]  	128	2 
[1, 3, 0, 5, 1]  	143	3 
[0, 3, 3, 5, 1]  	187	2 
[0, 1, 4, 0, 2]  	80	2 
[3, 0, 8, 0, 2]  	157	4 
[3, 2, 0, 5, 3]  	145	3 
[3, 0, 3, 5, 3]  	172	3 
[3, 2, 0, 4, 4]  	125	3 
[3, 2, 3, 2, 4]  	136	3 
[3, 1, 3, 4, 4]  	164	3 
[3, 0, 7, 2, 4]  	180	3 
[3, 1, 3, 3, 5]  	144	3 
[2, 0, 11, 0, 6]  	201	3 
[2, 0, 3, 5, 7]  	165	3 
[2, 4, 3, 2, 8]  	153	3 
[2, 2, 3, 4, 8]  	169	3 
[2, 0, 7, 2, 8]  	173	2 
[2, 2, 3, 3, 9]  	149	3 
[1, 0, 11, 0, 10]  	194	3 
[1, 1, 3, 5, 11]  	170	3 
[1, 0, 7, 2, 13]  	166	3 
[0, 0, 2, 8, 239]  	194	1 
[0, 1, 2, 6, 241]  	166	1 
[0, 0, 6, 4, 241]  	182	1 
[0, 1, 1, 7, 243]  	169	1 
[0, 0, 1, 8, 243]  	177	1 
[0, 3, 2, 5, 244]  	170	2 
[0, 1, 1, 6, 245]  	149	1 
[0, 0, 5, 4, 245]  	165	1 
[0, 2, 0, 7, 247]  	164	1 
[0, 1, 0, 8, 247]  	172	1 
[0, 0, 1, 6, 248]  	137	1 
[0, 0, 0, 8, 248]  	160	1 
[0, 0, 9, 1, 248]  	173	1 
[0, 2, 0, 6, 249]  	144	1 
[0, 3, 1, 5, 249]  	153	2 
[0, 4, 1, 3, 250]  	125	2 
[0, 0, 5, 3, 250]  	145	1 
[0, 0, 4, 4, 250]  	148	1 
[0, 0, 8, 2, 250]  	176	1 
[0, 0, 0, 6, 252]  	120	1 
[0, 0, 8, 1, 252]  	156	1 
[0, 3, 0, 5, 253]  	136	2 
[0, 0, 8, 0, 253]  	136	1 
[0, 0, 0, 4, 254]  	80	1 
[0, 4, 0, 3, 254]  	108	2 
[0, 0, 4, 3, 254]  	128	1 
[0, 5, 0, 0, 255]  	60	1 
------
The gap is between 14 and 238.
Lengths: 2 2 5 7 2 8.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 10.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[13772373509847493120 + 18093956108753867012*2^64 + 4886762257683909810*2^128 + 13268755667*2^192,17348749480744177664 + 6542168830573667847*2^64 + 8698440460190035745*2^128 + 47953944613*2^192,8183471647800148992 + 2778940693167994705*2^64 + 1897923369725447190*2^128 + 59488737526*2^192,3362530026887003264 + 16605148964994253352*2^64 + 6193513868278038297*2^128 + 15994892288*2^192,17794854764102854656 + 3929544677081342286*2^64 + 17270461845680331176*2^128 + 187644177967*2^192,1969049986114457600 + 3529172530591698731*2^64 + 5672748488749103833*2^128 + 26951499648*2^192,864134247134220288 + 7998330467483936437*2^64 + 1330358180213608856*2^128 + 210240267183*2^192,4105710925812899072 + 12834650396586351503*2^64 + 1779260674137302645*2^128 + 132272678107*2^192,7545932315845185536 + 17294921892787143762*2^64 + 3695744148232037642*2^128 + 252305113805*2^192;\
11505014951328391000 + 8231407264703738555*2^64 + 17697928718141520481*2^128 + 238799983139*2^192,6849248438270636032 + 9535687847901668372*2^64 + 516426068319828856*2^128 + 34361479228*2^192,13388717798458526000 + 16582855107388803515*2^64 + 14437423991248987885*2^128 + 9168478424*2^192,8715075888254044758 + 13936076261158445752*2^64 + 6952852325520021228*2^128 + 274227689133*2^192,6255144430345123296 + 6086254016099518524*2^64 + 15368054076873772134*2^128 + 53103000410*2^192,8104261957527357624 + 17310101274068186227*2^64 + 9549231335515855311*2^128 + 81959136975*2^192,11163561006309763968 + 18170083337610543643*2^64 + 1319184248806164449*2^128 + 223365884839*2^192,675226775988336956 + 15205537867564625761*2^64 + 18271129652819115617*2^128 + 202750762014*2^192,17988041375747535488 + 7729197815537575949*2^64 + 16943647492076446672*2^128 + 245662261204*2^192;\
0 + 0*2^64 + 0*2^128 + 12884901888*2^192,0 + 0*2^64 + 0*2^128 + 8589934592*2^192,10408830289550770688 + 3162570678865090339*2^64 + 5213916969137167250*2^128 + 95282870196*2^192,0 + 0*2^64 + 0*2^128 + 135291469824*2^192,0 + 0*2^64 + 0*2^128 + 42949672960*2^192,0 + 0*2^64 + 0*2^128 + 75161927680*2^192,0 + 0*2^64 + 0*2^128 + 10737418240*2^192,0 + 0*2^64 + 0*2^128 + 77309411328*2^192,0 + 0*2^64 + 0*2^128 + 47244640256*2^192;\
11760817809455665152 + 16202450018491349555*2^64 + 18394138379111146605*2^128 + 46423468436*2^192,12812367297256325120 + 4698775702950894957*2^64 + 2118295669267016649*2^128 + 13406088033*2^192,17720795376615440384 + 1637378904358638782*2^64 + 7046223210707857282*2^128 + 130036954352*2^192,4605083115216292352 + 7204739515792049180*2^64 + 18317104019655744869*2^128 + 27871138751*2^192,6431725734708396032 + 18144527716804446541*2^64 + 6597900880965097453*2^128 + 119599890226*2^192,17844903139374764032 + 11811650161180547597*2^64 + 2403192446384622246*2^128 + 123804253186*2^192,952161458097651712 + 12918502200848362564*2^64 + 9268675946772226454*2^128 + 92341010906*2^192,2609368409041864704 + 15357787397662666300*2^64 + 7104992629082699588*2^128 + 60470093287*2^192,5320944858118258688 + 4457422080617722576*2^64 + 15286801341568341741*2^128 + 65713654181*2^192;\
16252858474358507008 + 13280835760919363272*2^64 + 9877816777891292626*2^128 + 110901482647*2^192,17840311567134175232 + 16110713774035229782*2^64 + 432869979375565307*2^128 + 125617684340*2^192,7174110939180035072 + 9229664223196970056*2^64 + 3562345673838245445*2^128 + 72565303903*2^192,184585187717556608 + 6119213246302736916*2^64 + 3116867793847340623*2^128 + 42156804512*2^192,9836082434210764800 + 13221649268379729280*2^64 + 10286410302909189232*2^128 + 185985333904*2^192,10345451605676083200 + 3502179831182159500*2^64 + 5945297446510133825*2^128 + 47909253082*2^192,2705393954740973568 + 2771949383737432293*2^64 + 6583058708523100050*2^128 + 244472904075*2^192,2457439220454468352 + 7660267079858363278*2^64 + 8879701236734560864*2^128 + 236189718014*2^192,546320717444395008 + 3814380603768810424*2^64 + 2249351907882910910*2^128 + 235158890384*2^192;\
9007918480851575680 + 12089794115983231349*2^64 + 4711539362121788529*2^128 + 235779608920*2^192,6460345943130196224 + 15361192239240866739*2^64 + 14927376931612400483*2^128 + 253253840969*2^192,14838285056420165632 + 17289046004273660343*2^64 + 15426037914560034666*2^128 + 207541793099*2^192,7514350231138754304 + 14003616772106166349*2^64 + 10370804191528576136*2^128 + 19687392325*2^192,1479609060647228288 + 1785654680456566674*2^64 + 1775859295119353259*2^128 + 199421627934*2^192,4989906438602200064 + 17028929259970521204*2^64 + 17057701875130249091*2^128 + 44941043172*2^192,17534983101894630656 + 14692732510756726261*2^64 + 1035295068996530907*2^128 + 65955985073*2^192,7776064428621659648 + 16527540449185516100*2^64 + 2387898414566621459*2^128 + 94664217113*2^192,2782469854183228672 + 10170640393238287451*2^64 + 7390919858246637811*2^128 + 155120134781*2^192;\
11094150770779042572 + 13611234053888424957*2^64 + 4089335667696624247*2^128 + 51668634056*2^192,420855585573818880 + 1087754213247378789*2^64 + 18418550162840138720*2^128 + 172674200487*2^192,9452881826398636120 + 18444090008613821339*2^64 + 2348167040159588706*2^128 + 56003548725*2^192,14288127474633283939 + 17880086683425512865*2^64 + 13238640196696799420*2^128 + 191021155378*2^192,16506602500245658096 + 11266258872972378172*2^64 + 625348435000792987*2^128 + 31214668549*2^192,5467907588970638524 + 13905919223325658641*2^64 + 7074660760449701133*2^128 + 15295446902*2^192,10381519844063423168 + 16298699174765371710*2^64 + 6803128855635535437*2^128 + 264972502106*2^192,16254708472813198414 + 18352394605876753253*2^64 + 3736272345313308128*2^128 + 32637364392*2^192,10930852406217940032 + 13658888496695867446*2^64 + 2175746416055173825*2^128 + 10788517889*2^192;\
3458493877896695040 + 17890351843023859042*2^64 + 14565014933083092678*2^128 + 90107021838*2^192,3620049979663342080 + 5198104023780900345*2^64 + 6411661905710213021*2^128 + 226113125455*2^192,10967599495133628416 + 12199699099928855719*2^64 + 1181529658845874959*2^128 + 150606378728*2^192,13737637846195878144 + 7808275015437697917*2^64 + 18272880449039113813*2^128 + 119319766250*2^192,10208987616999153920 + 4499341348348380197*2^64 + 5742570010664435603*2^128 + 52020142890*2^192,14911382569024243712 + 14250535828146798519*2^64 + 1214557755933574281*2^128 + 104900960560*2^192,4870148892711199232 + 11445358834099028943*2^64 + 10456342142732062749*2^128 + 142707079082*2^192,1525493271370719744 + 2396583573879955194*2^64 + 16606382639865155533*2^128 + 167926323609*2^192,14097026977965093376 + 10979073423436716388*2^64 + 18104190567055068297*2^128 + 144250130031*2^192;\
5109097785142587676 + 13602551951733226461*2^64 + 18423538485017538445*2^128 + 219553258422*2^192,1695482293274499584 + 524355482310632358*2^64 + 16602695563573683676*2^128 + 190819745246*2^192,18152494656259953016 + 7033457938369915512*2^64 + 10734196809954014009*2^128 + 35827145440*2^192,3807168387167990695 + 17999105705348348385*2^64 + 12781112865126162266*2^128 + 19681781213*2^192,16600349653264161840 + 12121096955087516392*2^64 + 9092812042815738538*2^128 + 241542730650*2^192,3945807122509897228 + 15927854586188026478*2^64 + 3050108943829133614*2^128 + 150263710434*2^192,7591052464140206528 + 12054908134109009848*2^64 + 17512269719273643635*2^128 + 186248552266*2^192,7279579799069454902 + 14695969755097279681*2^64 + 3624531136165851336*2^128 + 118905982768*2^192,11408437761579917632 + 5525404757234953745*2^64 + 6314946458259722088*2^128 + 19003593006*2^192]
/* 
This matrix times 2^(-8) should be the matrix of frobenius.
*/ 
B = 2^(-8) * A; 
/* Freed 2551 lists. */
