/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^8 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 176
[9, 0, 0, 0, 0]  	63	3  <--- 1
[4, 0, 0, 2, 0]  	68	4 
[8, 0, 1, 0, 0]  	73	3 
[2, 1, 2, 1, 0]  	80	4 
[2, 1, 4, 0, 0]  	94	4 
[7, 1, 2, 0, 0]  	95	7 
[6, 5, 0, 0, 0]  	102	6 
[7, 0, 2, 1, 0]  	103	5 
[6, 1, 3, 0, 0]  	105	7 
[2, 5, 2, 0, 0]  	108	5 
[6, 4, 0, 1, 0]  	110	4 
[6, 0, 3, 1, 0]  	113	5 
[2, 5, 0, 2, 0]  	114	3 
[2, 0, 0, 5, 0]  	114	3 
[3, 0, 6, 0, 0]  	123	6 
[6, 4, 2, 0, 0]  	124	6 
[2, 0, 2, 4, 0]  	128	3 
[3, 9, 0, 0, 0]  	129	6 
[3, 4, 0, 3, 0]  	129	5 
[2, 0, 7, 0, 0]  	133	6 
[2, 0, 6, 1, 0]  	136	6 
[2, 9, 1, 0, 0]  	139	6 
[2, 4, 1, 3, 0]  	139	5 
[1, 11, 0, 0, 0]  	139	5 
[1, 5, 2, 2, 0]  	141	5 
[2, 4, 0, 4, 0]  	142	4 
[2, 0, 4, 3, 0]  	142	4 
[1, 10, 1, 0, 0]  	144	5 
[0, 9, 0, 2, 0]  	148	3 
[0, 4, 0, 5, 0]  	148	3 
[1, 9, 2, 0, 0]  	149	4 
[1, 4, 2, 3, 0]  	149	4 
[1, 9, 1, 1, 0]  	152	3 
[1, 4, 1, 4, 0]  	152	3 
[1, 1, 8, 0, 0]  	155	4 
[1, 1, 1, 6, 0]  	156	6 
[1, 6, 0, 4, 0]  	159	3 
[1, 1, 0, 7, 0]  	159	3 
[1, 1, 6, 2, 0]  	161	3 
[1, 0, 2, 6, 0]  	161	3 
[0, 12, 1, 0, 0]  	161	3 
[1, 8, 0, 3, 0]  	163	4 
[1, 4, 4, 2, 0]  	163	4 
[1, 3, 0, 6, 0]  	163	4 
[1, 0, 1, 7, 0]  	164	3 
[0, 2, 6, 2, 0]  	166	2 
[1, 5, 6, 0, 0]  	169	3 
[1, 0, 6, 3, 0]  	169	3 
[0, 11, 1, 1, 0]  	169	3 
[0, 6, 1, 4, 0]  	169	3 
[1, 1, 3, 5, 0]  	170	4 
[0, 8, 2, 2, 0]  	170	4 
[0, 1, 7, 2, 0]  	171	2 
[0, 8, 1, 3, 0]  	173	2 
[0, 4, 5, 2, 0]  	173	2 
[0, 3, 1, 6, 0]  	173	2 
[1, 0, 4, 5, 0]  	175	2 
[0, 7, 3, 2, 0]  	175	3 
[0, 13, 0, 1, 0]  	176	3 
[0, 8, 0, 4, 0]  	176	2 
[0, 3, 0, 7, 0]  	176	2 
[1, 4, 6, 1, 0]  	177	5 
[1, 3, 2, 5, 0]  	177	4 
[0, 7, 2, 3, 0]  	178	1 
[0, 2, 2, 6, 0]  	178	1 
[0, 5, 7, 0, 0]  	179	3 
[0, 6, 4, 2, 0]  	180	3 
[0, 1, 4, 5, 0]  	180	2 
[0, 1, 10, 0, 0]  	182	2 
[1, 0, 8, 2, 0]  	183	1 
[0, 11, 3, 0, 0]  	183	1 
[0, 6, 3, 3, 0]  	183	1 
[0, 1, 3, 6, 0]  	183	1 
[0, 1, 9, 1, 0]  	185	1 
[0, 0, 5, 5, 0]  	185	1 
[0, 7, 6, 0, 0]  	186	1 
[0, 1, 2, 7, 0]  	186	1 
[1, 0, 0, 9, 0]  	187	2 
[0, 4, 7, 1, 0]  	187	2 
[0, 3, 3, 5, 0]  	187	2 
[0, 3, 9, 0, 0]  	189	3 
[0, 0, 10, 1, 0]  	190	1 
[0, 16, 0, 0, 0]  	192	1  <--- 2
[0, 3, 8, 1, 0]  	192	1 
[0, 1, 0, 9, 0]  	192	1 
[0, 9, 5, 0, 0]  	193	1 
[0, 0, 9, 2, 0]  	193	1 
[0, 0, 1, 9, 0]  	197	1 
[0, 0, 7, 4, 0]  	199	1 
[0, 0, 0, 10, 0]  	200	1  <--- 4
[0, 0, 12, 0, 0]  	204	1  <--- 3
[0, 0, 3, 8, 0]  	211	1 
[4, 1, 0, 1, 1]  	60	4 
[0, 5, 0, 1, 1]  	80	2 
[6, 0, 4, 0, 1]  	110	6 
[3, 2, 1, 3, 1]  	122	7 
[2, 3, 1, 3, 1]  	127	5 
[0, 5, 4, 0, 1]  	128	2 
[2, 2, 1, 4, 1]  	135	5 
[1, 2, 3, 3, 1]  	142	4 
[1, 0, 6, 2, 1]  	149	4 
[0, 10, 2, 0, 1]  	154	3 
[1, 0, 3, 5, 1]  	158	4 
[0, 9, 3, 0, 1]  	159	3 
[0, 14, 0, 0, 1]  	168	3 
[0, 4, 4, 3, 1]  	176	2 
[0, 4, 3, 4, 1]  	179	2 
[1, 0, 9, 1, 1]  	180	3 
[3, 0, 2, 3, 2]  	115	6 
[3, 2, 0, 4, 2]  	125	6 
[1, 1, 6, 1, 2]  	141	4 
[1, 1, 5, 2, 2]  	144	5 
[1, 4, 3, 2, 2]  	146	5 
[1, 3, 4, 2, 2]  	151	5 
[0, 13, 0, 0, 2]  	156	5 
[0, 2, 8, 0, 2]  	160	3 
[1, 3, 7, 0, 2]  	162	4 
[1, 0, 5, 4, 2]  	172	3 
[0, 3, 7, 1, 2]  	175	2 
[1, 0, 11, 0, 2]  	194	4 
[2, 9, 0, 0, 3]  	122	6 
[1, 3, 6, 0, 3]  	145	5 
[1, 3, 5, 1, 3]  	148	4 
[1, 2, 2, 5, 5]  	165	3 
[0, 4, 6, 1, 5]  	170	3 
[1, 1, 4, 4, 6]  	167	4 
[0, 1, 6, 4, 6]  	194	2 
[1, 0, 8, 1, 7]  	163	4 
[1, 0, 10, 0, 7]  	177	4 
[0, 2, 5, 3, 8]  	169	2 
[0, 1, 1, 7, 247]  	169	1 
[0, 0, 1, 8, 247]  	177	1 
[0, 1, 9, 0, 249]  	165	2 
[1, 0, 0, 8, 249]  	167	2 
[0, 3, 2, 5, 249]  	170	2 
[0, 2, 7, 1, 250]  	163	2 
[0, 2, 0, 7, 251]  	164	1 
[0, 1, 0, 8, 251]  	172	1 
[2, 4, 0, 3, 252]  	122	4 
[1, 0, 0, 7, 252]  	147	1 
[0, 3, 0, 6, 252]  	156	2 
[0, 0, 1, 7, 252]  	157	1 
[0, 0, 0, 8, 252]  	160	1 
[0, 0, 4, 5, 252]  	168	1 
[0, 0, 3, 6, 252]  	171	1 
[0, 0, 8, 2, 252]  	176	1 
[0, 0, 7, 3, 252]  	179	1 
[1, 9, 1, 0, 253]  	132	3 
[1, 4, 0, 4, 253]  	135	1 
[1, 0, 1, 6, 253]  	144	2 
[0, 4, 1, 4, 253]  	145	1 
[0, 1, 6, 2, 253]  	154	1 
[0, 0, 2, 6, 253]  	154	1 
[0, 4, 4, 2, 253]  	156	2 
[0, 4, 3, 3, 253]  	159	2 
[0, 0, 6, 3, 253]  	162	1 
[2, 2, 1, 3, 254]  	115	4 
[1, 2, 2, 3, 254]  	125	3 
[1, 3, 3, 2, 254]  	134	3 
[0, 0, 2, 5, 254]  	134	1 
[0, 0, 0, 7, 254]  	140	1 
[0, 9, 2, 0, 254]  	142	3 
[0, 4, 2, 3, 254]  	142	2 
[1, 2, 1, 5, 254]  	148	2 
[0, 1, 8, 0, 254]  	148	1 
[0, 1, 7, 1, 254]  	151	2 
[0, 3, 6, 1, 254]  	158	2 
[2, 1, 2, 0, 255]  	60	2 
[0, 0, 0, 4, 255]  	80	1 
[2, 0, 2, 3, 255]  	108	3 
[1, 9, 0, 0, 255]  	115	1 
[0, 1, 4, 2, 255]  	120	1 
[0, 9, 1, 0, 255]  	125	1 
[0, 0, 4, 3, 255]  	128	1 
[0, 1, 6, 1, 255]  	134	2 
[0, 12, 0, 0, 255]  	144	1 
------
The gap is between 9 and 246.
Lengths: 2 2 5 7 2 6.
For 184 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 104 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[10188618189576540592 + 13770270506629258793*2^64 + 6447001072043618185*2^128 + 7104774748*2^192,15473511344190852928 + 6135280333632906678*2^64 + 7815529235565595519*2^128 + 7613542097*2^192,447899774145354368 + 5532866446256685970*2^64 + 8616520080391579801*2^128 + 7346763785*2^192,17913813185934665024 + 244271218978106986*2^64 + 5787271467321552903*2^128 + 9342837198*2^192,16118754070363916928 + 1380079369208607753*2^64 + 4374721857160732546*2^128 + 8217749771*2^192,8741396163836929280 + 5124451232065670150*2^64 + 16173743267879832945*2^128 + 2098546078*2^192,7897012634249544000 + 3800542983636379627*2^64 + 5961190867108462640*2^128 + 281482480*2^192,12979854843084191424 + 6226761136216252224*2^64 + 888148332270629017*2^128 + 5039755691*2^192,13418247148760537408 + 15649777711338196183*2^64 + 1988330291560062482*2^128 + 9369076178*2^192;\
4931856251951018548 + 2844045545048214824*2^64 + 17725477402539529602*2^128 + 566616287*2^192,9629431788211148498 + 7070125077484652806*2^64 + 6713781171045338724*2^128 + 11616901988*2^192,8311623360738620364 + 9511111688613523998*2^64 + 11868731215504544389*2^128 + 8124622235*2^192,13841891719727589744 + 17598663968118970623*2^64 + 11281676660595301896*2^128 + 6635134912*2^192,16064994344819910948 + 17927501466628590407*2^64 + 16441275883272091134*2^128 + 5367627281*2^192,15360932455227136152 + 3802624758236176360*2^64 + 5338520764071875021*2^128 + 12817689700*2^192,1589132628350587796 + 17854244687762186954*2^64 + 4969734407140818935*2^128 + 9605632131*2^192,11945667443897834312 + 15103773809570250109*2^64 + 9995145441425373734*2^128 + 7853145580*2^192,15523138098891625568 + 4299206890143058652*2^64 + 16921387591446062572*2^128 + 6014382674*2^192;\
0 + 0*2^64 + 0*2^128 + 1073741824*2^192,0 + 0*2^64 + 0*2^128 + 2818572288*2^192,4109316406917464096 + 2503503676642762098*2^64 + 4937555828998460857*2^128 + 1660212091*2^192,0 + 0*2^64 + 0*2^128 + 6039797760*2^192,0 + 0*2^64 + 0*2^128 + 1744830464*2^192,0 + 0*2^64 + 0*2^128 + 4563402752*2^192,0 + 0*2^64 + 0*2^128 + 6710886400*2^192,0 + 0*2^64 + 0*2^128 + 7784628224*2^192,0 + 0*2^64 + 0*2^128 + 4429185024*2^192;\
2609198609287250592 + 10821726920152792594*2^64 + 9744980617726532448*2^128 + 12064634183*2^192,10777433446293558480 + 18336591369186347013*2^64 + 2174038103225696139*2^128 + 7825140600*2^192,17115022586983346464 + 2675399358473826110*2^64 + 7927508183142499706*2^128 + 16577416014*2^192,16693480036828604800 + 7712650190306253599*2^64 + 598965070117193044*2^128 + 7067137491*2^192,9153622661546228448 + 386429097899593782*2^64 + 3162610494293818136*2^128 + 14757438048*2^192,11138900075271809216 + 11014086443634084968*2^64 + 6718844351730449188*2^128 + 3839947625*2^192,17921411847254284256 + 13254735223097164537*2^64 + 1271724647696451291*2^128 + 768030418*2^192,5441385273057058048 + 17183154040664330475*2^64 + 9399769422045150794*2^128 + 11137602919*2^192,6544859783310515264 + 18259035504332870967*2^64 + 13044322763007508904*2^128 + 9786433219*2^192;\
16461285875556654064 + 887735850762869284*2^64 + 10380035796395587664*2^128 + 12696071402*2^192,15413355320173792760 + 1619704906898202477*2^64 + 13556759762333618016*2^128 + 6101668022*2^192,13151920946909972848 + 8662601151554201380*2^64 + 13334279384050466315*2^128 + 6650572439*2^192,11572442527604833920 + 13371702081672667765*2^64 + 7788469497671436202*2^128 + 16580961914*2^192,12150487848426708848 + 9246164810947492337*2^64 + 8066791405851804459*2^128 + 4755091744*2^192,10908676970792026272 + 5001710205814741308*2^64 + 9043814537295059399*2^128 + 1871813606*2^192,6038118907794888592 + 17643328785788516097*2^64 + 5865674556649400982*2^128 + 2543189664*2^192,5881686245420407616 + 3338643247556116394*2^64 + 9562497574349485733*2^128 + 8975381300*2^192,14617703870564826912 + 12485796509178107*2^64 + 8874546973281678884*2^128 + 7166736125*2^192;\
9874716145918106608 + 2642093399189202962*2^64 + 3251349456210834956*2^128 + 6789628221*2^192,6523278030976738596 + 4288168937869541894*2^64 + 3043151340181161530*2^128 + 8185548473*2^192,8436406769853378328 + 5524800255839336867*2^64 + 12671998290422582982*2^128 + 12167282378*2^192,9387087934329348000 + 16742388952534972832*2^64 + 10920938717050606279*2^128 + 4948235177*2^192,9559398038122748104 + 9455223900842150221*2^64 + 9647103293048503390*2^128 + 11927054164*2^192,13521586871569031568 + 18075872867001935483*2^64 + 4772997193567690710*2^128 + 8957623022*2^192,11786623188953085320 + 6273359204553013387*2^64 + 14470677412055587802*2^128 + 9346159007*2^192,12576520357798356144 + 11549307904895140918*2^64 + 15339424715167687929*2^128 + 8311057629*2^192,8360288931853977056 + 4149621060026711552*2^64 + 8101287702103147352*2^128 + 12973834541*2^192;\
3131886099235844934 + 3361016131851258210*2^64 + 14566130562424187649*2^128 + 8374621416*2^192,7746756924768118875 + 3388149078793776900*2^64 + 8194141015981962198*2^128 + 8695443341*2^192,13014591893845946738 + 3991111700336681683*2^64 + 7040170528747722971*2^128 + 4938087024*2^192,17594407019421922584 + 2040743289850785734*2^64 + 5307178136039336389*2^128 + 560698470*2^192,6525067915058268342 + 7315518067789821546*2^64 + 17343673742345115524*2^128 + 7183132419*2^192,14655947416534361780 + 1135668041156151356*2^64 + 7457355781839984659*2^128 + 5587498074*2^192,14078982425072147934 + 17996971912145416413*2^64 + 15625855954944428616*2^128 + 2271496007*2^192,13394279194692050284 + 1226724969202079860*2^64 + 11783974823325762779*2^128 + 7286529918*2^192,4702664873460552848 + 4375500798677804218*2^64 + 2206585441160718949*2^128 + 8199502772*2^192;\
926014897403538112 + 13883259766726801837*2^64 + 5808684824425248832*2^128 + 6983304773*2^192,7618395563582125152 + 11290979152133967955*2^64 + 1047520953489376466*2^128 + 6609835958*2^192,18051474450311603136 + 8382501018232737894*2^64 + 976210999923484729*2^128 + 6591140037*2^192,17249379917334634752 + 16024065318407326488*2^64 + 6590261219936651154*2^128 + 8130699572*2^192,12393926864333433920 + 8441227514278557171*2^64 + 18224325416706433132*2^128 + 6643472103*2^192,5776298091954403968 + 12857292602086053291*2^64 + 12696807059687637872*2^128 + 2656592692*2^192,5326192151254572608 + 14081188721013621424*2^64 + 15282597335031191948*2^128 + 515105470*2^192,5862532735392952768 + 5158456404471537923*2^64 + 7037041010129664514*2^128 + 5622756729*2^192,16305960940514168192 + 1217173750871246216*2^64 + 672253793225635577*2^128 + 7518722486*2^192;\
15431656544605510502 + 8904486353114866633*2^64 + 16638042511174973217*2^128 + 685730262*2^192,8434285547846901995 + 8324070620730990461*2^64 + 3096686798066202304*2^128 + 15388802074*2^192,7731247169676378770 + 425621823682803117*2^64 + 12311886126064607257*2^128 + 1586242503*2^192,858456456625679480 + 15629585200428173571*2^64 + 17372061369936222534*2^128 + 1166673442*2^192,18426737527718939542 + 2141555760370197476*2^64 + 8467550152904335764*2^128 + 12057849672*2^192,8080832044104006516 + 17362707977260473439*2^64 + 16469454253196376896*2^128 + 13366323937*2^192,4363515505213918398 + 7558612539558063581*2^64 + 4626320467406391063*2^128 + 11438310680*2^192,945479622347454572 + 6109393001347270764*2^64 + 10908724975550621751*2^128 + 307881119*2^192,6372457350947659088 + 7749956034873336184*2^64 + 6175978453540150759*2^128 + 12581214672*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 2683 lists. */
