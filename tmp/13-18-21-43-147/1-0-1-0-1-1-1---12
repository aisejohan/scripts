/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * w^1               = Coefficient of   x^5 * y^1 * z^1 * w^1   = Coefficient of   x^3 * y^6               = Coefficient of   x^2 * y^2 * z^2 * w^1   = Coefficient of   y^7 * z^1               = Coefficient of   y^1 * w^3               = Coefficient of   z^7                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^6 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^7


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 47
[8, 0, 0, 0, 0]  	104	2  <--- 1
[0, 7, 0, 0, 0]  	126	2  <--- 2
[3, 6, 0, 0, 0]  	147	2 
[0, 1, 0, 3, 0]  	147	2 
[3, 0, 6, 0, 0]  	165	2 
[5, 0, 0, 3, 0]  	194	3 
[2, 6, 0, 2, 0]  	220	2 
[1, 0, 6, 2, 0]  	225	2 
[2, 5, 6, 0, 0]  	242	2 
[0, 6, 7, 0, 0]  	255	2 
[0, 5, 8, 0, 0]  	258	2 
[2, 0, 12, 0, 0]  	278	2 
[2, 0, 0, 6, 0]  	284	2 
[1, 0, 13, 0, 0]  	286	2 
[0, 3, 13, 0, 0]  	327	1 
[0, 2, 10, 2, 0]  	332	1 
[0, 0, 10, 3, 0]  	339	1 
[0, 0, 8, 4, 0]  	340	1 
[0, 4, 9, 2, 0]  	347	1 
[0, 2, 13, 1, 0]  	352	1 
[1, 0, 0, 8, 0]  	357	1 
[0, 0, 17, 0, 0]  	357	1  <--- 3
[0, 0, 15, 1, 0]  	358	1 
[0, 0, 5, 6, 0]  	363	1 
[0, 0, 1, 8, 0]  	365	1 
[0, 0, 0, 9, 0]  	387	1  <--- 4
[3, 5, 0, 0, 1]  	129	3 
[4, 0, 0, 4, 2]  	224	3 
[7, 0, 0, 1, 3]  	134	2 
[2, 1, 8, 0, 6]  	212	2 
[1, 1, 10, 1, 15]  	284	2 
[1, 4, 8, 1, 15]  	296	2 
[1, 3, 11, 0, 15]  	298	2 
[1, 0, 0, 7, 15]  	314	2 
[1, 0, 3, 6, 15]  	334	2 
[0, 4, 6, 2, 241]  	284	1 
[0, 0, 10, 2, 241]  	296	1 
[0, 0, 6, 4, 241]  	298	1 
[0, 0, 13, 1, 241]  	316	1 
[0, 0, 0, 8, 241]  	344	1 
[0, 0, 6, 2, 247]  	212	1 
[0, 0, 13, 0, 247]  	273	1 
[2, 6, 0, 0, 253]  	134	1 
[2, 0, 6, 0, 253]  	152	1 
[0, 6, 1, 0, 255]  	129	2 
[2, 0, 0, 3, 255]  	155	1 
[0, 0, 5, 5, 255]  	320	1 
------
The gap is between 16 and 240.
Lengths: 2 2 4 4 2 3.
For 346 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^5*w^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^11*w^1

For 199 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^2*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^8
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^4*w^1

For 52 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[13091639561277645140 + 4534579922515041316*2^64 + 13254177799323695872*2^128 + 573768143*2^192,8419590370035890704 + 892376468122194268*2^64 + 690645453066921870*2^128 + 298239836*2^192,8032105954772315612 + 6406443431467846574*2^64 + 2613120705167080992*2^128 + 931020264*2^192,6137129008104459520 + 4547360696826779567*2^64 + 8597200609342389930*2^128 + 247858417*2^192,12040529236792648752 + 8959458509750674107*2^64 + 4124372253248371803*2^128 + 2119836947*2^192,115865201077643264 + 14281051045544426204*2^64 + 7045765648681398449*2^128 + 1353848513*2^192,11228749259837221632 + 4534899722827882415*2^64 + 5232959052498209892*2^128 + 1491391312*2^192,16441448221318800192 + 13776158103410299123*2^64 + 17412943642721557035*2^128 + 1184784900*2^192;\
7898753428353200612 + 1320107599976555483*2^64 + 11799617410307551232*2^128 + 773449130*2^192,11276871364928597080 + 17694451357372153957*2^64 + 17585177410069539153*2^128 + 1322104655*2^192,11682678053973040128 + 13372943699717319251*2^64 + 6949611121154660645*2^128 + 364836010*2^192,3478150320184651520 + 11949491792381167839*2^64 + 14538648300763459009*2^128 + 1759940837*2^192,10091243284139497816 + 13023078503860004822*2^64 + 6094368303695536915*2^128 + 1570016795*2^192,8219431211289582400 + 7349438055043628207*2^64 + 7812973505063389550*2^128 + 1417459751*2^192,15515021011732433408 + 9869357801319698912*2^64 + 3710495881593503535*2^128 + 225329077*2^192,10508934952820605536 + 9963039002175704447*2^64 + 8118787984389681891*2^128 + 697886831*2^192;\
15577317567862428576 + 5777423497357110522*2^64 + 16466039973912405205*2^128 + 259922051*2^192,16876999545410993699 + 5655197055172911281*2^64 + 10536804539335948277*2^128 + 211021117*2^192,5045090911022292736 + 5053377050067489911*2^64 + 10825927931825882660*2^128 + 455725293*2^192,3572976416754452600 + 14896182258209842980*2^64 + 10679219328365798678*2^128 + 819466112*2^192,2901140857094616704 + 275851768371055234*2^64 + 984313269255423997*2^128 + 171402151*2^192,17773844952249590012 + 14352138888493148536*2^64 + 8735321213667975617*2^128 + 438914986*2^192,18002259699016627608 + 16744049019426005987*2^64 + 10765211693713772765*2^128 + 92419231*2^192,2096268427590871296 + 5855827332094156199*2^64 + 2501545643274043222*2^128 + 638458480*2^192;\
4226628291328581568 + 11981846861955351114*2^64 + 3989536399114562234*2^128 + 791349937*2^192,924780781368211684 + 13405775303264789776*2^64 + 6765979187587799822*2^128 + 109220226*2^192,3356554539488881408 + 13981897037834930823*2^64 + 820915730081744195*2^128 + 909654*2^192,1656365135767049696 + 10401597504659590953*2^64 + 15345189946271855246*2^128 + 484216412*2^192,2070573730378588976 + 17376633207742240063*2^64 + 8044632686434068534*2^128 + 545056007*2^192,328288969928298752 + 13220200409681233628*2^64 + 12370610360653648230*2^128 + 644839290*2^192,11920613374247415968 + 7799982305475666946*2^64 + 10873629472172061932*2^128 + 5549473*2^192,125006280714656552 + 2047560102671560943*2^64 + 14974498008793448899*2^128 + 1048862130*2^192;\
10633018720622925984 + 943447639959266159*2^64 + 7425604668762982585*2^128 + 1797993471*2^192,9282668992959719756 + 17945574810769959496*2^64 + 2453362311927249922*2^128 + 1518093226*2^192,6023858576114005248 + 7486569179384171081*2^64 + 12634398077922569476*2^128 + 1439378784*2^192,13183995147249788856 + 12547228945939323110*2^64 + 13466854641298326333*2^128 + 862295854*2^192,15182067387755425280 + 9047342032589185153*2^64 + 11910293055554875334*2^128 + 1532599098*2^192,1189706837592438244 + 5725863307110564429*2^64 + 7878960645264288788*2^128 + 1414817015*2^192,4154648042142700760 + 17997778795852335910*2^64 + 10623679003990911171*2^128 + 623859331*2^192,915837151695265536 + 5430176498515641584*2^64 + 10861070930945753595*2^128 + 2075065680*2^192;\
7691112442967588980 + 13820153008881669289*2^64 + 1760538677802387845*2^128 + 503903955*2^192,5125008928775890100 + 2630078519880107517*2^64 + 10435317134076317049*2^128 + 266116813*2^192,203601692033971712 + 5311766333383202081*2^64 + 12236635787382059181*2^128 + 946235056*2^192,1576200272868408128 + 2820259784186257059*2^64 + 6278212876160001232*2^128 + 322831098*2^192,17235167050000887756 + 15827021435655661160*2^64 + 10254563689172726724*2^128 + 316740155*2^192,14910107346884021616 + 17310065397905281815*2^64 + 2106856646174469942*2^128 + 1007189670*2^192,204281765680733184 + 851046274649479513*2^64 + 2122597596552235496*2^128 + 877557677*2^192,9994302142089505128 + 15538363910997209967*2^64 + 14472885625370578221*2^128 + 443425755*2^192;\
1196996821763588048 + 11067236636634122962*2^64 + 376829578640358965*2^128 + 227802135*2^192,6506873767022753408 + 257205159237139220*2^64 + 11121496045639534125*2^128 + 1229958132*2^192,18320687445918296208 + 18366367830955324749*2^64 + 13368743331824742845*2^128 + 1340699036*2^192,4668282391168243636 + 11429971547054431962*2^64 + 8592365394285014804*2^128 + 1013550945*2^192,4387087644340364096 + 2748891021747399652*2^64 + 16443338844796648935*2^128 + 571187019*2^192,10248488428255317760 + 5318585554208480542*2^64 + 2343626255258810312*2^128 + 419503901*2^192,8304461515889080832 + 10451554318349040599*2^64 + 5829010691642001618*2^128 + 986671088*2^192,8831157764219721216 + 18186564578536365399*2^64 + 16872336802633724710*2^128 + 864930728*2^192;\
11376010623861814528 + 4095991307173888139*2^64 + 5105690799293824906*2^128 + 716023921*2^192,7035039040419380056 + 16522029686368702846*2^64 + 7334696341955641846*2^128 + 222050424*2^192,10454374810538494368 + 1896767231689761610*2^64 + 16170716822348751883*2^128 + 616427518*2^192,9785311526776422984 + 56406014566435858*2^64 + 10262483581176660280*2^128 + 1210114170*2^192,8595409133294578048 + 2566208536608016084*2^64 + 5675137519786541302*2^128 + 550707230*2^192,9198703584180268552 + 14433016457417005988*2^64 + 16398335909565670653*2^128 + 79600299*2^192,16962562950386760632 + 4337517389892362184*2^64 + 16789829942297423022*2^128 + 720174131*2^192,17014235200535070720 + 13086100218706577462*2^64 + 8077729644058536691*2^128 + 1609698959*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 2625 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^6 + 6*x^5 - 24*x^3 - 64*x^2 - 128*x - 256
Its Newton polygon is: [5/3, 5/3, 5/3, 1, 1, 1/3, 1/3, 1/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 + 2*x^5 + 8*x^4 + 14*x^3 + 32*x^2 + 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 33

Please input coefficients below.
The polynomial is: 1*x^8*w^1 + 1*x^3*y^6 + 1*y^7*z^1 + 1*y^1*w^3 + 1*z^7
Total
