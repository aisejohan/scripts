/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 4, 0, 0, 0]  	15	5 
[1, 0, 3, 0, 0]  	15	3 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	3 
[3, 0, 2, 1, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[2, 0, 1, 3, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[2, 0, 0, 4, 0]  	26	4 
[1, 0, 2, 3, 0]  	26	4 
[1, 0, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 5, 0, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 2, 6, 0, 0]  	30	2 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	4 
[0, 3, 4, 0, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	5 
[2, 0, 2, 1, 2]  	19	5 
[0, 2, 3, 1, 3]  	23	3 
[1, 0, 2, 2, 4]  	21	6 
[0, 2, 5, 0, 4]  	26	2 
[0, 0, 4, 2, 249]  	26	1 
[0, 7, 0, 0, 252]  	21	5 
[0, 1, 5, 0, 253]  	23	1 
[0, 4, 0, 0, 254]  	12	3 
[0, 3, 0, 2, 254]  	19	2 
[0, 0, 5, 0, 254]  	20	2 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 5 and 248.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8201350084745523632 + 9171868290830066906*2^64 + 7401170314398200444*2^128 + 1706685471*2^192,3218865203743642992 + 12838239654317921858*2^64 + 6236932450542298343*2^128 + 2545938387*2^192,16505868213193649392 + 8032515709679674039*2^64 + 31541799083739120*2^128 + 1737941482*2^192,5919385820135243880 + 5695229631984043067*2^64 + 7518709642176141818*2^128 + 3481395015*2^192,14773592531400090224 + 14246627803683901549*2^64 + 13677735286504514433*2^128 + 3387197092*2^192,9182277814178187496 + 2137484139532630457*2^64 + 9303233628789233541*2^128 + 2753644851*2^192,2672645312770153640 + 16666258828752460564*2^64 + 16558367162025963826*2^128 + 2237848631*2^192,6241126360105081616 + 5518427502868454855*2^64 + 5879955182234905290*2^128 + 1721750763*2^192;\
10400405568956638672 + 17061221742310207204*2^64 + 7573652108244756409*2^128 + 1494955983*2^192,4689404626418006184 + 12722959891482058848*2^64 + 15076671260363951791*2^128 + 1368334345*2^192,13582714619899597920 + 15215535405374374453*2^64 + 3780843473425787912*2^128 + 1912943382*2^192,3771358559829187740 + 5347216101349688172*2^64 + 16891886876892900877*2^128 + 2118153187*2^192,16534258939317419144 + 10101034705204236007*2^64 + 2654171487646082162*2^128 + 1631743883*2^192,150457197320953084 + 8583926580813755329*2^64 + 1678672536892261786*2^128 + 1338519863*2^192,689880561128267164 + 14188520852603489265*2^64 + 6612113587407618975*2^128 + 1061557077*2^192,6706335202575649944 + 4813557803766159602*2^64 + 8167746153031670384*2^128 + 1099449967*2^192;\
9924169726984595364 + 16382868121383584694*2^64 + 16408244486220879185*2^128 + 563547085*2^192,8341779526504038712 + 5826744722248158353*2^64 + 18259732604728112953*2^128 + 499912515*2^192,8338153410012578320 + 3108113054516592758*2^64 + 10009563454343607681*2^128 + 502820185*2^192,10204586931247941820 + 13198875765552178020*2^64 + 1487964338149299184*2^128 + 563545465*2^192,8798804641647932120 + 13392534219167206776*2^64 + 13392357043952758508*2^128 + 1374741038*2^192,8711035305256159020 + 2531988747327929816*2^64 + 17670285993817248946*2^128 + 1365078798*2^192,16983417213179941172 + 17002445310217819212*2^64 + 4269671464934072116*2^128 + 1624596611*2^192,3589070748720594728 + 17131333091230433196*2^64 + 12572659930210814064*2^128 + 181512364*2^192;\
13881519579907355055 + 5096387540094258631*2^64 + 12854845923960044494*2^128 + 3126505461*2^192,16007499447502877560 + 15080901027305634031*2^64 + 14175305382269932614*2^128 + 4062833025*2^192,14670670111470198324 + 10152831343130079056*2^64 + 4890301016004432054*2^128 + 4136553649*2^192,16087344881866989854 + 3201972541349495634*2^64 + 5979217737845216608*2^128 + 3778878669*2^192,16142380155723890288 + 12836135232303196601*2^64 + 4052200154793689777*2^128 + 2568679936*2^192,15434505212741466882 + 14619406889086301543*2^64 + 7838533289709794012*2^128 + 1647017099*2^192,15289655102906686264 + 13551798576827885312*2^64 + 15764992953043722077*2^128 + 730421762*2^192,14398426570673827640 + 8125583084595796195*2^64 + 8141044482992458868*2^128 + 3699673871*2^192;\
17917170978541686815 + 15358878792242812296*2^64 + 1668903171497450720*2^128 + 2085662001*2^192,825991471184150960 + 4391372798663961277*2^64 + 2771535359971566433*2^128 + 904421376*2^192,18316331510665072692 + 5303299591479190008*2^64 + 13088194432890633205*2^128 + 371219869*2^192,6551640204687943422 + 1659196241817032386*2^64 + 15325559026232294148*2^128 + 936928020*2^192,10881446904387268400 + 13513839439830310484*2^64 + 7627825338385944327*2^128 + 3327072084*2^192,15505380365108659618 + 1126531191509312237*2^64 + 9691762983524136935*2^128 + 2831793538*2^192,12095559292239168384 + 5671216920100167597*2^64 + 11072133812278638649*2^128 + 3744461354*2^192,5018504664346234632 + 613186628432028095*2^64 + 3533588150918899*2^128 + 75920310*2^192;\
14964347044560372879 + 17345776019207813400*2^64 + 10860959832029271702*2^128 + 1114283100*2^192,14974300945939581248 + 11941112695943191977*2^64 + 3320032566360439362*2^128 + 3632025722*2^192,15524981357905869812 + 14530475041241977630*2^64 + 6472152617799795620*2^128 + 3189391179*2^192,17751452107822172098 + 4868917613424494247*2^64 + 9408456128085275851*2^128 + 230325865*2^192,17968632072981993296 + 16456804815063438900*2^64 + 13916433004781792264*2^128 + 2835387178*2^192,9103091230766773278 + 16968674144415638442*2^64 + 7365425552990917691*2^128 + 2966997986*2^192,17596927124228011428 + 18372155518577053796*2^64 + 13690183298805415785*2^128 + 2695339894*2^192,4165123037417029232 + 16579225986810785518*2^64 + 16386314289662037183*2^128 + 426964682*2^192;\
3034945152006556620 + 14332157481515035429*2^64 + 13034324431112657754*2^128 + 257024397*2^192,17765273860948036912 + 13417878738901545358*2^64 + 7333502172730028590*2^128 + 1657797648*2^192,10972266264816295944 + 17734798857406436085*2^64 + 9963587842640887658*2^128 + 938317992*2^192,5802560640240696288 + 3772891619266474513*2^64 + 18110910629259356976*2^128 + 4135347124*2^192,2447389127032296240 + 3217823468104834194*2^64 + 13011642168946473756*2^128 + 69307480*2^192,4144729430168021168 + 17118620782476607516*2^64 + 3950426559238996430*2^128 + 3082495936*2^192,5431647830887146912 + 16110542455882888514*2^64 + 10069650166676125423*2^128 + 1121767568*2^192,14282302315917224816 + 5440336614533605493*2^64 + 4781208628677962180*2^128 + 3127635162*2^192;\
10615027687884031792 + 12208967530237759378*2^64 + 15141663476796244413*2^128 + 1797210228*2^192,17183406011041716480 + 17612772630592641017*2^64 + 15251540613244256106*2^128 + 1093826831*2^192,12762591410004606016 + 5920195707470724360*2^64 + 3621631013761424032*2^128 + 995867920*2^192,3859786474915478880 + 13302488903266338711*2^64 + 4982642159746853687*2^128 + 683788855*2^192,8643033666391917312 + 1697647412377834008*2^64 + 15635013358257583155*2^128 + 1492295914*2^192,5473228027210607072 + 707562512360665389*2^64 + 9139965525224594277*2^128 + 1474385207*2^192,4786338554834343616 + 5681211648666167762*2^64 + 16111171344020835954*2^128 + 2089041205*2^192,1046697741442083216 + 9444731450424275380*2^64 + 15727192135330671623*2^128 + 160841750*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4340 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 32

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
Look at the ideal generated by: 
1*x^2*y^1 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^2*w^1
