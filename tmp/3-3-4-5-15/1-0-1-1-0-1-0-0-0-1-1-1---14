/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 39
[0, 2, 1, 0, 0]  	10	2 
[0, 2, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 1, 0, 2, 0]  	19	4 
[3, 1, 2, 0, 0]  	20	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 0, 5, 0, 0]  	20	2  <--- 3
[3, 0, 3, 0, 0]  	21	6 
[2, 0, 0, 3, 0]  	21	5 
[2, 1, 2, 1, 0]  	22	3 
[2, 0, 4, 0, 0]  	22	3 
[2, 0, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 0, 0, 5, 0]  	28	1 
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 10, 0, 0, 0]  	30	2  <--- 2
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 1, 1, 1, 1]  	18	6 
[1, 0, 3, 2, 1]  	25	2 
[1, 0, 2, 3, 1]  	26	2 
[1, 0, 1, 4, 1]  	27	3 
[1, 1, 2, 2, 3]  	24	4 
[1, 0, 4, 1, 254]  	24	3 
[2, 2, 0, 0, 255]  	12	2 
[2, 0, 0, 2, 255]  	16	2 
[2, 1, 2, 0, 255]  	17	2 
[2, 0, 3, 0, 255]  	18	3 
[0, 7, 0, 0, 255]  	21	3 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11411054570533489342 + 6081511920223457028*2^64 + 6068558075301896689*2^128 + 1654130384*2^192,15842671185387209096 + 14109536907311431925*2^64 + 6370637985616580434*2^128 + 841128261*2^192,16598292393573577324 + 17346593840932466960*2^64 + 3207943806335953535*2^128 + 1438161270*2^192,16014410664339498156 + 8032366572534895403*2^64 + 16280439470044979645*2^128 + 1930699862*2^192,2379263833059379984 + 9506750040608199697*2^64 + 6109656406857248317*2^128 + 944992144*2^192,2959576695464928536 + 14561438720087587481*2^64 + 18106581452601587232*2^128 + 1905463964*2^192,1606771977896500012 + 12312323034956726149*2^64 + 571546325514619376*2^128 + 2110162759*2^192,6589337856598607664 + 4954226934890153974*2^64 + 15085307219523347500*2^128 + 770601885*2^192;\
13873166660323767113 + 492802666148483984*2^64 + 13376571045567404277*2^128 + 579976134*2^192,18205350030740694880 + 16616418440352264071*2^64 + 3796217818708122458*2^128 + 1038651941*2^192,14343484693821649406 + 13508449858184222204*2^64 + 3169106756082655359*2^128 + 254474694*2^192,18417126987496907410 + 11914063240527979164*2^64 + 11116244928381781126*2^128 + 1049280981*2^192,8151996081395117096 + 5121649443031031421*2^64 + 11070850023284696437*2^128 + 571767535*2^192,2206271418854691508 + 14267889727414248533*2^64 + 561774426435276736*2^128 + 961516999*2^192,3369495538386826850 + 5797059652022635128*2^64 + 1184690760753661748*2^128 + 606709258*2^192,4613189091749043928 + 15862680163231797460*2^64 + 954156927395135830*2^128 + 565292396*2^192;\
13803288543495469510 + 10162063973066630326*2^64 + 17581123277377745909*2^128 + 131799607*2^192,8953798331010127992 + 15377401875393642706*2^64 + 4782572213493596864*2^128 + 2016154086*2^192,5277660985684831100 + 16577413329344038450*2^64 + 13809543845716127852*2^128 + 643331962*2^192,8425919742349491576 + 4122274992343558584*2^64 + 15299806387220776977*2^128 + 760682299*2^192,14075107908475742268 + 10007748579207920779*2^64 + 16102136545173090459*2^128 + 324417898*2^192,17133738257067952996 + 15666739958554946305*2^64 + 10044323658665340150*2^128 + 460904839*2^192,1747019655751090552 + 15750351857619807178*2^64 + 18145877967985956627*2^128 + 84456440*2^192,17868959940200049488 + 14525331132813728649*2^64 + 6187969262315903989*2^128 + 1003320033*2^192;\
1200223690979979400 + 1908553868943037472*2^64 + 9523677791780498685*2^128 + 207406141*2^192,4977040638341233240 + 8133390466559879032*2^64 + 2390704973684574063*2^128 + 502884495*2^192,6846937310401465288 + 3583638412506127584*2^64 + 9590052063181856352*2^128 + 204463425*2^192,15997956776447737616 + 8901880212764560662*2^64 + 5053589080542730387*2^128 + 881256607*2^192,4666569648479782640 + 2363157620341567533*2^64 + 15966631402343217092*2^128 + 86917831*2^192,2455363739601444128 + 14504295293290253207*2^64 + 13404303335970059024*2^128 + 1684735977*2^192,8139639877283141648 + 8329201503324374966*2^64 + 3093116452437601946*2^128 + 1457212820*2^192,6786487940331432696 + 8414686498792699149*2^64 + 17163776231897500957*2^128 + 1908679326*2^192;\
5811122606744541084 + 11166821539807949700*2^64 + 14746853778309196466*2^128 + 360566415*2^192,6896686019239611924 + 2121586573735507638*2^64 + 14171221296981425134*2^128 + 1808270216*2^192,3229256096059024636 + 6461912733411185587*2^64 + 13609325300621985300*2^128 + 1851688858*2^192,17491031778812324760 + 17938845047771760443*2^64 + 2430924024038719422*2^128 + 1535833649*2^192,10459734131247435072 + 1210572742455096539*2^64 + 4558203910994151237*2^128 + 1949434736*2^192,7590407094887179880 + 17474553095890533940*2^64 + 11466743303742638783*2^128 + 1496684564*2^192,1058131275355514972 + 4797475592950178329*2^64 + 18273995583054214790*2^128 + 1791656749*2^192,16442001631260901456 + 3697032106407795383*2^64 + 9937880283809690469*2^128 + 337970233*2^192;\
6387892990744451063 + 7930802076277745686*2^64 + 7634102606503076899*2^128 + 1397836534*2^192,13819982299983580768 + 12982460772906832860*2^64 + 1583926398867164316*2^128 + 1248028244*2^192,12158626845154313046 + 13815915492342170255*2^64 + 11370944604960485296*2^128 + 236118257*2^192,5320000490455328642 + 2227729244900959553*2^64 + 4944167390988651022*2^128 + 1889755241*2^192,12925459727369068832 + 4141253819857132970*2^64 + 8197618262277769260*2^128 + 237839712*2^192,2493120715987030720 + 13671883188332629815*2^64 + 13208663209782377949*2^128 + 1229049334*2^192,4960021895173704434 + 1658368281409614554*2^64 + 5754545236658915607*2^128 + 154626946*2^192,17150660371561106432 + 9602104523884422434*2^64 + 18390501383832282624*2^128 + 2001760756*2^192;\
17202108667105232963 + 6604885808291174263*2^64 + 3135660235767260233*2^128 + 760302868*2^192,6200075974314284540 + 18117344960243260937*2^64 + 12653489196409386849*2^128 + 1535861123*2^192,154672691785799222 + 8197948214327273112*2^64 + 13503018233443270546*2^128 + 1860947178*2^192,15307822741626360170 + 12303259116570116014*2^64 + 8071464636211281138*2^128 + 1814010813*2^192,18025206508042779276 + 5671287937645405956*2^64 + 10190684083413538143*2^128 + 1268300981*2^192,604964234733525036 + 12572601443090976661*2^64 + 1786369035319642984*2^128 + 930792264*2^192,18226391339565202034 + 8353859361894073248*2^64 + 34758091886416157*2^128 + 387448669*2^192,587498624906669232 + 17159508473285974352*2^64 + 4631590617737624375*2^128 + 1793569449*2^192;\
6025271170306996455 + 8561252380880741401*2^64 + 13823305183401200528*2^128 + 1611693130*2^192,5437848702441578048 + 11778032559606818836*2^64 + 5290681363512493477*2^128 + 1694763308*2^192,6323349656536209618 + 2143866708737085858*2^64 + 5875654078937714804*2^128 + 1388356152*2^192,8920977874402866262 + 873374985990181996*2^64 + 16162741971983868661*2^128 + 1071667135*2^192,18229806492482126356 + 17503008425589284780*2^64 + 14775563424202855773*2^128 + 165430383*2^192,8144949966181384372 + 2621660141050714327*2^64 + 17005043258136775764*2^128 + 1953057589*2^192,9895554069954634718 + 11205059506670842294*2^64 + 14579011671641559679*2^128 + 997843406*2^192,8660292967979944160 + 15667859070187068267*2^64 + 15107705073546990869*2^128 + 1509079201*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4075 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 36
