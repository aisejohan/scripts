/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 62
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	5 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	5 
[1, 3, 2, 0, 0]  	20	6 
[0, 5, 0, 1, 0]  	20	5 
[3, 4, 0, 0, 0]  	21	7 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[1, 0, 3, 2, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[1, 3, 1, 0, 1]  	16	4 
[1, 3, 0, 1, 1]  	17	4 
[1, 1, 2, 1, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	4 
[1, 0, 0, 4, 1]  	23	3 
[3, 1, 0, 0, 2]  	12	4 
[1, 0, 3, 1, 2]  	20	5 
[0, 4, 2, 0, 2]  	20	4 
[1, 1, 0, 3, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	5 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[1, 0, 2, 2, 3]  	21	6 
[0, 2, 1, 2, 252]  	20	3 
[0, 3, 2, 1, 252]  	22	3 
[0, 7, 0, 0, 253]  	21	5 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[1, 3, 0, 0, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	1 
[1, 1, 1, 1, 255]  	15	2 
[1, 0, 2, 1, 255]  	16	5 
[0, 2, 0, 2, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	5 
[0, 3, 2, 0, 255]  	17	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7002713840684971600 + 15000052608915094859*2^64 + 3989755716516715453*2^128 + 24438290*2^192,7069919274964997288 + 15989897004496961156*2^64 + 3932384359392340782*2^128 + 164302490*2^192,13701390413119929284 + 9547605540139916369*2^64 + 6177881522909440269*2^128 + 1109512231*2^192,8716577051788430640 + 9224687088622414785*2^64 + 4033689091943380864*2^128 + 99448841*2^192,7979923128565756456 + 11925469997188172350*2^64 + 12312102181271922643*2^128 + 879264799*2^192,2329639349967519568 + 17862384634076011178*2^64 + 9628964832652912384*2^128 + 1946917787*2^192,12025268579115299212 + 16274850217625897403*2^64 + 6435200488264994443*2^128 + 350464532*2^192,6460256459242814640 + 11508674054119223939*2^64 + 3928283315844779592*2^128 + 243925379*2^192;\
1276485024295877855 + 8793568289495325719*2^64 + 8492662197060595900*2^128 + 500371635*2^192,7200491785117579014 + 14310968464598234777*2^64 + 16264224650597794585*2^128 + 1343854317*2^192,3042708889598841315 + 14251002428147654199*2^64 + 7612829968647792293*2^128 + 372404805*2^192,6476565041515254410 + 2743161474924019197*2^64 + 840744368304194007*2^128 + 1846251801*2^192,8899737024368652414 + 61930833163897185*2^64 + 46120287656814648*2^128 + 1936438215*2^192,3175009347192941578 + 13403298945839392607*2^64 + 11663973846387333214*2^128 + 1800304774*2^192,12221746660870147017 + 2319698408092180975*2^64 + 17257757259517484274*2^128 + 1408307596*2^192,17996493115031021888 + 9555638462990694195*2^64 + 1103631917783407528*2^128 + 1740394414*2^192;\
6974949978996670214 + 2459574924728471178*2^64 + 6783475620924195201*2^128 + 617271755*2^192,8001053936061214572 + 14659629500717784520*2^64 + 12840459478013238007*2^128 + 655301830*2^192,17498232416722909396 + 6842508882146777464*2^64 + 7707661832707735822*2^128 + 188347954*2^192,1267086600219420626 + 5754081121523720615*2^64 + 14773067180722392943*2^128 + 479778881*2^192,17626290701290296528 + 2522523684359030673*2^64 + 4165916871391440197*2^128 + 815829203*2^192,7917909574132667164 + 3013496520755315744*2^64 + 8688170967485765129*2^128 + 550989120*2^192,17119487452498793162 + 12142185962998639650*2^64 + 7630355103751730213*2^128 + 595579555*2^192,8205536179823943672 + 5202316879663369304*2^64 + 6553443538496976484*2^128 + 138212803*2^192;\
0 + 0*2^64 + 0*2^128 + 251658240*2^192,0 + 0*2^64 + 0*2^128 + 587202560*2^192,0 + 0*2^64 + 0*2^128 + 83886080*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 492739183*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 150994944*2^192,0 + 0*2^64 + 0*2^128 + 905969664*2^192,0 + 0*2^64 + 0*2^128 + 100663296*2^192;\
704641042410659587 + 17216310161363906891*2^64 + 14116032459313933636*2^128 + 1053449519*2^192,15207918304853584310 + 9136252669138953478*2^64 + 12555478836687162363*2^128 + 1079504048*2^192,6217617416323335352 + 12090239021169702102*2^64 + 15193819251143585800*2^128 + 320617094*2^192,12358324406886825617 + 1791352571658610747*2^64 + 4448183563273171390*2^128 + 260343902*2^192,2086131680454355372 + 2718731006272172927*2^64 + 5389530900933159919*2^128 + 1987496781*2^192,9257706779031026610 + 5378134930152145327*2^64 + 13820850103996957386*2^128 + 1231647681*2^192,11894863459507399759 + 2486416976188277177*2^64 + 14670040973841297446*2^128 + 1973944504*2^192,3110957795447940752 + 18110075062804844258*2^64 + 1916892032728944161*2^128 + 1650861316*2^192;\
8703730735923863844 + 10468117024579354138*2^64 + 8330625853542760879*2^128 + 1297246738*2^192,16749524810865638196 + 14417361759336888879*2^64 + 16649135340387280058*2^128 + 216779797*2^192,1801798927136806502 + 10670208566969246383*2^64 + 3393513427708398425*2^128 + 1480402450*2^192,14768780243617116636 + 1606604507631019729*2^64 + 6560382396324541328*2^128 + 1467600582*2^192,847810941629687260 + 10637919622204113357*2^64 + 9353924723293604049*2^128 + 1347024738*2^192,3218466976709261980 + 17288154060357860639*2^64 + 17919318201756342314*2^128 + 2134082166*2^192,7540601029801296842 + 1427220598309352840*2^64 + 15837806513710657669*2^128 + 761613757*2^192,7731446520460806304 + 525377151840084248*2^64 + 17520114265672244791*2^128 + 1920534560*2^192;\
5159399078054158832 + 18379625941513906725*2^64 + 12748999375068959616*2^128 + 866188818*2^192,17829493656789553684 + 6558751490166645805*2^64 + 17274429070792752106*2^128 + 41973661*2^192,16808428591675537694 + 18402484311418611966*2^64 + 8154351425129778689*2^128 + 1124851919*2^192,16209708626463878848 + 2816590865526744064*2^64 + 5561368561653656750*2^128 + 42803635*2^192,4693191570619022476 + 7531475720361770477*2^64 + 445025523447106896*2^128 + 1969104936*2^192,13322778808409154224 + 12437670103719963062*2^64 + 17517648394753665835*2^128 + 1870314156*2^192,14019542859793895490 + 16931790920431541726*2^64 + 578574229472088525*2^128 + 1228997208*2^192,13793052128717851480 + 424926887632328932*2^64 + 14242504440219039597*2^128 + 804227346*2^192;\
8516235113302104241 + 7881336197187111060*2^64 + 15873235788065275844*2^128 + 1160961672*2^192,9951690071052304138 + 16701863977804195413*2^64 + 1536587338811776903*2^128 + 766724156*2^192,17885813435684871971 + 16903069346842789593*2^64 + 13269840485768063549*2^128 + 1122127232*2^192,17318060776079049956 + 10870396706364271254*2^64 + 2195787808504788683*2^128 + 1200719928*2^192,17672187410647727126 + 16502063651081051659*2^64 + 12275128027017148210*2^128 + 132248182*2^192,7416055913707267166 + 9030943209115098930*2^64 + 17288871360542847898*2^128 + 564590466*2^192,8325696073968118223 + 16647618003206253802*2^64 + 2449137790728959682*2^128 + 1208626887*2^192,39669728214885704 + 11782340018326509040*2^64 + 11741129443616142614*2^128 + 1019447187*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4176 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 4*x^6 - 4*x^5 + 16*x^3 + 64*x^2 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 4*x^3 + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 35

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
