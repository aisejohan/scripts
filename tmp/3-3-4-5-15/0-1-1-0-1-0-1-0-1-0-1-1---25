/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 51
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	4 
[2, 3, 0, 0, 0]  	15	5 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	6 
[1, 2, 0, 2, 0]  	19	4 
[1, 1, 2, 1, 0]  	19	4 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	5 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 1, 0, 3, 1]  	21	6 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 1, 0, 2, 2]  	16	5 
[1, 2, 2, 0, 2]  	17	5 
[1, 5, 0, 0, 2]  	18	3 
[0, 4, 2, 0, 3]  	20	4 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 0, 3, 3]  	24	4 
[0, 2, 1, 2, 253]  	20	3 
[0, 3, 2, 1, 253]  	22	3 
[2, 2, 0, 0, 254]  	12	3 
[1, 0, 2, 1, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	3 
[1, 0, 0, 3, 255]  	18	2 
[0, 6, 0, 0, 255]  	18	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[18367694267129284282 + 11696240384943812971*2^64 + 13848470408200365966*2^128 + 203720904*2^192,16270470873011233104 + 1521438740254701466*2^64 + 7574262803926792418*2^128 + 165689422*2^192,7280803043129870760 + 10070214576004568713*2^64 + 15483361056050102568*2^128 + 804693830*2^192,1559945442611814832 + 12153630900677379861*2^64 + 6492284089948485289*2^128 + 637836955*2^192,10449913901089504544 + 5496046220700560916*2^64 + 14323823573809995867*2^128 + 723899044*2^192,12804328494238920238 + 7830876713593565818*2^64 + 11294778690857203231*2^128 + 493735920*2^192,4869606899526142116 + 16218344693782138638*2^64 + 11344153666139078744*2^128 + 398973670*2^192,7323750993502272816 + 17579536026035411041*2^64 + 2044933706786764808*2^128 + 222305238*2^192;\
10863734886560965706 + 6274550610029703426*2^64 + 8558685001617886296*2^128 + 146822934*2^192,2454449326221929044 + 15818752442520703701*2^64 + 15185497145108096004*2^128 + 20986933*2^192,1728323200489781890 + 11359499381323398418*2^64 + 9669222268217844315*2^128 + 156939142*2^192,10427102308330986688 + 10519347153644497984*2^64 + 16183473086995643031*2^128 + 183456447*2^192,15378043494060405864 + 15709455663091682147*2^64 + 13556678382359827653*2^128 + 192787183*2^192,12946065360963343293 + 9125717052238243345*2^64 + 14654687790158199985*2^128 + 445572782*2^192,5907329372898862932 + 13359445801247669905*2^64 + 8393700732567290860*2^128 + 27935899*2^192,8273447521327587116 + 8534783168547471310*2^64 + 11651962986799322075*2^128 + 243104058*2^192;\
9699981179906273937 + 17395978118162496064*2^64 + 18270833484257161159*2^128 + 846827786*2^192,4624384894972489692 + 697931136203585615*2^64 + 7702815040143483848*2^128 + 102548770*2^192,5953725460215431344 + 14313419870381812848*2^64 + 9259489950576739207*2^128 + 751082850*2^192,5607795545575682802 + 12073750686590606159*2^64 + 6751781117771740417*2^128 + 877708558*2^192,9399219125697759460 + 2147202256329627011*2^64 + 14766523613416541646*2^128 + 884727053*2^192,16386119312329156944 + 8656445630195772352*2^64 + 5697361648395786670*2^128 + 628334758*2^192,1947303047110850480 + 6102378496398433504*2^64 + 6269776609432237518*2^128 + 879296293*2^192,16790949698822685840 + 9193597292019912895*2^64 + 6114213096610941915*2^128 + 520128142*2^192;\
0 + 0*2^64 + 0*2^128 + 394264576*2^192,0 + 0*2^64 + 0*2^128 + 297795584*2^192,0 + 0*2^64 + 0*2^128 + 197132288*2^192,2562675284646035458 + 10532762521251795415*2^64 + 12990733789987720539*2^128 + 401558839*2^192,0 + 0*2^64 + 0*2^128 + 373293056*2^192,0 + 0*2^64 + 0*2^128 + 352321536*2^192,0 + 0*2^64 + 0*2^128 + 373293056*2^192,0 + 0*2^64 + 0*2^128 + 29360128*2^192;\
6938035126015503697 + 16406525036551302904*2^64 + 4537295974380963019*2^128 + 560002503*2^192,3303662577017704836 + 7354824762392771382*2^64 + 11895417048035067111*2^128 + 94327409*2^192,4667714061367035180 + 15953308334713129270*2^64 + 9060209191158591225*2^128 + 482421467*2^192,11999381666191635686 + 114919049705044199*2^64 + 3064734481784682414*2^128 + 230192794*2^192,6416368027495100430 + 12726877929561977444*2^64 + 11203409938033176652*2^128 + 427075070*2^192,18116564935395983604 + 8738186073686545871*2^64 + 2971616550461398401*2^128 + 480320868*2^192,1859390711059544504 + 15910797923844709700*2^64 + 1284237740374450827*2^128 + 948851228*2^192,3009049498724927616 + 12299841818659006682*2^64 + 8301571100887045951*2^128 + 1070917926*2^192;\
11932274177515506307 + 14610817770856098006*2^64 + 10809849079010249764*2^128 + 26046140*2^192,8090598727799350290 + 12815930332709971116*2^64 + 18320419246035988383*2^128 + 1067459345*2^192,7262913699329514358 + 16830096000581089738*2^64 + 9281333439664934162*2^128 + 224852858*2^192,11215293029051890088 + 13899689308657151691*2^64 + 4413175278606872822*2^128 + 347768537*2^192,11321467720738810232 + 11950132924568540200*2^64 + 12549390247492782591*2^128 + 228605711*2^192,7882695217017154675 + 8066486877202537871*2^64 + 118823829255929556*2^128 + 466783669*2^192,6895657330082423292 + 9403434044287782048*2^64 + 286182942839414365*2^128 + 216913658*2^192,4183811006969311948 + 13434878376498094161*2^64 + 10476868421402268816*2^128 + 225635540*2^192;\
14785812069764342865 + 12264396855556586256*2^64 + 891357199867324974*2^128 + 470273496*2^192,5010231640235290252 + 2719785705199620524*2^64 + 100522668211094089*2^128 + 808475497*2^192,15801133751016861500 + 10197780715150089973*2^64 + 9032409588793459171*2^128 + 715090540*2^192,668647662693794940 + 5631494475253512580*2^64 + 4168627972777884019*2^128 + 703291306*2^192,18168675015235572808 + 8958947137538487347*2^64 + 1291429690616975350*2^128 + 750248144*2^192,11281380588515833957 + 17933269242862481699*2^64 + 14292480753529897167*2^128 + 500316009*2^192,13284693437050394540 + 7069849265644923906*2^64 + 14239837950773289153*2^128 + 432393301*2^192,5534167165616602688 + 17554927793530561582*2^64 + 3872816678686152639*2^128 + 185276839*2^192;\
9647706318537254321 + 13604471289347042811*2^64 + 11545013470093516989*2^128 + 916493423*2^192,13859964883377110544 + 2405703339036527010*2^64 + 2745290284015972024*2^128 + 116916916*2^192,4091786980013577152 + 7028035350066061623*2^64 + 11585862950359325154*2^128 + 322142436*2^192,9236751681583590986 + 10770132511720909742*2^64 + 5846125926759364700*2^128 + 884228223*2^192,6377998375388286564 + 14878888130693752473*2^64 + 6927122123149850903*2^128 + 1073490983*2^192,2606366331297327428 + 4258090610190947254*2^64 + 2098355332656894727*2^128 + 485437778*2^192,3426298390663334960 + 2840764156901194776*2^64 + 8520387053631358393*2^128 + 412738528*2^192,4575755632236272148 + 4623537316269112011*2^64 + 6805405796540868225*2^128 + 355854653*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4233 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 6*x^6 + 4*x^5 + 16*x^4 + 16*x^3 - 96*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 2; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*z^1*w^1 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
