/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 2, 2, 0, 0]  	17	6 
[1, 5, 0, 0, 0]  	18	6 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 1, 1, 2, 1]  	20	4 
[0, 3, 2, 1, 1]  	22	4 
[0, 2, 3, 1, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 3, 4, 0, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 3]  	16	6 
[1, 0, 2, 1, 253]  	16	5 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[1, 1, 1, 1, 255]  	15	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7039938875847895720 + 8219422543111390718*2^64 + 5924582101228829306*2^128 + 2349923672*2^192,12319938033118110816 + 14340451326222290668*2^64 + 14229734468405234629*2^128 + 2781441971*2^192,14433658330802615472 + 11774047262399038221*2^64 + 11264904588986784448*2^128 + 7605827182*2^192,5420237896891377776 + 6253645253012988821*2^64 + 9324099522965099060*2^128 + 1379776676*2^192,11461949626477020928 + 10678545695791009861*2^64 + 7150125984405227216*2^128 + 5392326651*2^192,14477961208631796656 + 4393904669075179964*2^64 + 170720007470681685*2^128 + 133781582*2^192,15977389496576979600 + 8860448991979287091*2^64 + 14367809343706369989*2^128 + 5727332814*2^192,4596677771714643456 + 12415184149493511982*2^64 + 941819338249910902*2^128 + 3359280115*2^192;\
15592678671035815516 + 12683310954863348353*2^64 + 6879369218872363588*2^128 + 6845356655*2^192,14171503237768356392 + 16955629802989112131*2^64 + 7270581264575543485*2^128 + 6324044779*2^192,4387467909842114880 + 153135902031085599*2^64 + 3211358983788497311*2^128 + 4781918025*2^192,17860908811769007328 + 6811892398505812686*2^64 + 7597917102257427526*2^128 + 3906453058*2^192,13876728892001167176 + 17209393402013455015*2^64 + 14201179747253412493*2^128 + 4509964856*2^192,14192929719720966032 + 11398180846339488740*2^64 + 1360979261487199269*2^128 + 121438261*2^192,7751301571956817912 + 15682985465069482275*2^64 + 9193847750035816911*2^128 + 2991390378*2^192,15495067096531269616 + 1193272777840630956*2^64 + 10334644071309305753*2^128 + 3986739780*2^192;\
1556731801097460466 + 6910707970580572732*2^64 + 11568624776456741037*2^128 + 1194383562*2^192,16389688624029578112 + 6730010018628743556*2^64 + 13239193421000642013*2^128 + 7391522955*2^192,4597013821297007260 + 12119713021235273188*2^64 + 13975607283792659133*2^128 + 476402745*2^192,2315397871177768372 + 12124956710710557522*2^64 + 14370598541115886833*2^128 + 1421533939*2^192,4503706698599330000 + 17758690939029802343*2^64 + 16156352563984855962*2^128 + 2554238703*2^192,6778851358298136804 + 16697932093693182758*2^64 + 11526899864165731596*2^128 + 87270048*2^192,1506264357792235284 + 11013110277800084648*2^64 + 1889385071514366407*2^128 + 1534211753*2^192,4470307684635052944 + 9808547569377735695*2^64 + 11909497048491996334*2^128 + 3534310038*2^192;\
3517830044425907249 + 8687486783230922794*2^64 + 12338268887024308814*2^128 + 1116841576*2^192,228346127564478608 + 3871934352003296684*2^64 + 2500289011611065119*2^128 + 2643265762*2^192,14719688384864777470 + 2335813541645373547*2^64 + 14515833449315559700*2^128 + 1402681611*2^192,3364408508512183834 + 14950289933646984050*2^64 + 6224573343913141434*2^128 + 8413680251*2^192,14676335020571551080 + 11315594866514393460*2^64 + 2170571563898763982*2^128 + 8119429248*2^192,1491106955884929394 + 2799467094480371311*2^64 + 16010727706478013282*2^128 + 231296348*2^192,13087681482768037258 + 12537974153367652306*2^64 + 3595760659048578483*2^128 + 3364533354*2^192,5775819551312518040 + 16286116146679817666*2^64 + 12553377163428547173*2^128 + 2202929346*2^192;\
14886883252542369412 + 17986105401901998302*2^64 + 24846518457569179*2^128 + 2034692775*2^192,9678954490547996848 + 10645135077912335499*2^64 + 6689985414213914296*2^128 + 5654827782*2^192,9310693866289918440 + 11160214458065571546*2^64 + 12251535223446294721*2^128 + 4460822539*2^192,5959186677977427288 + 4563544356786858770*2^64 + 15162294645480465057*2^128 + 3221312979*2^192,12337964419771100848 + 993593548006827514*2^64 + 7445557735310207406*2^128 + 172809299*2^192,6470645057143213208 + 17870221605943524941*2^64 + 6202035807447546250*2^128 + 3777137301*2^192,4754402331437898600 + 6902311057477016154*2^64 + 17105077006523099300*2^128 + 8048637928*2^192,11401303902846388896 + 9300888684193475961*2^64 + 16217138181561911282*2^128 + 803343369*2^192;\
2458565994798484159 + 6178561262129824664*2^64 + 12718376986035674013*2^128 + 5547825348*2^192,6580483285902166872 + 16192208227951571211*2^64 + 16151112189280822607*2^128 + 1511395978*2^192,1377827102501850426 + 917954237380997236*2^64 + 6066608449034560824*2^128 + 2167712810*2^192,4168634937980903934 + 5266231142192075087*2^64 + 14529512939680590719*2^128 + 2578396*2^192,14888244935022231664 + 17490796645940117972*2^64 + 3630011637454547842*2^128 + 8451036163*2^192,12067879776760613590 + 856567405089933913*2^64 + 4463519897707432092*2^128 + 4423313478*2^192,7374587092382903526 + 12821332329314119389*2^64 + 6867023675504023002*2^128 + 1305233633*2^192,10855967501111728408 + 3951025713878082470*2^64 + 4106416589538552285*2^128 + 5442175924*2^192;\
12907722276361228898 + 2417926715502593294*2^64 + 15766714491811822630*2^128 + 5947152682*2^192,16189452829864620232 + 2961446017246504498*2^64 + 5040672397459258291*2^128 + 3868230261*2^192,2043147625340147092 + 15033050008529073463*2^64 + 1439535072919828652*2^128 + 3916958471*2^192,10764157402144819820 + 11946445334429940196*2^64 + 13646913993996183739*2^128 + 7201467795*2^192,752987271834898360 + 11727870648403145351*2^64 + 11765708987914135071*2^128 + 917690872*2^192,12251627266554272396 + 483700470491597374*2^64 + 1906987628219330088*2^128 + 4121032109*2^192,357729309062771524 + 14959278564908751764*2^64 + 1233484848599036864*2^128 + 6545146721*2^192,17059260961149251328 + 2443037454279309238*2^64 + 10893379900977648000*2^128 + 6667001213*2^192;\
5312706076525890022 + 5167268858612461841*2^64 + 4760109869473262487*2^128 + 4482037177*2^192,2791424840522030696 + 12503427891053245002*2^64 + 15782536047306879081*2^128 + 4996130056*2^192,17579616278156180284 + 3649014960121829052*2^64 + 3985677835379775809*2^128 + 3609170310*2^192,11141066094174771092 + 11410474940336266088*2^64 + 14504698051016987188*2^128 + 4582494630*2^192,11389493444420847480 + 3143995821288601399*2^64 + 4929923453149209875*2^128 + 3580564004*2^192,13920939070058331124 + 14060359103805376093*2^64 + 15148401709815568111*2^128 + 2999453635*2^192,8845788916277668332 + 14995946951820644583*2^64 + 6497252461078798617*2^128 + 6563548887*2^192,16628161204107658656 + 18386849179862747512*2^64 + 1694370324988092892*2^128 + 6125455070*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4706 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30
