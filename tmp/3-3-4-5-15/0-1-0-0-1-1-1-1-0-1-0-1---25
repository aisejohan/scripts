/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 41
[2, 0, 1, 0, 0]  	10	4 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	5 
[1, 0, 0, 3, 0]  	18	4 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	4 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 2, 2, 1]  	21	6 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 2]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[1, 0, 1, 2, 254]  	17	5 
[1, 0, 1, 1, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 253.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[642682659124594216 + 5281239679425566138*2^64 + 3166181106136188734*2^128 + 7527561704*2^192,5354842954850131424 + 17352383704287315875*2^64 + 5661120979587372580*2^128 + 7806927931*2^192,4574310139681373760 + 11359453026483332655*2^64 + 13281603449386795090*2^128 + 1942473158*2^192,3027389261098159920 + 887577592999900605*2^64 + 13487092707556600938*2^128 + 3684114329*2^192,13776095932984964784 + 13485505454093055148*2^64 + 15770766365469669669*2^128 + 1016245670*2^192,5751401828710612704 + 5662917052317454789*2^64 + 12767999214987565803*2^128 + 4645944374*2^192,355319610046930640 + 7072030927903559029*2^64 + 8792409710697638700*2^128 + 8518882562*2^192,10806050767370549664 + 1301086253618921851*2^64 + 2958205912606095120*2^128 + 4308096992*2^192;\
1896144053967298368 + 17688762589916665073*2^64 + 8779359068824643658*2^128 + 479551568*2^192,12751170232117355072 + 3232624957458834617*2^64 + 5861104275210841483*2^128 + 219089028*2^192,12647988048846753936 + 13489951399834103417*2^64 + 12729453272567511335*2^128 + 3818319520*2^192,12988447011947982336 + 7134340488663161573*2^64 + 1317832904639880593*2^128 + 3176069603*2^192,6229093277043866768 + 9336390514762330815*2^64 + 18242739694718769250*2^128 + 1790801310*2^192,2046201732239637520 + 8160698080075237797*2^64 + 6795389471920000742*2^128 + 4136032455*2^192,336252749305277216 + 17427107628305339549*2^64 + 2715745025404743832*2^128 + 3415200128*2^192,10585653974839053024 + 15420837155047523069*2^64 + 1352842939238643018*2^128 + 915362999*2^192;\
6582757222791242866 + 5024318927675750229*2^64 + 12485973094653227204*2^128 + 3215260633*2^192,12001797460879781576 + 15022688004153265743*2^64 + 1492477256326650683*2^128 + 403677750*2^192,8880625388754105984 + 7614816400389918005*2^64 + 14142679460185281816*2^128 + 3010090185*2^192,6072907873084318276 + 17983904749395390795*2^64 + 5219256620681158142*2^128 + 804650444*2^192,15196758080836783580 + 18205996264239419153*2^64 + 5710907922574385572*2^128 + 7097404630*2^192,6462722927673510096 + 10079460477213151894*2^64 + 16754314181158291646*2^128 + 3355520449*2^192,13613215460134447756 + 5475899784965737482*2^64 + 12475278021593466485*2^128 + 907892672*2^192,9670101350093713688 + 13344587653601586934*2^64 + 12306947079991083296*2^128 + 5359546471*2^192;\
15411660467422931415 + 5586039165616991106*2^64 + 1627527983243308942*2^128 + 2561159768*2^192,6154965274797637820 + 12953092462183332744*2^64 + 5662663433658522313*2^128 + 1539518291*2^192,16701295902820208728 + 14998224844936443569*2^64 + 14183386479782051502*2^128 + 133956210*2^192,10808787456396553238 + 15572697055846791986*2^64 + 18199628960855790344*2^128 + 862674126*2^192,14810516762478624290 + 271701935567574548*2^64 + 13848518814890365726*2^128 + 2094470567*2^192,16338805594640520256 + 10597748693016850807*2^64 + 11795172444537676540*2^128 + 7824015408*2^192,17761036975942050018 + 16978901016073205921*2^64 + 10400387168261933839*2^128 + 2454677482*2^192,4746872773057032164 + 13626903509648040834*2^64 + 16207487470256788966*2^128 + 2550552075*2^192;\
8410554710670383519 + 9342632392719897953*2^64 + 6774994899160867141*2^128 + 6249099025*2^192,5876758636583282316 + 11467464645056623699*2^64 + 6102472185320885102*2^128 + 4175572510*2^192,10373815107838988728 + 12720170993892983834*2^64 + 10889222341587026291*2^128 + 5797974265*2^192,4768060798914479222 + 7937746322766583846*2^64 + 15187752668505279250*2^128 + 147747550*2^192,3022146951340810562 + 15060160586633335136*2^64 + 18115221212290449706*2^128 + 2494785480*2^192,12536056249658130880 + 5379636643534575622*2^64 + 10965570279558862951*2^128 + 1278218181*2^192,14605242475152085442 + 9806650307093799774*2^64 + 9476020362948685355*2^128 + 8278593401*2^192,7575468670738376132 + 5278345878899431102*2^64 + 13667501175601023019*2^128 + 6012745509*2^192;\
15411660467422931415 + 5586039165616991106*2^64 + 1627527983243308942*2^128 + 7862760024*2^192,6154965274797637820 + 12953092462183332744*2^64 + 5662663433658522313*2^128 + 3443732307*2^192,16701295902820208728 + 14998224844936443569*2^64 + 14183386479782051502*2^128 + 3455844978*2^192,8754129252937821190 + 5097573180670635129*2^64 + 6507479009501784108*2^128 + 3010523921*2^192,14810516762478624290 + 271701935567574548*2^64 + 13848518814890365726*2^128 + 2849445287*2^192,18393463798099252304 + 2626128494483456048*2^64 + 5040578322182131161*2^128 + 760441326*2^192,17761036975942050018 + 16978901016073205921*2^64 + 10400387168261933839*2^128 + 1984915434*2^192,4746872773057032164 + 13626903509648040834*2^64 + 16207487470256788966*2^128 + 1359369739*2^192;\
1712458609161972820 + 16549093627365006235*2^64 + 5037851419678253155*2^128 + 7445119345*2^192,7040965934175178592 + 18303608479543935928*2^64 + 11642776618652961041*2^128 + 4360248100*2^192,8061559347295192688 + 11560644728586043741*2^64 + 9041251017197051881*2^128 + 7774645975*2^192,10072769983564406312 + 10838110377166077029*2^64 + 11393552032565755658*2^128 + 5913127314*2^192,9519196746947417304 + 622720332154840859*2^64 + 16455186837353218822*2^128 + 2143775499*2^192,10290948421062029760 + 3605599908439373761*2^64 + 1140146994821522026*2^128 + 8426143626*2^192,9533259248126221208 + 5931335123625068758*2^64 + 5761601601928147026*2^128 + 4598989839*2^192,15138534538458517744 + 5051529751080882797*2^64 + 14205765269303583988*2^128 + 5294681193*2^192;\
11976461004540104764 + 7872810186749348308*2^64 + 5014028355605065952*2^128 + 4398627792*2^192,1690037425688748496 + 16208847857081329285*2^64 + 12037675656414704074*2^128 + 1668709604*2^192,13004756994013200752 + 2305869630065182484*2^64 + 17934368346640468321*2^128 + 4865457029*2^192,15348693700800381896 + 8798814793984913518*2^64 + 488515961678836690*2^128 + 7451783009*2^192,2564435351568196456 + 11844490053603194699*2^64 + 15177362268997070789*2^128 + 5394335625*2^192,1511511020392459728 + 5310596254494271971*2^64 + 1445873121987815279*2^128 + 6369561844*2^192,15352624570281554264 + 15586056205928421957*2^64 + 15140726128340440832*2^128 + 2495346992*2^192,17413337479033430992 + 17363852968535261*2^64 + 7773591939571681540*2^128 + 3481921816*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4608 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 - 8*x^5 + 32*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 2]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
