/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 39
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[2, 0, 1, 1, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[1, 5, 0, 0, 0]  	18	4 
[1, 0, 0, 3, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	3 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[3, 0, 4, 0, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 3, 0, 2]  	21	6 
[0, 0, 5, 1, 2]  	25	2 
[0, 4, 2, 0, 3]  	20	4 
[0, 3, 0, 3, 3]  	24	4 
[0, 2, 1, 2, 253]  	20	3 
[1, 0, 1, 1, 254]  	12	4 
[0, 5, 0, 0, 254]  	15	2 
[0, 0, 0, 5, 254]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17741227701164050392 + 7222246959286872965*2^64 + 17011210943587879704*2^128 + 14199320822*2^192,1705825579841744384 + 7766414408004866*2^64 + 25322128772724246*2^128 + 13996885901*2^192,14158505397331144144 + 16587791751048137252*2^64 + 6046065417100537249*2^128 + 10095036236*2^192,11931554035219603376 + 12862752806974723299*2^64 + 886655824664122679*2^128 + 7974598643*2^192,18173128794607737728 + 7702812141649383921*2^64 + 16988039358078948502*2^128 + 11801556015*2^192,6446987805811048000 + 12289227276770518685*2^64 + 8629010580884977080*2^128 + 15651138827*2^192,3235529292331456224 + 14813582481479396593*2^64 + 9919266715442815543*2^128 + 11692912538*2^192,12997225845420880000 + 14681893634262719242*2^64 + 7242675157817747857*2^128 + 4686122484*2^192;\
13367347897609117748 + 8648028979975597387*2^64 + 14779420398034455623*2^128 + 5804076989*2^192,2186949707036673792 + 5687824935662776361*2^64 + 921747437156652880*2^128 + 321777834*2^192,8037205880267056216 + 3836672205525252324*2^64 + 9924708848861687407*2^128 + 1150923782*2^192,3232935938565824616 + 5910961773503820585*2^64 + 9218889847647721291*2^128 + 1157264477*2^192,792730173540228224 + 7299391892473817671*2^64 + 13318573567916218158*2^128 + 443460838*2^192,16250429901557280800 + 5044087905329593982*2^64 + 2181198316647682540*2^128 + 8446718720*2^192,2554082955071155312 + 10421268744526556990*2^64 + 5127236929236897243*2^128 + 2627987880*2^192,11424003840507135872 + 17409272537235876941*2^64 + 14319181814616959080*2^128 + 6732535403*2^192;\
9911988757371940652 + 1338948773386411221*2^64 + 12452005136029754989*2^128 + 13571804677*2^192,3656888902657311680 + 8939456579848700860*2^64 + 16062962651971472536*2^128 + 9214707117*2^192,4405283725856159528 + 16220497976045048826*2^64 + 14107395455655682763*2^128 + 14900593209*2^192,18432718904831776664 + 10467015935395898802*2^64 + 10070507510007348024*2^128 + 15974852290*2^192,17133833717051835264 + 10499645213605005005*2^64 + 15638826303031188507*2^128 + 5263880978*2^192,6830777189189198048 + 13664831207523661618*2^64 + 17366006209682180992*2^128 + 849815597*2^192,2089630160689970448 + 17274176690074193487*2^64 + 3672342560533894685*2^128 + 16499803022*2^192,16432926458938567552 + 4977851002835955101*2^64 + 11036983175987893115*2^128 + 9163198270*2^192;\
4263275780996897140 + 1305317123763777724*2^64 + 13389134767908714119*2^128 + 2016722212*2^192,4372330117826143104 + 17044464947343511598*2^64 + 8706312083048759634*2^128 + 12941856431*2^192,13453027884667968408 + 4221678427240597553*2^64 + 11042325109551713445*2^128 + 10236788736*2^192,17940977768871564104 + 14153670882134288356*2^64 + 17339254726411779300*2^128 + 1093010809*2^192,853310763156937728 + 10284811088429634999*2^64 + 14683210706643470995*2^128 + 5806029918*2^192,6485897804375272640 + 14018280429595541427*2^64 + 5003997885203286733*2^128 + 12659694942*2^192,14707640239140083952 + 18156695492725736085*2^64 + 4505861750692226733*2^128 + 5124755184*2^192,9659600613191810944 + 3254659217163905141*2^64 + 16634613369013798039*2^128 + 7939519573*2^192;\
17460372864750087823 + 16730796950747592892*2^64 + 17671139266817458999*2^128 + 3304532195*2^192,7569064384737167216 + 14483675495002296036*2^64 + 15380201264314068756*2^128 + 4078023379*2^192,3958326531267275834 + 15962830403539454056*2^64 + 14597738853361772856*2^128 + 8581538397*2^192,6931112872498759334 + 4948679892012052874*2^64 + 11085823432643817723*2^128 + 13271863668*2^192,2714647848263410080 + 8952407840538183874*2^64 + 2883030069399354848*2^128 + 10980361350*2^192,14511822627808525960 + 9396899583532137830*2^64 + 1421993144398092557*2^128 + 2482413227*2^192,1203540583951064884 + 13893010011983044899*2^64 + 14587167032318785129*2^128 + 14808702185*2^192,6410503930393984672 + 5775411618075825214*2^64 + 9104194583882892758*2^128 + 2423793636*2^192;\
10218518967197217224 + 13805497128442607201*2^64 + 687793774109483109*2^128 + 15835242475*2^192,11611865326254377440 + 17868002890973429126*2^64 + 1456556811999662829*2^128 + 2196173384*2^192,16210394168777209264 + 402895424628157343*2^64 + 3195789780170065625*2^128 + 193643494*2^192,1801728960371021648 + 15048002155523948197*2^64 + 13288552537656732421*2^128 + 16342431952*2^192,4959507404268952704 + 8885578782621437874*2^64 + 7046653357479718065*2^128 + 14273196584*2^192,6351959092160954560 + 1265231264578002340*2^64 + 3957700310902016948*2^128 + 8114559071*2^192,7392051423767172448 + 16202070708439485682*2^64 + 14602199750034877053*2^128 + 8613004155*2^192,10528623277047191296 + 17058409399003721614*2^64 + 11824396815212886326*2^128 + 2314433619*2^192;\
4758035913855196142 + 14992776476501380268*2^64 + 12560190205055895037*2^128 + 17052717919*2^192,1081373693753034336 + 15490405659100720639*2^64 + 5812659118542809003*2^128 + 8307481332*2^192,8794713363657786324 + 3595234919206233831*2^64 + 16591691885686512926*2^128 + 16427355945*2^192,15756093284292262380 + 6462509441516876851*2^64 + 14345239902355165612*2^128 + 6757335660*2^192,5451986010337985600 + 14244818274150406507*2^64 + 3215692787066029400*2^128 + 3723212557*2^192,4450869151326954992 + 16309252037662549680*2^64 + 8906441594125204664*2^128 + 8695907466*2^192,10853892014659713832 + 8459493761727162646*2^64 + 3003825291689875954*2^128 + 13269177285*2^192,14596967483872274048 + 6008203285467439143*2^64 + 17538097095819950766*2^128 + 599643749*2^192;\
18006837429802031032 + 4132210075294710532*2^64 + 14836978225767372359*2^128 + 5553437992*2^192,5482409501530135168 + 9295143087656335143*2^64 + 11159173958361699578*2^128 + 10300060894*2^192,2398191029634342480 + 4375774114915346224*2^64 + 7567984062364426228*2^128 + 6502614291*2^192,1435712540277889840 + 13972663118679829825*2^64 + 5213846365956714601*2^128 + 4977169336*2^192,6013943231824061696 + 2214289443435795084*2^64 + 8580714435259487855*2^128 + 13049260701*2^192,17594451071841178944 + 3629411276606228355*2^64 + 17029970535269017696*2^128 + 10437146875*2^192,10622964708783689376 + 10239940096611570993*2^64 + 14204484830082037661*2^128 + 2758379453*2^192,4315363977605105984 + 16001469747951929169*2^64 + 14946252522286389132*2^128 + 7400453436*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 4185 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 + 4*x^5 - 8*x^4 + 16*x^3 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 + x^5 - 2*x^4 - 4*x^3 - 8*x^2 + 16*x + 64, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 25
