/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 52
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[1, 0, 3, 0, 0]  	15	3 
[1, 0, 0, 3, 0]  	18	4 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	3 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 1, 1]  	21	7 
[0, 1, 3, 2, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 3, 1, 0, 2]  	16	5 
[1, 1, 0, 2, 2]  	16	4 
[1, 3, 0, 1, 2]  	17	5 
[1, 2, 2, 0, 2]  	17	5 
[0, 7, 0, 0, 2]  	21	6 
[0, 3, 0, 3, 2]  	24	4 
[0, 1, 2, 3, 2]  	26	2 
[0, 1, 5, 0, 3]  	23	3 
[0, 4, 1, 1, 253]  	21	5 
[0, 1, 0, 4, 253]  	23	2 
[1, 0, 2, 1, 254]  	16	2 
[0, 4, 1, 0, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	2 
[0, 4, 0, 1, 254]  	17	3 
[0, 2, 2, 1, 254]  	19	2 
[0, 2, 4, 0, 254]  	22	2 
[0, 0, 4, 2, 254]  	26	1 
[1, 0, 1, 1, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	2 
[0, 1, 3, 1, 255]  	20	2 
[0, 0, 0, 4, 255]  	20	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5155227704130069032 + 2033818999335052905*2^64 + 17864243399615704715*2^128 + 1849252301*2^192,10183924533193335792 + 6679877669023980684*2^64 + 16942920657384204342*2^128 + 2765713941*2^192,5357237490885634960 + 16283465366375359705*2^64 + 5247413945042818481*2^128 + 4022852874*2^192,15660292052458950360 + 2482976692713024005*2^64 + 17378886808941468466*2^128 + 2992934250*2^192,10958062111113657880 + 14062954688123610571*2^64 + 13161381397166023524*2^128 + 2160646988*2^192,12128699825923161416 + 16779139938088030802*2^64 + 5378041039532394895*2^128 + 2838829823*2^192,8545559096898818192 + 8245001518853094914*2^64 + 11320850659922620928*2^128 + 1299237819*2^192,227890951002513280 + 17181910480912882401*2^64 + 5476971182967637326*2^128 + 2063061684*2^192;\
2672999265066880572 + 2095612150568762822*2^64 + 2849631712843967012*2^128 + 461214564*2^192,9325040695470584368 + 15307166867751623840*2^64 + 1324954055353888188*2^128 + 1877703873*2^192,6802307963134571688 + 3773824679859849901*2^64 + 10336208697482578774*2^128 + 214957192*2^192,10817580407345954568 + 16176140848758916427*2^64 + 7672534391632472550*2^128 + 997389136*2^192,16035311836914515880 + 7383172518435132790*2^64 + 8840365598299950484*2^128 + 297251802*2^192,528092875964401384 + 17410500563513796998*2^64 + 4223711656540887142*2^128 + 1455450870*2^192,15758039285546754192 + 5374847450250090303*2^64 + 2557231358945468831*2^128 + 989793442*2^192,603015424135254976 + 12119756882754883282*2^64 + 14698388829353667875*2^128 + 1325435251*2^192;\
16667326019408713082 + 17685749664986639566*2^64 + 1609940500560693997*2^128 + 1043883524*2^192,10082060089867632848 + 3718984144427760028*2^64 + 1617630476846589316*2^128 + 1919385640*2^192,6027140273125965472 + 14089996501428871912*2^64 + 8637619716457684578*2^128 + 4221204597*2^192,5708087451117443020 + 7519318098269692946*2^64 + 1245690983209993518*2^128 + 657544783*2^192,6274671542194508452 + 6258023679332951471*2^64 + 1709499426415633042*2^128 + 3784038497*2^192,17533165725211296980 + 12284771421548769312*2^64 + 12268817551033538418*2^128 + 1277129091*2^192,5394136916658658808 + 14699269508681033586*2^64 + 10957647308333065931*2^128 + 1599662192*2^192,3857239567949912960 + 10436489087365907685*2^64 + 4545192623288932521*2^128 + 4251563638*2^192;\
11608005549283009665 + 14637130005963895439*2^64 + 11617846757504416559*2^128 + 2274653108*2^192,5431714713758834840 + 13901876009108580888*2^64 + 7719184816346523445*2^128 + 3903643517*2^192,15120493711770875424 + 13997051238318436249*2^64 + 15197068246059786427*2^128 + 2832693376*2^192,3318560311955152982 + 10570152316226632713*2^64 + 16046144010780745426*2^128 + 352581927*2^192,17000279869560924890 + 17227010613396739724*2^64 + 3822653383514453593*2^128 + 2953054145*2^192,7860881620123516666 + 15159639927859970481*2^64 + 10459377866347129296*2^128 + 2025668564*2^192,8338986211150187524 + 15351012502164783266*2^64 + 1645415932192499060*2^128 + 2907606586*2^192,8975453954872797832 + 8028737261976977407*2^64 + 16267737707519466749*2^128 + 2952995011*2^192;\
2034248993047147320 + 1335896857124373640*2^64 + 3609327685409966031*2^128 + 1465357017*2^192,6767182689936563288 + 10614974428775469972*2^64 + 2831296791606004881*2^128 + 12498464*2^192,13971697146786634264 + 14690587747641710859*2^64 + 14759323107970463938*2^128 + 1337622821*2^192,16025687690279764800 + 266832384648483303*2^64 + 14402708615195794314*2^128 + 833060834*2^192,190792769143249728 + 1960030779687976228*2^64 + 2924804732578564797*2^128 + 2034821760*2^192,292350682734708688 + 1673701374464394394*2^64 + 3355731469241250068*2^128 + 2041311767*2^192,16849702651354590864 + 13462843112022106695*2^64 + 15522514913574467385*2^128 + 106941234*2^192,15507042183019037520 + 15427062122292115962*2^64 + 10861995444180619362*2^128 + 1987664966*2^192;\
6674773134028248457 + 17087660799560280133*2^64 + 13831773749308788065*2^128 + 1466142851*2^192,17140186135664923736 + 12091415308379539801*2^64 + 7996621733868453043*2^128 + 3550735386*2^192,4123710823234148896 + 12850583278512890929*2^64 + 4879987810886106626*2^128 + 2239651181*2^192,10721926168261592830 + 10265215824470266557*2^64 + 13712186461562564434*2^128 + 1314657258*2^192,17198060638517857258 + 5761993812545187435*2^64 + 7648859511520083719*2^128 + 3194556958*2^192,6444735788819801554 + 5501865677502227331*2^64 + 10674099579548472296*2^128 + 868401665*2^192,6069381015294294116 + 11804401204023544360*2^64 + 15187302625141856849*2^128 + 2615378069*2^192,17516977128601683400 + 12244937654613664246*2^64 + 5828437870785514662*2^128 + 4270378498*2^192;\
7982470775016180360 + 1341928722957467493*2^64 + 7960612390544883628*2^128 + 274072127*2^192,8302791002476722608 + 11989391609186966702*2^64 + 9182473687922364848*2^128 + 2144070826*2^192,2138753728885331792 + 13160704502906403829*2^64 + 11049361374023040026*2^128 + 3100289201*2^192,15133324382626137064 + 9891321859496736021*2^64 + 6240250584411436878*2^128 + 1079088141*2^192,18044322528309699248 + 150865243006138229*2^64 + 4889931474403985924*2^128 + 1524725158*2^192,14588464037448020824 + 1094958781384743336*2^64 + 2061172104082090846*2^128 + 256755327*2^192,70365294387787640 + 17508319335797300076*2^64 + 1720792681619359229*2^128 + 2751809175*2^192,15787504603929646496 + 4724690016113974959*2^64 + 1106303184262128944*2^128 + 675077748*2^192;\
16728843194581976568 + 15437829780439946305*2^64 + 18344540285658893367*2^128 + 1952111385*2^192,4834969388746727504 + 10899208299304672791*2^64 + 2384892098343935713*2^128 + 575433030*2^192,7680416592758781616 + 9002260711399561910*2^64 + 1479343332813488027*2^128 + 432242830*2^192,5664448516762156984 + 4872366100860329331*2^64 + 5143821744034072706*2^128 + 4183883240*2^192,7407442205396822824 + 15146488046475656145*2^64 + 15439826349920076500*2^128 + 1909334457*2^192,6905260360412273608 + 6893183845311649529*2^64 + 4751759808786924963*2^128 + 4209125834*2^192,13666333227184436512 + 4598863431306792238*2^64 + 16696909083971170830*2^128 + 2505823991*2^192,13023313130593752096 + 11877146146331472625*2^64 + 874508352872897899*2^128 + 4081523010*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4675 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 32
