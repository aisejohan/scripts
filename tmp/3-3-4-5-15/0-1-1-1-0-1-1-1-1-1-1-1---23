/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	8  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	5 
[0, 2, 1, 2, 0]  	20	3 
[1, 0, 1, 3, 0]  	22	3 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 0, 3, 1]  	18	5 
[0, 5, 1, 0, 1]  	19	4 
[0, 4, 2, 0, 1]  	20	4 
[1, 6, 0, 0, 1]  	21	6 
[1, 0, 2, 2, 1]  	21	5 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	6 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[0, 4, 0, 2, 3]  	22	4 
[0, 7, 0, 0, 253]  	21	5 
[0, 3, 2, 1, 253]  	22	3 
[2, 2, 0, 0, 254]  	12	5 
[1, 0, 2, 1, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 2, 2, 1, 255]  	19	3 
[0, 1, 3, 1, 255]  	20	3 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[13690975095860549026 + 11566103828054836577*2^64 + 9506112413444367779*2^128 + 825001530*2^192,8995531262864435546 + 16448082737452956352*2^64 + 7105221457704497711*2^128 + 172986216*2^192,3159954080356874942 + 8727346629913062220*2^64 + 10980228032614994789*2^128 + 492524001*2^192,7500716885551427006 + 3361943102314510647*2^64 + 13171789757757106891*2^128 + 107226008*2^192,9941737069458980066 + 15715864399553213714*2^64 + 673030592730167948*2^128 + 315813902*2^192,15395444885568428806 + 17927841586525073471*2^64 + 10894744455983659118*2^128 + 155455004*2^192,1585487804091568136 + 9144911325270936423*2^64 + 6579478190146570380*2^128 + 587776677*2^192,6351294552959454356 + 6135392882494217855*2^64 + 16272545301150450060*2^128 + 448687024*2^192;\
10102709019885299561 + 8470288121374560368*2^64 + 15570324257117267080*2^128 + 413233369*2^192,10354833222438470046 + 9473471264969563061*2^64 + 14724979307359567151*2^128 + 352177690*2^192,8640870832332056356 + 14188193731486936629*2^64 + 5733547169486531039*2^128 + 477021906*2^192,1404385115689986156 + 169402384152331721*2^64 + 17267542595519200829*2^128 + 19908750*2^192,17803499118668760388 + 12865629151609962488*2^64 + 7190152463733220758*2^128 + 481435977*2^192,12219220114709708204 + 16673285721078898196*2^64 + 13344134307673551151*2^128 + 232027742*2^192,13127154759201490356 + 17980890800495226143*2^64 + 7539805858895880083*2^128 + 367734542*2^192,6816165868795358080 + 6499370382852616386*2^64 + 8703495545249915336*2^128 + 485478039*2^192;\
16301802806221864133 + 5332092262165208604*2^64 + 11827628673795312827*2^128 + 56520973*2^192,15549923821521428772 + 4353702440301063876*2^64 + 8962776449321241973*2^128 + 911166690*2^192,6128571393362775454 + 9428850656379758951*2^64 + 12037792820315962605*2^128 + 924840131*2^192,6207385530797235110 + 17417177246453897821*2^64 + 17588719546500167815*2^128 + 950796862*2^192,3196886100239034036 + 15148572098018158648*2^64 + 1932476854788251874*2^128 + 866966818*2^192,10686965544649997306 + 4538026704495706500*2^64 + 8555748237834750298*2^128 + 819280250*2^192,6479976863744553048 + 4658058009444826084*2^64 + 14790793836345199691*2^128 + 496267506*2^192,2201809160814940804 + 1016075943412864504*2^64 + 2639724555077030641*2^128 + 66353417*2^192;\
9569461632842488202 + 6783870109625088801*2^64 + 3218650017349400938*2^128 + 540932389*2^192,2531042150717286054 + 15573759950304188067*2^64 + 1506179395210544366*2^128 + 626671365*2^192,17980151973997097560 + 6400208298262632866*2^64 + 7820070706763111545*2^128 + 922390329*2^192,14164469290943797712 + 17047327248395795541*2^64 + 13095939302944174131*2^128 + 981803024*2^192,12550457658862606236 + 17956994172818669222*2^64 + 14008042518058601479*2^128 + 390845875*2^192,15084238696779127806 + 4405620277430480387*2^64 + 15805076088618851594*2^128 + 691549131*2^192,10136114814027714708 + 14333302843541021724*2^64 + 1476140974995955534*2^128 + 444354561*2^192,5106984187031527956 + 16672729528842102281*2^64 + 15740276878118393455*2^128 + 1041199914*2^192;\
8595403815705704317 + 3156791065062271417*2^64 + 9796394759543772013*2^128 + 124104815*2^192,17899179059954670250 + 13036261859093232261*2^64 + 7216181126956556711*2^128 + 344236175*2^192,1274952934562832378 + 13630830341359650440*2^64 + 8969520794150488860*2^128 + 691224794*2^192,9456220842172348524 + 6879807257724090828*2^64 + 15714539902459336284*2^128 + 474863575*2^192,15621259500211819056 + 5982280448626335036*2^64 + 3095137727270456596*2^128 + 886037572*2^192,17571302766106272492 + 13160630483865022523*2^64 + 6217804389244563658*2^128 + 474404448*2^192,5080838808135695860 + 4109527637826017515*2^64 + 14003731385710492905*2^128 + 735813765*2^192,14078417461343301840 + 16187115377053198922*2^64 + 8970831075218772171*2^128 + 103894918*2^192;\
15153880597507395718 + 14949715035296789672*2^64 + 2255961719468207784*2^128 + 395430683*2^192,13522189327465252125 + 16715027375446759885*2^64 + 12796779728253015020*2^128 + 554859255*2^192,5995181767169196123 + 3866628168291908152*2^64 + 3911856766988793643*2^128 + 745744110*2^192,6935027460550741823 + 15029778664407378395*2^64 + 5577749915451929799*2^128 + 69620462*2^192,5661779873742436317 + 3466144858528538014*2^64 + 11046203849730154517*2^128 + 1034689776*2^192,911679427552124359 + 12546679238644815143*2^64 + 15854831196520619148*2^128 + 943951425*2^192,14429050021852690226 + 4272752995137948650*2^64 + 13781250747309462467*2^128 + 217104756*2^192,10691196236789839478 + 3130634751327692576*2^64 + 2291502117608363590*2^128 + 228688715*2^192;\
8314151975165752264 + 4791902719458945899*2^64 + 15245820225516899769*2^128 + 843285972*2^192,2033741227988416316 + 9698865929646579509*2^64 + 18106391597814353640*2^128 + 543828285*2^192,10001145545585324310 + 17393747422021269489*2^64 + 9773045124569440929*2^128 + 358878854*2^192,1278574328066684286 + 16698690748085967337*2^64 + 1472096892998639729*2^128 + 304088871*2^192,10174760772567283278 + 13546088335290095110*2^64 + 6891866820054640198*2^128 + 693002840*2^192,16831540387084322514 + 16718056815742673557*2^64 + 18407054232089517101*2^128 + 283965603*2^192,1828638552097668204 + 303381451576235411*2^64 + 11987622161957548625*2^128 + 299053463*2^192,12810485033214997112 + 7692657286556094179*2^64 + 13390835706881426924*2^128 + 282740781*2^192;\
12018009407677141826 + 14613988527427588579*2^64 + 16097413716478615605*2^128 + 532473258*2^192,17842350707671417118 + 9472245487046286074*2^64 + 16492268706799212304*2^128 + 383205952*2^192,14706641767907557486 + 16222026795285566904*2^64 + 4211093203907846310*2^128 + 15522102*2^192,17142551062916865638 + 7241979518690620783*2^64 + 15346690946482171397*2^128 + 87619096*2^192,17198098810694335778 + 14005011936788239839*2^64 + 9227578109545471186*2^128 + 127791393*2^192,17436190405764875718 + 9958178259034127891*2^64 + 15376493425851281372*2^128 + 283459518*2^192,5797376770471356444 + 10807209673613951942*2^64 + 15348442398250383080*2^128 + 397137344*2^192,2650114716299171056 + 5651506238129248932*2^64 + 16368797521149659200*2^128 + 488236562*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4120 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 28

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
Look at the ideal generated by: 
1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*y^1*z^2
