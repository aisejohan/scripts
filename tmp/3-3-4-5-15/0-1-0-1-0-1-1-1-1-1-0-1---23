/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	4 
[0, 0, 5, 1, 2]  	25	2 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[0, 3, 0, 2, 254]  	19	3 
[0, 3, 2, 1, 254]  	22	3 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 3 and 253.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8243872578165768200 + 9699898356604480901*2^64 + 7246578126193275226*2^128 + 1807133095*2^192,5916524509002894456 + 6570556678297340209*2^64 + 17873924667927823946*2^128 + 2342343775*2^192,11561168736883975064 + 18017252262846621494*2^64 + 5315542852977256641*2^128 + 6096582041*2^192,4250445477487514712 + 9278078183919573652*2^64 + 7209512599964839464*2^128 + 1460362278*2^192,8811814800320855448 + 7962620610202144475*2^64 + 5748395769994290966*2^128 + 7056259049*2^192,3401349051728543328 + 11834664026032524190*2^64 + 14325275505140116114*2^128 + 7046254630*2^192,11562137540039074536 + 8305255654009168362*2^64 + 11059080843593011025*2^128 + 7132883910*2^192,13286943877591594192 + 7222873133463791281*2^64 + 8580558409705346810*2^128 + 5674581169*2^192;\
15090094269345561640 + 10354554287159888089*2^64 + 15087783066049590307*2^128 + 2090701213*2^192,18391770495912010688 + 12308110778538841710*2^64 + 7198903990233572437*2^128 + 3236309844*2^192,2238807709021309968 + 9481464013556684228*2^64 + 13105698647536813921*2^128 + 3400403822*2^192,7241766766714331776 + 13897184442701749924*2^64 + 7986953533637949724*2^128 + 3681652383*2^192,18318423508049481296 + 5093907541676227687*2^64 + 11121114711521545490*2^128 + 2837084391*2^192,1655438710263202384 + 15405989555234210970*2^64 + 3303925791617312476*2^128 + 2692813316*2^192,11845492154303067168 + 5664664417761987702*2^64 + 14838732400672070689*2^128 + 526917763*2^192,6457967029151390336 + 4038747998047603704*2^64 + 5206537662554721350*2^128 + 3212728867*2^192;\
1408372964517325332 + 15781294348595034120*2^64 + 2540965090619580848*2^128 + 5680684917*2^192,10016444382476913260 + 2759565962087543017*2^64 + 16070228385649290460*2^128 + 7573095506*2^192,11772436394664045492 + 667279316423034853*2^64 + 3110818002627901328*2^128 + 5608759835*2^192,1156808442117992588 + 16902342789234541619*2^64 + 3633197142857023463*2^128 + 938163326*2^192,15835072905688762900 + 50300265127845423*2^64 + 3928515878404579203*2^128 + 8076671891*2^192,18319917637460718520 + 8846166374112583255*2^64 + 13063074873346539900*2^128 + 3008676749*2^192,6958157128759654740 + 10269977326154835151*2^64 + 9855323238511718179*2^128 + 6839518369*2^192,987671273711449128 + 4053404884811482374*2^64 + 15572626603287327625*2^128 + 6916393649*2^192;\
8418521509638985991 + 18102047956045009445*2^64 + 11029472890540985651*2^128 + 3828905180*2^192,13769712560834768571 + 17270185654837427430*2^64 + 8538955501028133425*2^128 + 7291652435*2^192,9128112338107189015 + 14645581874629265478*2^64 + 4786349255062172514*2^128 + 4191403217*2^192,7911813052471992007 + 12577526962258016168*2^64 + 5056547169881494632*2^128 + 3143579961*2^192,18222429618283678111 + 11138313852684269359*2^64 + 13327137173295388729*2^128 + 8334622664*2^192,7965490713580044268 + 14076632990038078992*2^64 + 1652541038917403931*2^128 + 1958243794*2^192,1595474776604559269 + 3104437578066880884*2^64 + 1531858265443111827*2^128 + 478088690*2^192,9096976975944447946 + 3589205608466074353*2^64 + 14400270631266970853*2^128 + 3449177177*2^192;\
7501308515291604581 + 11969217331983413452*2^64 + 9565011982379300979*2^128 + 2531729545*2^192,4939783767893580169 + 10662513953629268783*2^64 + 14864299393605211519*2^128 + 7186785587*2^192,15855352928104314565 + 13915871667522153094*2^64 + 17796437032497765777*2^128 + 2014701228*2^192,852132743106341981 + 13766458274591984748*2^64 + 12270022954742015200*2^128 + 4766562158*2^192,6159467634988950461 + 14505177208853295361*2^64 + 10944965612138154355*2^128 + 2963441897*2^192,2944981221094933852 + 11204574334999519351*2^64 + 6652111045301719716*2^128 + 7813723518*2^192,7874488387570823191 + 16891148576263522727*2^64 + 2047064931520966220*2^128 + 982056074*2^192,3809119613299469998 + 3507129103216592432*2^64 + 5686172657237837932*2^128 + 5490885267*2^192;\
15837419810530260419 + 18105569314004836465*2^64 + 7569348225832181929*2^128 + 4920024034*2^192,6208044997802156687 + 5340754983299976610*2^64 + 15995521109780302149*2^128 + 6604230751*2^192,13788457755567708059 + 15267206675826521868*2^64 + 17255790892760778742*2^128 + 5982838548*2^192,5404655298799147195 + 10519912011226023163*2^64 + 11881065188915452412*2^128 + 3951616568*2^192,10131495257089502755 + 16152677690142829835*2^64 + 1378061191206769030*2^128 + 8450040170*2^192,9546494479483357484 + 11630424553416902333*2^64 + 8617932722671493449*2^128 + 5448491842*2^192,206639741484162993 + 16776260656240364974*2^64 + 11756047563028948536*2^128 + 817101131*2^192,13124642203670143394 + 13995957209207411264*2^64 + 12496649113581272493*2^128 + 1596824974*2^192;\
2467220403469065860 + 16097093825936043796*2^64 + 4512994494028171174*2^128 + 6477190620*2^192,7884402308505146836 + 7813574415307163904*2^64 + 1662332510550235261*2^128 + 6482971648*2^192,8389828550284398308 + 9914479803863118630*2^64 + 3594179512012681724*2^128 + 3810101238*2^192,12982500806711705972 + 9266203944594498569*2^64 + 14902944604908077146*2^128 + 2227969975*2^192,12310700361461040324 + 611646808501307621*2^64 + 313682321366032118*2^128 + 315472900*2^192,6071154021300908544 + 14843224618040792432*2^64 + 11656435026287509725*2^128 + 4186195390*2^192,8506822682117535132 + 365973627318370326*2^64 + 4038292724221297549*2^128 + 795093507*2^192,2287451245096418904 + 14541340726234256652*2^64 + 10169447671374461785*2^128 + 1327123166*2^192;\
9221952856030416392 + 11693628656969648280*2^64 + 5689064764166174984*2^128 + 1632694743*2^192,14101550250914135576 + 7988682866874500881*2^64 + 3722703709194683609*2^128 + 2820432334*2^192,7429028741901416408 + 9404049405992428662*2^64 + 9631533193315695303*2^128 + 81615869*2^192,17453683219179780056 + 8079716807271175108*2^64 + 2866955399835404298*2^128 + 3392781744*2^192,2595799238974171032 + 1811649940330545857*2^64 + 18095303498082240860*2^128 + 3985081059*2^192,9796554396811553376 + 8965052977160485453*2^64 + 1324793680223351414*2^128 + 2617066463*2^192,819833548448922568 + 14968097814488359102*2^64 + 14898964320278212262*2^128 + 1401542062*2^192,13174868808936959792 + 15003600976875030855*2^64 + 17622900203795893409*2^128 + 819123663*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4359 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
Look at the ideal generated by: 
1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*y^1*z^2
