/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 43
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 1, 2, 0]  	17	2 
[3, 0, 0, 2, 0]  	19	5 
[2, 1, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	3 
[0, 6, 0, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 2, 0, 3, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 5, 0, 2, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	3 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	4 
[2, 1, 1, 1, 1]  	18	6 
[0, 5, 0, 1, 1]  	20	4 
[1, 6, 0, 0, 1]  	21	5 
[1, 3, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 2]  	26	2 
[0, 7, 0, 0, 254]  	21	2 
[0, 0, 4, 2, 254]  	26	1 
[2, 2, 0, 0, 255]  	12	1 
[2, 0, 0, 2, 255]  	16	1 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 4, 0, 2, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10031480558734813638 + 10244636197391258115*2^64 + 15189430828181944114*2^128 + 453655484*2^192,11806156803859073136 + 10183223095187797320*2^64 + 1028089211004971494*2^128 + 1275402922*2^192,15646637372185149816 + 5469209757570329643*2^64 + 14891906975062842314*2^128 + 1014707659*2^192,18228925195269956520 + 3075898704206881610*2^64 + 18405002219791802038*2^128 + 699420341*2^192,6110011170931021492 + 7777928730891118290*2^64 + 10584767396302010900*2^128 + 957391011*2^192,4126342571223497980 + 12891158913039777665*2^64 + 1663662842467621440*2^128 + 1579627170*2^192,17540159279630369260 + 9631097367354566081*2^64 + 16475079859964861034*2^128 + 500733485*2^192,8382772241684819808 + 11739469257175705883*2^64 + 11315978406450546379*2^128 + 1547410013*2^192;\
17116394347705125426 + 6136554839511304433*2^64 + 15209798006291279508*2^128 + 260552881*2^192,16230809126855619036 + 9433248612286382800*2^64 + 5058251428027004560*2^128 + 723302885*2^192,9620216153573504000 + 6305971058737548730*2^64 + 18035481669814450234*2^128 + 493138574*2^192,8189613878835296032 + 11457786593019035622*2^64 + 14702265717329497180*2^128 + 587950180*2^192,16911917990847831252 + 4149288027577215748*2^64 + 392439214824167691*2^128 + 431428134*2^192,11139520834116976392 + 11290021733783435841*2^64 + 11612613748366964892*2^128 + 68204658*2^192,17571776313099739180 + 4223191554470710092*2^64 + 3925936448513005118*2^128 + 775052780*2^192,201935260301669480 + 13016935221885119495*2^64 + 5152226126822773191*2^128 + 91089995*2^192;\
3686461963558327485 + 2367869627108633909*2^64 + 10346739159896134568*2^128 + 1292662543*2^192,3381283759858841300 + 212252078046980041*2^64 + 4887379215013401272*2^128 + 1998628368*2^192,10852216697202451552 + 16156179611028518836*2^64 + 3461574415755589281*2^128 + 1723639766*2^192,1958745860029725328 + 9769225099288206445*2^64 + 11440903391971402839*2^128 + 1032465774*2^192,14140330371248070946 + 7599996774192105565*2^64 + 18028874716917277127*2^128 + 509047203*2^192,5560869762889694358 + 15079776981908797027*2^64 + 9350830441443052194*2^128 + 1258330597*2^192,5086894179254519162 + 3099016313719904512*2^64 + 8442043976743569461*2^128 + 1727153092*2^192,2463757229736821088 + 16429663119831583421*2^64 + 2139919729804544088*2^128 + 1515550284*2^192;\
207727596825741854 + 3357123637177705567*2^64 + 1918973353620535942*2^128 + 339060845*2^192,833432925311066456 + 5849415877409455541*2^64 + 1538248577506848393*2^128 + 1850649663*2^192,2815684840854492104 + 1177176655803463171*2^64 + 1389178375416623255*2^128 + 550166425*2^192,12964612947264045984 + 12350539287594056134*2^64 + 17466038685883849949*2^128 + 1413824924*2^192,12561260834278251956 + 5659239701574377784*2^64 + 13502484115141513512*2^128 + 1121661100*2^192,827061585777221212 + 16017111379746663013*2^64 + 7448346702813360026*2^128 + 803183605*2^192,15601460244697936156 + 10254361453794443058*2^64 + 7611087183043746303*2^128 + 1403301604*2^192,14770273179878888664 + 9317467855754514526*2^64 + 16586886144798392746*2^128 + 625384255*2^192;\
11900717431177060046 + 13925151886060053259*2^64 + 14922035736113847673*2^128 + 1869276178*2^192,7710555196780835404 + 9571852424208892236*2^64 + 13968783801153823888*2^128 + 684736628*2^192,3790912476003617200 + 8666049561209361057*2^64 + 10685736005592908900*2^128 + 931064687*2^192,9748696092071526512 + 1072936868498044320*2^64 + 283090461520164867*2^128 + 939621307*2^192,13597380450447863024 + 17145693487041113508*2^64 + 10049462587481025612*2^128 + 825068337*2^192,3902835667933912152 + 16377405499898971679*2^64 + 13899594688607236316*2^128 + 1111046750*2^192,2564511797865188260 + 10652868325690519932*2^64 + 15295499723148665720*2^128 + 315430578*2^192,106487600595330960 + 2103243581592245224*2^64 + 9366979474152849346*2^128 + 2020185432*2^192;\
11900717431177060046 + 13925151886060053259*2^64 + 14922035736113847673*2^128 + 1709892626*2^192,7710555196780835404 + 9571852424208892236*2^64 + 13968783801153823888*2^128 + 332415092*2^192,3790912476003617200 + 8666049561209361057*2^64 + 10685736005592908900*2^128 + 1417603951*2^192,9748696092071526512 + 1072936868498044320*2^64 + 283090461520164867*2^128 + 243366843*2^192,8472029881155792108 + 14526912518247074294*2^64 + 2514739081215136149*2^128 + 1414459586*2^192,9028186237225983068 + 549442394983459277*2^64 + 2987574121163574164*2^128 + 1243075790*2^192,2564511797865188260 + 10652868325690519932*2^64 + 15295499723148665720*2^128 + 189601458*2^192,106487600595330960 + 2103243581592245224*2^64 + 9366979474152849346*2^128 + 1986631000*2^192;\
12352953855486188235 + 1195044933784292526*2^64 + 6299125188768470868*2^128 + 892431632*2^192,10245899465831810420 + 14548688403541482425*2^64 + 3743476863859824715*2^128 + 2134195183*2^192,3184096554888584292 + 4349581213121940741*2^64 + 6623711859824800976*2^128 + 1569021622*2^192,4591226286812387212 + 4334911791641137935*2^64 + 9663654693234747080*2^128 + 1639850184*2^192,11682104548341237270 + 11576451025022840152*2^64 + 11851893012234894018*2^128 + 369086103*2^192,13791052224230744170 + 292210864941916589*2^64 + 10217218982819400621*2^128 + 1463500804*2^192,2607476058673121714 + 9960875258268059741*2^64 + 2764814362488378012*2^128 + 783491288*2^192,12713321930541208496 + 13986617426229978547*2^64 + 12614618484683408712*2^128 + 2134150679*2^192;\
15724319435184890591 + 4806940128595188495*2^64 + 4043149945726451521*2^128 + 137939467*2^192,15367268705845544856 + 6090721326247347140*2^64 + 3715409592693920587*2^128 + 1834730210*2^192,12908367767760226668 + 14877999874889297502*2^64 + 7657494634269317691*2^128 + 1956074222*2^192,13805488064759183504 + 13426392578317564943*2^64 + 18103347508620272646*2^128 + 1882191670*2^192,3128584438002033270 + 850997504667046326*2^64 + 1005649066251658446*2^128 + 1655964360*2^192,13119100546302936314 + 9809784436693548967*2^64 + 11522330099652593399*2^128 + 1437610099*2^192,2083219697674209762 + 8377417995195305540*2^64 + 9533410370464654393*2^128 + 1598651533*2^192,12712315764528179552 + 11600866216729505724*2^64 + 71202339920236499*2^128 + 1472192751*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5091 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 4*x^5 - 16*x^3 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + 2*x^3 + 2*x^2 + 8*x + 16, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 33

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
