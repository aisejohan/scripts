/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 43
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	6 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	4 
[2, 3, 0, 0, 1]  	15	6 
[2, 0, 0, 2, 1]  	16	5 
[3, 0, 2, 0, 1]  	17	5 
[1, 0, 2, 2, 1]  	21	6 
[0, 4, 0, 2, 2]  	22	4 
[0, 0, 5, 1, 6]  	25	2 
[0, 0, 0, 5, 250]  	25	1 
[0, 7, 0, 0, 254]  	21	5 
[0, 3, 2, 1, 254]  	22	3 
[1, 0, 1, 1, 255]  	12	2 
[0, 5, 0, 0, 255]  	15	3 
------
The gap is between 7 and 249.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 8.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[2272042133891550436 + 6577418914562568907*2^64 + 13193628489969105952*2^128 + 85097373074*2^192,1050481968285862528 + 12853701142886702000*2^64 + 15976838816943634134*2^128 + 39608247050*2^192,5237346083869744944 + 16511320037250664690*2^64 + 1995176491808442231*2^128 + 79915021485*2^192,12445261855179453936 + 7607468528237640913*2^64 + 16488842095401794365*2^128 + 56503383629*2^192,14493541607488062264 + 3249861713403335752*2^64 + 9857773486990826139*2^128 + 54493874663*2^192,6948199703847703136 + 5421091376542004485*2^64 + 14945173418138935435*2^128 + 21967919871*2^192,13658516654226765144 + 11598103587386848539*2^64 + 17260280848841213360*2^128 + 98211754155*2^192,10166259086418865632 + 16071545061656372322*2^64 + 8360657706256859638*2^128 + 44936599123*2^192;\
119088801065130950 + 6061310053271263918*2^64 + 3052530233022788552*2^128 + 106139822182*2^192,1438964318501759552 + 7096255578699351060*2^64 + 15095239105080524222*2^128 + 37622895736*2^192,17056611141768063624 + 13804334186312539897*2^64 + 4896267324057017863*2^128 + 119204529200*2^192,12122114642301784872 + 1937208878575743976*2^64 + 2934311058475951050*2^128 + 97459398543*2^192,5973562478346780532 + 1212062868395617928*2^64 + 9461917504504955904*2^128 + 19846394698*2^192,9167240107037371536 + 15837086258773039719*2^64 + 17350023501953794216*2^128 + 104489840807*2^192,11865056026085236772 + 13084898713951451780*2^64 + 11716383944396953592*2^128 + 85204896858*2^192,10913650080685465680 + 8462194873404522814*2^64 + 8099214816752628397*2^128 + 21506578700*2^192;\
14935582945688013332 + 30021103646160239*2^64 + 18039879790713239779*2^128 + 114495170981*2^192,15918605217909547520 + 3657652597246937196*2^64 + 12680511375193687880*2^128 + 123858656170*2^192,13596916162095278832 + 15437650486106450308*2^64 + 7033481631831204023*2^128 + 11329112072*2^192,7223835000000302896 + 8689746042853375122*2^64 + 16192277092032524170*2^128 + 70041526132*2^192,2083604305151021912 + 3557513013872552615*2^64 + 5681941703726714443*2^128 + 76869902117*2^192,16270392382682878048 + 3106793708177421742*2^64 + 7456774188151644178*2^128 + 44556048062*2^192,8869406917760663288 + 9800726007571833289*2^64 + 10224301175815211864*2^128 + 89535500639*2^192,11561978285916342624 + 7770625862697984581*2^64 + 14451347505261670639*2^128 + 104681856427*2^192;\
8090962335851356233 + 5269614807613696314*2^64 + 11790804212255680039*2^128 + 30011987399*2^192,3281624912056712864 + 17825946346736025841*2^64 + 15928067666320518203*2^128 + 82062960880*2^192,7466983532063967372 + 12815508043796627419*2^64 + 15312205975860424860*2^128 + 56200579137*2^192,4373726230735673404 + 2659249531038600796*2^64 + 5186689408685012033*2^128 + 61948928941*2^192,2263219510792555822 + 5727921024082033502*2^64 + 12451970295687240439*2^128 + 74286100320*2^192,6902880387312119576 + 16975842682091447117*2^64 + 5596764823736436812*2^128 + 130155591793*2^192,17456030493935267638 + 3732959824158188136*2^64 + 11793109778057664332*2^128 + 2594034653*2^192,12113260968915679992 + 17921346199629455277*2^64 + 12215852875361049687*2^128 + 5716404046*2^192;\
3347727703562237849 + 7431483668019476515*2^64 + 7666394198124701156*2^128 + 25149470563*2^192,18403142598950207648 + 14195636145765927090*2^64 + 17188258053901202955*2^128 + 36649293774*2^192,3304221373462508108 + 13788275997680102354*2^64 + 3455965772445643227*2^128 + 120158813383*2^192,9552432375404814588 + 11630261372675573083*2^64 + 6621233788818066103*2^128 + 135469224846*2^192,18210602623971005838 + 15971941019226586116*2^64 + 15744698153257747820*2^128 + 63006657852*2^192,2439106525558605464 + 18325802576393821189*2^64 + 15565891222308595004*2^128 + 443657667*2^192,13789221995489731094 + 18292912121766585765*2^64 + 18183951979951406818*2^128 + 8207059015*2^192,4616625501721400440 + 10449631270113145930*2^64 + 6289708358885690363*2^128 + 61531365742*2^192;\
13267026548508721698 + 13241867175680115389*2^64 + 17333052441975647334*2^128 + 97015684471*2^192,17904948556732057664 + 7408141714312914534*2^64 + 888584809783642970*2^128 + 133912772976*2^192,14715394115597682392 + 12016277826414351978*2^64 + 13713410019362267660*2^128 + 121779870767*2^192,14327303341884307512 + 16994975374983057304*2^64 + 1136149528625577614*2^128 + 94053255710*2^192,1886916908457936700 + 7973305836255015439*2^64 + 10056391954108194398*2^128 + 38010162546*2^192,859588217550581680 + 5634561657030108919*2^64 + 9884178146727240304*2^128 + 38944141916*2^192,9164226499409690060 + 6858605942058710973*2^64 + 18391119973606562322*2^128 + 71935193010*2^192,13545990480673904496 + 1951665150988511375*2^64 + 7867561956286315734*2^128 + 73218597452*2^192;\
14923515251918099635 + 713847861657851638*2^64 + 6556011515394725253*2^128 + 84875651942*2^192,5582835444727891936 + 5997102444892352968*2^64 + 6503191546381354419*2^128 + 45590193871*2^192,9090285624153321924 + 6473429489825186926*2^64 + 10993560358198491221*2^128 + 8044997439*2^192,1396689366075988820 + 3722762313001483232*2^64 + 5887721743517329159*2^128 + 94769698762*2^192,11439471060163095770 + 14825948570923686400*2^64 + 10495059054803478468*2^128 + 14151635864*2^192,15037714887720065416 + 10571135928699297900*2^64 + 1035980449630194653*2^128 + 123752738530*2^192,14111674884943762098 + 6385935771901059305*2^64 + 2382391531086221971*2^128 + 29811970053*2^192,10923589762568416296 + 12202793715693469764*2^64 + 4805372411041324752*2^128 + 116259093192*2^192;\
1856892236708530840 + 16124041963595662563*2^64 + 13188111897573380004*2^128 + 72440656154*2^192,2083570337883426304 + 15919577766986970052*2^64 + 14227806396895248408*2^128 + 75950210392*2^192,16888572634873670944 + 11838478721753858018*2^64 + 10914431026899925376*2^128 + 67995667684*2^192,3231383531421572768 + 8642711019349617324*2^64 + 15304600940777381932*2^128 + 95870338018*2^192,12256995977505041872 + 9460507353567189578*2^64 + 9205633534809845296*2^128 + 71421412098*2^192,18017425445114968384 + 16656536166901779867*2^64 + 3787020353507219433*2^128 + 2423776606*2^192,15315020561001748624 + 13837042831636528096*2^64 + 448241969138446695*2^128 + 70916778641*2^192,14056538513033735488 + 6347545647598356950*2^64 + 7744214387807540312*2^128 + 43447771377*2^192]
/* 
This matrix times 2^(-7) should be the matrix of frobenius.
*/ 
B = 2^(-7) * A; 
/* Freed 5162 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 22
The valuation of subst(g,x,A) is: 15
