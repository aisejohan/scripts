/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 45
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	4 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[1, 0, 3, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	5 
[3, 0, 3, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 5, 0, 0]  	23	5 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 0, 0, 2, 1]  	16	5 
[0, 3, 0, 2, 2]  	19	3 
[0, 4, 2, 0, 2]  	20	3 
[1, 6, 0, 0, 2]  	21	6 
[0, 3, 2, 1, 2]  	22	3 
[0, 0, 5, 1, 3]  	25	2 
[0, 1, 1, 3, 252]  	22	2 
[0, 1, 0, 4, 252]  	23	2 
[0, 0, 0, 5, 253]  	25	1 
[0, 2, 2, 1, 254]  	19	1 
[0, 2, 1, 2, 254]  	20	1 
[0, 7, 0, 0, 254]  	21	4 
[2, 2, 0, 0, 255]  	12	3 
[1, 0, 2, 1, 255]  	16	3 
------
The gap is between 4 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12386809813361916580 + 13922774297893726328*2^64 + 3667800990752157449*2^128 + 2423199999*2^192,11241484857157850800 + 5387737985437145864*2^64 + 12961722215953975558*2^128 + 442397904*2^192,7568517846759325678 + 11947246055895068497*2^64 + 1710847074688810378*2^128 + 220955109*2^192,1213544987477725732 + 6562401993092033579*2^64 + 12073205771383546120*2^128 + 2662086544*2^192,5354209461753869582 + 12834996975112698782*2^64 + 7748642626733044831*2^128 + 677670683*2^192,3077747596931708844 + 6383825852181313509*2^64 + 9302753968611453826*2^128 + 2084843594*2^192,5158241982625842686 + 1809236055779195894*2^64 + 428904052380630146*2^128 + 3043392724*2^192,7811639029743760420 + 12238685987574112268*2^64 + 14084623801912052675*2^128 + 3313260122*2^192;\
14132716131880580960 + 18237650402773971227*2^64 + 1993489884550904480*2^128 + 1928154351*2^192,4693111985935059312 + 17357354177932747590*2^64 + 7945940030565637114*2^128 + 2423572437*2^192,12975815536391721540 + 14703231647648291704*2^64 + 11790414713299531933*2^128 + 2363540378*2^192,18192949141484744232 + 16082200092128417599*2^64 + 12454726160158391160*2^128 + 2206384602*2^192,17639111368761861164 + 13972377413491188776*2^64 + 6914640988274301212*2^128 + 3657695023*2^192,8177546448588269448 + 5723782353683164075*2^64 + 14711805248345501644*2^128 + 2959134824*2^192,3455110696548530996 + 8194869802129827292*2^64 + 14985389730872334472*2^128 + 2731241592*2^192,6967175838521024872 + 5266295539176921394*2^64 + 13530361981407966394*2^128 + 1642279246*2^192;\
15137510812154004836 + 4358430305374718936*2^64 + 570894087146110185*2^128 + 3576832623*2^192,11982898437112588696 + 1325108408649893703*2^64 + 4594163492391849447*2^128 + 1111866273*2^192,6094712846612854784 + 8546097337786649875*2^64 + 4943275244472202894*2^128 + 1357825927*2^192,10802413457802864088 + 17746560812472730848*2^64 + 17663702485383955551*2^128 + 1919763273*2^192,8976186578661468968 + 14810785666747183000*2^64 + 7309710039311357476*2^128 + 58731628*2^192,329398015392929832 + 16702389382546522581*2^64 + 17961801612491526157*2^128 + 3249513232*2^192,10437150393368420064 + 1895131231836011600*2^64 + 8707147374624622939*2^128 + 2332054225*2^192,12240585497506522288 + 9058921581665027788*2^64 + 6659439499506623655*2^128 + 4059714408*2^192;\
17158266192234445458 + 11780024513835941442*2^64 + 12250935462834676795*2^128 + 1525458492*2^192,8961720041510445096 + 18266548865736846997*2^64 + 9424211229675549084*2^128 + 2408485721*2^192,15650795604181514291 + 8705913890017558244*2^64 + 16044697264721187523*2^128 + 528079282*2^192,17441460778420541274 + 11538295714341773599*2^64 + 16901279456222589272*2^128 + 3431233105*2^192,1412911331999448883 + 9233773770412440760*2^64 + 1797458676526520522*2^128 + 2947084507*2^192,1856898914632353614 + 5795347360589501111*2^64 + 16219536328758803721*2^128 + 2526251610*2^192,9867428407428255235 + 15632475782662644096*2^64 + 3748502171834532183*2^128 + 3879939373*2^192,14839681264746044202 + 5664295610338471148*2^64 + 16382879670984051608*2^128 + 1602229961*2^192;\
7886901119271659692 + 7199387053836495331*2^64 + 17868197722676675392*2^128 + 2759492155*2^192,17602814897366975840 + 683732257239893066*2^64 + 18360536225552734081*2^128 + 3901480415*2^192,7864318127776436344 + 14757274121534532645*2^64 + 14596711882536247857*2^128 + 882749279*2^192,13602259446929096936 + 15985048666248001342*2^64 + 13086135231153006026*2^128 + 3928476710*2^192,5624158322828109032 + 6232027036435632284*2^64 + 16558743062431791215*2^128 + 3524603485*2^192,14100018210225976512 + 4729485541024996450*2^64 + 6963880788329872699*2^128 + 3064821091*2^192,13150785532810426096 + 17283779475762899629*2^64 + 14364428428945104465*2^128 + 2607368689*2^192,6758195636252702656 + 428239075535312607*2^64 + 10257807818171863321*2^128 + 734746282*2^192;\
4081475219027234784 + 14648548789566323902*2^64 + 9846939667556021898*2^128 + 2593248163*2^192,4375310319973196744 + 12077990401375948523*2^64 + 3892201776119601716*2^128 + 3037147042*2^192,10392981501474076336 + 6043603133123429064*2^64 + 17645758168527624705*2^128 + 859537176*2^192,15519495699843324256 + 9535071087269625831*2^64 + 17971429762078996343*2^128 + 4082677628*2^192,3156468303995374912 + 2978301103210197211*2^64 + 3776128125719837854*2^128 + 3369381727*2^192,5290449100885016824 + 17855630142476817909*2^64 + 9220792443551582915*2^128 + 3174003919*2^192,2026007095392021072 + 15504075085370535220*2^64 + 9291961663498630319*2^128 + 2826699013*2^192,15022907034913399408 + 5835231387367320445*2^64 + 11508702475634281027*2^128 + 688311172*2^192;\
2282523254492901928 + 4978620640294849860*2^64 + 17957364260638701734*2^128 + 1516479442*2^192,3875287039194634072 + 15462980154356350850*2^64 + 47592048382686582*2^128 + 1253745464*2^192,4115464266592552202 + 8488027591675626010*2^64 + 11224029079655642275*2^128 + 735430781*2^192,6192986757096094836 + 10224704439788000096*2^64 + 6550475706722289712*2^128 + 354202643*2^192,12823118163393567050 + 5814639753901082331*2^64 + 9198124149374287609*2^128 + 3712459618*2^192,3868356522713408836 + 5548794385980436408*2^64 + 1695567260562354382*2^128 + 3692305724*2^192,17705340797026363834 + 13527829994328319005*2^64 + 14197749567260784628*2^128 + 593263775*2^192,14982994516727222316 + 5053682896916421573*2^64 + 17149467485808419678*2^128 + 2165234883*2^192;\
9107575059044325548 + 17719329279624240139*2^64 + 9750957549837309508*2^128 + 343320256*2^192,1341417671182236160 + 17526127162316724002*2^64 + 4937772893644475459*2^128 + 704272830*2^192,5345183954605399694 + 4241028746113712190*2^64 + 5772430943283344968*2^128 + 1649688164*2^192,6407765327101406740 + 921339749906471637*2^64 + 12625949012078139732*2^128 + 643617874*2^192,10530484379855064206 + 7281477816149335261*2^64 + 3615783189128766287*2^128 + 1886855347*2^192,10877756518124961708 + 10911173247804369957*2^64 + 4156572779991214709*2^128 + 608836183*2^192,15800677534749815566 + 7674259486592302502*2^64 + 1423124001130690977*2^128 + 976864576*2^192,9928305304530541812 + 10882513925855428897*2^64 + 6788417079127609031*2^128 + 746384525*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4110 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 
Look at the ideal generated by: 
1*x^4 + 1*x^2*y^2 + 1*y^1*z^1*w^1
1*x^3*z^1 + 1*x^2*y^1*z^1 + 1*x^1*y^2*z^1 + 1*x^1*w^2 + 1*y^3*z^1
