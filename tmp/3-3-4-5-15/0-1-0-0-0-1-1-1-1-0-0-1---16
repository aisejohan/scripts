/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	3 
[1, 0, 3, 0, 0]  	15	2 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	4 
[3, 0, 2, 1, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[0, 5, 2, 0, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[2, 0, 1, 3, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[2, 0, 0, 4, 0]  	26	3 
[1, 0, 2, 3, 0]  	26	3 
[0, 2, 5, 0, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 4, 4, 0, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	4 
[0, 3, 4, 0, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[2, 0, 0, 2, 2]  	16	4 
[3, 0, 2, 0, 2]  	17	4 
[2, 0, 2, 1, 2]  	19	4 
[0, 5, 1, 0, 2]  	19	3 
[0, 4, 2, 0, 2]  	20	4 
[0, 3, 3, 1, 2]  	26	2 
[1, 0, 2, 2, 5]  	21	6 
[0, 2, 3, 1, 5]  	23	3 
[0, 7, 0, 0, 251]  	21	5 
[0, 1, 5, 0, 251]  	23	2 
[0, 3, 0, 2, 252]  	19	4 
[0, 0, 5, 0, 252]  	20	2 
[0, 4, 0, 0, 254]  	12	3 
[0, 0, 4, 2, 254]  	26	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 6 and 250.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17343110802551714508 + 4935428757187088427*2^64 + 2647338683114865773*2^128 + 1682451948*2^192,15799556983414619768 + 11761169369904330334*2^64 + 12255041209609230730*2^128 + 1089327765*2^192,4956854579570411816 + 9363657443156674232*2^64 + 5314919827361148409*2^128 + 3337983532*2^192,17241759045637651480 + 4347409382858265042*2^64 + 182535953866740002*2^128 + 513960123*2^192,17183740264430620704 + 12738710115390835767*2^64 + 18193795515018991472*2^128 + 2286773952*2^192,14085272186472550472 + 13938652643709892523*2^64 + 2193393647044478444*2^128 + 2149748082*2^192,875240140850263712 + 3053680337546350236*2^64 + 4693197311403389907*2^128 + 536315952*2^192,3554717052926925824 + 16522753596236145223*2^64 + 12092633521838235421*2^128 + 408418706*2^192;\
15152141524700878866 + 6511787935217480592*2^64 + 17074926401200360711*2^128 + 89449387*2^192,10416291496812886396 + 12917184817990184802*2^64 + 12722049582342713555*2^128 + 389479077*2^192,4322139064028275404 + 114005572599772945*2^64 + 18440001020694131059*2^128 + 198556662*2^192,11204118673916875260 + 13111317998266304716*2^64 + 8516583245203747269*2^128 + 2015127055*2^192,9030256501769171904 + 2333223739546648658*2^64 + 16933623676061116513*2^128 + 661589061*2^192,13405824513796271236 + 8884159140616883040*2^64 + 822237543462464503*2^128 + 1915301874*2^192,10361723912659749528 + 16279747626239023171*2^64 + 12940735449401684628*2^128 + 1395459109*2^192,17604720876678650448 + 6626639935395188940*2^64 + 3813749920928034576*2^128 + 1274590868*2^192;\
11651370552467357598 + 15008121351806235204*2^64 + 11120644601092262079*2^128 + 301258969*2^192,16489258055600452756 + 13481178505716010496*2^64 + 6031393637168156212*2^128 + 1657281937*2^192,17691161302846513460 + 16821379414599839351*2^64 + 7689450497275580910*2^128 + 988642345*2^192,4972385367085886372 + 13899036537834692653*2^64 + 8834073524035364101*2^128 + 61584263*2^192,14480046437851225152 + 4209897370285290991*2^64 + 8749282702922378995*2^128 + 763261240*2^192,12492176461503247100 + 10940042174770014625*2^64 + 4792914251463335821*2^128 + 1087885641*2^192,18325078024978800392 + 8466139647950670551*2^64 + 1584536941876741094*2^128 + 1377253123*2^192,16014099827752701728 + 10244134055158651149*2^64 + 10441886290856938095*2^128 + 249125216*2^192;\
1796980187098022841 + 3674572403092716065*2^64 + 17316793208941886846*2^128 + 716281210*2^192,13919588205378039330 + 6564794058762758093*2^64 + 15387802336586848157*2^128 + 3342891056*2^192,1725570573341262368 + 17947716667431615249*2^64 + 4300477836703170588*2^128 + 773713123*2^192,5219526553270468078 + 850859658944575634*2^64 + 1103136858500623580*2^128 + 3440335329*2^192,12121919690772292144 + 6050530893850947139*2^64 + 8090569918338957490*2^128 + 1460083633*2^192,7567112140984508498 + 7677170014615660627*2^64 + 16548863975057985906*2^128 + 3886610478*2^192,7570002415164349504 + 2733588928327946494*2^64 + 7302597691444838426*2^128 + 299738491*2^192,6085283224943943636 + 6794556780910247511*2^64 + 11183489111160118631*2^128 + 2749341616*2^192;\
5774247603947377969 + 1359434962865733287*2^64 + 15948758095147259681*2^128 + 916912282*2^192,14558860402167390210 + 1641574720698399938*2^64 + 9050097524980761256*2^128 + 377343490*2^192,1728727631422690896 + 17740176241890859763*2^64 + 8321450882055909411*2^128 + 777635543*2^192,2881945558206063414 + 16320884477971867469*2^64 + 18014405695279866253*2^128 + 585700977*2^192,12712198450517200256 + 1765549879867621257*2^64 + 2997060450095935842*2^128 + 927238357*2^192,5435903417060460346 + 7699960259720859642*2^64 + 4231596086579494683*2^128 + 1712329205*2^192,11328824054825161344 + 15668566298813843792*2^64 + 9755237766708248313*2^128 + 4235463817*2^192,5369283778502701524 + 10947253829627629539*2^64 + 10502716367894455343*2^128 + 3903575980*2^192;\
17415937803062992165 + 4429237134273118963*2^64 + 7008078906975822099*2^128 + 740025697*2^192,11549584629773092514 + 11713784582787565576*2^64 + 1106749199980011855*2^128 + 4247041919*2^192,6983917989229282344 + 15588240335015635620*2^64 + 14253353564418919071*2^128 + 1455510666*2^192,915765096051932366 + 17091312198907598002*2^64 + 973974342550456249*2^128 + 231349080*2^192,3856140188145093736 + 2785481979906792264*2^64 + 9123627266353837515*2^128 + 1147646567*2^192,10520958707828379130 + 15786174403679667103*2^64 + 10165109753603266981*2^128 + 896422101*2^192,16179557222526545280 + 18269246452830492296*2^64 + 399581638423923765*2^128 + 1667281672*2^192,12088245111565315508 + 14396743218749872752*2^64 + 15504809698393439744*2^128 + 1471554723*2^192;\
9118617625337476584 + 16580804970339428621*2^64 + 11333786526131625579*2^128 + 1107726027*2^192,17342916668935828584 + 6291659354232793127*2^64 + 4999073240914130888*2^128 + 4269751681*2^192,12964532177135251696 + 5388166484990841748*2^64 + 14844889644665685530*2^128 + 2608830620*2^192,5344134211722635832 + 8279163945164979281*2^64 + 651769844214447648*2^128 + 936531269*2^192,600422802191462224 + 7531255876311207249*2^64 + 244616943802249721*2^128 + 1181974523*2^192,16362842327616491832 + 16706399622546824071*2^64 + 4183157363268921050*2^128 + 2319961558*2^192,12152078337410405488 + 16314260343160909396*2^64 + 1224582552833319814*2^128 + 3729571686*2^192,12318751843596060752 + 7605280352682424068*2^64 + 14189103627834318217*2^128 + 3742006765*2^192;\
3966581358786839060 + 14922658312983506300*2^64 + 8792578985681473109*2^128 + 679938653*2^192,6750971864659139128 + 8307522044346398472*2^64 + 5163692597987055360*2^128 + 1621222687*2^192,11511050942688666392 + 3895611996722141253*2^64 + 16378704229390032678*2^128 + 662689016*2^192,13423889563308824760 + 10300341595106297887*2^64 + 3796648675921364042*2^128 + 1770902709*2^192,1873275579253540480 + 8038447080281177770*2^64 + 6233051079628261487*2^128 + 1183190339*2^192,1202816100205961032 + 5555298888094729218*2^64 + 12752544718920880077*2^128 + 702008745*2^192,2996277445873783664 + 9621063599290132498*2^64 + 18195564464688474832*2^128 + 1371182671*2^192,5904721749482439856 + 16082249560672797457*2^64 + 10849755800609674430*2^128 + 1518236890*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4302 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
Look at the ideal generated by: 
1*x^2*y^1 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^1*z^2
