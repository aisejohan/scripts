/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[3, 0, 3, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	3 
[1, 0, 5, 0, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 2, 1, 3, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 5, 1, 0, 1]  	19	4 
[1, 6, 0, 0, 1]  	21	6 
[0, 4, 0, 2, 1]  	22	3 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	7 
[2, 0, 0, 2, 2]  	16	6 
[0, 4, 2, 0, 4]  	20	4 
[0, 3, 0, 3, 4]  	24	4 
[0, 2, 1, 2, 252]  	20	3 
[2, 2, 0, 0, 254]  	12	6 
[1, 0, 2, 1, 254]  	16	3 
[0, 2, 2, 1, 255]  	19	1 
[0, 7, 0, 0, 255]  	21	2 
[0, 1, 1, 3, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4170191432120622594 + 8634209012103354708*2^64 + 6112655355062720808*2^128 + 874363753*2^192,6370302970081197512 + 17774625046306566612*2^64 + 7917316025030064782*2^128 + 883775618*2^192,17971997585214270024 + 13786559357207115532*2^64 + 1161546457219823322*2^128 + 755779196*2^192,3306927651237083008 + 4504448166655953159*2^64 + 18304617524978047080*2^128 + 1787912814*2^192,17552375452478655056 + 939150683469148969*2^64 + 13960611275704655074*2^128 + 1451115555*2^192,11607887584169687312 + 4796961142746192700*2^64 + 13641842296532735719*2^128 + 1357472467*2^192,3082745677111536384 + 13800632309562343849*2^64 + 14033514413886328011*2^128 + 617962563*2^192,2552219226883311744 + 3014125276253420992*2^64 + 11959763418086197496*2^128 + 1349226095*2^192;\
6518457053208410004 + 12584164762817859383*2^64 + 335990027252062638*2^128 + 1302703216*2^192,6261762013072960104 + 159390882006793128*2^64 + 2516377144708736602*2^128 + 1092010312*2^192,14685424926048942108 + 14009893350990476581*2^64 + 12237629146468794651*2^128 + 2119865313*2^192,5662089516330762304 + 11829671933441454235*2^64 + 15445863032784128718*2^128 + 643435084*2^192,5878189530985526204 + 12443534423811621742*2^64 + 14131444929258750509*2^128 + 2025123275*2^192,2893877219442774640 + 1277855906367738769*2^64 + 13345542585549462510*2^128 + 1560926587*2^192,8478111253597104320 + 13088451581460142846*2^64 + 12081210398885017644*2^128 + 443616911*2^192,10087477653929603728 + 8554858999114444228*2^64 + 12806074876330509905*2^128 + 1492786877*2^192;\
671634242942681244 + 1109852824579839416*2^64 + 16249257027826039714*2^128 + 1195614006*2^192,9355532127498154096 + 475927585920839786*2^64 + 16690445783345637154*2^128 + 353528283*2^192,12868314649251332124 + 2546296377420808206*2^64 + 12689876649416518192*2^128 + 902922767*2^192,12542609718318436804 + 15139587365079295272*2^64 + 12227168692043082764*2^128 + 42708711*2^192,4612024780959031404 + 3794159707963941544*2^64 + 16180209344566037755*2^128 + 1316021086*2^192,9839119320567020228 + 15218885430214488477*2^64 + 3241900391285337038*2^128 + 1685023124*2^192,17250650254601373624 + 8281198796103225412*2^64 + 10085890220906712052*2^128 + 794789954*2^192,2562930330418097056 + 5727901807875872729*2^64 + 3100943455892081339*2^128 + 283215665*2^192;\
7222845173867915607 + 11863408521496579976*2^64 + 7222121361244595531*2^128 + 740238302*2^192,3294712030182372920 + 6664005962528075478*2^64 + 10712163512515579773*2^128 + 1017113872*2^192,16306465870827506404 + 8738025915216622401*2^64 + 1001947522037893058*2^128 + 1606330256*2^192,9807352093243932816 + 16559328116750859843*2^64 + 2685595181339321289*2^128 + 419399642*2^192,3166071864146410456 + 66164938487007627*2^64 + 12902335499731689883*2^128 + 662009513*2^192,5451188397530871496 + 7325858077752947763*2^64 + 12420640473877139577*2^128 + 1015885249*2^192,17494372393550476204 + 11166771248525888517*2^64 + 16648865880079526752*2^128 + 1920750603*2^192,4375023755956784528 + 3886493078836837963*2^64 + 10863579664230184616*2^128 + 1147738553*2^192;\
323049631146317426 + 4313315921252233521*2^64 + 14787882955343603602*2^128 + 860481144*2^192,12298878675559937664 + 4645327313787722095*2^64 + 3986145888115975479*2^128 + 1245461772*2^192,16527254770667714080 + 18015662950887041074*2^64 + 16429323681363377607*2^128 + 1438687405*2^192,2726783277314358168 + 1822710378685846458*2^64 + 1289637840398067742*2^128 + 983230411*2^192,2534321721281607228 + 3918570493970752628*2^64 + 16819189307993019818*2^128 + 1112865042*2^192,15927367746582443900 + 1651500623179647071*2^64 + 3434387864652717625*2^128 + 1571861551*2^192,17304073368357128952 + 11610885748370061878*2^64 + 4968546790628409798*2^128 + 2030662313*2^192,15115408995530387952 + 4441291474066408898*2^64 + 10220257245248822036*2^128 + 2091418960*2^192;\
11892211937435035058 + 16820410625383348536*2^64 + 7057974471392249590*2^128 + 1270859330*2^192,5797043835287012720 + 17256523087007836762*2^64 + 8498007033614577100*2^128 + 613025358*2^192,304320607780618512 + 8203885590674099191*2^64 + 9510075906586884629*2^128 + 1501319123*2^192,9400583290602647072 + 6686376424246766259*2^64 + 762713701115674559*2^128 + 996613682*2^192,8857482279763270720 + 10841810712872120461*2^64 + 1859087183282551916*2^128 + 2116744954*2^192,9054748209698576252 + 1465288445992136079*2^64 + 939564749380041805*2^128 + 2099927517*2^192,12970063833752528784 + 2669558655083822322*2^64 + 16667337022474954713*2^128 + 1444292135*2^192,7849927032923706208 + 5370145987721731211*2^64 + 3789078638045896014*2^128 + 1745037434*2^192;\
14668588116738387843 + 16996736150785556884*2^64 + 17848450173633369388*2^128 + 1370882550*2^192,1754290811344684196 + 4121611172698351251*2^64 + 12730153087011232093*2^128 + 1702495397*2^192,13214288444675877260 + 6750660307899844315*2^64 + 11830844822415260269*2^128 + 334680181*2^192,14046250117358236148 + 17538094423416345061*2^64 + 15327413281383695712*2^128 + 892704432*2^192,5698912216537972888 + 13480467983916010272*2^64 + 16411845839788604626*2^128 + 652793555*2^192,3781599791946650632 + 17036373600559233354*2^64 + 5597529613551861113*2^128 + 511921719*2^192,6501176391171082764 + 10695468991404892278*2^64 + 14670360311331346967*2^128 + 970051643*2^192,15901760292287381312 + 15037832801694384544*2^64 + 4517860322586717767*2^128 + 1300081055*2^192;\
579689398458995542 + 7413611049905719371*2^64 + 11149671448008128309*2^128 + 1216952599*2^192,16229425672147614048 + 1249486411954115023*2^64 + 13803924223030602327*2^128 + 879171742*2^192,17341153148835852704 + 14898332314195897120*2^64 + 3040403056046542540*2^128 + 843073879*2^192,6777774537609352336 + 17840540182512283822*2^64 + 7829517832576310361*2^128 + 1027043926*2^192,9667484679055038408 + 9898885322155674940*2^64 + 10749041875496313869*2^128 + 422306014*2^192,11806531405241102000 + 18383703899969422837*2^64 + 875133910379691456*2^128 + 401203965*2^192,1968866630238144600 + 17501766009209738619*2^64 + 8545984776500551277*2^128 + 115568699*2^192,10438998229211979560 + 5631966280440901646*2^64 + 15639815730969346666*2^128 + 230072364*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4185 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 31

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
Look at the ideal generated by: 
1*x^3 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^1*z^2
