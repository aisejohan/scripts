/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 43
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 1, 2, 0]  	17	2 
[2, 4, 0, 0, 0]  	18	5 
[3, 2, 0, 1, 0]  	20	4 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[2, 2, 0, 2, 0]  	22	4 
[1, 3, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	4 
[3, 0, 0, 3, 0]  	24	4 
[1, 7, 0, 0, 0]  	24	4 
[1, 2, 0, 3, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	4 
[2, 3, 0, 0, 1]  	15	5 
[3, 0, 0, 2, 1]  	19	4 
[2, 1, 0, 2, 1]  	19	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[2, 1, 1, 1, 2]  	18	6 
[2, 0, 0, 3, 2]  	21	6 
[0, 1, 5, 0, 2]  	23	3 
[1, 6, 0, 0, 3]  	21	5 
[1, 1, 0, 3, 253]  	21	4 
[1, 5, 0, 0, 254]  	18	3 
[0, 7, 0, 0, 254]  	21	1 
[0, 1, 0, 4, 254]  	23	2 
[0, 4, 0, 0, 255]  	12	1 
[0, 2, 0, 2, 255]  	16	1 
[0, 0, 0, 4, 255]  	20	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[16637161659091037556 + 3974043580697023324*2^64 + 14984686290524186146*2^128 + 1321701720*2^192,8166935156032561764 + 8337283766879023124*2^64 + 10276279113822027243*2^128 + 305456762*2^192,14876595574760749016 + 10268840844907548922*2^64 + 17235554032662998060*2^128 + 1113790104*2^192,4298201501312553992 + 18131476212453203466*2^64 + 2374265240821583289*2^128 + 684679352*2^192,12319635195334973720 + 12173964577219708507*2^64 + 6417277772876008555*2^128 + 1072964714*2^192,7898136433516676660 + 15850926866754567078*2^64 + 11810037499943522921*2^128 + 1690725601*2^192,15419485445306214664 + 4061281101972430583*2^64 + 16499534562086572253*2^128 + 977537451*2^192,754878961375900216 + 7969178730488395926*2^64 + 6510587560383004388*2^128 + 1116008475*2^192;\
13633282956294478572 + 6735864899933263874*2^64 + 18014478767578070365*2^128 + 309364280*2^192,4827346343605183688 + 4671874883491012390*2^64 + 3168090023517965831*2^128 + 188306804*2^192,1219502590880896144 + 7149213169798562094*2^64 + 9347549637981643799*2^128 + 1013914048*2^192,12288954130827524436 + 3879824238390213981*2^64 + 66524840533743689*2^128 + 530288615*2^192,13625914172063978544 + 1401265418480911807*2^64 + 2985939046437080719*2^128 + 866177489*2^192,5819396643187303564 + 3817068131453328482*2^64 + 2992401730048509287*2^128 + 528631167*2^192,2311830483117490616 + 12452507292767644530*2^64 + 3110925621332007145*2^128 + 716305605*2^192,14276632499817672312 + 12631468295424750041*2^64 + 7162012760269051769*2^128 + 258683631*2^192;\
16536650014059415874 + 9723848341100529127*2^64 + 7709007523739608742*2^128 + 422164784*2^192,18047645403389252848 + 16308947634184555974*2^64 + 5494310482401504183*2^128 + 696632220*2^192,17143429629263783584 + 10147571738492617216*2^64 + 1829080986716061593*2^128 + 1887172926*2^192,8201738755227558118 + 10706228540754800688*2^64 + 7979767456476247058*2^128 + 1157958339*2^192,8730461813182668820 + 9433497443175045354*2^64 + 14521813669343474268*2^128 + 1137968433*2^192,6833126192785699102 + 14643733767579380062*2^64 + 12737437593396273570*2^128 + 2072502013*2^192,2669415983191971340 + 5221430716200615766*2^64 + 15409045240931106704*2^128 + 1994079690*2^192,17937559057315820588 + 10636882904155260287*2^64 + 2967043787128617462*2^128 + 1760102959*2^192;\
7572006896921108644 + 14351632667480720041*2^64 + 697164221828392874*2^128 + 1219216700*2^192,31226235113232896 + 11215108327928523882*2^64 + 17543886455044023600*2^128 + 1215024464*2^192,16732789775325198144 + 3203060478905128869*2^64 + 2673618916464749777*2^128 + 191189520*2^192,10772013243933368204 + 14651557352732896889*2^64 + 14784703333810770110*2^128 + 102817635*2^192,9420892809600625024 + 2932584517064828152*2^64 + 12430241068984498876*2^128 + 1578823226*2^192,18288740934410416828 + 1542152678534071147*2^64 + 18072584181552977906*2^128 + 1207879918*2^192,8959390996915081920 + 1145823524699406358*2^64 + 5273033942992150196*2^128 + 1001961531*2^192,15606722758462958528 + 3875279665255285238*2^64 + 12556566989825087339*2^128 + 467423332*2^192;\
176681932096321627 + 5053943934366070602*2^64 + 10454418314889702938*2^128 + 562634282*2^192,4912756028994906294 + 8990323778870495892*2^64 + 2885824351050559612*2^128 + 1006481585*2^192,10079535704698872588 + 1704298663520437349*2^64 + 17102105775849476408*2^128 + 160699742*2^192,11476540551486537320 + 13597412526497852653*2^64 + 5113259371968279863*2^128 + 917339496*2^192,8619625799642293304 + 8892661446986184526*2^64 + 2518119341137675808*2^128 + 1579640098*2^192,1525870083502832018 + 10280170472463557564*2^64 + 6616208221338165104*2^128 + 1334795950*2^192,18206504511684723202 + 7611094943687681481*2^64 + 1455598452198173929*2^128 + 1710764887*2^192,5035894415560925540 + 3824064598164913062*2^64 + 15521412440451614423*2^128 + 782420118*2^192;\
9907654925944361428 + 12912394308301269383*2^64 + 3207893745625687648*2^128 + 561674686*2^192,14769268167025910496 + 7736706931377609251*2^64 + 13304746002635420152*2^128 + 1076442283*2^192,14880663066267425656 + 4997658582699406685*2^64 + 16029295516316748094*2^128 + 559765778*2^192,4005363637158312324 + 12068936451013538265*2^64 + 2218662786244442358*2^128 + 662240329*2^192,1467488266867060928 + 16117790156822635094*2^64 + 2905780323435691716*2^128 + 743662345*2^192,1325203979389226856 + 3630342226465763925*2^64 + 11358141672835280319*2^128 + 531427436*2^192,15206828793533757016 + 18001042805074117677*2^64 + 6672190722274864271*2^128 + 287209633*2^192,6783790407160631120 + 17414064782254222870*2^64 + 6786911324047578445*2^128 + 597050388*2^192;\
13767115765330159666 + 8013255099270643174*2^64 + 14490947157797824836*2^128 + 2101328537*2^192,15384158835774610596 + 11177342595119237052*2^64 + 7720554320938706712*2^128 + 530816110*2^192,13049387890242178040 + 13541570229425530084*2^64 + 14860997455028230810*2^128 + 173748862*2^192,432498219672799976 + 6489622298700626548*2^64 + 5682591578501448566*2^128 + 574121394*2^192,8651534053611865448 + 8678014205571383280*2^64 + 3127125077011752077*2^128 + 1766932564*2^192,8864589025912860384 + 16571230676333241210*2^64 + 7246169843853484694*2^128 + 1463578287*2^192,17328127211065176608 + 215074606693947672*2^64 + 2721001336817645236*2^128 + 220686153*2^192,17257100001456684176 + 16480807349325519809*2^64 + 1733805762417181674*2^128 + 861303560*2^192;\
4329370161098766679 + 5506938070533273494*2^64 + 4475931281008457477*2^128 + 58304809*2^192,4392648279424051826 + 5535241665074730048*2^64 + 16981567610397115031*2^128 + 828092549*2^192,6271892444635478764 + 16865134949762091606*2^64 + 3432306699780953927*2^128 + 264717213*2^192,3757719448076894332 + 10987643785588655311*2^64 + 247074154073865601*2^128 + 484982650*2^192,2353911659966803616 + 16676104493597370081*2^64 + 3193853530488642011*2^128 + 28844085*2^192,12328049061067300794 + 10071035972218597173*2^64 + 17015540039028854749*2^128 + 271676690*2^192,6127274447065483770 + 14870926312869495537*2^64 + 6955351566263788245*2^128 + 2056479181*2^192,16951793061605310932 + 4670082979388561636*2^64 + 3110895957890788122*2^128 + 161042788*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5048 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 35
