/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 51
[2, 0, 1, 0, 0]  	10	4 
[2, 0, 0, 1, 0]  	11	5 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	8 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	7 
[1, 3, 1, 0, 1]  	16	5 
[1, 1, 0, 2, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	5 
[1, 2, 2, 0, 1]  	17	5 
[0, 7, 0, 0, 1]  	21	6 
[0, 1, 5, 0, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	6 
[1, 0, 2, 2, 2]  	21	7 
[0, 4, 1, 1, 253]  	21	4 
[0, 5, 0, 0, 254]  	15	4 
[1, 3, 0, 0, 255]  	12	5 
[0, 4, 0, 0, 255]  	12	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 1, 1, 2, 255]  	17	2 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8058077013207527996 + 6839342532305333493*2^64 + 11411256174390363420*2^128 + 3794705118*2^192,13590080446756023472 + 7782465641931998858*2^64 + 14815067881523055821*2^128 + 3902911399*2^192,7790962261535320064 + 4591273667965724801*2^64 + 4607053532598916030*2^128 + 1742436616*2^192,7906307619570091512 + 9420678328107197799*2^64 + 14059406914611958230*2^128 + 942173630*2^192,17208396414892819336 + 14548914384440384341*2^64 + 15652512876220898326*2^128 + 3154676386*2^192,3600570252478302848 + 306526811625353812*2^64 + 9267043524272800027*2^128 + 3222264645*2^192,1680845839637887616 + 12928887601904272473*2^64 + 4281949563739857194*2^128 + 1757612036*2^192,8540686885412871712 + 12325027815026328258*2^64 + 13029635249038291127*2^128 + 4110663494*2^192;\
4779411534972061813 + 4190984038950195960*2^64 + 12936425493759537755*2^128 + 1528326395*2^192,14570060406177462760 + 1130917084488530188*2^64 + 8005420141680801684*2^128 + 2547821666*2^192,10330535739036404004 + 11410727523861534893*2^64 + 15642401047956496626*2^128 + 870738794*2^192,14237832914612999314 + 9969031893231088881*2^64 + 5741981700207134918*2^128 + 423454816*2^192,3859125894625568858 + 2820512061761324978*2^64 + 9622410675318220270*2^128 + 4024285437*2^192,5305639370095701396 + 3433427508762828947*2^64 + 1216308774406477969*2^128 + 394684095*2^192,14159434420079901428 + 10908600229169898818*2^64 + 219213020524760269*2^128 + 1709356050*2^192,12016313484018619592 + 2684235422028882373*2^64 + 150334751026748935*2^128 + 323220696*2^192;\
388643284443065185 + 3675245339828011867*2^64 + 18363596524856832582*2^128 + 3224865873*2^192,5150325679253102744 + 4163359807961045743*2^64 + 2830185551300632284*2^128 + 2007546238*2^192,15451626630295519076 + 14799943272715148666*2^64 + 12017922089942814136*2^128 + 4173833012*2^192,16549451038467766634 + 1880077284397395449*2^64 + 4078200791454362778*2^128 + 1846665120*2^192,13760312537821111858 + 17453273130508002967*2^64 + 290597808801485448*2^128 + 3679841215*2^192,13186905990693772868 + 10350575429452406767*2^64 + 9829815251152418362*2^128 + 198413821*2^192,14643312955464879476 + 8921687994407442300*2^64 + 15325428738215442123*2^128 + 2627478491*2^192,16072892473830445720 + 5263405674348156391*2^64 + 9838725151680909880*2^128 + 3821685085*2^192;\
3897095589049534443 + 2754600615688605093*2^64 + 3584332175308356986*2^128 + 107338022*2^192,776734539658789950 + 17217367152967691631*2^64 + 159131627618640458*2^128 + 1410108239*2^192,12579265854081724454 + 2800184653426502143*2^64 + 16887311270700344388*2^128 + 462686558*2^192,2381814931422345668 + 4154188905961290159*2^64 + 9780105219655472165*2^128 + 2589578184*2^192,2153578240700185732 + 15084691959506553316*2^64 + 5381441044157038017*2^128 + 3456484309*2^192,6314825006329638600 + 5908687805158941677*2^64 + 2789843211781919553*2^128 + 3681814285*2^192,3882774009964918828 + 6766975978632086219*2^64 + 6279146933315171788*2^128 + 1924932809*2^192,4132610814692252380 + 8805295084867067778*2^64 + 11507557689478255371*2^128 + 3349386813*2^192;\
13956417304555881749 + 4055438768570739436*2^64 + 15569398744287807391*2^128 + 13431114*2^192,932005899491060230 + 5091194939720849943*2^64 + 7507505633453824504*2^128 + 3038022043*2^192,3181370433159559974 + 13253448050286140969*2^64 + 10454695673226948433*2^128 + 238866430*2^192,3535285801613478280 + 18157029601447646108*2^64 + 11901378982117256317*2^128 + 2258580438*2^192,11051786364877468296 + 6448435932908780331*2^64 + 10579189306639037327*2^128 + 4001592730*2^192,14035717777455696512 + 7566057182144286933*2^64 + 2886204277744722209*2^128 + 2871448779*2^192,7219106332916502884 + 10327906005862120511*2^64 + 3265926880315950132*2^128 + 1734799395*2^192,4129327650022051548 + 10065995919679096367*2^64 + 8328693825366997163*2^128 + 4199311935*2^192;\
759014208631167286 + 13036384882707849418*2^64 + 3863911365982417249*2^128 + 3751576132*2^192,11821734710939421386 + 4924011831295110576*2^64 + 11475341377727632284*2^128 + 3585440253*2^192,864382437954691782 + 6862848403856212498*2^64 + 10190077980291489783*2^128 + 1632109953*2^192,18068521400859310390 + 12861379888985543367*2^64 + 3503646854296860003*2^128 + 1664106136*2^192,17806085452263687574 + 14639969677800090269*2^64 + 10164878342381562757*2^128 + 3455041211*2^192,4479350684862577556 + 18353226635476229492*2^64 + 12620244541920120550*2^128 + 3265574890*2^192,9654127287864369176 + 3907422246156921372*2^64 + 2841804082207549714*2^128 + 3704143640*2^192,3537246060042214812 + 15481695483437646237*2^64 + 13434652748286138806*2^128 + 2764315440*2^192;\
10965339693559676931 + 9124894645562638750*2^64 + 11754738641439723760*2^128 + 918855651*2^192,11147806775955639300 + 9013085075543460137*2^64 + 527846503741794786*2^128 + 798849170*2^192,6929243918337630584 + 18026362688711131945*2^64 + 16240581245114476732*2^128 + 51321155*2^192,13332685393167143602 + 10226056181063040209*2^64 + 3317457019137590313*2^128 + 1436159130*2^192,14124141052889838738 + 10871368314800052821*2^64 + 13375562757429531195*2^128 + 1417756794*2^192,13351545426403495468 + 8493948092298672075*2^64 + 14360384818122724240*2^128 + 3641263842*2^192,8084103556741185164 + 4891523955487675491*2^64 + 8118909249110957646*2^128 + 2442955099*2^192,9412323633510595200 + 327752286955973642*2^64 + 456654487664778006*2^128 + 3848546321*2^192;\
8244765385128092689 + 14630221033162529344*2^64 + 260607136590817526*2^128 + 1987786739*2^192,15985165929499025332 + 8809133176374087855*2^64 + 13053332351765138574*2^128 + 2341483152*2^192,2915032673882507240 + 14045914256394731677*2^64 + 18044599240739930596*2^128 + 794274258*2^192,8882226054624337478 + 18345554839571881185*2^64 + 12699430049883240749*2^128 + 2274679425*2^192,1283416562725491982 + 17953933737108290009*2^64 + 4596542560279209339*2^128 + 765827675*2^192,6783358192743900972 + 13358973707784549297*2^64 + 7063022596102292779*2^128 + 831514080*2^192,16590992781526310228 + 17299824009719578474*2^64 + 16370073609403461339*2^128 + 2788520357*2^192,15423077882494332432 + 2210841011204089839*2^64 + 5258956110160733340*2^128 + 703988549*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4707 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
