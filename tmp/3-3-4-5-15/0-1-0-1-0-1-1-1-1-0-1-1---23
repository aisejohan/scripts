/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 5, 0, 0, 0]  	18	6 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	6 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	6 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 7, 1, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[0, 6, 1, 0, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	6 
[0, 5, 1, 0, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	5 
[0, 0, 5, 1, 2]  	25	2 
[0, 3, 0, 2, 252]  	19	4 
[0, 3, 2, 1, 253]  	22	3 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 3 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4529621676927869728 + 13874571958483518798*2^64 + 10350867167833835587*2^128 + 6978027916*2^192,17577567020957252912 + 10284770310681570947*2^64 + 15592512434172636418*2^128 + 4699790*2^192,1135051452243291504 + 18181987817019218290*2^64 + 380942861787921613*2^128 + 6613741951*2^192,4327216673200700840 + 2332072793120828807*2^64 + 1625993090670329370*2^128 + 112774913*2^192,2764846614563482488 + 15836556994815462258*2^64 + 10209270367433031796*2^128 + 6441037917*2^192,10383437911937680928 + 2437831915314437006*2^64 + 14229722050285077629*2^128 + 5438625196*2^192,3981274914698517576 + 5074258787997853330*2^64 + 6380872288387238501*2^128 + 6400869483*2^192,3815107275675737072 + 14787781033876120483*2^64 + 9437348982536608398*2^128 + 6655034429*2^192;\
12632003443598088328 + 15067839367561756459*2^64 + 12390574269647502069*2^128 + 3557845131*2^192,13935339735780689376 + 13753004793406670387*2^64 + 13539578856404131783*2^128 + 1506682405*2^192,11755240779346722672 + 10139378593432145200*2^64 + 3403034369522807905*2^128 + 1880797089*2^192,9439711942454239648 + 10297126250242466328*2^64 + 6484350228587082382*2^128 + 1317034477*2^192,18148091127748750544 + 9992847243580467750*2^64 + 5311236532839852025*2^128 + 595166444*2^192,14018907444982282992 + 1356799342835952304*2^64 + 3856162412704334523*2^128 + 1770560516*2^192,4723807904737393120 + 8446723379485258548*2^64 + 6302573258407501543*2^128 + 95756167*2^192,12848833800602951456 + 14375303837003055851*2^64 + 17932252252618298690*2^128 + 395881232*2^192;\
10677990911984628068 + 17886093084329001299*2^64 + 2866073443372160190*2^128 + 5156100999*2^192,9242742721603488940 + 5931485755087693656*2^64 + 14782209167811514832*2^128 + 5653488717*2^192,6534650743948493268 + 14039944567794683100*2^64 + 15703367159179796504*2^128 + 5760534529*2^192,11749626883317105898 + 12730322932166970833*2^64 + 223247920064526093*2^128 + 8026490686*2^192,2788867856446566982 + 1966778534803066299*2^64 + 3256072416202383705*2^128 + 8250924160*2^192,17671548483012383312 + 5953160362561855154*2^64 + 10813915353718416368*2^128 + 3428534711*2^192,7556358339127645114 + 18273367454954734995*2^64 + 2601145681132503742*2^128 + 5209451732*2^192,3066489710199739548 + 6334503629690744534*2^64 + 14054783029800852553*2^128 + 6687957337*2^192;\
2520409302513344766 + 8641841089872944467*2^64 + 16932024750495819724*2^128 + 4179674367*2^192,15092356841397582938 + 8841656503888858422*2^64 + 1529048826171455020*2^128 + 4150955075*2^192,8470000399514739130 + 221153162331657408*2^64 + 306680651908701091*2^128 + 6463621177*2^192,10599471963225947467 + 6083083928028398957*2^64 + 404034237919620282*2^128 + 1164508627*2^192,5222945488056808625 + 17097118718693500195*2^64 + 418522588817004970*2^128 + 2572442937*2^192,12338018237992643996 + 17646249362729629420*2^64 + 7097901476493753276*2^128 + 3498729908*2^192,15809549615123788643 + 15980255693261013384*2^64 + 3540931106136463589*2^128 + 7750039195*2^192,15083463600971418954 + 12016525813036171317*2^64 + 6110249295419296826*2^128 + 5380318792*2^192;\
11135501697490880094 + 16210942743675218622*2^64 + 15614728325244728280*2^128 + 1821643245*2^192,12138233011209836018 + 4706488895408586528*2^64 + 18159370535373750066*2^128 + 8494249227*2^192,3411478719628632658 + 3285426852830275020*2^64 + 2953349834581239379*2^128 + 346440305*2^192,16074019951946149807 + 14812235141578416687*2^64 + 6920776016910185053*2^128 + 4031688422*2^192,5888000856482451805 + 6356014329359789731*2^64 + 15943403148909091341*2^128 + 1840421440*2^192,8040297524254405036 + 14818536627053588092*2^64 + 14382646543419778812*2^128 + 6830539185*2^192,231452048459864871 + 14964220961438179957*2^64 + 2232030412902861093*2^128 + 591277352*2^192,1779173742916336002 + 5031027878043402201*2^64 + 16196019283582767155*2^128 + 8080357563*2^192;\
11779472851333417726 + 8414224859455079159*2^64 + 8756844188541074543*2^128 + 6743950709*2^192,17853022897303920858 + 18390662924178117624*2^64 + 1833725864118165253*2^128 + 5940181585*2^192,8673802458733314642 + 5502486253224618717*2^64 + 4187624412247619749*2^128 + 2995365909*2^192,13675590336706927643 + 5736989556087656180*2^64 + 799631581198086346*2^128 + 2298618320*2^192,11944854629655349689 + 11531767687854412126*2^64 + 9161552884648676045*2^128 + 8192144962*2^192,9377384053080733588 + 12801416620166522235*2^64 + 22811542591359037*2^128 + 3845573687*2^192,8435686977514222211 + 6935457780745932542*2^64 + 5111892955150181871*2^128 + 6017627846*2^192,12628971346552681274 + 13931962626665532117*2^64 + 8744424656746552333*2^128 + 6487599166*2^192;\
13987005881412260400 + 4655468719312655613*2^64 + 17861895874383453138*2^128 + 3931834524*2^192,15482497283709342976 + 855895905230738675*2^64 + 1084818422123069862*2^128 + 1152152577*2^192,2803300408710757248 + 3189842218960006782*2^64 + 13452794511283563230*2^128 + 3221146265*2^192,17306591352717975752 + 9087457311557443557*2^64 + 16368956459084663147*2^128 + 2140456053*2^192,16860751748230134952 + 3517378596748437838*2^64 + 4617184025216667555*2^128 + 1964907907*2^192,7673254895754501936 + 1124184228099498718*2^64 + 14202713843977162121*2^128 + 6795075407*2^192,8292073288751737064 + 13681832949131691871*2^64 + 4911558044855287685*2^128 + 7612993040*2^192,9896077259511816752 + 816787803467588580*2^64 + 4124065068390728537*2^128 + 3489758010*2^192;\
1216633374576125872 + 5765049909099236714*2^64 + 6110501877783963235*2^128 + 2847078600*2^192,12352330146516645392 + 12567670309272726696*2^64 + 15197251810338250180*2^128 + 2124029375*2^192,15092177475683163280 + 6076151584254347311*2^64 + 10033311734089191878*2^128 + 2706937490*2^192,12052486664164010600 + 4827047641589107372*2^64 + 5686698703296313998*2^128 + 2828423667*2^192,4050019350821091352 + 18330737944828617815*2^64 + 17866010251377273526*2^128 + 1208209942*2^192,7286766506695177728 + 257606357900461151*2^64 + 10028413982992699116*2^128 + 237088927*2^192,14225332349888696296 + 17801879274871350545*2^64 + 14820142584585932074*2^128 + 1460273042*2^192,16672060053174560272 + 3492323965145579192*2^64 + 1043273215123051545*2^128 + 2019809981*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4370 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
