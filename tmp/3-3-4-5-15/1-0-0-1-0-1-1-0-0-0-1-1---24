/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 39
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[2, 2, 0, 0, 0]  	12	4 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 2, 1, 0]  	16	4 
[1, 0, 1, 2, 0]  	17	4 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	5 
[3, 0, 3, 0, 0]  	21	6 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 5, 0, 0]  	23	5 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 6, 0, 0, 1]  	21	6 
[0, 0, 5, 1, 1]  	25	2 
[0, 3, 0, 2, 2]  	19	3 
[0, 4, 2, 0, 2]  	20	3 
[0, 3, 2, 1, 2]  	22	3 
[0, 1, 1, 3, 252]  	22	2 
[0, 1, 0, 4, 252]  	23	2 
[0, 2, 2, 1, 254]  	19	2 
[0, 2, 1, 2, 254]  	20	2 
[0, 7, 0, 0, 255]  	21	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17894927438130633062 + 11691086415448320021*2^64 + 1323669341557432886*2^128 + 128980726*2^192,2478427289785205908 + 13905200758433112924*2^64 + 2657459913680574204*2^128 + 1441712918*2^192,8620879522818825740 + 2173704691429132521*2^64 + 9314640013788145809*2^128 + 802763869*2^192,17634542530877975160 + 9344443778342921694*2^64 + 6007466430216590317*2^128 + 1718301483*2^192,4586748181367358888 + 724487913156103124*2^64 + 15321301889612726364*2^128 + 1802884821*2^192,17815242169070086160 + 6369355057695417883*2^64 + 9096897757509495736*2^128 + 917156704*2^192,437620070425131856 + 10750212205627950926*2^64 + 2346598655701694953*2^128 + 168150040*2^192,11000730563318238720 + 17484748834972848419*2^64 + 6046316760919117710*2^128 + 1884159177*2^192;\
3300328355450198988 + 6418762686700204170*2^64 + 15012330616152438665*2^128 + 340543098*2^192,8125224140751877496 + 11466146124151549454*2^64 + 16143678473280061625*2^128 + 462626496*2^192,9842211608078239784 + 17062127985012663284*2^64 + 15295435603623425249*2^128 + 1147564907*2^192,12364690490646972904 + 3584909649632182691*2^64 + 851534757770920746*2^128 + 1938971671*2^192,3643021007056139396 + 16207201641611391933*2^64 + 1824724373542053058*2^128 + 21705546*2^192,14958352505485526400 + 7864992753121387924*2^64 + 10775742775639112553*2^128 + 990688912*2^192,7435585027046108608 + 13817607935408532491*2^64 + 10933308611844457519*2^128 + 153361104*2^192,14296301804618018264 + 13240999075201569892*2^64 + 4585318158607129951*2^128 + 219713090*2^192;\
1145097604936916446 + 10798987691614787188*2^64 + 7696752382517898531*2^128 + 594146183*2^192,36055913326602876 + 15186415482264372721*2^64 + 11544346738805095969*2^128 + 1130295966*2^192,10384143527993429320 + 14952726323039003990*2^64 + 2470106081779035161*2^128 + 1953010357*2^192,559221871426876780 + 2553100779658814239*2^64 + 245320160881226914*2^128 + 653579566*2^192,2813561508665723620 + 8437550631089471056*2^64 + 2763094944823537404*2^128 + 1048585772*2^192,15859588039192589828 + 13108620504714913462*2^64 + 9536653690879143600*2^128 + 796186319*2^192,17849289630037693472 + 11685155495955042355*2^64 + 5640749609336105724*2^128 + 681005159*2^192,18013515641345915936 + 4383275928465477720*2^64 + 720466543215213620*2^128 + 1547201552*2^192;\
15921387152926071805 + 8138074047651862375*2^64 + 228636278751531817*2^128 + 4708878*2^192,8503015526183396574 + 3055456416851629778*2^64 + 3075581187787495362*2^128 + 428236972*2^192,16579390961390072406 + 889237679240541149*2^64 + 1655026804750967391*2^128 + 1219795368*2^192,10418979370046758496 + 9269492535534778214*2^64 + 12503105730563572097*2^128 + 1919095544*2^192,6401898390277704060 + 6292283613895426658*2^64 + 6841817917002161978*2^128 + 607946533*2^192,16941701323414689632 + 14983416104833518236*2^64 + 6401101424177923055*2^128 + 866090484*2^192,7496418051411484220 + 9584538111433197215*2^64 + 917668104051311164*2^128 + 555056975*2^192,15512623927596443208 + 17342304084477020125*2^64 + 17811119086888212519*2^128 + 284483985*2^192;\
6966375121225196866 + 16529090112676888878*2^64 + 6492580377532239162*2^128 + 831727757*2^192,10172264825175533584 + 13613993763490074894*2^64 + 5701341425767567628*2^128 + 1680168196*2^192,11434352482646503916 + 3147176064821128877*2^64 + 4078938551762092823*2^128 + 1176976931*2^192,10635992975260814292 + 9075242233276950244*2^64 + 6769371507763880905*2^128 + 125631331*2^192,17655256348100962608 + 12072672296918492869*2^64 + 10660294346592489419*2^128 + 1869218510*2^192,12610502519483768464 + 1114192791962716905*2^64 + 3649450906541535006*2^128 + 1055383798*2^192,6471822889010618112 + 18375745025357927888*2^64 + 11227879099595300475*2^128 + 2092504169*2^192,1145949229884215880 + 5758697287499949101*2^64 + 13580621508841196544*2^128 + 182770548*2^192;\
1145530021667389768 + 14994189026973196040*2^64 + 1739547934763182145*2^128 + 1550889514*2^192,16768041683127013668 + 14689961716927686965*2^64 + 11958762121440838606*2^128 + 1618578986*2^192,3194070676868793632 + 2761962204353263611*2^64 + 3375782191272022017*2^128 + 1535556528*2^192,2072848626991643760 + 2696154009748000552*2^64 + 12241906580202249791*2^128 + 2004158976*2^192,3718149865039472308 + 10600661038313140820*2^64 + 12090055532897890818*2^128 + 1920930579*2^192,7815159613815045916 + 9827598778797907210*2^64 + 586167498412584169*2^128 + 1046367277*2^192,4046456305159926144 + 17075404948349603636*2^64 + 6682335126882686941*2^128 + 285655338*2^192,7009840600207684696 + 13257324629793603302*2^64 + 1856202806736928535*2^128 + 2054403321*2^192;\
7048395727434234604 + 14619646550816720966*2^64 + 15499962043258006777*2^128 + 1952375349*2^192,10710230084680465096 + 4693052329529916411*2^64 + 9475079965196313192*2^128 + 1444204057*2^192,766916151960965292 + 361967759320748835*2^64 + 7813747080394728803*2^128 + 1511878413*2^192,310075111515916780 + 7561314709123162826*2^64 + 1316045712341376640*2^128 + 1843686940*2^192,1113152054453262200 + 10542124181150675406*2^64 + 5952138004962512296*2^128 + 1821897605*2^192,11659050795067392168 + 3753458724674290421*2^64 + 7968540232854143868*2^128 + 1956057054*2^192,1470828540856425176 + 2971325012553061246*2^64 + 15357235603026524090*2^128 + 1476855941*2^192,10632884914636109032 + 10080838908575903868*2^64 + 14622923885915030660*2^128 + 1518093094*2^192;\
1983290679393419530 + 16684701193346528958*2^64 + 13619661529695512362*2^128 + 123700526*2^192,14978897508199109004 + 1947805998361070626*2^64 + 8189352114695016339*2^128 + 614722172*2^192,15935316818509188188 + 5150170797553148943*2^64 + 11121696374815457829*2^128 + 3074650*2^192,15570967349522132768 + 3974626921416930045*2^64 + 3909311897472923127*2^128 + 18425334*2^192,9765715207654511384 + 8816639021248267056*2^64 + 5459201547641622978*2^128 + 789401101*2^192,936637789626770240 + 13242595576995364693*2^64 + 12339897576668906551*2^128 + 1031210657*2^192,1498138722936891832 + 4810531799645066249*2^64 + 18321154269199013224*2^128 + 102714151*2^192,12175732911595995736 + 8041124780336398728*2^64 + 5424877900304837215*2^128 + 549010029*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4078 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
Look at the ideal generated by: 
1*x^3 + 1*x^2*y^1 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^2*w^1
