/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 51
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	3 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 0, 3, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[0, 1, 2, 3, 1]  	26	2 
[0, 2, 1, 3, 3]  	25	2 
[0, 2, 0, 4, 3]  	26	3 
[0, 3, 2, 1, 4]  	22	3 
[0, 3, 1, 2, 4]  	23	3 
[0, 4, 2, 0, 6]  	20	4 
[1, 6, 0, 0, 6]  	21	6 
[0, 3, 0, 3, 6]  	24	4 
[0, 7, 0, 0, 250]  	21	5 
[0, 0, 5, 0, 252]  	20	2 
[0, 0, 4, 2, 252]  	26	1 
[0, 0, 3, 2, 253]  	22	1 
[0, 0, 2, 3, 253]  	23	1 
[0, 0, 0, 5, 253]  	25	1 
[0, 2, 1, 2, 254]  	20	3 
[2, 2, 0, 0, 255]  	12	5 
[1, 0, 2, 1, 255]  	16	3 
[0, 1, 1, 3, 255]  	22	2 
[0, 1, 0, 4, 255]  	23	2 
------
The gap is between 7 and 249.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12386809813361916580 + 13922774297893726328*2^64 + 3667800990752157449*2^128 + 1385109759*2^192,3077747596931708844 + 6383825852181313509*2^64 + 9302753968611453826*2^128 + 3071291466*2^192,455110635903645060 + 13380200693840815637*2^64 + 9658939095522106526*2^128 + 3478496648*2^192,7770571250427379030 + 17911669827481274963*2^64 + 11699098988139588585*2^128 + 2339312223*2^192,14051098899398845546 + 622337493503789317*2^64 + 6933084122666831422*2^128 + 2642171181*2^192,11241484857157850800 + 5387737985437145864*2^64 + 12961722215953975558*2^128 + 2175300816*2^192,5158241982625842686 + 1809236055779195894*2^64 + 428904052380630146*2^128 + 2519629012*2^192,7811639029743760420 + 12238685987574112268*2^64 + 14084623801912052675*2^128 + 2338477658*2^192;\
6578397671487697310 + 9171386421749580569*2^64 + 18234910931579020227*2^128 + 2516226649*2^192,3983844542183245114 + 17991328716796522784*2^64 + 3777301012967491479*2^128 + 3341517620*2^192,6802624348854069582 + 1304662380275849295*2^64 + 13906996866461402540*2^128 + 2768953945*2^192,12080835250353989565 + 13665233332442381303*2^64 + 10012955463479857219*2^128 + 1633689688*2^192,12433810958211491771 + 8813245280522014577*2^64 + 16240761656905011304*2^128 + 3023462657*2^192,11085647233205805800 + 11985754212688489319*2^64 + 8449982891558579149*2^128 + 2393721910*2^192,11663294886020502201 + 15455309577623384006*2^64 + 17052415069479640834*2^128 + 961725186*2^192,7269143994971516318 + 14044282208299414149*2^64 + 8951800205170518638*2^128 + 2449314921*2^192;\
14490650065879911330 + 1849690812077581802*2^64 + 10336550703307146085*2^128 + 3372879713*2^192,2261605606400271006 + 17105486722050794287*2^64 + 7371257854575151246*2^128 + 456915149*2^192,10172874887107057282 + 1232596620659850190*2^64 + 13069709341660416952*2^128 + 766376674*2^192,6799959050973289679 + 14406301299615658592*2^64 + 4068004290728858650*2^128 + 4048830467*2^192,6104670645764669905 + 1402989392458012567*2^64 + 7774290083465765936*2^128 + 527611129*2^192,956414372638493640 + 9919700507907826414*2^64 + 2878032523173444463*2^128 + 3407603817*2^192,7443936973843101243 + 3714224973225699713*2^64 + 6032798147505096924*2^128 + 1925309360*2^192,17573551317345982330 + 2505618538114829711*2^64 + 5479103012583919532*2^128 + 755977366*2^192;\
10383823571732122218 + 1722224686019751998*2^64 + 7809424912990122105*2^128 + 2414035186*2^192,12793413651524204802 + 4865184115344701325*2^64 + 1520389357745781263*2^128 + 2995356616*2^192,3659624333930414502 + 5528225858356483962*2^64 + 6386056309656020948*2^128 + 2532310186*2^192,16814742871045589869 + 17356133485178228507*2^64 + 5189701311252170641*2^128 + 2643997324*2^192,14533195352373854115 + 2136997578749759615*2^64 + 15311724741586265389*2^128 + 2086249218*2^192,5866407736890033280 + 591496068552433863*2^64 + 4471573267282159898*2^128 + 3242326644*2^192,4341329249729355609 + 17235013968015748416*2^64 + 3678137761216563364*2^128 + 914361327*2^192,17451176670020371182 + 8637289896467406310*2^64 + 7700905547708100932*2^128 + 2956074895*2^192;\
16887495922536084040 + 5258199135118749438*2^64 + 9088309221987862428*2^128 + 2020624030*2^192,1531163400196072988 + 17556958037448094135*2^64 + 14243391698158098089*2^128 + 829780012*2^192,8038058630699244180 + 7866015634623147259*2^64 + 6779988028931204481*2^128 + 505130638*2^192,7731926579483592694 + 12701242727047882881*2^64 + 7866006094199609554*2^128 + 4023785260*2^192,17513683380763688474 + 5261635380516313370*2^64 + 9756556487631236982*2^128 + 2670747609*2^192,9043883800388993808 + 12528591581154474625*2^64 + 12474859432285824711*2^128 + 1880502464*2^192,16558907802093888966 + 16247931024025597558*2^64 + 9237702432036410001*2^128 + 1434377927*2^192,4037459368127889524 + 17569201102440695518*2^64 + 17750392080665005363*2^128 + 2553946168*2^192;\
13861945862182219542 + 11715825024056779223*2^64 + 17277607717413641729*2^128 + 3353406800*2^192,7851810934151988822 + 17485393030541757099*2^64 + 12735660617744796012*2^128 + 4228691514*2^192,5809938117172647162 + 14801764699231092583*2^64 + 16736019127888083444*2^128 + 1617620557*2^192,9841581548608135731 + 2010351736765404035*2^64 + 14970299663472625058*2^128 + 3898790466*2^192,10522498759074128293 + 6648620908721850185*2^64 + 351757074191754743*2^128 + 1728099921*2^192,4775275744813608024 + 11619396893350375218*2^64 + 10996588233175912741*2^128 + 1870619964*2^192,10146590091214164727 + 8810325043492780754*2^64 + 2027845917364660674*2^128 + 3871547923*2^192,14611698015612421810 + 17171201031279145763*2^64 + 14897874391088920149*2^128 + 1212299965*2^192;\
18357708367933901714 + 9118087712971574902*2^64 + 17557794760086121060*2^128 + 3050228630*2^192,4422313379600639946 + 3050352232875654767*2^64 + 10010525066918335578*2^128 + 1561935582*2^192,7386335292570227222 + 2282207129647161444*2^64 + 9392423015649772706*2^128 + 2665882909*2^192,16892786414816768885 + 6040100409790782123*2^64 + 6093209961821318273*2^128 + 3285497285*2^192,16064226340180700803 + 6588902429222953668*2^64 + 14112406180185591581*2^128 + 2056208750*2^192,13165662116219274016 + 10777699881763708359*2^64 + 3227652014789786558*2^128 + 811248686*2^192,17445198635698050761 + 13175382668733225335*2^64 + 3009564632483724852*2^128 + 1510633526*2^192,5060532268710199422 + 2997368254535135352*2^64 + 2108908648097183077*2^128 + 1210849610*2^192;\
9107575059044325548 + 17719329279624240139*2^64 + 9750957549837309508*2^128 + 2090247872*2^192,10877756518124961708 + 10911173247804369957*2^64 + 4156572779991214709*2^128 + 1859525207*2^192,2692960068534539540 + 14976376457637929565*2^64 + 11076804867803007659*2^128 + 1555591260*2^192,12821260664939687542 + 3179786992340893314*2^64 + 2427398045793046765*2^128 + 2069610841*2^192,8879750863925827674 + 17041470067076644049*2^64 + 14354467195401511130*2^128 + 21644819*2^192,1341417671182236160 + 17526127162316724002*2^64 + 4937772893644475459*2^128 + 2036619710*2^192,15800677534749815566 + 7674259486592302502*2^64 + 1423124001130690977*2^128 + 1065469248*2^192,9928305304530541812 + 10882513925855428897*2^64 + 6788417079127609031*2^128 + 289598605*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4185 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 28

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
Look at the ideal generated by: 
1*x^2*y^1 + 1*y^3 + 1*z^1*w^1
1*x^1*z^2 + 1*y^2*w^1 + 1*y^1*z^2
