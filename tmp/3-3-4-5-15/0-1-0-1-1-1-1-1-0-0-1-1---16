/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	2 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	5 
[3, 4, 0, 0, 0]  	21	8 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	5 
[0, 3, 1, 2, 0]  	23	4 
[0, 2, 3, 1, 0]  	23	4 
[0, 4, 3, 0, 0]  	24	5 
[0, 4, 2, 1, 0]  	25	2 
[0, 3, 4, 0, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	5 
[0, 4, 2, 0, 1]  	20	5 
[1, 0, 2, 2, 1]  	21	4 
[3, 1, 0, 0, 2]  	12	6 
[1, 2, 2, 0, 2]  	17	5 
[0, 2, 1, 2, 2]  	20	4 
[0, 3, 0, 3, 2]  	24	4 
[0, 0, 5, 1, 2]  	25	2 
[0, 3, 2, 1, 3]  	22	4 
[0, 1, 5, 0, 4]  	23	3 
[0, 1, 3, 1, 252]  	20	3 
[0, 1, 1, 3, 252]  	22	2 
[0, 1, 0, 4, 252]  	23	2 
[0, 5, 0, 0, 254]  	15	4 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	5 
[0, 4, 0, 0, 255]  	12	3 
[0, 1, 2, 1, 255]  	16	2 
[1, 0, 1, 2, 255]  	17	3 
[0, 1, 1, 2, 255]  	17	2 
------
The gap is between 5 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10757796951229166562 + 439853501391379822*2^64 + 3568373264821240293*2^128 + 3925239126*2^192,1313067307108070672 + 10026728058036213770*2^64 + 17579335272888014822*2^128 + 3410503343*2^192,4639471286611667284 + 16376190674026733072*2^64 + 17814207397085028658*2^128 + 2042872173*2^192,7626544294490072132 + 15221682685114361466*2^64 + 16856067281700471554*2^128 + 2989947783*2^192,3453395449317228748 + 5521934330008714819*2^64 + 4904354160701372994*2^128 + 3091630217*2^192,3159757061576084920 + 17180431707908516023*2^64 + 16213879075260981813*2^128 + 2965487563*2^192,4927562568383722692 + 14955995843881291116*2^64 + 6834226409667513705*2^128 + 3630405681*2^192,2685171805473989944 + 11965849883745697588*2^64 + 12690321239723428241*2^128 + 2942849850*2^192;\
1149212108511090038 + 12125523339658138782*2^64 + 6096765824551312452*2^128 + 2189515431*2^192,5799677498198154336 + 11583393375707589131*2^64 + 11286584752213937553*2^128 + 860940135*2^192,12934923017922567468 + 12345643895380276433*2^64 + 14410963400218292592*2^128 + 1236995586*2^192,14961256260198729828 + 4354832635997405485*2^64 + 7098910083474819732*2^128 + 1492629208*2^192,3544917582138264016 + 16014432500025001968*2^64 + 18231831513124148540*2^128 + 3786215624*2^192,7581400275170997076 + 14099028327187174891*2^64 + 4476884631724862031*2^128 + 3965597606*2^192,2497299859968747928 + 17896195575787584800*2^64 + 2275139634423876107*2^128 + 2184777223*2^192,16650919799983129912 + 1537732267009033408*2^64 + 7572713391736093006*2^128 + 1332586932*2^192;\
6737451657058573634 + 7743109040448865882*2^64 + 665158696919168415*2^128 + 3894456110*2^192,15000499844111758008 + 5085468403625725365*2^64 + 3197368101367092763*2^128 + 2732456931*2^192,16571088056268323020 + 18042234693338837923*2^64 + 17773454671281879257*2^128 + 2008665566*2^192,10628305066845237052 + 15924523254174056740*2^64 + 1821196782368195202*2^128 + 2308018490*2^192,11237288669800852616 + 6082077490386377812*2^64 + 3229176836535373691*2^128 + 1546616492*2^192,4048460238006782644 + 8577708908873255579*2^64 + 8420932369242620404*2^128 + 3844091675*2^192,11134561037762807392 + 826325316411158187*2^64 + 4849207060626321101*2^128 + 3027375820*2^192,16964964376815410360 + 18402170637752549286*2^64 + 4562546201777535640*2^128 + 3599952830*2^192;\
13798806527209820240 + 6224596065164877638*2^64 + 15517249390502210841*2^128 + 1503391580*2^192,445495319921220530 + 3819560416408021029*2^64 + 8087691542423588985*2^128 + 1132163934*2^192,10568968598208817802 + 4513726906448825294*2^64 + 1703768611277719435*2^128 + 4047798855*2^192,8116300074817351676 + 4926625216805255419*2^64 + 6515398892737337611*2^128 + 692871883*2^192,6063404554291941284 + 8679763588829317675*2^64 + 132233582451225338*2^128 + 1472596962*2^192,8820899229817040176 + 421189199018860777*2^64 + 2690114898606896328*2^128 + 1469283702*2^192,1307030127596616648 + 15424287506379937227*2^64 + 6346762142151105265*2^128 + 744325171*2^192,9331291970881273392 + 4125824227788290061*2^64 + 3633846587353135404*2^128 + 765866017*2^192;\
16500714799935572140 + 16490602435406696484*2^64 + 6013303107505013865*2^128 + 4233336553*2^192,15173703595807816018 + 18312222807295369125*2^64 + 4754545163093380579*2^128 + 1135301317*2^192,5829608355562961378 + 17484257794386677578*2^64 + 11071839748193035878*2^128 + 646480667*2^192,11634968715384354100 + 3724175702586118320*2^64 + 6347505232452531490*2^128 + 1622891572*2^192,10684132269215961444 + 13119420817209197815*2^64 + 13985518466882499064*2^128 + 4046130287*2^192,15422978970238930216 + 763600162741940585*2^64 + 13777095941143169383*2^128 + 4143591221*2^192,2335939077453753576 + 16037664785921325922*2^64 + 17219697453960897857*2^128 + 1078241341*2^192,15777289225403732368 + 10611557386064221847*2^64 + 12805556935893769361*2^128 + 22732156*2^192;\
1560913795759748777 + 9809694643544670995*2^64 + 5637499837462916276*2^128 + 3085654102*2^192,5634754471782462342 + 1497406805892050595*2^64 + 18263490561161115662*2^128 + 1215293261*2^192,17243313927422651696 + 2202717128825148131*2^64 + 10919916090757797623*2^128 + 1933534940*2^192,6814965694386159974 + 4166701963449198294*2^64 + 372552955514855288*2^128 + 2705306102*2^192,10659359844012521494 + 843333899552953251*2^64 + 3968982693108488126*2^128 + 602190922*2^192,15492205780217611304 + 8795380990547616891*2^64 + 13186836383987599029*2^128 + 487595786*2^192,16852040627676600886 + 14536127380467692291*2^64 + 5036532546424857746*2^128 + 244842764*2^192,4917790300818268092 + 1795256124747176599*2^64 + 15887350128067353752*2^128 + 777486541*2^192;\
9155249561437625593 + 15459441857587242352*2^64 + 3136992083758858289*2^128 + 1993874146*2^192,4019430466594875220 + 11053872102762214751*2^64 + 12379965699971412567*2^128 + 3099848972*2^192,4293884924684403990 + 3718067872114429812*2^64 + 8025784464978263342*2^128 + 1369776316*2^192,13555360533991654642 + 17892129096595214628*2^64 + 545316636206998865*2^128 + 3013753415*2^192,14849387161181571234 + 1096506892075858990*2^64 + 17403788778406767880*2^128 + 1593852715*2^192,12171145238110093664 + 10781071106470819418*2^64 + 2800192995841685509*2^128 + 3862785900*2^192,11821819647658601334 + 7185438097366752679*2^64 + 17544289270736467300*2^128 + 1765845716*2^192,16908631118426178076 + 11296991251453608757*2^64 + 7464460764606788598*2^128 + 231313940*2^192;\
6174419217930995120 + 17279579510174243800*2^64 + 16140066260182353613*2^128 + 1856340823*2^192,2632264342979630284 + 10131306593294871458*2^64 + 9481363337967785766*2^128 + 1166064310*2^192,10030482977276904060 + 4000159462343090000*2^64 + 18145547241482050525*2^128 + 2113580839*2^192,657824653322919616 + 6855339221701683082*2^64 + 16045159514253305755*2^128 + 2035122730*2^192,2970631470536377052 + 8135426969555416459*2^64 + 16307788998786703044*2^128 + 1991415950*2^192,1001357013498349172 + 5391299878042408508*2^64 + 2546588192795685421*2^128 + 2092830206*2^192,12772997309755320420 + 6623660171212930672*2^64 + 14319776374301970978*2^128 + 991070121*2^192,15171404957179217392 + 2155650019105454792*2^64 + 7938886537319401527*2^128 + 1317039513*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4707 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 
Look at the ideal generated by: 
1*x^2*y^2 + 1*x^1*z^1*w^1 + 1*y^1*z^1*w^1
1*x^1*w^2 + 1*y^3*z^1
