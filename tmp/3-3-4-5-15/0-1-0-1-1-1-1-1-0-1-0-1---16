/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	4 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	8 
[0, 4, 0, 2, 0]  	22	5 
[0, 2, 3, 1, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 3, 0, 0]  	24	5 
[0, 4, 2, 1, 0]  	25	2 
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	5 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	5 
[0, 4, 2, 0, 1]  	20	4 
[0, 7, 0, 0, 1]  	21	6 
[0, 3, 2, 1, 1]  	22	4 
[0, 1, 5, 0, 1]  	23	3 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	6 
[1, 2, 2, 0, 2]  	17	6 
[1, 0, 2, 2, 2]  	21	7 
[0, 3, 0, 3, 2]  	24	4 
[0, 5, 0, 0, 254]  	15	4 
[0, 1, 3, 1, 254]  	20	3 
[0, 3, 3, 0, 254]  	21	4 
[1, 3, 0, 0, 255]  	12	5 
[0, 4, 0, 0, 255]  	12	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 3, 2, 0, 255]  	17	3 
[0, 1, 1, 2, 255]  	17	2 
[0, 2, 4, 0, 255]  	22	3 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[2743835021235046576 + 8137543766237314178*2^64 + 14615824686871007761*2^128 + 3543441161*2^192,8979369914971470376 + 8426923008974173132*2^64 + 12043432779401666052*2^128 + 3100005958*2^192,15267880615484580792 + 8730336257546246268*2^64 + 14056828539402901631*2^128 + 1001461676*2^192,1541968908936475384 + 66107906334058255*2^64 + 1024220826993369036*2^128 + 2370773402*2^192,12599694214532086440 + 3306923560034996862*2^64 + 8909081902609975378*2^128 + 4006780041*2^192,15172825321982797984 + 11420393154711576212*2^64 + 15392325429010658540*2^128 + 2894848730*2^192,9462002736086265984 + 14346716500808787344*2^64 + 12171070752325633053*2^128 + 3255039046*2^192,11913162033585978560 + 9857438406895339650*2^64 + 3553086732330032753*2^128 + 2931700356*2^192;\
4567161992413255512 + 425311357844227806*2^64 + 7717001676015900174*2^128 + 2306583876*2^192,3917254308052805454 + 6201440540529323327*2^64 + 4450773472607798311*2^128 + 3905057307*2^192,3350961713981735654 + 18360965589916595708*2^64 + 16194540420702251806*2^128 + 2809529516*2^192,10028548469672829986 + 2993810696773085883*2^64 + 18422340998387830296*2^128 + 2112332053*2^192,10726003265644370674 + 11095412705498312850*2^64 + 16013109592599045687*2^128 + 3019664257*2^192,14708327130215164836 + 9854749219819888711*2^64 + 14550834261555385514*2^128 + 383951267*2^192,4227187134778433684 + 12204131125439624894*2^64 + 8471406747151462282*2^128 + 292605164*2^192,3303403424432282576 + 12123957338283670454*2^64 + 15234097310902162130*2^128 + 428033187*2^192;\
11444983216083763208 + 10416171279401745800*2^64 + 2318215464931343514*2^128 + 3247667039*2^192,1601120650990182486 + 15277449064478662136*2^64 + 233634020905018444*2^128 + 3320492315*2^192,3148411360140777662 + 12729235382938091932*2^64 + 9923117279373962963*2^128 + 2780796548*2^192,1368269874317789594 + 16904104269787155009*2^64 + 6175313999056288661*2^128 + 3092185969*2^192,264705366973231306 + 16438206932937419417*2^64 + 18238764541851027320*2^128 + 4221113007*2^192,16119418277735425396 + 10605641735390405129*2^64 + 17797052550390999576*2^128 + 3584433925*2^192,11219613461558093892 + 1568087421930632527*2^64 + 5847385523496709392*2^128 + 494595994*2^192,9665075933282084192 + 17275660913421361582*2^64 + 15538039578731663418*2^128 + 3861439150*2^192;\
1685115844376198141 + 17514453744451148632*2^64 + 13263292222004706697*2^128 + 1411078211*2^192,16110036569647042902 + 5103593098137222060*2^64 + 3168522476063075431*2^128 + 1626420852*2^192,16140566001489521626 + 7502631064220792759*2^64 + 1099052204751449894*2^128 + 882403302*2^192,10792757945264087776 + 9049040537006328921*2^64 + 2496985312999607987*2^128 + 1949962644*2^192,7653237022113515748 + 8753581588333088638*2^64 + 4843124340055672750*2^128 + 2102246073*2^192,11958645511334113004 + 5285556806677499010*2^64 + 2683428460060325387*2^128 + 53973460*2^192,15357687788687389052 + 10012965016073155097*2^64 + 11181673458994253930*2^128 + 1626388622*2^192,16356654273546498760 + 1530153718159543162*2^64 + 13918101481571518253*2^128 + 171591621*2^192;\
5052400075545185681 + 11068780313836203469*2^64 + 5829201697743749799*2^128 + 1176208806*2^192,15936659581643342690 + 13875172039110181621*2^64 + 16648836325643977944*2^128 + 2644445264*2^192,13258214365590846278 + 12782955192712119024*2^64 + 16633813504558630848*2^128 + 1691321520*2^192,8302988808081897972 + 6311932132353783333*2^64 + 12712369858250645899*2^128 + 402559117*2^192,3782321598996278152 + 4756498440515172827*2^64 + 757399694890179726*2^128 + 3090565891*2^192,16913595946993406084 + 3560102523062075363*2^64 + 12248809782479723961*2^128 + 3689593347*2^192,9848732736417031092 + 8277470869447842338*2^64 + 1563399250898917280*2^128 + 704166723*2^192,12302775273610349304 + 7992715563184505047*2^64 + 10618935441017976915*2^128 + 3270030795*2^192;\
1685115844376198141 + 17514453744451148632*2^64 + 13263292222004706697*2^128 + 3025885251*2^192,16110036569647042902 + 5103593098137222060*2^64 + 3168522476063075431*2^128 + 162608756*2^192,16140566001489521626 + 7502631064220792759*2^64 + 1099052204751449894*2^128 + 978872294*2^192,542056806679945944 + 3811478599418250493*2^64 + 5874282374177380677*2^128 + 2180832437*2^192,7653237022113515748 + 8753581588333088638*2^64 + 4843124340055672750*2^128 + 1426963129*2^192,3762602576208703220 + 10523118744265577439*2^64 + 17752875472592104313*2^128 + 137676466*2^192,15357687788687389052 + 10012965016073155097*2^64 + 11181673458994253930*2^128 + 141605006*2^192,16356654273546498760 + 1530153718159543162*2^64 + 13918101481571518253*2^128 + 1127892933*2^192;\
8898544000853960006 + 6302745432936379126*2^64 + 8953796357330954417*2^128 + 3719054153*2^192,4660435269060086274 + 5139993340711860897*2^64 + 11698488233552714174*2^128 + 3714212508*2^192,5488474762022878098 + 17988448118551276749*2^64 + 10054484057832119648*2^128 + 838978542*2^192,2607968102264635114 + 17616374764629702191*2^64 + 16001464596545732790*2^128 + 3209925685*2^192,11651392997945946506 + 1021902831737654753*2^64 + 14718482008001211798*2^128 + 2318877960*2^192,10412308794495748100 + 1554898283221943284*2^64 + 3767535116655916948*2^128 + 3251746073*2^192,6233649524726293164 + 65587501418873898*2^64 + 18202586083524648815*2^128 + 570537455*2^192,4107273655624580416 + 17157338489158297385*2^64 + 7912347596640126983*2^128 + 322749364*2^192;\
7042690767886598378 + 14874706735519867287*2^64 + 15650848657967020532*2^128 + 1927055300*2^192,1012237823104797614 + 5142172161016007105*2^64 + 5376644526504365460*2^128 + 1511290397*2^192,6706377458578626174 + 11455648200909600002*2^64 + 7658248549244242845*2^128 + 1950415141*2^192,2097177526221842398 + 15850891504894596480*2^64 + 13715575107173388721*2^128 + 2940035115*2^192,10155230393189565670 + 14510351181050256348*2^64 + 15833255957780906558*2^128 + 2029460361*2^192,6460639436170328324 + 7268023254879261792*2^64 + 10938243427274741742*2^128 + 1289521931*2^192,13703104558992629252 + 15453206052247559090*2^64 + 2456807285364758503*2^128 + 404988708*2^192,11525693806065817408 + 9517706635405626092*2^64 + 13287299670016569086*2^128 + 995955364*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4706 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
