/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 45
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 0, 2, 1, 0]  	16	5 
[1, 2, 2, 0, 0]  	17	6 
[2, 4, 0, 0, 0]  	18	4 
[1, 5, 0, 0, 0]  	18	6 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	5 
[1, 2, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 4, 0, 0]  	25	4 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	4 
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 1, 1, 2, 1]  	20	4 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	3 
[0, 1, 2, 3, 1]  	26	2 
[0, 0, 5, 1, 4]  	25	2 
[0, 0, 0, 5, 251]  	25	1 
[0, 4, 0, 0, 255]  	12	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 2, 4, 0, 255]  	22	2 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 5 and 250.
Lengths: 1 1 6 8 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5537816037493172780 + 18195808481318286818*2^64 + 9985267504130930987*2^128 + 62328032049*2^192,15328554254183400000 + 17115518260038770609*2^64 + 17960050305513990413*2^128 + 50054369747*2^192,8538121852553241064 + 9693533960943569690*2^64 + 10753811920633576913*2^128 + 4850781978*2^192,6935163295834333128 + 17705397240183058872*2^64 + 2937194645810451173*2^128 + 361267527*2^192,3387676567553152024 + 6618238590042539322*2^64 + 7847490177720142151*2^128 + 17536284990*2^192,7216023573659858424 + 10606885643640739375*2^64 + 7739646468522391130*2^128 + 33804920659*2^192,5901800016993263464 + 6733549224217370665*2^64 + 8928314029855487192*2^128 + 55623719018*2^192,5712180113917746944 + 3571049179671402518*2^64 + 9723681076029507098*2^128 + 15566771403*2^192;\
9146447163221373695 + 544121776714825089*2^64 + 5688994375896134510*2^128 + 64362913851*2^192,17302213089933095888 + 1745495149139071837*2^64 + 2604214262385134504*2^128 + 27313675845*2^192,17332063355192727058 + 5458090500901592409*2^64 + 7791985537064945354*2^128 + 50881758288*2^192,9521670060015794346 + 13462184133375830745*2^64 + 18237211056837113427*2^128 + 27414353209*2^192,7886521326524582254 + 7370670943238338581*2^64 + 7417571034125764095*2^128 + 17855927475*2^192,7684455585940851974 + 362726577215443869*2^64 + 7116774984055904395*2^128 + 43715752982*2^192,7191024635751894258 + 8991000253687380237*2^64 + 7045496372661768797*2^128 + 42908154061*2^192,12565752656908175296 + 16969339063276742064*2^64 + 1986377024593204597*2^128 + 11746499147*2^192;\
227365332557848186 + 4237515334629150645*2^64 + 3485442014814884710*2^128 + 1923381532*2^192,13034034735363969504 + 14678783989812686720*2^64 + 2301985943207435184*2^128 + 54398742867*2^192,2612169106478295404 + 8546701638269309629*2^64 + 7111040701901146299*2^128 + 18441189296*2^192,15522429743898925052 + 4896872304900677047*2^64 + 3752023715358562330*2^128 + 4553569478*2^192,17768409743352387220 + 2618680124024461647*2^64 + 14562264515473516238*2^128 + 66163438078*2^192,16087347278986891556 + 7542483728251536349*2^64 + 11351735268933395083*2^128 + 54361715816*2^192,6772728249913706924 + 1421762235772910750*2^64 + 17446854496438721508*2^128 + 29644581159*2^192,11169262237876328320 + 618976644621852689*2^64 + 5742607035422966237*2^128 + 29703537881*2^192;\
8034531729299260775 + 642418562301421249*2^64 + 6612563346904611571*2^128 + 18205793894*2^192,16907615089145902096 + 17665457235746399271*2^64 + 12898471292197597954*2^128 + 7015069850*2^192,1551504568912272386 + 9856349396798940700*2^64 + 2753517858462707216*2^128 + 18138960767*2^192,4010219162368274586 + 8909107489386083904*2^64 + 12903946180961699870*2^128 + 8828166136*2^192,14546698984818862334 + 5332815234417504278*2^64 + 16539229017361138569*2^128 + 34627621113*2^192,9061232683604078358 + 10885262147182227663*2^64 + 6058421250477318315*2^128 + 19213556136*2^192,5969414811046746722 + 10853480539136541188*2^64 + 15873825924004504543*2^128 + 8286215702*2^192,10678054830245795776 + 15202629677686142942*2^64 + 1674071728839523250*2^128 + 15105285613*2^192;\
6975557696255985596 + 7053084480213456141*2^64 + 15754559512820645177*2^128 + 5964186393*2^192,6974242515402436672 + 12778076362028123253*2^64 + 2833561318033177545*2^128 + 62356707030*2^192,5683838251909212232 + 2341426841524618914*2^64 + 10125076036591854889*2^128 + 36704715273*2^192,712946701953088168 + 13212862511160594780*2^64 + 9344647998302696821*2^128 + 3765076020*2^192,11022071276678783672 + 3944285436333775354*2^64 + 2205046019313523140*2^128 + 49579524113*2^192,851266680038113304 + 3540478490891937806*2^64 + 2796332902031124428*2^128 + 61944939985*2^192,7458847693647157192 + 7543226594232980541*2^64 + 15964961733015246637*2^128 + 18246357700*2^192,16050906351779713792 + 4786376921723293652*2^64 + 17978050083115989267*2^128 + 52089045984*2^192;\
17639225359906292622 + 7196303654683006426*2^64 + 7476886480101932242*2^128 + 18734473418*2^192,13587108725861776736 + 2407274512102458222*2^64 + 6882126760516216934*2^128 + 2211556109*2^192,7151082810876321476 + 3672205360955404255*2^64 + 8730649175455320720*2^128 + 18749206436*2^192,9984416783599195956 + 13955360456251622744*2^64 + 7749863309136045021*2^128 + 54369916322*2^192,9143774072089368636 + 16744629842162714499*2^64 + 1102018917996206197*2^128 + 11395895460*2^192,4785289017275338412 + 1492317707470761557*2^64 + 10847794059169478347*2^128 + 4639280660*2^192,8414418582476295684 + 15635034115338421599*2^64 + 10978927628872471085*2^128 + 10427059009*2^192,15317352547126337152 + 1553071971518382003*2^64 + 2748250955838968363*2^128 + 8440655729*2^192;\
2497333460258365483 + 13642252524250259800*2^64 + 3345377508998031809*2^128 + 14516097157*2^192,3311711055222035600 + 762736164619530502*2^64 + 6363302212056686749*2^128 + 27126215508*2^192,845526074602956538 + 9943762280840908100*2^64 + 17168114102583293164*2^128 + 60448716606*2^192,993719464438093170 + 14939098894496320808*2^64 + 8564086012083769365*2^128 + 40593499203*2^192,4990285174564114054 + 6549187924544972321*2^64 + 16878092452083139629*2^128 + 54504609277*2^192,16702178533155793406 + 4600047344956919922*2^64 + 4774688695233539148*2^128 + 39087105255*2^192,13218938027475426778 + 14986992146764519572*2^64 + 1827206768859138506*2^128 + 7975919312*2^192,14662534532898720192 + 12604963452876366936*2^64 + 9227553753376701563*2^128 + 33414344510*2^192;\
13279171535752759305 + 9345937958103497301*2^64 + 13278521867240685047*2^128 + 5538495279*2^192,11529125254864266736 + 321534666901498156*2^64 + 14355914381831298056*2^128 + 27730124281*2^192,3650456934041990046 + 18370760673785302857*2^64 + 10587392789763667005*2^128 + 25634085568*2^192,7353039030005301894 + 7945693577772690306*2^64 + 12616809355209723495*2^128 + 18312352207*2^192,7941770999886228066 + 11310368932141589661*2^64 + 12922729423653731027*2^128 + 34855559298*2^192,10442673230491403978 + 14496542322750114710*2^64 + 5422625764310019439*2^128 + 30723175685*2^192,6148392149629227070 + 18271287083238280960*2^64 + 6549534395018970584*2^128 + 5326637899*2^192,3028410985314187584 + 9145179418775131299*2^64 + 11350574400590337582*2^128 + 22260810765*2^192]
/* 
This matrix times 2^(-6) should be the matrix of frobenius.
*/ 
B = 2^(-6) * A; 
/* Freed 5244 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 - 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 - 2*x^4 - 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25
