/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[1, 2, 2, 0, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	4 
[0, 6, 0, 0, 0]  	18	4  <--- 2
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 5, 1, 1, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[0, 5, 1, 0, 1]  	19	4 
[0, 5, 0, 1, 1]  	20	4 
[0, 1, 5, 0, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	6 
[2, 2, 0, 0, 254]  	12	5 
[1, 0, 2, 1, 255]  	16	2 
[0, 4, 1, 0, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	2 
[0, 3, 0, 2, 255]  	19	4 
[0, 2, 2, 1, 255]  	19	2 
[0, 0, 0, 4, 255]  	20	1 
[0, 2, 4, 0, 255]  	22	2 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[9431574009836026798 + 465234766302170294*2^64 + 8337971966763232548*2^128 + 831093134*2^192,16803376777918124234 + 5770158491799624266*2^64 + 10018480767044800247*2^128 + 655151189*2^192,9549446620061675356 + 12559876871128249238*2^64 + 16680044744038856573*2^128 + 614546472*2^192,16251402678969417870 + 18413061044660084944*2^64 + 9639535732304866814*2^128 + 667464788*2^192,12957688267380818986 + 10447889465208793303*2^64 + 16060878823930766849*2^128 + 589256804*2^192,14026667533859154030 + 4392891385676855525*2^64 + 1979724668097486152*2^128 + 618368240*2^192,8931719700325774016 + 3757913743659434166*2^64 + 14153373671901127662*2^128 + 776667293*2^192,15553948154233682092 + 7477533808283494500*2^64 + 14399503379866349622*2^128 + 568347420*2^192;\
1594475440946508523 + 8537541394203060178*2^64 + 14821524714491107250*2^128 + 628090475*2^192,10456176389040800276 + 8621991252051653999*2^64 + 1483436099377081567*2^128 + 246440370*2^192,572375235381269386 + 17672812781197194138*2^64 + 7310054537746986630*2^128 + 358513347*2^192,5741092859577854734 + 5527965007879084967*2^64 + 11493414349425485541*2^128 + 508544499*2^192,15733778400510283490 + 9432854136667600928*2^64 + 12419693832873699162*2^128 + 233227673*2^192,6717923290460007690 + 12721309307314693790*2^64 + 5585909302021644911*2^128 + 999083049*2^192,11163877395180193018 + 301460880677041533*2^64 + 9675990689774074662*2^128 + 818323028*2^192,6193147821428043292 + 5118973810353430698*2^64 + 6134057972765901490*2^128 + 762163200*2^192;\
6855729077594546400 + 17160499906295617669*2^64 + 8152466480552498077*2^128 + 234328200*2^192,16746673392581527784 + 13262886323953772449*2^64 + 6683999061255723494*2^128 + 566529060*2^192,12791640536532640460 + 13276705124165197187*2^64 + 7159148983059282998*2^128 + 447589644*2^192,1625510767446284384 + 3004122570885460280*2^64 + 17591547203541964975*2^128 + 876699780*2^192,12834912149621562240 + 18307172735043434895*2^64 + 16692339560266259628*2^128 + 178253247*2^192,18362393546819732696 + 15948821050739439928*2^64 + 4950094315496160743*2^128 + 740722772*2^192,7558587378675330428 + 6690594383719396518*2^64 + 8992861346088908775*2^128 + 676716993*2^192,6748114428292794012 + 13867301660943218064*2^64 + 5069968963328061005*2^128 + 416533989*2^192;\
14648233216958429861 + 8707539576425968047*2^64 + 11898847437700204225*2^128 + 582466645*2^192,3634828732680622182 + 5104751772730566747*2^64 + 2106607037759715613*2^128 + 78051742*2^192,6569288228142885436 + 6468744476115350524*2^64 + 14551921216772587320*2^128 + 617059302*2^192,6710920579719674176 + 17254710054341025160*2^64 + 15505300052447210997*2^128 + 142852994*2^192,13388231141126694110 + 844164959300267035*2^64 + 856290718120766277*2^128 + 310750404*2^192,9719292721645968448 + 13860805057047378120*2^64 + 16096155293563903235*2^128 + 167092585*2^192,12477296985502847162 + 14271700315609681807*2^64 + 7408238632980537471*2^128 + 736076575*2^192,11651560962748249016 + 1216046390820420222*2^64 + 10632024204344409428*2^128 + 623377564*2^192;\
9961484792819700062 + 11894452268743272099*2^64 + 13600205592099187759*2^128 + 521745548*2^192,2455041988688188626 + 2396141759471850920*2^64 + 6472453856541362679*2^128 + 374759312*2^192,8618524496104548930 + 14681602115406781599*2^64 + 3072317501232948163*2^128 + 235112319*2^192,984599291228449924 + 5159368351024940110*2^64 + 14381953995391524154*2^128 + 261697265*2^192,18437601183249340816 + 15474196602571190528*2^64 + 13086978095354647154*2^128 + 143012768*2^192,14688203117565061574 + 12499854749696251606*2^64 + 12288126932995967095*2^128 + 390772538*2^192,7869196608807220380 + 2645071234959148168*2^64 + 12875187412635698452*2^128 + 341721439*2^192,2167424479343169808 + 2086792207174463293*2^64 + 12538281184969254763*2^128 + 506300283*2^192;\
17438581846136734938 + 5142991135026594870*2^64 + 8694000731135183674*2^128 + 764270247*2^192,3290501463909157400 + 11875530555163638088*2^64 + 7513259727426640655*2^128 + 341707253*2^192,11011991586266436622 + 4299175099604971983*2^64 + 4985881496411914581*2^128 + 381250255*2^192,367745712133649632 + 17335205464418110261*2^64 + 10428786997160258386*2^128 + 67308841*2^192,10304296461162351244 + 448929970745877569*2^64 + 1208204020919657024*2^128 + 562542529*2^192,192055618843736924 + 7375239763188696731*2^64 + 16031028696795634547*2^128 + 154458525*2^192,10387860881806502368 + 4813322736529428250*2^64 + 8923073836562313761*2^128 + 556723235*2^192,10345888294868847776 + 10005696654708869237*2^64 + 1343187437059293537*2^128 + 900604151*2^192;\
16666453031276322097 + 13130381133148891786*2^64 + 16604914694369112394*2^128 + 355141691*2^192,7821158290141726436 + 11930333541443439574*2^64 + 12033867724661008225*2^128 + 1061501615*2^192,18542044369805042 + 17126881688790606426*2^64 + 851783792169022335*2^128 + 640914195*2^192,323311954819852748 + 15640576465257979361*2^64 + 6755023140766112696*2^128 + 452399466*2^192,14766782765146828724 + 5408060364711736804*2^64 + 14129722251148673987*2^128 + 658893359*2^192,13296121755823738834 + 8937214171371370131*2^64 + 12310023294905291550*2^128 + 107771143*2^192,9314430542646812676 + 1883959472401862535*2^64 + 11592379017465327838*2^128 + 725183137*2^192,12988299331801461432 + 4543552372563140271*2^64 + 10572646687631022638*2^128 + 922890486*2^192;\
15547395474281955737 + 11314365486000877667*2^64 + 12378136865027712744*2^128 + 975864742*2^192,11439439453715446924 + 1309059342276099194*2^64 + 17062160875959233953*2^128 + 1044755294*2^192,15637581991037038870 + 9092556820224057211*2^64 + 5727464504097312601*2^128 + 809959590*2^192,11038091786215006002 + 17357927908380232310*2^64 + 3594555275130016395*2^128 + 750310212*2^192,11281872050032245828 + 15267441677213893462*2^64 + 7141336032074136581*2^128 + 631138301*2^192,918037238568007828 + 15247032330643709213*2^64 + 6296765421280923876*2^128 + 415477955*2^192,7058967166591334138 + 11855325937188237998*2^64 + 13368143124131026403*2^128 + 408070930*2^192,8144594794959204672 + 3488931093932286910*2^64 + 3256404391712441634*2^128 + 228510954*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4445 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 36
