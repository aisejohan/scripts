/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 44
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	4 
[2, 4, 0, 0, 0]  	18	6 
[1, 5, 0, 0, 0]  	18	6 
[1, 0, 0, 3, 0]  	18	2 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	4 
[1, 1, 2, 1, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 0, 5, 0, 0]  	20	2  <--- 3
[1, 0, 2, 2, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 2, 4, 0, 0]  	22	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 2, 1, 3, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[1, 3, 1, 0, 1]  	16	5 
[1, 1, 0, 2, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	5 
[0, 3, 0, 3, 1]  	24	4 
[2, 3, 0, 0, 2]  	15	4 
[0, 1, 3, 2, 2]  	25	2 
[0, 1, 2, 3, 2]  	26	2 
[1, 4, 0, 0, 254]  	15	3 
[0, 0, 0, 5, 254]  	25	1 
[0, 0, 4, 2, 254]  	26	1 
[0, 4, 0, 0, 255]  	12	2 
[1, 0, 2, 1, 255]  	16	3 
[0, 2, 1, 2, 255]  	20	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[16284165998588576404 + 11320684514496787707*2^64 + 17757736469851861982*2^128 + 3507458812*2^192,11510614376863882632 + 14518878557101846670*2^64 + 12036283297518081544*2^128 + 1597688173*2^192,14502963954543236016 + 11599957953320462021*2^64 + 5578407307583876128*2^128 + 8219772636*2^192,9120887874648915096 + 15263002142845280296*2^64 + 9106543970378062095*2^128 + 4071108754*2^192,4988788026596514552 + 5983893420139665416*2^64 + 11498265554289014411*2^128 + 1356802424*2^192,6046999112387302648 + 11349815709123738783*2^64 + 1899050892142733115*2^128 + 3679373367*2^192,13020153380186474216 + 7742543581836772556*2^64 + 14604561859859218134*2^128 + 665480097*2^192,8730388514863996032 + 13679335430203165*2^64 + 8496696750801479753*2^128 + 1708424050*2^192;\
17851564357303877711 + 15837915334350084725*2^64 + 1237324407834535745*2^128 + 6118138562*2^192,8594147559342016146 + 17270855157916172969*2^64 + 15847217975022467768*2^128 + 7786878831*2^192,12904862929626709324 + 12176490455851384717*2^64 + 11286472663261700569*2^128 + 3489499339*2^192,2702297175461181178 + 10743673978025941177*2^64 + 15063201264807893745*2^128 + 4019877618*2^192,14426516509248017830 + 4838370533623102321*2^64 + 7291063720331905548*2^128 + 4593857833*2^192,305993155903599346 + 11609963267269927976*2^64 + 15837811015797090764*2^128 + 5950233311*2^192,16501020364401583642 + 7529965465923524860*2^64 + 2563766025184906099*2^128 + 4254137797*2^192,5377019728556466584 + 7194286087651529171*2^64 + 14792454925887984753*2^128 + 4204558063*2^192;\
15190438976950363950 + 7562865600444196520*2^64 + 18311892771609518118*2^128 + 6890184321*2^192,425292731185125900 + 2502083041867060131*2^64 + 16866265965812188973*2^128 + 5075521387*2^192,13412421130371983272 + 6099474263849536890*2^64 + 15087061520315083725*2^128 + 95323946*2^192,18222411193627690036 + 3333447756428342752*2^64 + 320126617042161530*2^128 + 8341129983*2^192,16000734579586918532 + 8559558668864389566*2^64 + 2335442459003370793*2^128 + 238502756*2^192,1553090288372745092 + 16080225378409690938*2^64 + 7087479354691757474*2^128 + 6129491632*2^192,11245656345484532252 + 16369960217851617130*2^64 + 13115288063286414892*2^128 + 2276720967*2^192,16465749777876035872 + 7602655288349298369*2^64 + 9747735924858215123*2^128 + 8205297945*2^192;\
14037680016235117811 + 15953039586484864976*2^64 + 8728911137626211617*2^128 + 1833119334*2^192,8506902576757585142 + 13110246327292510350*2^64 + 9198985089473372736*2^128 + 6204916908*2^192,14539898295926282148 + 3448714162008009874*2^64 + 5914993684639561714*2^128 + 6139978223*2^192,8956615206445903106 + 3511998957544344037*2^64 + 1319214093209343322*2^128 + 475796653*2^192,16915638683691993922 + 12337873459180655575*2^64 + 5506901633960686256*2^128 + 1340553765*2^192,16903843524526364730 + 15422648048193676613*2^64 + 10289476566344994907*2^128 + 3202096947*2^192,17569586917588522158 + 359413342587498755*2^64 + 9532267658345767411*2^128 + 4536734347*2^192,7020509061229433360 + 2925603801240483099*2^64 + 6743491381458646171*2^128 + 8522502009*2^192;\
15921313892110201426 + 6387182025036226580*2^64 + 907865552802305123*2^128 + 3820264004*2^192,7650758184341071332 + 4947950816638764140*2^64 + 2991371600089966707*2^128 + 3752818664*2^192,5294724899183075768 + 9976965881644904435*2^64 + 6634357401238135655*2^128 + 1198869522*2^192,7743155529029377372 + 8460755127081535399*2^64 + 15015741771404174084*2^128 + 1791264864*2^192,3654611493194646636 + 1747981012499171861*2^64 + 3743452540673756529*2^128 + 201650260*2^192,7337501609178921356 + 11001825231442819225*2^64 + 9737467175422698402*2^128 + 2167050927*2^192,4673828499472148724 + 12231347944161037828*2^64 + 8048219299476996189*2^128 + 3876814630*2^192,12615700372910192704 + 8512669735182508518*2^64 + 5718604465728189767*2^128 + 447304827*2^192;\
3101464872965844375 + 7794366557819108033*2^64 + 9851319765553297555*2^128 + 1148241886*2^192,15267710587396085894 + 9455790930843663671*2^64 + 8621072730082405811*2^128 + 3435098961*2^192,13712133977505402292 + 15798806672392673385*2^64 + 16359868833586138218*2^128 + 6263777638*2^192,4077332887091685834 + 13893608954343957057*2^64 + 983838532363969598*2^128 + 3085353005*2^192,3395102640055270402 + 12604883540469085985*2^64 + 11848897749656085299*2^128 + 4656589806*2^192,3477271803592426658 + 13974821958317104113*2^64 + 7037370498438272766*2^128 + 4680548055*2^192,11385453411434019486 + 14224415400998048041*2^64 + 5636957592784376256*2^128 + 3164341704*2^192,10466068321626189600 + 5217758412982458001*2^64 + 9098021949891548061*2^128 + 3291802558*2^192;\
4901689557036056415 + 7204238396583217996*2^64 + 6710411003384670789*2^128 + 6943554666*2^192,8527137381590947090 + 3521749218659969093*2^64 + 17873941232885967679*2^128 + 7591885474*2^192,6043665672006585420 + 3130648640067792666*2^64 + 8852877190177640508*2^128 + 5866694782*2^192,8834681112178305978 + 12189615937128317864*2^64 + 1748928411266706262*2^128 + 1398963914*2^192,7502868664890725782 + 12031026152193814068*2^64 + 15697050196789944982*2^128 + 1217458512*2^192,5244680616287861298 + 3360147674164573973*2^64 + 13642380169136351900*2^128 + 3027192264*2^192,10336512993866446458 + 3372558887250484172*2^64 + 11955531770319467876*2^128 + 3983264447*2^192,9399094535524611512 + 6975987809155928234*2^64 + 4237769287162936449*2^128 + 2183393417*2^192;\
11450697554409086682 + 5229967113829939298*2^64 + 1699718214443341478*2^128 + 2098104370*2^192,10529336812968511856 + 911006806134803430*2^64 + 1869297897708262884*2^128 + 6835257003*2^192,11689323333780466976 + 18352590188814245205*2^64 + 13542814181839321244*2^128 + 1453288038*2^192,1745412948981858908 + 2918760132407332415*2^64 + 1246780931586311345*2^128 + 2129834343*2^192,5186685456319828128 + 547942787432336723*2^64 + 10951594609683288207*2^128 + 406446422*2^192,14227530548849640876 + 9985562268219550217*2^64 + 15052028864679642338*2^128 + 204371332*2^192,2305763095311880656 + 1234294527996863204*2^64 + 18027077136803156741*2^128 + 4037537566*2^192,416526616043578040 + 11085652670810149560*2^64 + 8287000456061852017*2^128 + 1883238391*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 5276 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 - 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 - 2*x^4 - 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 29
