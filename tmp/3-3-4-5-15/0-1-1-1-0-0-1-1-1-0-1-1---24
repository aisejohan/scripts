/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 59
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	6 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	4 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[0, 4, 2, 0, 1]  	20	4 
[0, 2, 1, 2, 1]  	20	4 
[2, 0, 0, 3, 1]  	21	7 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	5 
[0, 5, 1, 0, 4]  	19	5 
[0, 3, 0, 2, 253]  	19	4 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	4 
[0, 7, 0, 0, 254]  	21	5 
[0, 0, 0, 5, 254]  	25	1 
[0, 0, 4, 2, 254]  	26	1 
[0, 6, 0, 0, 255]  	18	4 
[0, 1, 4, 0, 255]  	19	2 
[0, 1, 3, 1, 255]  	20	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
------
The gap is between 5 and 252.
Lengths: 1 1 6 6 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7222898752062878746 + 15740918299685682633*2^64 + 5386094548932030899*2^128 + 745222887*2^192,9175158221614558624 + 8721195654363195458*2^64 + 6953730610678844167*2^128 + 1310618530*2^192,2015880163253828600 + 17004026676400457860*2^64 + 11610399817149403813*2^128 + 3583645545*2^192,7418835757404772040 + 147311443700871683*2^64 + 7912314564659647730*2^128 + 1052038675*2^192,9440348540187533968 + 1528581713258955494*2^64 + 5131260707958018833*2^128 + 1050129921*2^192,499287254544318468 + 2977682605037306818*2^64 + 5571170994187195774*2^128 + 3426656657*2^192,6772723106101607492 + 15888111753903991504*2^64 + 17732713524007557941*2^128 + 2838602770*2^192,5687644287670424376 + 13634240536204777679*2^64 + 85811822367659085*2^128 + 1649632819*2^192;\
14129380825774733452 + 303240793068354637*2^64 + 8562503519415631410*2^128 + 1853663299*2^192,13196073747350108712 + 1678462566009828674*2^64 + 15863633034626467704*2^128 + 115006208*2^192,4037332701162185640 + 392236322118412532*2^64 + 17801497902404164801*2^128 + 1777275657*2^192,12996012182219051528 + 9725744733521885050*2^64 + 10646338358748899517*2^128 + 1066700237*2^192,4413554579485314952 + 7568129769003394247*2^64 + 10883488273959894882*2^128 + 1759367749*2^192,10481350367170179792 + 8893025051443947193*2^64 + 14427949890397463040*2^128 + 274197243*2^192,5251475113155256368 + 17971536806076366925*2^64 + 924498844583040979*2^128 + 1132729646*2^192,12080688199537900544 + 6264034628465223111*2^64 + 8380260415888685325*2^128 + 1549263844*2^192;\
7814743006779409773 + 15552754375344611485*2^64 + 10879508935803481389*2^128 + 340564086*2^192,4242665394275252304 + 5606814246778108734*2^64 + 802507238628413827*2^128 + 4202263128*2^192,5074351047381952924 + 2063578553246714648*2^64 + 17046147761003216466*2^128 + 2368970994*2^192,10860765192691436172 + 7106597913008497049*2^64 + 11511176926644386662*2^128 + 3729949790*2^192,15578725261279671504 + 6776429802955005180*2^64 + 4310368780711160403*2^128 + 3692292836*2^192,10003293516327261314 + 4609807085966241811*2^64 + 10677458754192189677*2^128 + 580643806*2^192,13900928417085721330 + 5452307668885456140*2^64 + 7111591208584225379*2^128 + 680850735*2^192,7255286808531654300 + 13014187040034089498*2^64 + 3732469458935392873*2^128 + 3231742163*2^192;\
2986124613499239010 + 10634838106538988503*2^64 + 14981567631563570588*2^128 + 2344087463*2^192,304935501086710440 + 3086176337852191824*2^64 + 15376981953579074170*2^128 + 673541901*2^192,2080651174442459904 + 15802837400312952612*2^64 + 13291055358613858157*2^128 + 2574565404*2^192,2767955720373082248 + 8139457606155189663*2^64 + 10482457837397374202*2^128 + 1376171970*2^192,4551964966177092504 + 7249798969967778747*2^64 + 3601008099263944049*2^128 + 1056633410*2^192,6799655038171314732 + 11907069069238770254*2^64 + 8082859994208282274*2^128 + 1689811113*2^192,8330241353417040716 + 8624959536772861715*2^64 + 9947766021028210837*2^128 + 3615356189*2^192,6826853045811967528 + 16984991942025419215*2^64 + 11047053277657106195*2^128 + 1668354836*2^192;\
15045895897234890016 + 8108026279287532375*2^64 + 16601629988652030408*2^128 + 1631002497*2^192,16913026841215313576 + 14915014783980506477*2^64 + 9667522050190086690*2^128 + 4187706303*2^192,7650350595812440208 + 2496939349239467114*2^64 + 7781605883345142623*2^128 + 3590561315*2^192,5555316002415890496 + 12990915494092072476*2^64 + 4592550073300884031*2^128 + 1969048056*2^192,5787115034737616328 + 12651233764813922538*2^64 + 3687249596914399883*2^128 + 115479987*2^192,4257943301624564848 + 6427495937297230983*2^64 + 13243347303308558479*2^128 + 1629288481*2^192,15595695545431889104 + 2224775432756283334*2^64 + 2578709079329316051*2^128 + 481803242*2^192,13362944098189313344 + 12325939898299684219*2^64 + 12766454056694001019*2^128 + 4015403879*2^192;\
15998999046599070377 + 17435863880229484738*2^64 + 9625647438319201501*2^128 + 3506295465*2^192,8458602210520861464 + 15915908019615487695*2^64 + 12962894882949788090*2^128 + 1497951090*2^192,18261120287466051196 + 9121726666876538121*2^64 + 1530546483257829293*2^128 + 3732413795*2^192,2501902016182222372 + 408999703175222837*2^64 + 11698209168093642871*2^128 + 808923504*2^192,16215549238060271368 + 16669729234012740949*2^64 + 5251932844208757246*2^128 + 2340701562*2^192,4479812324461773946 + 13097563792438368769*2^64 + 2451088839533608321*2^128 + 160303897*2^192,14585741509460312930 + 1286163533357267525*2^64 + 6742691967931273262*2^128 + 502593308*2^192,14062730401804763164 + 7200150298059378007*2^64 + 8430816631681795587*2^128 + 2473293282*2^192;\
5728119779456200906 + 12822681428214473765*2^64 + 7508461063159893144*2^128 + 890070547*2^192,8286107438779955512 + 12099720225823459254*2^64 + 3373787588908901512*2^128 + 1508860736*2^192,4811524861767802456 + 15689113653836475116*2^64 + 1701258549156275962*2^128 + 1875004450*2^192,15003801807549001992 + 7849805617664751556*2^64 + 9477170405849505782*2^128 + 3731110383*2^192,3850536654429511120 + 16174262631985005561*2^64 + 180820249117701552*2^128 + 797022570*2^192,2354139672313852580 + 8362262367218981601*2^64 + 4449942652551460916*2^128 + 4112713068*2^192,5078260847995383252 + 16078571264450477655*2^64 + 12656960194018136343*2^128 + 762303972*2^192,2479273391526819176 + 322126898586063671*2^64 + 10764702368841406550*2^128 + 2031648473*2^192;\
4640922924515405234 + 3242286062634100253*2^64 + 13268158336636797961*2^128 + 1363557415*2^192,18034704277839282256 + 18023674233296451941*2^64 + 12879035444366608102*2^128 + 937071834*2^192,3797165128371020472 + 9212581721765754092*2^64 + 9193702020576698738*2^128 + 1581762043*2^192,4981819097946245896 + 17884757647947603453*2^64 + 17492075911984491662*2^128 + 411968976*2^192,15258847326722086928 + 10648475552897507999*2^64 + 8315097327264174595*2^128 + 1364209356*2^192,8085910486925681748 + 9292419523578470652*2^64 + 14558265058622916420*2^128 + 470260340*2^192,17256188153206450276 + 12375884297054008893*2^64 + 11001065590118699224*2^128 + 398232796*2^192,13984072195680958344 + 11283402524852309355*2^64 + 14179495154519850326*2^128 + 133890082*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4413 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
