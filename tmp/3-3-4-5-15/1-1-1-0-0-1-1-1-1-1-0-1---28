/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	7 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 2, 0, 1]  	17	6 
[2, 0, 2, 1, 1]  	19	6 
[0, 5, 1, 0, 1]  	19	5 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[0, 0, 5, 1, 2]  	25	2 
[0, 3, 0, 2, 254]  	19	4 
[0, 0, 0, 5, 254]  	25	1 
[2, 2, 0, 0, 255]  	12	4 
[0, 4, 1, 0, 255]  	16	3 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 1, 255]  	22	3 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8054858976512824862 + 16566267270911955789*2^64 + 5026203281743419371*2^128 + 3019352952*2^192,4754944946040771004 + 15964904136934730830*2^64 + 13889214106509716952*2^128 + 1775334858*2^192,13438163699227207136 + 1848136384653915001*2^64 + 2468966984701503724*2^128 + 628000903*2^192,5460942646249861108 + 8667382614377108019*2^64 + 13832426848298726494*2^128 + 1837673715*2^192,1841636501407915464 + 9925707524997714572*2^64 + 10927884201388220071*2^128 + 744067254*2^192,8197390245783268016 + 11232722758701236536*2^64 + 17341177305072935001*2^128 + 3598027301*2^192,14512211590306280664 + 16042481272072678441*2^64 + 9165803080367904079*2^128 + 3702375630*2^192,939907010447200896 + 3003756955791562966*2^64 + 11688941249651142319*2^128 + 241175872*2^192;\
12064449674384143629 + 18148522312169910424*2^64 + 10921228702119818055*2^128 + 3546494254*2^192,7009955950541229994 + 11307105759451066817*2^64 + 16218902199696918969*2^128 + 134139588*2^192,8532243662906734848 + 2010522536403506279*2^64 + 116814210088891993*2^128 + 3749639915*2^192,14397609422392524206 + 7314334169025335561*2^64 + 6890180716244517705*2^128 + 1889055464*2^192,9767863246178157916 + 1516972812139111737*2^64 + 9464469319835798569*2^128 + 2028873207*2^192,5930903237764751560 + 1198353019062488865*2^64 + 9066573269095743621*2^128 + 1753983607*2^192,15643576317235193500 + 17212734689364390455*2^64 + 5294635884253747893*2^128 + 3017298098*2^192,71854255340096896 + 12031901088198516195*2^64 + 11670010817249607332*2^128 + 2006073493*2^192;\
11932360706213831567 + 11319899659802375377*2^64 + 10885836320427012358*2^128 + 3330437267*2^192,13092987237376357598 + 9567413803346737638*2^64 + 12951403830895861752*2^128 + 1908451108*2^192,4808822081014820192 + 3468492796866325575*2^64 + 454669089746196393*2^128 + 1687693503*2^192,9767674843687269330 + 10414293162140308374*2^64 + 13721182721598147139*2^128 + 964349908*2^192,11227217199333573028 + 9038408643858936637*2^64 + 18097151700312588587*2^128 + 2146802493*2^192,10355123254017035736 + 10528440645087021365*2^64 + 15371953277409497321*2^128 + 3174667807*2^192,6966568016025782980 + 14660011148100582156*2^64 + 16311263275608486721*2^128 + 216620310*2^192,11264385611953919712 + 968329792199195063*2^64 + 4209412517442594313*2^128 + 598584187*2^192;\
3204048938383644376 + 11728602951824003004*2^64 + 15592988533710785994*2^128 + 1269940794*2^192,7367280337784821280 + 1234938704589277432*2^64 + 15461324764714210541*2^128 + 2137109759*2^192,11491259277808872288 + 13550433852710045378*2^64 + 6719378870955995594*2^128 + 1674266343*2^192,5615017189603553352 + 7408523059550880981*2^64 + 10318589342158057196*2^128 + 2235689602*2^192,644157571826128680 + 2662072555823747338*2^64 + 4573710541298828556*2^128 + 3102168712*2^192,12782903407960751544 + 4682423927744248275*2^64 + 10756760942891584174*2^128 + 4272477373*2^192,12348570949657528336 + 8826661059647483888*2^64 + 9205793398738169657*2^128 + 3485444077*2^192,3323730251262116112 + 18421741748277827750*2^64 + 18315454833564249695*2^128 + 41919476*2^192;\
7993922289746812223 + 3087501975815499510*2^64 + 5624497455373036801*2^128 + 4099090390*2^192,1044450017758471574 + 17286184434351828068*2^64 + 16928454575218305165*2^128 + 1882609845*2^192,10514434133765618408 + 4943295368335141892*2^64 + 17869110362093311844*2^128 + 662464146*2^192,1913262887896850050 + 15708544775748308217*2^64 + 3390214270220134632*2^128 + 4141261477*2^192,18190611171060980316 + 7299505710978632899*2^64 + 5682667756678287817*2^128 + 4141007404*2^192,5216077837337619056 + 12186342228901254977*2^64 + 16553321604660421623*2^128 + 3455668467*2^192,12170539994952333044 + 5444753083925738619*2^64 + 8504030970720712102*2^128 + 4093645730*2^192,12838597281356374016 + 8896485899123595395*2^64 + 14045080327259935531*2^128 + 3313996454*2^192;\
9523998712512246751 + 16327750808655879988*2^64 + 17024301343120523426*2^128 + 1951266951*2^192,11479316012976539702 + 6409072403694434459*2^64 + 4782015953405408638*2^128 + 818202668*2^192,6207313474698513008 + 5222464758804189263*2^64 + 17357947540572288682*2^128 + 1024316600*2^192,10438670935204164706 + 2902662993896246081*2^64 + 6817422592914523475*2^128 + 1700121000*2^192,12595591631920732548 + 5318946930346325314*2^64 + 4870969653156818510*2^128 + 3360232850*2^192,18309360752995351920 + 14639117056292009140*2^64 + 13146936365976467232*2^128 + 2449730695*2^192,7987634139931747348 + 16542265396287856822*2^64 + 15215758913878835957*2^128 + 1703599042*2^192,16746170181318769008 + 16626520197829973559*2^64 + 2714004944777095903*2^128 + 2832910093*2^192;\
10441616694936040240 + 16233530932288466476*2^64 + 17561999872536783585*2^128 + 2294237616*2^192,823614552534831456 + 17463898742359933092*2^64 + 17063334985251227053*2^128 + 1189956795*2^192,6213461669513701064 + 6690794646886425167*2^64 + 5704921428062258127*2^128 + 3230404274*2^192,12157444257932997280 + 2018145054038149875*2^64 + 14753495853605617342*2^128 + 3087736008*2^192,8551742607874338584 + 2048585592691318321*2^64 + 17353711070696564765*2^128 + 4024712201*2^192,3816332561268103872 + 3737817774784067917*2^64 + 4578168346737680141*2^128 + 26887052*2^192,17079574587454056400 + 15621876264006355244*2^64 + 4490683495845922969*2^128 + 597945789*2^192,16884257306425999472 + 9718770701230832216*2^64 + 5244300349786516544*2^128 + 3408668702*2^192;\
16481367087447723372 + 14600414113603095759*2^64 + 15302231383750219500*2^128 + 4170914969*2^192,3892997547923300232 + 5512020248760458385*2^64 + 3119180916904927459*2^128 + 1413701390*2^192,4089079430427794048 + 6216467131911314083*2^64 + 14689893409109297767*2^128 + 384678085*2^192,3755894233025862680 + 9978931041322112352*2^64 + 464081172618486714*2^128 + 2128272838*2^192,5325593530958640080 + 13676804977915052801*2^64 + 9695963743364209410*2^128 + 3678782786*2^192,17341053287827394160 + 12543161390548381314*2^64 + 4734719834457425960*2^128 + 1521059262*2^192,6348453462193031184 + 931492020889860178*2^64 + 1227549672584587428*2^128 + 1060018853*2^192,6884891390029757680 + 17831201211311051938*2^64 + 11685433402029416634*2^128 + 1605888179*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 27
