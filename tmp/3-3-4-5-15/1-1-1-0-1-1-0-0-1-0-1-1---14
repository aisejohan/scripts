/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 59
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 2, 0, 2, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	6 
[1, 3, 2, 0, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	8 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[1, 5, 0, 0, 1]  	18	6 
[1, 1, 2, 1, 1]  	19	5 
[1, 0, 4, 0, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	4 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	3 
[1, 3, 1, 0, 2]  	16	6 
[1, 1, 0, 2, 2]  	16	5 
[1, 3, 0, 1, 2]  	17	6 
[1, 2, 2, 0, 2]  	17	5 
[1, 0, 2, 2, 2]  	21	6 
[0, 1, 2, 3, 2]  	26	2 
[0, 7, 0, 0, 252]  	21	5 
[0, 0, 4, 2, 253]  	26	1 
[1, 0, 2, 1, 254]  	16	5 
[1, 0, 1, 2, 254]  	17	5 
[2, 2, 0, 0, 255]  	12	2 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	2 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	2 
[0, 6, 0, 0, 255]  	18	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[3362633928167546106 + 15805570224678629727*2^64 + 10528989637872812196*2^128 + 616457207*2^192,2844977360310687188 + 16131682004167088146*2^64 + 18057754023123429082*2^128 + 2019060200*2^192,10693656142986103480 + 14047320342799067871*2^64 + 7743630195483717978*2^128 + 1055440640*2^192,12828400393588293328 + 5886551489757690602*2^64 + 17800136883878010583*2^128 + 342892771*2^192,15616759955249837464 + 2578569861150082509*2^64 + 17743394712056431505*2^128 + 914285640*2^192,13192780860557924172 + 11286869255710968270*2^64 + 14338144695960102508*2^128 + 962208355*2^192,779871465703515244 + 10569289413472742615*2^64 + 17534051848823433944*2^128 + 1518802608*2^192,3201435721799843280 + 8833695873676899093*2^64 + 6730031046144517216*2^128 + 1808740350*2^192;\
374705909263163492 + 6107349311364625108*2^64 + 11493109289022425572*2^128 + 1627210341*2^192,1362473842660500516 + 10473570941297554417*2^64 + 3246371392320030684*2^128 + 312878357*2^192,17687525196704641812 + 15289743461451913170*2^64 + 11515905894931214325*2^128 + 1614305549*2^192,7295304430332325764 + 1902262328139888197*2^64 + 2630665524482174279*2^128 + 849648643*2^192,9130258374209755684 + 15719874693812199965*2^64 + 6866350160160176186*2^128 + 48001917*2^192,8620761125147597892 + 8270414118440160196*2^64 + 827593100874539741*2^128 + 2075851384*2^192,4916233119524616920 + 2103704880593188645*2^64 + 14482263944728259349*2^128 + 595716275*2^192,11978504570588799376 + 10507596278473484748*2^64 + 14903196179908511436*2^128 + 504110416*2^192;\
4275174475069443144 + 3639513776712436813*2^64 + 12333275377254563471*2^128 + 264266438*2^192,16406802986463455160 + 11208928077462459593*2^64 + 1730772707900246764*2^128 + 73693841*2^192,2771156936022976560 + 1837460675000955450*2^64 + 4334729155258786480*2^128 + 1267066342*2^192,1817300036909205920 + 16172552492622901287*2^64 + 1786025249056224568*2^128 + 1382368680*2^192,16339053690973472928 + 2036636554089207672*2^64 + 3486646315044070045*2^128 + 2029017314*2^192,3802449973516917264 + 17125581875770398161*2^64 + 2363517633137098472*2^128 + 1632936890*2^192,5262462180499206200 + 10007260563358267156*2^64 + 1113583043804153358*2^128 + 1984178554*2^192,5882726473430237384 + 398057352176797316*2^64 + 9241238620205089080*2^128 + 2144088142*2^192;\
16310003252029528330 + 5592534769184904*2^64 + 5189920275598799936*2^128 + 1301931959*2^192,9496376475863365228 + 10116261238944317355*2^64 + 16674060080666611956*2^128 + 1442253110*2^192,7542971383445120128 + 13070851623898601929*2^64 + 17739415104845316732*2^128 + 105882783*2^192,8089981091862338812 + 16560619307728127465*2^64 + 6761634737926446389*2^128 + 2024381536*2^192,5078569088139913540 + 12636495856434740012*2^64 + 1918040271909580767*2^128 + 945629885*2^192,16641110271012934232 + 16180755685375426090*2^64 + 6669826269251905161*2^128 + 748217639*2^192,693982000423031304 + 13802940909099036702*2^64 + 3855634634122274321*2^128 + 967060237*2^192,8926842125594998392 + 13270604441655132703*2^64 + 1277572388109286449*2^128 + 1188159244*2^192;\
481750477354173869 + 2761075576571274262*2^64 + 9445579654693680066*2^128 + 363869194*2^192,7260865267486828250 + 14258384012483519052*2^64 + 3233735589757991855*2^128 + 1277296257*2^192,10388067694087981140 + 13097869933682883425*2^64 + 7431423319493969023*2^128 + 623310798*2^192,6679422708602161420 + 10144758417017328445*2^64 + 4164661681221471700*2^128 + 974067574*2^192,827763712819409652 + 4406293544958749659*2^64 + 14530050678066156213*2^128 + 1743815051*2^192,1313876100495266986 + 14666220510246275447*2^64 + 9161395549128247328*2^128 + 1828261506*2^192,4976924279222563254 + 11086297692239219941*2^64 + 11956076096094485290*2^128 + 973726292*2^192,7638198104531659456 + 12507854665068502402*2^64 + 920675085140823204*2^128 + 1823950314*2^192;\
14741373933099986309 + 7569447201424463700*2^64 + 16591940352787323955*2^128 + 479803330*2^192,2308010279564283538 + 5163896111726680656*2^64 + 13459461054937937886*2^128 + 737331826*2^192,6642793636991906336 + 7835943374860212649*2^64 + 17721577365197907066*2^128 + 527345673*2^192,1358979139393349680 + 14708414153491660460*2^64 + 10049454746703003931*2^128 + 857100993*2^192,6525595366248101216 + 4090797778292885196*2^64 + 2023430417808416965*2^128 + 199846734*2^192,1799352659366387782 + 18441230840435332577*2^64 + 10208413398370300322*2^128 + 1043823412*2^192,467112576927987390 + 7193085628920578774*2^64 + 6503078926130718785*2^128 + 671347535*2^192,15556209094585704288 + 8898587029600845891*2^64 + 16085861208464583941*2^128 + 722373941*2^192;\
11648045799485717940 + 3671103505156710089*2^64 + 13500506566371355135*2^128 + 593344827*2^192,14587533656729673572 + 12593992762263089730*2^64 + 3929368056453165175*2^128 + 1389619647*2^192,16790206014923247036 + 4827307695996667199*2^64 + 5794357471495933856*2^128 + 1587175432*2^192,4007001364977792360 + 15422398548671913101*2^64 + 8757894054807056604*2^128 + 382661037*2^192,7447394175094406540 + 10064682300799471725*2^64 + 3815958475461437775*2^128 + 519807648*2^192,889590237091515092 + 8725328652594549285*2^64 + 18292694735889754702*2^128 + 1784537718*2^192,1976325265315597164 + 7134474685249613755*2^64 + 9997524312781867665*2^128 + 1230752600*2^192,9756464859264355312 + 7192982716913482050*2^64 + 6869023654465694781*2^128 + 1744860190*2^192;\
7832183016335531658 + 1360254137906818946*2^64 + 14478683582822604409*2^128 + 965015718*2^192,10432876984531605784 + 8941918458155596688*2^64 + 14946387843340900950*2^128 + 174740179*2^192,7591530863542518968 + 2279297104997657085*2^64 + 2756529664913016892*2^128 + 2098505258*2^192,9489247288152841952 + 4047404228156904454*2^64 + 14736609219366826177*2^128 + 538131948*2^192,13169432130247409884 + 6544371975525817150*2^64 + 10268284653489624476*2^128 + 2042226675*2^192,6704887267231153352 + 4403294411522101226*2^64 + 11550438263434150263*2^128 + 828432169*2^192,664673663331677800 + 17469878038637845855*2^64 + 9812890831691800945*2^128 + 1936868381*2^192,3604368750117165840 + 16165353436125008442*2^64 + 9410079978690009572*2^128 + 1828359724*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4687 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 8*x^4 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: Mat([x^8 - 2*x^6 - 8*x^4 - 32*x^2 + 256, 1])
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 33
