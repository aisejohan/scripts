/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 54
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[1, 2, 2, 0, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 1, 1, 2, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[0, 6, 0, 1, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 5, 0, 0, 1]  	18	6 
[0, 5, 0, 1, 1]  	20	4 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 4, 0, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[0, 5, 1, 0, 2]  	19	5 
[0, 2, 3, 1, 2]  	23	3 
[2, 2, 0, 0, 254]  	12	4 
[0, 3, 0, 2, 254]  	19	3 
[1, 0, 2, 1, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	2 
[1, 0, 1, 2, 255]  	17	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12680632609040594208 + 5394435365922107035*2^64 + 9121551484870596117*2^128 + 467553446*2^192,12373554925132051588 + 8398701394362597393*2^64 + 6342567197267108944*2^128 + 366443681*2^192,392670341777211916 + 7813609258382333623*2^64 + 5484333117941716475*2^128 + 1051091086*2^192,8694795363198347166 + 11787111747852484439*2^64 + 9015167271565634586*2^128 + 46831233*2^192,14567999669784346794 + 10241709901525091940*2^64 + 9514785222696038510*2^128 + 909046727*2^192,793919285116978058 + 16368992729249511821*2^64 + 10361106110073004728*2^128 + 688044153*2^192,14240546141127980958 + 6374795205592157816*2^64 + 11167576376250304122*2^128 + 741360313*2^192,10816905142883215708 + 6752846334664922900*2^64 + 4070371368620169199*2^128 + 866358476*2^192;\
1494177447821204701 + 12950694187812644680*2^64 + 3484376265890591885*2^128 + 50480411*2^192,15060556598902544150 + 17100648327673381916*2^64 + 14846052984309946752*2^128 + 530454978*2^192,16625530599947009196 + 17615732960245278725*2^64 + 1813365561566903266*2^128 + 896955940*2^192,13395229053711115741 + 17016261856297231480*2^64 + 2784824554613410922*2^128 + 610723289*2^192,14838928105972599539 + 5026969176612238646*2^64 + 1733427055116138764*2^128 + 285719409*2^192,6364827783698102493 + 12511290241524438000*2^64 + 8047743544706893964*2^128 + 886080268*2^192,8313056671655716405 + 15246494790431449686*2^64 + 4923340892145625403*2^128 + 1048186366*2^192,16778252801571403490 + 16397760783113679288*2^64 + 3372281699267474930*2^128 + 774620445*2^192;\
5561977978743004596 + 12782277126940181849*2^64 + 518865886816706552*2^128 + 931261990*2^192,12901976973006081296 + 8300109135823544165*2^64 + 8158942693868048887*2^128 + 522049895*2^192,12006127860825446180 + 2024227055300418342*2^64 + 15924690140619441684*2^128 + 660354543*2^192,13515942536521302768 + 7763816498744212750*2^64 + 13752716940697511357*2^128 + 564223637*2^192,10974351920230404488 + 9860943897998555302*2^64 + 5210171467756984582*2^128 + 299801434*2^192,3218492644388637288 + 2005923208879835508*2^64 + 11161348019933519736*2^128 + 696227049*2^192,11102458656583826324 + 8811670867128125176*2^64 + 3651679840493910505*2^128 + 911665748*2^192,8344545659209648476 + 13853381301152791028*2^64 + 6118664489716274032*2^128 + 129593519*2^192;\
14774180281715331063 + 7251682203552216008*2^64 + 4154687530212660797*2^128 + 762551082*2^192,7561745895528576092 + 16068371236509198065*2^64 + 4729429743279296665*2^128 + 795636637*2^192,7274497643003779906 + 7524248386392866582*2^64 + 4141995540970199907*2^128 + 116330625*2^192,12071318190846415493 + 1038184494200935342*2^64 + 7131771073628217097*2^128 + 728028131*2^192,1981149998524067041 + 16509254651122269536*2^64 + 11256570256182003421*2^128 + 361433795*2^192,238917046479892997 + 3335414258698820091*2^64 + 10918018217156391514*2^128 + 650322975*2^192,7979556839706777743 + 15889048183186488904*2^64 + 173824638111557558*2^128 + 541438932*2^192,3430127364621382002 + 11844830870535530022*2^64 + 133754343874876155*2^128 + 30416233*2^192;\
322940368213099218 + 2238745694583411162*2^64 + 18384380429402952156*2^128 + 206034218*2^192,13582371376934161152 + 9282958617020319223*2^64 + 8809624888485861454*2^128 + 839115164*2^192,7148197605965985080 + 8880886866670341899*2^64 + 15778735201231370892*2^128 + 390060138*2^192,15473154077301624401 + 6237205543696847084*2^64 + 6425500060334106640*2^128 + 102255859*2^192,11303802504244143695 + 16460848666934542457*2^64 + 11515931674298666032*2^128 + 332941686*2^192,4336938824344314285 + 13735651268511636190*2^64 + 10961513284243640771*2^128 + 80151250*2^192,9347525895395763557 + 15644871473257795099*2^64 + 2398353197452029627*2^128 + 153612052*2^192,15748784412051765530 + 5701782013711566546*2^64 + 8479172819588143525*2^128 + 810252384*2^192;\
12747961364092322962 + 11606945597247266711*2^64 + 16630468348824336780*2^128 + 545254779*2^192,18298200848112489576 + 2720655703889490627*2^64 + 10866127238171926436*2^128 + 238663381*2^192,6541226966498841718 + 5441693874291652175*2^64 + 3110481717302308662*2^128 + 401159200*2^192,1329513608760916966 + 5394995616764989604*2^64 + 12990659548997648289*2^128 + 378387969*2^192,1482799197262481142 + 5954395199915419098*2^64 + 4371326441901464147*2^128 + 947169075*2^192,16797397441142941590 + 15353427676148668011*2^64 + 3457849389955019056*2^128 + 347693124*2^192,17501738750476370694 + 14877743041025242308*2^64 + 12258958173452688064*2^128 + 453812805*2^192,10781235445555016124 + 12652808302056641642*2^64 + 8211103555317895528*2^128 + 138418663*2^192;\
1865557555509846484 + 8014657168149359546*2^64 + 10901079499797311292*2^128 + 404128135*2^192,9269955292546894174 + 10277381792528669650*2^64 + 4333741552021285188*2^128 + 847538872*2^192,3036177518835089286 + 6765314857596091449*2^64 + 899759826788399157*2^128 + 577787787*2^192,5322064753280830964 + 16786524914902573461*2^64 + 11435207865719983680*2^128 + 780175070*2^192,4551009155404295006 + 9569390523101823553*2^64 + 2217234756309026508*2^128 + 845348796*2^192,11751839978864663794 + 10289761469231914967*2^64 + 11920886054703653517*2^128 + 126178855*2^192,1360546050897697808 + 17996004013036751153*2^64 + 2920526994312001641*2^128 + 919793086*2^192,8589093750122853548 + 6961829513665979650*2^64 + 978713926423422809*2^128 + 363863507*2^192;\
6946138684400249883 + 672088468798705374*2^64 + 16445539827620383424*2^128 + 317740542*2^192,7774289344364832364 + 10257530958611491334*2^64 + 1179324461029488219*2^128 + 244332678*2^192,7952526713331368560 + 10756987667328513144*2^64 + 15359457260968553528*2^128 + 104543778*2^192,7129395208700281626 + 12943413743145614209*2^64 + 9796752877132838524*2^128 + 537871023*2^192,18102872739400329384 + 288972947793382720*2^64 + 12425484896418602518*2^128 + 381283864*2^192,16093751629945724948 + 9137571340583217776*2^64 + 6189849383813144413*2^128 + 900847057*2^192,7583249188908539268 + 14110032061520611035*2^64 + 7617497289881780583*2^128 + 459295670*2^192,8062513371511414828 + 1986344638275040597*2^64 + 4185906790803309832*2^128 + 637829954*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4736 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 4*x^6 - 4*x^5 + 16*x^3 + 64*x^2 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 4*x^3 + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 37

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
