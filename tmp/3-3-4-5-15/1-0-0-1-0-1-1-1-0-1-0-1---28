/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 41
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[2, 2, 0, 0, 0]  	12	4 
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 0, 5, 1, 1]  	25	2 
[1, 0, 2, 1, 2]  	16	4 
[1, 0, 1, 2, 2]  	17	4 
[0, 1, 5, 0, 2]  	23	3 
[0, 4, 0, 2, 5]  	22	4 
[0, 3, 2, 1, 249]  	22	3 
[0, 4, 1, 0, 254]  	16	3 
[0, 4, 0, 1, 254]  	17	2 
[0, 3, 0, 2, 254]  	19	2 
[0, 1, 0, 4, 254]  	23	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 6 and 248.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[18367694267129284282 + 11696240384943812971*2^64 + 13848470408200365966*2^128 + 347900104*2^192,12804328494238920238 + 7830876713593565818*2^64 + 11294778690857203231*2^128 + 720719856*2^192,11327465230137466308 + 15993537975153945376*2^64 + 11873065661547549450*2^128 + 644650693*2^192,11603943124300374684 + 14845076855788913082*2^64 + 16994352430137059367*2^128 + 22141515*2^192,17580921649386166684 + 16015445475915130137*2^64 + 17673200962293259153*2^128 + 159197094*2^192,1559945442611814832 + 12153630900677379861*2^64 + 6492284089948485289*2^128 + 697573019*2^192,4869606899526142116 + 16218344693782138638*2^64 + 11344153666139078744*2^128 + 1018551014*2^192,7323750993502272816 + 17579536026035411041*2^64 + 2044933706786764808*2^128 + 592681942*2^192;\
11932274177515506307 + 14610817770856098006*2^64 + 10809849079010249764*2^128 + 935947964*2^192,7882695217017154675 + 8066486877202537871*2^64 + 118823829255929556*2^128 + 210324917*2^192,1135008690903550726 + 7773112939165816896*2^64 + 8494090833811316982*2^128 + 154913176*2^192,14977302941534177936 + 9658081178796227644*2^64 + 16222748238268734759*2^128 + 889053691*2^192,12820641497947238754 + 12220687467942097870*2^64 + 5558632454107712711*2^128 + 876671572*2^192,11215293029051890088 + 13899689308657151691*2^64 + 4413175278606872822*2^128 + 1064650457*2^192,6895657330082423292 + 9403434044287782048*2^64 + 286182942839414365*2^128 + 1053873914*2^192,4183811006969311948 + 13434878376498094161*2^64 + 10476868421402268816*2^128 + 392670420*2^192;\
17643711432670970007 + 5418587311333159812*2^64 + 1778306805555076811*2^128 + 84736996*2^192,4549777648821900874 + 9100705376311978814*2^64 + 4966927240068947001*2^128 + 46714792*2^192,3987238595239260070 + 8202890364228108352*2^64 + 1001836622200310925*2^128 + 749747713*2^192,4197982996870689446 + 464195027953718563*2^64 + 83928765127212590*2^128 + 18892246*2^192,16170391307239634104 + 13896224426808535661*2^64 + 13203307282664802271*2^128 + 653437095*2^192,9667216471376578082 + 4439048056175006293*2^64 + 10535367123011581659*2^128 + 321940693*2^192,716431031021576544 + 8568301555180292692*2^64 + 5679079521495691352*2^128 + 200671213*2^192,5072335120527761672 + 14213646326187684888*2^64 + 5485102801726440466*2^128 + 289196004*2^192;\
1516601837429717182 + 6123787507477879961*2^64 + 9356309443902153710*2^128 + 427971835*2^192,8478833372033062311 + 9242903033778082300*2^64 + 8137108886194090972*2^128 + 220395587*2^192,16073334486118925182 + 9510951608686038281*2^64 + 1077832779480440536*2^128 + 25833336*2^192,17323728730435416686 + 5932894973637699473*2^64 + 11658427504820971291*2^128 + 371811927*2^192,8181132577845540522 + 2932583865226435519*2^64 + 16287020576137243262*2^128 + 33148600*2^192,8982625982559533632 + 5274828198754921049*2^64 + 7831351826826602363*2^128 + 97968806*2^192,6197231754904048060 + 4706808469234286665*2^64 + 5699957482970362474*2^128 + 1026617927*2^192,2034659310476392900 + 1982392181032416061*2^64 + 1358956217382045908*2^128 + 24618945*2^192;\
6427128415334978888 + 345565759402335403*2^64 + 11044652024814865173*2^128 + 253302237*2^192,16578313111878784851 + 9648100786047675776*2^64 + 9579200779188620974*2^128 + 97695422*2^192,7995698916436880972 + 9110712733336768283*2^64 + 13172407852725185738*2^128 + 655233515*2^192,10767626297402817278 + 2808420007923392352*2^64 + 13209437329424421172*2^128 + 78328401*2^192,1774859792700203326 + 13191561709625776225*2^64 + 8792512303628169854*2^128 + 713309548*2^192,13523539016950913264 + 5537213244539030700*2^64 + 14398978252122790494*2^128 + 653346080*2^192,11018640302716229620 + 16205858663257124138*2^64 + 12156089502802642975*2^128 + 70127232*2^192,4693470184938234548 + 3037656853135355931*2^64 + 16458677561443004259*2^128 + 917051796*2^192;\
1516601837429717182 + 6123787507477879961*2^64 + 9356309443902153710*2^128 + 256005371*2^192,8478833372033062311 + 9242903033778082300*2^64 + 8137108886194090972*2^128 + 136509507*2^192,16073334486118925182 + 9510951608686038281*2^64 + 1077832779480440536*2^128 + 726282104*2^192,14761053445789381228 + 13846876526095455674*2^64 + 17114437788542802367*2^128 + 284825887*2^192,8181132577845540522 + 2932583865226435519*2^64 + 16287020576137243262*2^128 + 96063160*2^192,11545301267205569090 + 15807590720006716464*2^64 + 2375341543104771286*2^128 + 176566238*2^192,6197231754904048060 + 4706808469234286665*2^64 + 5699957482970362474*2^128 + 867234375*2^192,2034659310476392900 + 1982392181032416061*2^64 + 1358956217382045908*2^128 + 1018668993*2^192;\
4132612603755072670 + 15416694722197752911*2^64 + 1419088968224496342*2^128 + 470751927*2^192,17463254872657017973 + 10410676425984716256*2^64 + 15647139882052088772*2^128 + 378246518*2^192,10662908585021963076 + 16751049040674665535*2^64 + 11324794496253916689*2^128 + 874513124*2^192,10994939423636590954 + 13172586338154237096*2^64 + 13359127808567862459*2^128 + 822824232*2^192,1397548990144065936 + 17490724990066029985*2^64 + 13611540404774459878*2^128 + 721854245*2^192,2292005099676298150 + 6303730562900797334*2^64 + 2360028693172214382*2^128 + 1011437695*2^192,7442784295717843100 + 7209457850159175010*2^64 + 13877252196186128214*2^128 + 510906085*2^192,10501550290277200016 + 8420879991180374510*2^64 + 3976921462562878509*2^128 + 57132540*2^192;\
900943424733976642 + 12553705333799987260*2^64 + 11369102880641126533*2^128 + 388638074*2^192,545741569916932756 + 12914536240386719607*2^64 + 7795716981052681397*2^128 + 105894392*2^192,16327586603994335044 + 14831609932679827477*2^64 + 8799881611126137337*2^128 + 43125117*2^192,14512104467374746636 + 15245603678595967074*2^64 + 10194100715155964800*2^128 + 800476783*2^192,9776256928604470932 + 7021878538349255647*2^64 + 1142211565447671246*2^128 + 493771703*2^192,14844547227159273788 + 4397139124601964285*2^64 + 12597907044531105118*2^128 + 482477453*2^192,5373601437774185440 + 8943142653299628280*2^64 + 14790163663063595911*2^128 + 815194885*2^192,2919961257349406372 + 13817134608289024907*2^64 + 12919618893151810140*2^128 + 483094475*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 5092 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 6*x^6 + 4*x^5 + 16*x^4 + 16*x^3 - 96*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 2; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 29

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
