/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 57
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	3 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[2, 0, 1, 3, 0]  	25	3 
[0, 7, 1, 0, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[2, 0, 0, 4, 0]  	26	3 
[1, 0, 2, 3, 0]  	26	3 
[0, 6, 2, 0, 0]  	26	3 
[0, 2, 5, 0, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 4, 4, 0, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[0, 6, 1, 0, 1]  	22	4 
[0, 5, 2, 0, 1]  	23	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	4 
[2, 0, 2, 1, 2]  	19	5 
[0, 5, 1, 0, 2]  	19	3 
[0, 4, 2, 0, 2]  	20	4 
[1, 0, 1, 3, 2]  	22	5 
[1, 0, 0, 4, 2]  	23	5 
[1, 0, 2, 2, 3]  	21	6 
[0, 3, 4, 0, 3]  	25	2 
[0, 3, 3, 1, 4]  	26	2 
[0, 2, 3, 1, 5]  	23	3 
[0, 1, 5, 0, 251]  	23	2 
[0, 3, 0, 2, 252]  	19	4 
[0, 0, 5, 0, 252]  	20	2 
[0, 0, 4, 2, 252]  	26	1 
[0, 7, 0, 0, 253]  	21	5 
[0, 0, 3, 2, 253]  	22	1 
[0, 0, 2, 3, 253]  	23	1 
[0, 0, 0, 5, 253]  	25	1 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	3 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 6 and 250.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6326875553014281544 + 9398804522077901041*2^64 + 7335601981504314899*2^128 + 4384502270*2^192,4036225640606149984 + 10775475970874291729*2^64 + 7476700358198399500*2^128 + 8414226849*2^192,1496977211108546136 + 15106641903200568522*2^64 + 16639413663442369194*2^128 + 817363531*2^192,15137035693518651356 + 5447748038080585378*2^64 + 3421694149377620757*2^128 + 1096483786*2^192,6155495193863417688 + 12767651704362627018*2^64 + 158763863513356036*2^128 + 3440795797*2^192,15541142500854758060 + 17376595581252998310*2^64 + 4951453902569625555*2^128 + 6902654143*2^192,10316483965251685372 + 3618472111558391788*2^64 + 857808104761260292*2^128 + 4113234344*2^192,15623278059487520840 + 6030627901438672920*2^64 + 9722503530114553735*2^128 + 4647201973*2^192;\
12395643953001822620 + 12915251777876059569*2^64 + 16378596990851558602*2^128 + 3584380260*2^192,9909527962558780048 + 16628354698101352801*2^64 + 15490201675489727675*2^128 + 680487159*2^192,10781574531700195668 + 13691925567509482027*2^64 + 11077172683026905367*2^128 + 2221332157*2^192,13096783938129966114 + 11994635515261466919*2^64 + 9938178970866240436*2^128 + 1331418063*2^192,12641295067911831668 + 18303614059896877544*2^64 + 15431281912882947461*2^128 + 1737198619*2^192,4219309938249086074 + 15511706166854145540*2^64 + 14208587138546031006*2^128 + 2568058412*2^192,5622108651950103138 + 3571532112643918007*2^64 + 4027031044366052961*2^128 + 1465484951*2^192,2701733221259512956 + 17650743931386452107*2^64 + 12741708694557381187*2^128 + 3554358537*2^192;\
6694409310012573450 + 9693942413961777381*2^64 + 437864592117803378*2^128 + 5042434170*2^192,9282345227164359448 + 17222426192551544693*2^64 + 9912097463473913173*2^128 + 5024078892*2^192,15023404163181905546 + 5207105941253985056*2^64 + 10256508492517231116*2^128 + 4343279359*2^192,2194580537349003297 + 11360467548518142089*2^64 + 15090635837917763096*2^128 + 5811133880*2^192,9917422607380635946 + 12656556540743506882*2^64 + 4801240050527435232*2^128 + 4810975661*2^192,8566103800972149917 + 4125538640016866535*2^64 + 6504546614307803192*2^128 + 5513327585*2^192,16451499689474339609 + 11166903798515481043*2^64 + 15327822160268043701*2^128 + 1600175509*2^192,867360010566326718 + 16564647755480100839*2^64 + 1997343047361188271*2^128 + 4637552051*2^192;\
10917829523078915888 + 3484146120185520706*2^64 + 13697816128015920121*2^128 + 3457086104*2^192,3383470625553190184 + 8505452764649563574*2^64 + 2705176226834201989*2^128 + 1366926846*2^192,1431489573245900926 + 4964294313608041121*2^64 + 6795581689861068244*2^128 + 5865626041*2^192,10162478581970448867 + 6676071658097224077*2^64 + 2881734332565179839*2^128 + 7658935828*2^192,3648454605667491878 + 192973735816531042*2^64 + 5747453394983296444*2^128 + 3245120682*2^192,10558052690087814383 + 11276677364345096601*2^64 + 16663906713984023196*2^128 + 1122964879*2^192,9520855304976433535 + 5842709724401306659*2^64 + 16928064229116180145*2^128 + 6800245251*2^192,13568921208382273250 + 8100979152734229328*2^64 + 7995418183743055461*2^128 + 3627437329*2^192;\
1594551079360417448 + 7783327472467733681*2^64 + 13208797548720730865*2^128 + 2007207585*2^192,8067004056430774888 + 15094279686544363153*2^64 + 17165510857836343750*2^128 + 282026381*2^192,18219320873120913750 + 4452682306468885037*2^64 + 1674587205886550743*2^128 + 2070119769*2^192,12698801560453557711 + 501641106467355272*2^64 + 12517709358770681823*2^128 + 2867113876*2^192,1041062147805823902 + 16201234305491307731*2^64 + 10472945499462578478*2^128 + 1699393195*2^192,8089444259369040747 + 9488842608037483697*2^64 + 13378175994549577155*2^128 + 2939511667*2^192,11271463327762734619 + 9165655507011285311*2^64 + 1844523602740017632*2^128 + 3476378673*2^192,2147732968425315306 + 8325505885985992536*2^64 + 7635700383919442091*2^128 + 1078647080*2^192;\
9205402879849267264 + 11331748074717628155*2^64 + 10804569585252486236*2^128 + 2788486098*2^192,16075269137508781464 + 10752507471981803856*2^64 + 9208691609283505247*2^128 + 787004937*2^192,14669330212888073110 + 2522120068385457272*2^64 + 3198699213472779820*2^128 + 8459091336*2^192,7641474813058277727 + 17928983083289562434*2^64 + 6419616786787928127*2^128 + 3007909922*2^192,213456292778191662 + 8395689176297216430*2^64 + 5959122189019158045*2^128 + 2213982163*2^192,17557259500752241355 + 16870642913509178105*2^64 + 3731667690094203999*2^128 + 1847953371*2^192,15074276128889993051 + 12725064287796014130*2^64 + 11989457133632965924*2^128 + 4081051145*2^192,4065054244813473418 + 15958265336031528475*2^64 + 5133911068994606678*2^128 + 2604920692*2^192;\
12295913797836440804 + 13064070492412257526*2^64 + 17749347965397997542*2^128 + 3642712633*2^192,9320486050455252416 + 13560387482839377795*2^64 + 17336893013550285119*2^128 + 7437603414*2^192,10245925889093872980 + 11940758871943912580*2^64 + 3909142543055570962*2^128 + 7607904454*2^192,6559875276643776738 + 1634059990665005783*2^64 + 18413594939531917490*2^128 + 2277406409*2^192,15042063631342247604 + 13218992755842969381*2^64 + 16754380990829196132*2^128 + 5426642006*2^192,8823648341183899450 + 2703979371746259276*2^64 + 4598603391174414957*2^128 + 3530600999*2^192,13099599296902299490 + 7047781587518979896*2^64 + 5904486103514376154*2^128 + 7243491888*2^192,14714877739816385884 + 13015080279221119486*2^64 + 9788633240550736170*2^128 + 3661770956*2^192;\
18215150118088651096 + 16991914485538928662*2^64 + 1055171025965067401*2^128 + 1357204865*2^192,2682835342364472320 + 16605510250923896388*2^64 + 9875545787288950919*2^128 + 484356988*2^192,14380934463444146712 + 13399514649613124369*2^64 + 15468398497736665880*2^128 + 3511004312*2^192,10690367909210799388 + 8482057492227424380*2^64 + 11544861886566689936*2^128 + 686587080*2^192,3308768962540371800 + 3375602421899188299*2^64 + 8313145559982429419*2^128 + 2659333294*2^192,7195777256169823468 + 6359573984681786629*2^64 + 4854796091586093530*2^128 + 944210610*2^192,13154610995790079516 + 15348518973184605005*2^64 + 2846248002261381954*2^128 + 3308358272*2^192,1409866535351532008 + 3318283778001306179*2^64 + 13576834158255218063*2^128 + 1776277786*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4335 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 25
The valuation of subst(g,x,A) is: 22

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
Look at the ideal generated by: 
1*x^3 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^1*z^2
