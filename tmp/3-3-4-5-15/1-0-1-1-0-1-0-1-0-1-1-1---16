/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 39
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 1, 2, 0]  	17	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 1, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 2, 0, 3, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 6, 0, 2, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 1, 1, 1, 1]  	18	6 
[0, 5, 0, 1, 1]  	20	4 
[2, 0, 0, 3, 1]  	21	6 
[1, 3, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[1, 1, 0, 3, 254]  	21	5 
[2, 2, 0, 0, 255]  	12	2 
[2, 0, 0, 2, 255]  	16	2 
[1, 0, 0, 3, 255]  	18	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 2 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12680632609040594208 + 5394435365922107035*2^64 + 9121551484870596117*2^128 + 312364198*2^192,14567999669784346794 + 10241709901525091940*2^64 + 9514785222696038510*2^128 + 357495751*2^192,3882236861751416470 + 5940220839624402138*2^64 + 3164850709656180644*2^128 + 281577647*2^192,392670341777211916 + 7813609258382333623*2^64 + 5484333117941716475*2^128 + 256270478*2^192,14775788231596912356 + 8615449263761619408*2^64 + 8953650558863495964*2^128 + 354259066*2^192,9250664320029914132 + 9403691680897552130*2^64 + 1393489064980149687*2^128 + 859492703*2^192,14240546141127980958 + 6374795205592157816*2^64 + 11167576376250304122*2^128 + 227558073*2^192,10816905142883215708 + 6752846334664922900*2^64 + 4070371368620169199*2^128 + 597923020*2^192;\
322940368213099218 + 2238745694583411162*2^64 + 18384380429402952156*2^128 + 477615402*2^192,11303802504244143695 + 16460848666934542457*2^64 + 11515931674298666032*2^128 + 367544694*2^192,11425928126601879385 + 4391937619078561981*2^64 + 6086434991120338252*2^128 + 145057329*2^192,7148197605965985080 + 8880886866670341899*2^64 + 15778735201231370892*2^128 + 429906026*2^192,9921102399364670080 + 9486519473102880009*2^64 + 16536160214253231559*2^128 + 200280857*2^192,1240286262601958328 + 2808318093270896704*2^64 + 4645318308779214256*2^128 + 398146276*2^192,9347525895395763557 + 15644871473257795099*2^64 + 2398353197452029627*2^128 + 401075988*2^192,15748784412051765530 + 5701782013711566546*2^64 + 8479172819588143525*2^128 + 297498720*2^192;\
6660918687636629955 + 202962098363521735*2^64 + 2814065001568522974*2^128 + 417394444*2^192,9249962139711580421 + 11991427775811759373*2^64 + 10657027927759825722*2^128 + 267676702*2^192,14237400212640064349 + 29499150434583758*2^64 + 2369906926715915092*2^128 + 543118477*2^192,7529819483180686870 + 9260473460388139253*2^64 + 17931479655873158242*2^128 + 1013832646*2^192,424111623786300452 + 14753002709752989351*2^64 + 959278552157374543*2^128 + 581438698*2^192,4763061537704358950 + 6083658110727900524*2^64 + 4207089813636892907*2^128 + 650339087*2^192,8646556503604655067 + 14603941397676410468*2^64 + 9672857146179693248*2^128 + 1053714472*2^192,11679634164811873362 + 2503946621982276939*2^64 + 6610809054660073706*2^128 + 240610513*2^192;\
8857548399240689758 + 310587907281567885*2^64 + 9184060751588231157*2^128 + 8549118*2^192,17941735674301742734 + 832385036818679359*2^64 + 8437882629698588454*2^128 + 164047982*2^192,9782030273676727002 + 6020278866008441045*2^64 + 10425130176444428456*2^128 + 662508134*2^192,6719780647772081000 + 10292159375690335716*2^64 + 1889699060558585051*2^128 + 595624663*2^192,6773784924140313092 + 9280069387862603149*2^64 + 553112810873743260*2^128 + 494199020*2^192,7667960364913459760 + 14977246736013611238*2^64 + 813711093818993713*2^128 + 833287593*2^192,7758070432453242638 + 10651245959352604450*2^64 + 3533937952052541422*2^128 + 647426017*2^192,6114513220581639032 + 7075833722362911353*2^64 + 16838140485719431784*2^128 + 438198337*2^192;\
10110096870561952997 + 14661594265336835149*2^64 + 12327481032835217994*2^128 + 357527861*2^192,14085481701700764059 + 11868364381139258428*2^64 + 13765167615556092765*2^128 + 848923211*2^192,9600577760693142061 + 3638495540592172*2^64 + 18316059675980078274*2^128 + 369248487*2^192,1421512137363181520 + 13270011017582512396*2^64 + 13512371547924521642*2^128 + 509466877*2^192,4834678257378526782 + 10982287177525649946*2^64 + 10457325358382159185*2^128 + 125433910*2^192,15572758675075661908 + 15525837187770239596*2^64 + 13731846134336416887*2^128 + 966529684*2^192,13763661569462614749 + 11340181282436455500*2^64 + 13796275458226790028*2^128 + 164913789*2^192,779704742153231514 + 12833352618102881370*2^64 + 870997275687783786*2^128 + 385027856*2^192;\
629762621705189114 + 8435043239156780185*2^64 + 5389606941862357473*2^128 + 704686912*2^192,272341792683755726 + 16230923046405043219*2^64 + 1764115312463849681*2^128 + 177189665*2^192,4547584479725574398 + 1693156387470538268*2^64 + 3516934898475521875*2^128 + 48033090*2^192,14348840045537712038 + 15090583991282060506*2^64 + 2346510340619056300*2^128 + 274124029*2^192,158015875880001652 + 1303601146355248708*2^64 + 15602385987317342505*2^128 + 611567793*2^192,4905137390826803940 + 3663353735389315105*2^64 + 7171166181129930735*2^128 + 447838853*2^192,13655558555857638342 + 15942551523006022263*2^64 + 15606465019663755808*2^128 + 445289265*2^192,8336131582476081908 + 5351522187946578524*2^64 + 16220914044722482378*2^128 + 1041553509*2^192;\
1543010458659933130 + 16546768554837330885*2^64 + 7207914890925294651*2^128 + 1032966377*2^192,14938978556230064 + 11149458409711530330*2^64 + 213976495554503169*2^128 + 141321933*2^192,4563962186725957266 + 15466301580461773393*2^64 + 1479835177937733451*2^128 + 142466761*2^192,5490161281478648524 + 1604685413632494096*2^64 + 17785015430393782922*2^128 + 728820524*2^192,3100906652210968658 + 12242121242270236710*2^64 + 15923411259397187264*2^128 + 872384446*2^192,10376095485968654990 + 16984058814772951473*2^64 + 2805169010967348929*2^128 + 204331625*2^192,4627974075017146202 + 10293526148811412022*2^64 + 14243126449334729174*2^128 + 634668060*2^192,1359912273295058448 + 17377470401830817721*2^64 + 7179456552878699936*2^128 + 166243013*2^192;\
11861551009884651543 + 9040010466891385947*2^64 + 12023987444148070369*2^128 + 981581809*2^192,32851867826695508 + 6091647382384648638*2^64 + 6409614616198625517*2^128 + 43583147*2^192,2560596904754022560 + 13832139320642381982*2^64 + 10710021532445338341*2^128 + 13658223*2^192,6331163907768506590 + 12929848638659896309*2^64 + 286582230934968532*2^128 + 132089014*2^192,5030036740942698838 + 13340513643167111876*2^64 + 12450510385580795423*2^128 + 441936003*2^192,9190127793523856370 + 13761511569618198205*2^64 + 10689742721778644967*2^128 + 545231371*2^192,4857946740005090096 + 6839816778663332320*2^64 + 12404402043695974079*2^128 + 394469750*2^192,16061787401220500816 + 3768548720780439556*2^64 + 14659921039447931212*2^128 + 922279496*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 5132 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 4*x^6 - 4*x^5 + 16*x^3 + 64*x^2 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 4*x^3 + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 35

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
