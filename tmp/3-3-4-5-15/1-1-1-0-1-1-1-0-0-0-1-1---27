/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	5 
[1, 2, 0, 2, 0]  	19	6 
[1, 1, 2, 1, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[1, 0, 0, 4, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[1, 1, 0, 2, 1]  	16	6 
[1, 2, 2, 0, 1]  	17	6 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 2, 2, 2]  	21	6 
[0, 0, 5, 1, 2]  	25	2 
[1, 5, 0, 0, 6]  	18	6 
[1, 0, 0, 3, 252]  	18	5 
[0, 6, 0, 0, 254]  	18	4 
[0, 0, 0, 5, 254]  	25	1 
[2, 2, 0, 0, 255]  	12	5 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
[0, 2, 1, 2, 255]  	20	2 
[0, 3, 2, 1, 255]  	22	2 
------
The gap is between 7 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6672654162968829954 + 11648346626005896033*2^64 + 15646702586830482518*2^128 + 267299433*2^192,14481138408693627196 + 12283714620720252067*2^64 + 13771828625178013572*2^128 + 1403711715*2^192,18141291836596155296 + 6610912929113587458*2^64 + 4992261551601642925*2^128 + 1508770096*2^192,10073709299786911640 + 12182038043362906855*2^64 + 12804690913139804836*2^128 + 1500402697*2^192,1439875506405955460 + 12647782232252929062*2^64 + 13112140934118264792*2^128 + 2008920825*2^192,6090817145678111518 + 10866011206429110860*2^64 + 18303539222264119698*2^128 + 1179276567*2^192,12113906421864544442 + 6687999931929679994*2^64 + 11988142247753028564*2^128 + 1890241265*2^192,7933421987825286452 + 11029090320220723628*2^64 + 6756825620853724606*2^128 + 1070386988*2^192;\
11134757337863585301 + 79664705539502247*2^64 + 2362425654494107709*2^128 + 1033313727*2^192,9607650852667385250 + 7965315079803558801*2^64 + 200796456601807605*2^128 + 662262456*2^192,17384792112056342024 + 14195859362855845922*2^64 + 3594064720090558304*2^128 + 1012152235*2^192,3345786944419530504 + 5628316439785320801*2^64 + 5466034969077052765*2^128 + 770348255*2^192,6416845671936666158 + 2570502391538399238*2^64 + 16487920175724514997*2^128 + 1776353368*2^192,10170404938229734549 + 15909509144532542659*2^64 + 15902281282914794394*2^128 + 1936602948*2^192,10660482403636336043 + 1723455650970238240*2^64 + 7912800344164375331*2^128 + 1030731286*2^192,4268872185251725206 + 458113150506446049*2^64 + 10293516814461300009*2^128 + 771577265*2^192;\
16841439319421154522 + 11846658994577832478*2^64 + 12048840535052029691*2^128 + 2992901*2^192,9758544232940227096 + 6949390293508299604*2^64 + 17214816557848012060*2^128 + 959238018*2^192,15740243184031837008 + 3542002593004538018*2^64 + 10336727427538984162*2^128 + 1469347070*2^192,5076605642003102736 + 3479729064477590752*2^64 + 4388060076643196731*2^128 + 208786975*2^192,6932865186148371552 + 4261233015846594055*2^64 + 570548692864708817*2^128 + 1351029258*2^192,2174363130398929742 + 3476269876455830091*2^64 + 450605872212362934*2^128 + 1299122965*2^192,14524860929498591810 + 16020798107416916470*2^64 + 13060304400292803021*2^128 + 1845629625*2^192,4974569097808615140 + 8682300358079964734*2^64 + 10105575340756473152*2^128 + 1054925484*2^192;\
14747312617828079308 + 7044093772929417217*2^64 + 12663006365218685254*2^128 + 714644959*2^192,14234740968145342384 + 8296622487515775724*2^64 + 1756981965151494727*2^128 + 1679940029*2^192,14833029456212764404 + 16401236271089379079*2^64 + 3004917279650685838*2^128 + 2058633089*2^192,6587352458994341752 + 12311763163118355767*2^64 + 8912186838169522640*2^128 + 1443089735*2^192,10478297034347840596 + 4746043928614142205*2^64 + 7988659959276365181*2^128 + 1924084789*2^192,7399193281769357554 + 11815682503517608052*2^64 + 16247001785184328881*2^128 + 283028904*2^192,4357050724158688582 + 15211550258312484103*2^64 + 17683009356618417072*2^128 + 1577917974*2^192,16760136884773622076 + 12948241547214473143*2^64 + 6728423018217135085*2^128 + 1603867095*2^192;\
16360629902588567089 + 8940894123235423608*2^64 + 16383681044501732997*2^128 + 2049783499*2^192,17729951925653989790 + 16281571040745318430*2^64 + 13978956858473913448*2^128 + 830578857*2^192,5563228794709698612 + 4172665821648345552*2^64 + 14229610134694458480*2^128 + 324054470*2^192,6696857596975031236 + 18205697423163745781*2^64 + 9436472530374019244*2^128 + 687902561*2^192,5090015317049515834 + 5882557778696448726*2^64 + 5681054068771057033*2^128 + 941791326*2^192,4501586672714609901 + 4472752396786066416*2^64 + 2115915396723880490*2^128 + 456902804*2^192,408393639519653427 + 9905678639276211675*2^64 + 4936995477131162236*2^128 + 1245533605*2^192,6623690319804620518 + 5847741080492724512*2^64 + 1343233704807427922*2^128 + 1181228219*2^192;\
6298095414642793787 + 6917846676598007727*2^64 + 6320568755731966862*2^128 + 491821875*2^192,9994142651962457482 + 5696308303330995625*2^64 + 16434405326455163393*2^128 + 1537506973*2^192,6325018287713920040 + 13896195212438883942*2^64 + 8240676542548985100*2^128 + 2124630635*2^192,16334089311395607640 + 3610450738262746907*2^64 + 10262453978278347364*2^128 + 224711650*2^192,12249618561956902794 + 13186977469318853369*2^64 + 2082124491877944131*2^128 + 991221719*2^192,18322901333547388381 + 12161466109848164747*2^64 + 3915641394282273599*2^128 + 1432965993*2^192,12593138714950196027 + 15933530762144096504*2^64 + 4034992558871792004*2^128 + 1448304070*2^192,8238182077092468102 + 16080800116859401246*2^64 + 16479926175728271971*2^128 + 361739075*2^192;\
18419863253953595853 + 12459090156891885359*2^64 + 4507408139659665873*2^128 + 646093040*2^192,900839962382390750 + 11194977642978158059*2^64 + 6599166243111242893*2^128 + 1683527973*2^192,3062653095230629816 + 6465207390370567314*2^64 + 13918902000790938308*2^128 + 21350748*2^192,3353890237384472872 + 797028593752418322*2^64 + 6428715962608204943*2^128 + 1827534090*2^192,6536488890833795166 + 5530183474598782341*2^64 + 5052342654940059193*2^128 + 1587599697*2^192,17937760696603407749 + 8048384458049536320*2^64 + 15982314024536438253*2^128 + 430875414*2^192,17214385069421524935 + 14507472395245754931*2^64 + 7258065335534469459*2^128 + 1787041635*2^192,2248189465090709110 + 4151696039530845629*2^64 + 2502504419933851635*2^128 + 312082759*2^192;\
18185308699763583754 + 8958536416135426808*2^64 + 17529101726565592145*2^128 + 1431437063*2^192,7360574793521472264 + 11916458131631765236*2^64 + 7319874547707312257*2^128 + 1202106440*2^192,6272059508085889576 + 3242930073525377933*2^64 + 14976134095904237547*2^128 + 434565571*2^192,15377934169577235984 + 7502812915575694749*2^64 + 10204397385733291708*2^128 + 799906203*2^192,11114403904664098016 + 9333427849330536438*2^64 + 14390892907972961902*2^128 + 1824044116*2^192,14965883796186211858 + 12078091652262315865*2^64 + 13935272885388844756*2^128 + 274898566*2^192,14167000847217273110 + 16755955661612372462*2^64 + 9761799670893850324*2^128 + 1972112892*2^192,6954842725607477940 + 11375768065551629908*2^64 + 10821675175089519756*2^128 + 2135034941*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4687 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
Look at the ideal generated by: 
1*x^2*y^1 + 1*z^1*w^1
1*x^1*z^2 + 1*y^2*w^1
