/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 59
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	7 
[1, 3, 0, 1, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	7 
[1, 1, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	4  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	4 
[0, 3, 1, 2, 0]  	23	5 
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 1, 1, 1]  	18	4 
[1, 1, 2, 1, 1]  	19	6 
[1, 0, 2, 2, 1]  	21	5 
[3, 1, 0, 0, 2]  	12	7 
[0, 2, 3, 1, 2]  	23	4 
[0, 1, 5, 0, 2]  	23	3 
[0, 2, 1, 3, 2]  	25	2 
[0, 2, 0, 4, 2]  	26	3 
[1, 1, 0, 2, 3]  	16	6 
[0, 6, 1, 0, 3]  	22	3 
[0, 1, 2, 3, 3]  	26	2 
[1, 2, 2, 0, 4]  	17	5 
[0, 5, 1, 0, 4]  	19	5 
[0, 2, 1, 2, 4]  	20	4 
[0, 3, 0, 2, 251]  	19	4 
[0, 0, 4, 2, 251]  	26	1 
[1, 0, 1, 2, 253]  	17	4 
[2, 2, 0, 0, 254]  	12	6 
[1, 0, 2, 1, 254]  	16	4 
[0, 1, 3, 1, 254]  	20	2 
[0, 0, 5, 0, 254]  	20	1 
[0, 1, 1, 3, 254]  	22	2 
[0, 0, 3, 2, 254]  	22	1 
[0, 1, 0, 4, 254]  	23	2 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	2 
------
The gap is between 5 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12025810580991808674 + 2505353121887853461*2^64 + 11846085310978099835*2^128 + 1511747753*2^192,7908133473591092288 + 13810697971280993309*2^64 + 12706066535434363534*2^128 + 2134846682*2^192,14932170094490743614 + 1048163386774271380*2^64 + 136008347602177202*2^128 + 497178453*2^192,8088521574095553374 + 15129889441121895822*2^64 + 8300189513228651788*2^128 + 1673406257*2^192,17681135590602490418 + 6671609857322299998*2^64 + 9077980748198593218*2^128 + 1187115640*2^192,1115964822958887736 + 1480470098537208583*2^64 + 10905737003547814076*2^128 + 1112986927*2^192,1844838717324984308 + 14824654983852877789*2^64 + 15789958736320284036*2^128 + 591823545*2^192,15948068429732277156 + 4820222986217242129*2^64 + 16146541438559799650*2^128 + 554174240*2^192;\
6648850231059244977 + 6178740111239743713*2^64 + 8092324845063746346*2^128 + 992368749*2^192,2204730022818959004 + 6363508021698647356*2^64 + 213791441772919953*2^128 + 1305341162*2^192,11261035875279468001 + 12335111651536473636*2^64 + 3696312805484938863*2^128 + 1665314316*2^192,8238924911478006845 + 14409567246557764686*2^64 + 11980616800561230079*2^128 + 1991653661*2^192,4855983675647543107 + 4746264318882901554*2^64 + 2287512887110746823*2^128 + 1843988307*2^192,16110856708876546860 + 12107312892352653630*2^64 + 12133250632478669632*2^128 + 1894703447*2^192,6158378794760042706 + 2234411470992686939*2^64 + 5637804375997042183*2^128 + 511301648*2^192,13864376334133552214 + 18393929224609341258*2^64 + 18008353705414270802*2^128 + 468470862*2^192;\
15892330698642626940 + 1310219550674482520*2^64 + 8656161478258807843*2^128 + 1151781443*2^192,8167420606005943936 + 9437883085397239768*2^64 + 8145197277512307458*2^128 + 1719887308*2^192,999084345715685514 + 10768724079508971888*2^64 + 6675381573665215295*2^128 + 65296597*2^192,17481576083268202762 + 13956642154250214733*2^64 + 6238676318281527287*2^128 + 923303386*2^192,3910709897488927238 + 1143032156164986239*2^64 + 7280889834152472088*2^128 + 955738392*2^192,16818110610926597964 + 12614333183378691918*2^64 + 13832259792878742925*2^128 + 847807157*2^192,13155342249599915564 + 6979212235426205928*2^64 + 4720552478446357314*2^128 + 2078908649*2^192,3509481963548492316 + 16672761729748701902*2^64 + 7095967258548302946*2^128 + 2015571482*2^192;\
1322295988145782703 + 3291496268822481404*2^64 + 5555295751070588639*2^128 + 900749658*2^192,427179508235614608 + 8922159433528362438*2^64 + 2138331172478157289*2^128 + 815055678*2^192,1034357741350069273 + 224239042162701330*2^64 + 18070535690822898375*2^128 + 1682320304*2^192,258674684608156425 + 11634031631810804853*2^64 + 16550207176209522205*2^128 + 2026797547*2^192,13879805554291319987 + 17943888627739561026*2^64 + 6638481911647083615*2^128 + 1763656241*2^192,529281458721551056 + 15289647255842568166*2^64 + 2554772883563264387*2^128 + 1048201269*2^192,3945326253715027370 + 5470075664707458071*2^64 + 12065169602969469166*2^128 + 292647129*2^192,8126219406053141646 + 532018666189479116*2^64 + 6517140576508601721*2^128 + 1961017173*2^192;\
15094668533887581831 + 6965617039559898020*2^64 + 1003738887811104751*2^128 + 1855890738*2^192,5842658109122964120 + 16477601601326286381*2^64 + 5865452295522550384*2^128 + 2085515944*2^192,12512131808007531795 + 1802590110725764898*2^64 + 16432607420809052042*2^128 + 1883683799*2^192,7592296069406326903 + 5014827918912611649*2^64 + 1022523055915567548*2^128 + 1141110820*2^192,282327834376604625 + 11761309237817729583*2^64 + 16537207405171977980*2^128 + 1299270460*2^192,13398664510593752424 + 4470204594597225423*2^64 + 11710508969853481869*2^128 + 1665629805*2^192,17223466881933432622 + 13682906382720063456*2^64 + 6780297932171364448*2^128 + 130651625*2^192,8950659157877512330 + 10183809176787500688*2^64 + 15178727398040333272*2^128 + 1880708575*2^192;\
17239492809298784383 + 5574642027510664461*2^64 + 13279579983776338153*2^128 + 369830968*2^192,12079252183527868964 + 15184895353582910339*2^64 + 6827887984269229473*2^128 + 587070468*2^192,17754597873137208295 + 7388153792019875546*2^64 + 16188988228058812564*2^128 + 237683411*2^192,1910104578732665463 + 8214264030828658686*2^64 + 13830411337186133228*2^128 + 771978499*2^192,13468017612200121185 + 4119527388305929628*2^64 + 9246965436322947108*2^128 + 1143254238*2^192,5522317531544191884 + 2297592638386547039*2^64 + 991280939638626648*2^128 + 1395786622*2^192,11722384301521171094 + 1169544987690559919*2^64 + 7699147654617986549*2^128 + 1844520*2^192,808796914371457090 + 16379463343332146802*2^64 + 11773947648738873370*2^128 + 1326951637*2^192;\
9730801704640722774 + 12692488382908246614*2^64 + 2866939959532465248*2^128 + 1112465616*2^192,5882468046673456756 + 9534517068592501341*2^64 + 7210219683941343038*2^128 + 1250063663*2^192,8147089254311791022 + 2100046430943404864*2^64 + 2673937690902176879*2^128 + 2028884990*2^192,17779825772916093030 + 5000754182842057867*2^64 + 8289963834716068862*2^128 + 1624124656*2^192,14820167259518860026 + 17460050295123721300*2^64 + 16472357944352932118*2^128 + 738277919*2^192,7142733740770072284 + 4330232437435544819*2^64 + 9902503826145263546*2^128 + 649582482*2^192,4974097813835977772 + 1448165602611634686*2^64 + 13503902853881496165*2^128 + 1096072570*2^192,7118070490716389604 + 10408624464257253741*2^64 + 7871987701218179504*2^128 + 1650680333*2^192;\
2620923449731430908 + 1922265307084592170*2^64 + 16398722197280953603*2^128 + 580953452*2^192,17571572363756339456 + 14518969794688440209*2^64 + 1698324819489610463*2^128 + 1949803623*2^192,14052027035389209242 + 8681459538366373100*2^64 + 15613524671283445407*2^128 + 1379015278*2^192,7848543557316711754 + 9167914110335237737*2^64 + 18117836360207510167*2^128 + 576550440*2^192,6450913451701936294 + 12332937215020849754*2^64 + 3289332205270882420*2^128 + 1467471067*2^192,11809722170470998508 + 11756415974413416858*2^64 + 5560609661021960490*2^128 + 213217220*2^192,6871884844315658652 + 10992274378354404116*2^64 + 11451578572443917236*2^128 + 155443186*2^192,4971987569337626020 + 2039246558117779289*2^64 + 11394193252018820008*2^128 + 1097917031*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4445 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 28
