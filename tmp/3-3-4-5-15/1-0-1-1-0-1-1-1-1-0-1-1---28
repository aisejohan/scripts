/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	3 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	6 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 2, 0, 1]  	17	6 
[2, 0, 2, 1, 1]  	19	6 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[0, 0, 5, 1, 3]  	25	2 
[0, 5, 1, 0, 4]  	19	5 
[0, 3, 0, 2, 251]  	19	4 
[0, 0, 0, 5, 253]  	25	1 
[2, 2, 0, 0, 255]  	12	4 
[0, 4, 1, 0, 255]  	16	3 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 1, 255]  	22	3 
------
The gap is between 5 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4130839470911642002 + 10260787423188639403*2^64 + 13579361302368191656*2^128 + 2718289948*2^192,11293153166548128248 + 4330023850487737909*2^64 + 4052502602339525806*2^128 + 2907957203*2^192,185316482715163976 + 918968826587097205*2^64 + 8945580001953083264*2^128 + 7791395661*2^192,3805710602914625812 + 10306165567660499738*2^64 + 16169756796269434184*2^128 + 6897637449*2^192,4567428580825398964 + 16887446849445565513*2^64 + 5406973732749332618*2^128 + 4841166957*2^192,12080491421521865120 + 11545338815702578811*2^64 + 734082786168239915*2^128 + 2463074673*2^192,17759470211093641700 + 16120935025510590178*2^64 + 13492254723869982396*2^128 + 1059213542*2^192,15991670186440421328 + 14796583030529845902*2^64 + 15616861210320629712*2^128 + 971714892*2^192;\
7655102067068151555 + 18378417325186065428*2^64 + 5766062851233758006*2^128 + 1079821113*2^192,7653889609870521636 + 2444736088439664173*2^64 + 6072626993388450878*2^128 + 1111991394*2^192,2676096480629596764 + 4645008147284409703*2^64 + 8668731979734614224*2^128 + 886802702*2^192,3868330411077668782 + 684967876767823247*2^64 + 9549984926478213340*2^128 + 2509849708*2^192,16655650618255019950 + 14467029124306015819*2^64 + 10676499969668670223*2^128 + 2861268986*2^192,11045650615622939664 + 6186110135323501920*2^64 + 15217408992130012533*2^128 + 8002842386*2^192,13879927852366689318 + 1372948814535895458*2^64 + 15635751048297033686*2^128 + 7013515076*2^192,9506023658090622904 + 18045876538381115738*2^64 + 15317929700744949975*2^128 + 4155039498*2^192;\
5411281431133680647 + 15138279502795729456*2^64 + 1377158100458264879*2^128 + 542442276*2^192,470861063972082004 + 4416415495921085314*2^64 + 6360731011728829056*2^128 + 36183274*2^192,7632440581551065404 + 6390412576861139827*2^64 + 18003860904422567763*2^128 + 3549574634*2^192,16293179949048950022 + 147503240795589709*2^64 + 4125340923185685616*2^128 + 2407428176*2^192,15032258830417567894 + 15293271426377180816*2^64 + 4365054591143589606*2^128 + 8411082151*2^192,17939013444967941872 + 2888968156317293416*2^64 + 2527043383363733579*2^128 + 1038039056*2^192,8756381946192354574 + 17051146907491528257*2^64 + 5435166361802546480*2^128 + 1408142448*2^192,13326356337337198808 + 9102947923048132815*2^64 + 1617073657976354455*2^128 + 319618370*2^192;\
7100904488700018457 + 4643400481884223197*2^64 + 12535013313044423287*2^128 + 4611019737*2^192,14169441198563167404 + 9104473842682115019*2^64 + 5622446997430359255*2^128 + 8294601739*2^192,15224574671847798244 + 6294341622999249652*2^64 + 12287288605316824399*2^128 + 4588211654*2^192,344217298825816330 + 2195488773419824075*2^64 + 15730779294357568891*2^128 + 427045187*2^192,6294794271090208746 + 2365345978213101597*2^64 + 739478401752102749*2^128 + 1136589095*2^192,8060064814814790112 + 2720488941634998499*2^64 + 11872079214850716672*2^128 + 4912922683*2^192,2519141002343568770 + 7448925807669185168*2^64 + 8320260085359299255*2^128 + 828438083*2^192,12307200336043397864 + 9143666056844999873*2^64 + 5797306062927233133*2^128 + 4967730960*2^192;\
18012469747348484588 + 17910375275818944921*2^64 + 7549178080617040405*2^128 + 7215287343*2^192,4628293257801835184 + 11088934696170629785*2^64 + 14202505461342450612*2^128 + 4350968706*2^192,7139389528721278224 + 6887163531333864187*2^64 + 2937588727575354958*2^128 + 646991263*2^192,6651335206570682440 + 16128379797292552037*2^64 + 4912022854127818472*2^128 + 3426108024*2^192,1681270845383330344 + 4740080360004692050*2^64 + 15566293576948092088*2^128 + 8275258911*2^192,15246735691191613712 + 7704179773275622030*2^64 + 3030252058301430916*2^128 + 8128105264*2^192,12908178479210372536 + 17368517540633934413*2^64 + 9715597049552982212*2^128 + 5977302405*2^192,17136128390026291808 + 18050748840903642878*2^64 + 15728836287469538484*2^128 + 7350985529*2^192;\
16132873279353417619 + 15287240122818157991*2^64 + 8214023967923627676*2^128 + 5090541069*2^192,12445241630630779492 + 17417321186870955240*2^64 + 16753031658497061385*2^128 + 8543003050*2^192,5666338364719906236 + 1193811050605655145*2^64 + 14450019320775467076*2^128 + 349455596*2^192,11539979013106040382 + 13603076645035178110*2^64 + 13739969601440918960*2^128 + 3348186841*2^192,13175920417460655902 + 17216960794392866298*2^64 + 3639351615136097668*2^128 + 8490988805*2^192,583974739636073664 + 9270439709108643815*2^64 + 13299446703236623474*2^128 + 4879128813*2^192,3909578023302456054 + 18102199224105970576*2^64 + 15490279004943436187*2^128 + 598135913*2^192,15719845329864275672 + 16821790986175462356*2^64 + 7235532709844234898*2^128 + 3813710835*2^192;\
6167642872630158466 + 5525778231346689967*2^64 + 11169278377523839612*2^128 + 6544587490*2^192,16599458287308092456 + 16881778283810795802*2^64 + 2184173733271042959*2^128 + 7707691610*2^192,13056705117354797528 + 13282141580673050317*2^64 + 17494536129928854892*2^128 + 4246708876*2^192,15341995886029064148 + 11948348483738068002*2^64 + 15290071440556630704*2^128 + 4886084329*2^192,3766473454818317892 + 7316939917118415677*2^64 + 3185756852844719576*2^128 + 1110080623*2^192,12960994526963127360 + 862841515411574921*2^64 + 8160306697942337512*2^128 + 5126141261*2^192,4979446869761800644 + 12913818879546557976*2^64 + 10212015156205068775*2^128 + 5361806690*2^192,1379503366562661968 + 841441741711505971*2^64 + 17955207098325173439*2^128 + 1783037757*2^192;\
9376849404319399702 + 16961104294031121437*2^64 + 12914718298035744700*2^128 + 539167196*2^192,12807899364086989640 + 6032371902097727012*2^64 + 11111200872666367892*2^128 + 2857720672*2^192,10601266588162790264 + 15781531106429975292*2^64 + 17192127125225050640*2^128 + 1824387639*2^192,628819328135392668 + 12220284278740002967*2^64 + 12163795350183994692*2^128 + 2868530484*2^192,8262433994490740764 + 10504283743307930690*2^64 + 7958037323325992197*2^128 + 3033449993*2^192,13885644983718106368 + 7332941556633782085*2^64 + 2283696074651322050*2^128 + 1555069186*2^192,6864670540703752588 + 559382827091991347*2^64 + 9173883727269528141*2^128 + 3327620032*2^192,8942272783965259344 + 2745387367394160695*2^64 + 801909949393335827*2^128 + 1542290506*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 5176 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 26
