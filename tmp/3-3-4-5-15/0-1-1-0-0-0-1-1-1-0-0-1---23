/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 51
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[3, 2, 0, 0, 0]  	15	3 
[2, 3, 0, 0, 0]  	15	5 
[1, 0, 3, 0, 0]  	15	2 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	3 
[2, 0, 2, 1, 0]  	19	3 
[2, 0, 1, 2, 0]  	20	3 
[0, 5, 0, 1, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	3 
[1, 0, 1, 3, 0]  	22	3 
[0, 6, 1, 0, 0]  	22	3 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 0, 0, 3, 1]  	21	7 
[1, 6, 0, 0, 1]  	21	7 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[2, 0, 0, 2, 2]  	16	4 
[3, 0, 2, 0, 2]  	17	4 
[1, 5, 0, 0, 2]  	18	4 
[1, 0, 2, 2, 3]  	21	6 
[0, 5, 1, 0, 4]  	19	4 
[0, 4, 2, 0, 4]  	20	4 
[0, 4, 0, 2, 6]  	22	4 
[0, 3, 2, 1, 250]  	22	3 
[0, 7, 0, 0, 251]  	21	5 
[0, 2, 2, 1, 252]  	19	3 
[0, 1, 3, 1, 252]  	20	3 
[2, 2, 0, 0, 254]  	12	3 
[1, 0, 2, 1, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	3 
[1, 0, 0, 3, 255]  	18	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 7 and 249.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17894927438130633062 + 11691086415448320021*2^64 + 1323669341557432886*2^128 + 199169782*2^192,17815242169070086160 + 6369355057695417883*2^64 + 9096897757509495736*2^128 + 1779479392*2^192,10759665738312664176 + 14176059221390864858*2^64 + 2818188172297801286*2^128 + 1923707391*2^192,15796294821750409332 + 16024480490635466829*2^64 + 11138285710872114513*2^128 + 840950866*2^192,2478427289785205908 + 13905200758433112924*2^64 + 2657459913680574204*2^128 + 765971222*2^192,17634542530877975160 + 9344443778342921694*2^64 + 6007466430216590317*2^128 + 1492792107*2^192,437620070425131856 + 10750212205627950926*2^64 + 2346598655701694953*2^128 + 2000471064*2^192,11000730563318238720 + 17484748834972848419*2^64 + 6046316760919117710*2^128 + 1389952201*2^192;\
12625898974151744518 + 16911842988005858777*2^64 + 13693711630940494598*2^128 + 3377564*2^192,13651401168040829068 + 8713405986835190304*2^64 + 15383460665580600779*2^128 + 1630694198*2^192,5524385329973464040 + 14307624176726292573*2^64 + 4697154593689648078*2^128 + 232085771*2^192,8629530074397177660 + 15824126587588541287*2^64 + 2512077472916385230*2^128 + 379062770*2^192,6595776857951480084 + 1075967953437612071*2^64 + 6257420695673270978*2^128 + 1741568294*2^192,9883599725440381084 + 12067655850180601923*2^64 + 5472535072438368885*2^128 + 365825693*2^192,16021377489858859648 + 17146403996701227363*2^64 + 13901200100996938081*2^128 + 364096704*2^192,5863891370323468816 + 7498627342293654201*2^64 + 6722325371605283607*2^128 + 33347972*2^192;\
2061612541293118902 + 9588269805163313688*2^64 + 4430586259757907417*2^128 + 2066101565*2^192,10734463697419364144 + 12875780113895967087*2^64 + 199489541001876585*2^128 + 1360304945*2^192,16528783003036724120 + 13402057881359098843*2^64 + 2414065981782864650*2^128 + 1204365758*2^192,8209478661830370252 + 11299346958753602419*2^64 + 14531961270251363233*2^128 + 708108582*2^192,4478908095250986928 + 5717007477387831991*2^64 + 8386781018581265088*2^128 + 42948330*2^192,2160267344824583388 + 9964021054743903625*2^64 + 3046630608599698704*2^128 + 131405583*2^192,4534373702366012672 + 354995241758118638*2^64 + 17647580796861704084*2^128 + 2100861423*2^192,12716997924288472216 + 8100001709919357726*2^64 + 5883868750632223742*2^128 + 807777976*2^192;\
16977274308588222990 + 7009398693621234757*2^64 + 2581518956069812233*2^128 + 1371858758*2^192,8809237148094261932 + 14193960688658887338*2^64 + 6713255633388220765*2^128 + 642989737*2^192,1740681266307798792 + 12156956785404524650*2^64 + 16195330587822574494*2^128 + 118570449*2^192,14636577253916213136 + 3118171181081864117*2^64 + 5958526069682804238*2^128 + 21596023*2^192,12861555083764813588 + 768772013271772027*2^64 + 424991661809882137*2^128 + 108190146*2^192,11648684057553951052 + 8548081160443396097*2^64 + 15459963657189050157*2^128 + 1445632821*2^192,14716931556049371744 + 17034716704265317817*2^64 + 4895206451565169165*2^128 + 1016690364*2^192,10271363397313349296 + 15491132207815841788*2^64 + 12911390945146219674*2^128 + 858660723*2^192;\
3300328355450198988 + 6418762686700204170*2^64 + 15012330616152438665*2^128 + 634144378*2^192,14958352505485526400 + 7864992753121387924*2^64 + 10775742775639112553*2^128 + 294434448*2^192,10696648631327214268 + 4665241839721514896*2^64 + 3579703948316632994*2^128 + 1169000312*2^192,14386031268311044600 + 13648894590627150296*2^64 + 10109390182559598765*2^128 + 1213373815*2^192,8125224140751877496 + 11466146124151549454*2^64 + 16143678473280061625*2^128 + 34807488*2^192,12364690490646972904 + 3584909649632182691*2^64 + 851534757770920746*2^128 + 1020419095*2^192,7435585027046108608 + 13817607935408532491*2^64 + 10933308611844457519*2^128 + 409213648*2^192,14296301804618018264 + 13240999075201569892*2^64 + 4585318158607129951*2^128 + 1440255554*2^192;\
15921387152926071805 + 8138074047651862375*2^64 + 228636278751531817*2^128 + 1130584590*2^192,16941701323414689632 + 14983416104833518236*2^64 + 6401101424177923055*2^128 + 1287290356*2^192,11619348025737163288 + 15786308290587696793*2^64 + 17103997223005248134*2^128 + 1289790243*2^192,1509347707298235782 + 8462834942754899527*2^64 + 7794281896441688950*2^128 + 812715902*2^192,8503015526183396574 + 3055456416851629778*2^64 + 3075581187787495362*2^128 + 1933500588*2^192,10418979370046758496 + 9269492535534778214*2^64 + 12503105730563572097*2^128 + 971936504*2^192,7496418051411484220 + 9584538111433197215*2^64 + 917668104051311164*2^128 + 127205199*2^192,15512623927596443208 + 17342304084477020125*2^64 + 17811119086888212519*2^128 + 1519280529*2^192;\
1389304291238160274 + 18432095010846159919*2^64 + 2341626342095034955*2^128 + 255606729*2^192,2573723721132787652 + 11319967877594362386*2^64 + 5730788355058070279*2^128 + 1663826683*2^192,9282193266566342800 + 14339733610478635437*2^64 + 2797901179863188000*2^128 + 418655633*2^192,12873572485101528060 + 14585109071116421102*2^64 + 15338761832516124876*2^128 + 373760041*2^192,12571959747995377772 + 16734624374245693479*2^64 + 9333416077926352479*2^128 + 1794606467*2^192,2576095116901116968 + 4711954322308697460*2^64 + 14609468566987911537*2^128 + 1256886196*2^192,15011928762549519544 + 9590915493604323050*2^64 + 13725500119171467701*2^128 + 1580916977*2^192,13358011806768176472 + 17214957555110324349*2^64 + 4170212212963106896*2^128 + 2001899008*2^192;\
1983290679393419530 + 16684701193346528958*2^64 + 13619661529695512362*2^128 + 1008895278*2^192,936637789626770240 + 13242595576995364693*2^64 + 12339897576668906551*2^128 + 1030031009*2^192,5627766521066811440 + 8674689872753512742*2^64 + 2574145296195170570*2^128 + 178453247*2^192,6661168338295007068 + 13178271312371203985*2^64 + 1364427807133224204*2^128 + 56129647*2^192,14978897508199109004 + 1947805998361070626*2^64 + 8189352114695016339*2^128 + 229173884*2^192,15570967349522132768 + 3974626921416930045*2^64 + 3909311897472923127*2^128 + 1027352054*2^192,1498138722936891832 + 4810531799645066249*2^64 + 18321154269199013224*2^128 + 810175271*2^192,12175732911595995736 + 8041124780336398728*2^64 + 5424877900304837215*2^128 + 791165549*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4412 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 
Look at the ideal generated by: 
1*x^1*y^2 + 1*y^3 + 1*z^1*w^1
1*x^2*w^1 + 1*y^2*w^1 + 1*y^1*z^2
