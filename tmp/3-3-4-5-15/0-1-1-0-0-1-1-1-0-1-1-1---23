/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 49
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	6 
[2, 0, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	3 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[2, 0, 0, 3, 1]  	21	7 
[0, 4, 0, 2, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	5 
[0, 0, 5, 1, 2]  	25	2 
[0, 5, 1, 0, 4]  	19	5 
[0, 4, 2, 0, 4]  	20	4 
[0, 1, 3, 1, 252]  	20	3 
[0, 3, 0, 2, 253]  	19	4 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	3 
[0, 7, 0, 0, 254]  	21	4 
[0, 0, 0, 5, 254]  	25	1 
[0, 6, 0, 0, 255]  	18	4 
[0, 2, 2, 1, 255]  	19	3 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10757796951229166562 + 439853501391379822*2^64 + 3568373264821240293*2^128 + 4159006038*2^192,3453395449317228748 + 5521934330008714819*2^64 + 4904354160701372994*2^128 + 800688265*2^192,204248955118293656 + 2150244268370359531*2^64 + 15664913931686519246*2^128 + 2151132333*2^192,8941886903329651352 + 16249066848092946404*2^64 + 8056874863633228509*2^128 + 2831138446*2^192,5249008776983158168 + 1420394796296532501*2^64 + 9898303484773512683*2^128 + 427390305*2^192,13553001566864123660 + 16551409878790906825*2^64 + 11107686448800954027*2^128 + 2995851579*2^192,4927562568383722692 + 14955995843881291116*2^64 + 6834226409667513705*2^128 + 105814065*2^192,2685171805473989944 + 11965849883745697588*2^64 + 12690321239723428241*2^128 + 3965473594*2^192;\
2701908272725751900 + 10266006370241818846*2^64 + 8942797790712354640*2^128 + 3316623244*2^192,4620727714924020160 + 4439657228379880140*2^64 + 13853284884431273726*2^128 + 2948399245*2^192,10891827691084703352 + 2204476208888462766*2^64 + 16186726663745692145*2^128 + 4026525001*2^192,10481136130615593656 + 1003788894649905788*2^64 + 6800427004890134591*2^128 + 2736919526*2^192,17929503801058455720 + 18252588036747177606*2^64 + 2186421353807551548*2^128 + 3684091426*2^192,1916833989873504552 + 15497173813476600939*2^64 + 10840987426238010187*2^128 + 587113615*2^192,1028908949857136928 + 613377279541388695*2^64 + 10872935311809792592*2^128 + 3598657546*2^192,6445997254522458976 + 6485733158275931786*2^64 + 9171710348540633957*2^128 + 3096751451*2^192;\
3023454778469049516 + 10439589818276034485*2^64 + 15443193092120785550*2^128 + 1137443341*2^192,14948952594404563664 + 6007545813140063357*2^64 + 15372247303514238696*2^128 + 1580807145*2^192,6669009707067297448 + 3970897155839571308*2^64 + 699150609791666198*2^128 + 3755788290*2^192,18168590224626702432 + 16683504614798883974*2^64 + 13631672709489611977*2^128 + 300757057*2^192,2826085950714073200 + 458938442027839226*2^64 + 14183005008799006128*2^128 + 163120773*2^192,12139177633657800872 + 7489592466072962993*2^64 + 14659821000459167862*2^128 + 2095628016*2^192,15747485315424266128 + 4007802129619699298*2^64 + 6742244941792508211*2^128 + 1295783947*2^192,12696696845726756528 + 12792700346800023667*2^64 + 16255471331247684391*2^128 + 939495632*2^192;\
6100579320473392576 + 2150546728983319646*2^64 + 14540751162766430583*2^128 + 3862598779*2^192,14233454096959105584 + 11573018118439090233*2^64 + 6325226134504817656*2^128 + 819815725*2^192,5193762843602404792 + 7888109591083424165*2^64 + 11142217714756711524*2^128 + 2194622907*2^192,8403825751876150912 + 7037784693685065919*2^64 + 12009696503387082101*2^128 + 1645425866*2^192,12923026288749215848 + 7823655935823836114*2^64 + 11617414881580754548*2^128 + 3660457374*2^192,9394887882759323168 + 12424590670505467802*2^64 + 10757534314221127328*2^128 + 3131558879*2^192,1742706836795488864 + 2118972601463698020*2^64 + 2313434831631623149*2^128 + 2960960239*2^192,12441722627841697856 + 5501098970384386748*2^64 + 4845128783137513872*2^128 + 2189967404*2^192;\
13003510637451441908 + 16377518185968865576*2^64 + 17149585860461507135*2^128 + 373747205*2^192,4947498842588749496 + 12106788801740456686*2^64 + 14473720346783873495*2^128 + 186868372*2^192,3789160017541761728 + 15485507894333627647*2^64 + 5835725691157863326*2^128 + 1920137477*2^192,17884469638005673256 + 419380055886670814*2^64 + 8313259225022403038*2^128 + 316419544*2^192,8951214065487010112 + 14623572917953588331*2^64 + 7356303119965611167*2^128 + 3262007086*2^192,3689524077873676344 + 6929653784276726150*2^64 + 5252966510979346369*2^128 + 2195342443*2^192,4581362385529025560 + 10712952454985332552*2^64 + 8932372152612237175*2^128 + 4143904365*2^192,17701019760771280832 + 3525752865522427107*2^64 + 6921524914255567364*2^128 + 3175742833*2^192;\
4381241971540446525 + 8086336517708182825*2^64 + 15106739403125100049*2^128 + 3307591040*2^192,17908767187794690950 + 8665768803744563571*2^64 + 13601680907759533722*2^128 + 3124207892*2^192,9702012770680373988 + 7282699441970798984*2^64 + 14845835521903953108*2^128 + 2377986609*2^192,8252856068531534452 + 5592506483770370587*2^64 + 8050040883853747938*2^128 + 2004579707*2^192,15737295111174432212 + 2080032273480188533*2^64 + 11443584077954670268*2^128 + 3300320057*2^192,1866924690147055422 + 15469623494315031999*2^64 + 6033340054179348235*2^128 + 2395909831*2^192,16003596741728167034 + 25606958258412836*2^64 + 2398284524662595264*2^128 + 2876705786*2^192,1970157792177598092 + 16006843150739509734*2^64 + 10409618474322165464*2^128 + 838940736*2^192;\
5623668015799584406 + 13797344180728774328*2^64 + 4268076157045258029*2^128 + 3083680367*2^192,15436219553402843212 + 10341201447505312737*2^64 + 8087365454563001781*2^128 + 3351242561*2^192,17085240569118738312 + 1272427091271410935*2^64 + 14259846654120392109*2^128 + 1048757121*2^192,1339832219438326568 + 8704435040345970742*2^64 + 766147019830657559*2^128 + 1416534665*2^192,3297938996958078536 + 57604512929018871*2^64 + 137126352886657137*2^128 + 2939957547*2^192,6950543528665918980 + 9450769396010195918*2^64 + 233475250359587976*2^128 + 2574281646*2^192,15863742889618259564 + 15587722866925220662*2^64 + 13352642427840552841*2^128 + 2774938197*2^192,8452968865460272072 + 10790820479817676891*2^64 + 10949183051048846381*2^128 + 3909351485*2^192;\
3761001894279479890 + 12573496420293354405*2^64 + 4217470249806651962*2^128 + 3467465676*2^192,2081111031753347100 + 15304721355992710537*2^64 + 825754596710074442*2^128 + 448331639*2^192,7405561586685113912 + 4205807797166413609*2^64 + 492673400517919608*2^128 + 1218324798*2^192,11133713271237810904 + 13674364197358938549*2^64 + 1971170818095678844*2^128 + 1952356513*2^192,1560048938165770872 + 8461544534639086290*2^64 + 7660806091167866403*2^128 + 3427708872*2^192,1447767471689252972 + 5243452605104442785*2^64 + 1480586007400675712*2^128 + 3404188813*2^192,2846754018615342900 + 13494898622283317638*2^64 + 6475459150626081547*2^128 + 2493816335*2^192,13473785392232080968 + 12306172201281423956*2^64 + 5233739564390666359*2^128 + 645593365*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4412 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 
Look at the ideal generated by: 
1*x^2*y^2 + 1*x^1*z^1*w^1 + 1*y^1*z^1*w^1
1*x^1*w^2 + 1*y^3*z^1
