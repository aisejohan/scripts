/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[3, 0, 3, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	3 
[1, 0, 5, 0, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[0, 5, 1, 0, 1]  	19	4 
[0, 4, 0, 2, 1]  	22	3 
[0, 0, 5, 1, 2]  	25	2 
[0, 4, 2, 0, 3]  	20	4 
[0, 3, 0, 3, 3]  	24	4 
[1, 6, 0, 0, 6]  	21	6 
[0, 7, 0, 0, 250]  	21	5 
[0, 2, 1, 2, 253]  	20	3 
[0, 0, 0, 5, 254]  	25	1 
[2, 2, 0, 0, 255]  	12	5 
[1, 0, 2, 1, 255]  	16	2 
[0, 2, 2, 1, 255]  	19	1 
[0, 1, 1, 3, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	1 
------
The gap is between 7 and 249.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[258165278876263368 + 2216077758088061098*2^64 + 9140818503180023238*2^128 + 464922127*2^192,15135826614315064244 + 1578112878852090266*2^64 + 6257188306639319308*2^128 + 1636408605*2^192,136025155698634934 + 10915294525865247604*2^64 + 9482249208021787512*2^128 + 665956151*2^192,10794745451253430102 + 16190125711304250598*2^64 + 15963090656228830848*2^128 + 1716845170*2^192,6925977188616226308 + 6562267748177643835*2^64 + 8290924401971355714*2^128 + 173091476*2^192,15739809734038988542 + 4016758506177466778*2^64 + 1016973907984461986*2^128 + 880295515*2^192,18086358508386248402 + 17857946981963205226*2^64 + 9244279238208390016*2^128 + 1072205204*2^192,7477566122549458588 + 16704250814637227351*2^64 + 16833154384584722906*2^128 + 76399159*2^192;\
11069107903299337512 + 4357934290652763871*2^64 + 9451129593034560275*2^128 + 1463179572*2^192,6033886023430864976 + 4423351864659612835*2^64 + 5744364966523313809*2^128 + 854654402*2^192,17574180388303323524 + 271822271801035327*2^64 + 1784070191328973107*2^128 + 1915615379*2^192,9002590924891301920 + 10812741814290514913*2^64 + 3108476580895472493*2^128 + 1738810074*2^192,8258531041511371484 + 15626487118738551768*2^64 + 946057551974989573*2^128 + 637797829*2^192,370345572150109928 + 14787458264337344124*2^64 + 15916114017361533134*2^128 + 305870185*2^192,3837117150818626432 + 14658892829672921241*2^64 + 12255592729413801286*2^128 + 322150409*2^192,7883581726909498400 + 296206773702008368*2^64 + 9228357387761584350*2^128 + 1555433891*2^192;\
14833997034585343294 + 8732649546806689386*2^64 + 9814546527562445828*2^128 + 825113683*2^192,2016526788790838236 + 10190529594903864972*2^64 + 4975232868152400371*2^128 + 1123529220*2^192,3904833600291458542 + 5045001405760437001*2^64 + 14642653092519712269*2^128 + 703739122*2^192,10791703088843428966 + 16473517634235247442*2^64 + 11930273777202808496*2^128 + 54399*2^192,7195661858665338832 + 2905852559602073880*2^64 + 14565032102134812589*2^128 + 2146786491*2^192,2207348447916693726 + 18241445576710866041*2^64 + 641315347645039488*2^128 + 1276583316*2^192,3253021002755375358 + 12132096361356791727*2^64 + 3063464900305739821*2^128 + 812189462*2^192,13558245508397071108 + 12297957487350022248*2^64 + 1165826883711322705*2^128 + 313289120*2^192;\
2530430208386310908 + 6569291198796474408*2^64 + 15687806143189491018*2^128 + 1687509863*2^192,17286611738079227034 + 16369755263286001247*2^64 + 6702012999377721331*2^128 + 985223633*2^192,10302698098128628519 + 1077420750613108170*2^64 + 7669050555592768995*2^128 + 1701950188*2^192,11553426919268093891 + 14046620401718728350*2^64 + 14491967484350148589*2^128 + 1668342313*2^192,2222255482578128258 + 1153267529818736254*2^64 + 16992503927057074825*2^128 + 1567529558*2^192,16806051720808886675 + 17456213737405449465*2^64 + 1728588455567587516*2^128 + 1914316597*2^192,15677994091011966297 + 6979162543861587769*2^64 + 17297991103336454481*2^128 + 177573768*2^192,9407915648576006654 + 16144603819804519207*2^64 + 932578839827584092*2^128 + 1710970068*2^192;\
14321433874057761344 + 15695191686296519423*2^64 + 5331374518060247493*2^128 + 74144144*2^192,14944590867631303356 + 3497128006429894666*2^64 + 6843796712124049047*2^128 + 749710468*2^192,3050602977122082878 + 2522822004231857185*2^64 + 7153977723101006793*2^128 + 2138557857*2^192,17141200324237242250 + 5143295463896721778*2^64 + 9431429475611723343*2^128 + 1453181807*2^192,12603246366528635972 + 12032703236307767670*2^64 + 2788087543141990723*2^128 + 981424181*2^192,13697318350283310630 + 15516846207619937520*2^64 + 5420030993769748374*2^128 + 1307247720*2^192,568609483655811886 + 18126912218882857191*2^64 + 6209489149264504751*2^128 + 167827896*2^192,663386558852004044 + 12632551715556377143*2^64 + 2026794233920352190*2^128 + 72532712*2^192;\
3481896978869003080 + 10175117210968804270*2^64 + 8805969121015986454*2^128 + 428273363*2^192,15652149372181114908 + 3867536478733725259*2^64 + 1652148051314730402*2^128 + 1160938847*2^192,9300535557863811450 + 7538464652480924443*2^64 + 1347115280001358715*2^128 + 1295737130*2^192,4834341103522236958 + 10407087539902055464*2^64 + 1888090432657406903*2^128 + 85846433*2^192,781303217327495224 + 14159826737991057199*2^64 + 12149117243985493794*2^128 + 308026085*2^192,9873216340155026370 + 14183521624538406064*2^64 + 10411733163276292143*2^128 + 2126993422*2^192,3590664497291620514 + 14161933950903241347*2^64 + 1373792119099256258*2^128 + 680339924*2^192,16548913703026836860 + 12910716695966539122*2^64 + 18050395247412023730*2^128 + 571038353*2^192;\
12758816685769577250 + 3754226354056183854*2^64 + 16578655107369556972*2^128 + 762553567*2^192,15558880039579226122 + 4399650244007754016*2^64 + 6320984822401044202*2^128 + 2137999387*2^192,7322384948435911589 + 10160960349628374954*2^64 + 12192217090198087782*2^128 + 1228137626*2^192,12873996316248223133 + 14019975854020655214*2^64 + 11222350533234301672*2^128 + 1304625857*2^192,8573224276740852454 + 11922314678533574222*2^64 + 1742952461326939975*2^128 + 491058074*2^192,10770266424712170961 + 2121662488924479690*2^64 + 2305754169778387560*2^128 + 586619098*2^192,6907839469117619467 + 12974837649490584654*2^64 + 8005741424981487005*2^128 + 245869670*2^192,7169593131177657474 + 9446176681861943862*2^64 + 7945009169866520342*2^128 + 1566772808*2^192;\
10685134326596540428 + 6253901693300288858*2^64 + 7844863657627730993*2^128 + 1689630167*2^192,12406294892781584316 + 2608519599923976882*2^64 + 14063737356635821225*2^128 + 1998905824*2^192,5013156954725342166 + 14157108530007366344*2^64 + 16763827610265052783*2^128 + 489718116*2^192,7010009323672631582 + 7840110275932324528*2^64 + 10415635858972079504*2^128 + 1893388999*2^192,18209380003031602476 + 17468140897920174198*2^64 + 1018688192946918042*2^128 + 1841459559*2^192,17613189590447793654 + 15474168611272276530*2^64 + 112930699852572272*2^128 + 1421214792*2^192,16579205483191318658 + 7814622191727846806*2^64 + 1006822020453753562*2^128 + 120423475*2^192,1826042433176645924 + 4456431258732041315*2^64 + 14702504005754604959*2^128 + 1995295642*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4185 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 
Look at the ideal generated by: 
1*x^4 + 1*x^2*y^2 + 1*y^1*z^1*w^1
1*x^3*z^1 + 1*x^2*y^1*z^1 + 1*x^1*y^2*z^1 + 1*x^1*w^2 + 1*y^3*z^1
