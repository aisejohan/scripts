/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 47
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	2 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	4 
[1, 7, 0, 0, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[2, 0, 0, 3, 1]  	21	7 
[0, 1, 5, 0, 1]  	23	3 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[0, 0, 5, 1, 2]  	25	2 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 2, 1, 253]  	22	3 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	4 
[1, 0, 1, 2, 254]  	17	4 
[0, 7, 0, 0, 254]  	21	5 
[0, 0, 0, 5, 254]  	25	1 
[0, 6, 0, 0, 255]  	18	4 
[0, 1, 0, 4, 255]  	23	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[258165278876263368 + 2216077758088061098*2^64 + 9140818503180023238*2^128 + 1502553615*2^192,15135826614315064244 + 1578112878852090266*2^64 + 6257188306639319308*2^128 + 2011274525*2^192,7897954728948591488 + 16293552902781110114*2^64 + 7041566492237402317*2^128 + 920017179*2^192,136025155698634934 + 10915294525865247604*2^64 + 9482249208021787512*2^128 + 1911598903*2^192,15739809734038988542 + 4016758506177466778*2^64 + 1016973907984461986*2^128 + 946355803*2^192,4248951552426599654 + 6069206974598945456*2^64 + 5720428348368176735*2^128 + 1496175798*2^192,18086358508386248402 + 17857946981963205226*2^64 + 9244279238208390016*2^128 + 776310164*2^192,7477566122549458588 + 16704250814637227351*2^64 + 16833154384584722906*2^128 + 1780859447*2^192;\
8538677694913026604 + 16235387165565841079*2^64 + 12210067523554620872*2^128 + 183926220*2^192,7194018359061189558 + 6500340675083163203*2^64 + 17489096040855144093*2^128 + 247180272*2^192,2798770919637350100 + 6426845775224451495*2^64 + 8923309587183664405*2^128 + 634502263*2^192,7271482290174695005 + 17641145594897478773*2^64 + 12561763709445755727*2^128 + 881509798*2^192,2011037925050774869 + 15777988600641446274*2^64 + 14187525561793945617*2^128 + 541658676*2^192,1829739215932895549 + 2628736367619471497*2^64 + 11029739756365006233*2^128 + 966531689*2^192,6605867133516211751 + 7679730285811333471*2^64 + 13404345699786898421*2^128 + 247042176*2^192,16922410152043043362 + 2598347027607040776*2^64 + 8295778547934000257*2^128 + 719238351*2^192;\
17526074424760865560 + 9082357779011063234*2^64 + 11904899124103841823*2^128 + 2130378118*2^192,12728360092895678432 + 7406640680069914553*2^64 + 14021573721887054074*2^128 + 928389580*2^192,9517108648212346472 + 6509036266096381467*2^64 + 11394660539285624872*2^128 + 1830713101*2^192,6215571686385693652 + 13916272769453734427*2^64 + 7438411143156835646*2^128 + 1983654204*2^192,64896392693785780 + 15599470105530985447*2^64 + 14044026616600367866*2^128 + 726673708*2^192,5550669385839639980 + 13116576498015076603*2^64 + 9472618697977712189*2^128 + 1935719792*2^192,14790031890843572408 + 6475685693276943161*2^64 + 10558861271711700095*2^128 + 362225323*2^192,2774594766611261528 + 2555810496342174781*2^64 + 7240749152356284195*2^128 + 65969545*2^192;\
7272467545770701546 + 9516807455089674264*2^64 + 4634667733951460633*2^128 + 2017183209*2^192,862064153085822382 + 11474334083770381429*2^64 + 16514498588133224714*2^128 + 1917882487*2^192,7016305800472102204 + 15770463427113838573*2^64 + 5779479656910803132*2^128 + 1976049770*2^192,14293136951726088505 + 2107123556325625164*2^64 + 14602993233209062912*2^128 + 1460950426*2^192,9644341507260669989 + 5696571571870403362*2^64 + 4404530876533756257*2^128 + 1626316787*2^192,7207313337309621941 + 15050913313199245512*2^64 + 5174522710844845480*2^128 + 232044562*2^192,12754809695347007011 + 12976222508409325354*2^64 + 17004668698175500765*2^128 + 2079852390*2^192,11395379734190057290 + 3479053509822990456*2^64 + 2186748422382627954*2^128 + 243171159*2^192;\
8557637963813770384 + 5889599250333629713*2^64 + 15006491041099833381*2^128 + 906277769*2^192,1791082842767695136 + 6463349923539333008*2^64 + 12432082335417615619*2^128 + 193827573*2^192,4223185564881284404 + 17403918343938936458*2^64 + 4958442718210234997*2^128 + 1391137721*2^192,4437270392757447208 + 9840498354909397122*2^64 + 9722218221211173903*2^128 + 455353273*2^192,17072661671529463016 + 4444228445053817199*2^64 + 18343400522207206837*2^128 + 2043355767*2^192,12732043728063197000 + 7921076019758839253*2^64 + 7025201329467712176*2^128 + 1672886469*2^192,7874305941000663532 + 11340949817380737931*2^64 + 13547130658583072567*2^128 + 1824874587*2^192,2278325401665474200 + 443773818535409797*2^64 + 12601509919289444872*2^128 + 1476922963*2^192;\
7635932329675369188 + 4329060669124156337*2^64 + 8431635478102170957*2^128 + 1079688171*2^192,17237429639779369278 + 14018406765687474348*2^64 + 12233763854175491655*2^128 + 373896015*2^192,2831050667847507248 + 11175299318219500925*2^64 + 5427924458548914907*2^128 + 489432926*2^192,9842342431423676565 + 3673838855446093524*2^64 + 2118157156851138579*2^128 + 449294057*2^192,8073668979115753145 + 10647199617877643088*2^64 + 162492636380429913*2^128 + 1952770461*2^192,12969677692807310061 + 17442996832179880084*2^64 + 11678455026082972829*2^128 + 6703820*2^192,2710430205510333395 + 7493048115266829675*2^64 + 3072786382151637098*2^128 + 1702851836*2^192,2751464445026098522 + 6399080276840812480*2^64 + 17749095643568614377*2^128 + 569253064*2^192;\
12010203502592056502 + 11823132882730973236*2^64 + 3994435886314716282*2^128 + 888739536*2^192,532011474610173040 + 1557681579099744572*2^64 + 518935311568996124*2^128 + 132127457*2^192,16452277836240186272 + 2191570144576815319*2^64 + 1942841551387206214*2^128 + 1549287707*2^192,12676212628152174422 + 17555713402717875810*2^64 + 17498336928194538701*2^128 + 1288662106*2^192,7251333990941301462 + 2946182641672149204*2^64 + 9931382910955760519*2^128 + 925806414*2^192,13552596919298992998 + 15590506317435750340*2^64 + 6001635538568444180*2^128 + 972169033*2^192,14598936328549411810 + 4821308382929171534*2^64 + 3940370225849348101*2^128 + 1050706351*2^192,13877701901175321940 + 1193857274147781511*2^64 + 3340359982727804421*2^128 + 1864521211*2^192;\
5624273909823918612 + 11562063369416891658*2^64 + 13362739518667852188*2^128 + 416481031*2^192,14726559564042233480 + 6762497220771077618*2^64 + 659711357880378561*2^128 + 1005731390*2^192,13780127164966062520 + 18010752665119533726*2^64 + 8389124928027863427*2^128 + 607102474*2^192,2854504832177636744 + 12002267028781150003*2^64 + 1425726499079514793*2^128 + 902110092*2^192,2447830222539571920 + 17455229283880480831*2^64 + 15102497862426948854*2^128 + 629257693*2^192,17611951929123250168 + 17307757348324198748*2^64 + 15562737933034156542*2^128 + 229744669*2^192,3669961374876937680 + 12303041177714222883*2^64 + 3304327961199947831*2^128 + 1038771489*2^192,1456955209734184232 + 9060711766542106132*2^64 + 12837346326099436773*2^128 + 775365106*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4412 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 31

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
Look at the ideal generated by: 
1*x^3 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^1*z^2
