/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 55
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[3, 2, 0, 0, 0]  	15	4 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	5 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	6 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 6, 0, 1, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[0, 5, 0, 1, 1]  	20	4 
[0, 1, 5, 0, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 5, 0, 0, 2]  	18	7 
[1, 2, 0, 2, 2]  	19	5 
[0, 1, 2, 3, 2]  	26	2 
[1, 0, 2, 1, 4]  	16	5 
[0, 7, 0, 0, 4]  	21	6 
[0, 4, 1, 0, 251]  	16	4 
[2, 2, 0, 0, 254]  	12	3 
[0, 0, 4, 2, 254]  	26	1 
[1, 0, 1, 2, 255]  	17	1 
[1, 2, 1, 1, 255]  	18	6 
[0, 6, 0, 0, 255]  	18	3 
[0, 3, 0, 2, 255]  	19	4 
[0, 2, 2, 1, 255]  	19	2 
[0, 0, 0, 4, 255]  	20	1 
[0, 2, 4, 0, 255]  	22	2 
------
The gap is between 5 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[14153666637159323528 + 13571854279111240026*2^64 + 3327823637584439192*2^128 + 1004674462*2^192,15971607943775674348 + 258071325760346369*2^64 + 7152589613402979656*2^128 + 1029794250*2^192,1815095654347050194 + 1338951566982273301*2^64 + 1502765228034140155*2^128 + 628881809*2^192,9124048636198564806 + 12684669903667275588*2^64 + 17108023817816293059*2^128 + 727391245*2^192,14448424167052995146 + 17155617990520576608*2^64 + 16565330680316737005*2^128 + 441626129*2^192,13715272351887041738 + 12694937138788531125*2^64 + 18429170406875723387*2^128 + 1014622958*2^192,11353120650118838404 + 7149196548282632380*2^64 + 12573242927183561967*2^128 + 239478319*2^192,11545902821780799304 + 11377746116280644100*2^64 + 2310771682143740646*2^128 + 82390165*2^192;\
13618886601883317349 + 2939259900770014105*2^64 + 6953617706049898656*2^128 + 524339542*2^192,11157488044256769400 + 7278173913081203727*2^64 + 18237369749531009140*2^128 + 233299225*2^192,12533426121607881792 + 5908372419458994308*2^64 + 12846537013645015963*2^128 + 57397070*2^192,1368770080992170384 + 18060058320920191463*2^64 + 6262101654861984808*2^128 + 515465264*2^192,17552010532347853362 + 17795177766066922122*2^64 + 17743294219170624464*2^128 + 136832313*2^192,3022453760820232424 + 13579953824052652038*2^64 + 2559521105861881330*2^128 + 363497951*2^192,1498397388333114022 + 2508852966397703053*2^64 + 17735835240145821781*2^128 + 4358205*2^192,13753124346840183444 + 3544069294467822714*2^64 + 10884189324940246946*2^128 + 37306698*2^192;\
8264037909836616374 + 4801195456651981691*2^64 + 47709858995105087*2^128 + 401149032*2^192,13603804306942501272 + 15731403232689779785*2^64 + 17628337886124632868*2^128 + 931945127*2^192,11688360536579207652 + 6083565684545698100*2^64 + 7931835654590621740*2^128 + 753404865*2^192,14056130652598709620 + 5480480188528185963*2^64 + 11316616147254983100*2^128 + 564965418*2^192,16171636101246959460 + 2766827741797966616*2^64 + 14673068215766891508*2^128 + 1026716327*2^192,113700558341790128 + 3400368858047925012*2^64 + 9554003196945071856*2^128 + 18725697*2^192,10038143299714788616 + 14597299706247366332*2^64 + 17343436887888285448*2^128 + 961766440*2^192,759601610562705724 + 14916858421015339038*2^64 + 15920130714035079468*2^128 + 643780232*2^192;\
18354797637691017740 + 9017447310531722728*2^64 + 4924843894135502027*2^128 + 892830400*2^192,13383581182687600936 + 9018145350479503205*2^64 + 11286695975733043621*2^128 + 747273275*2^192,1299865644585502838 + 10049284307663107736*2^64 + 16036015977724277471*2^128 + 315620759*2^192,14301270914788827578 + 18322815274056875279*2^64 + 3959537660528445388*2^128 + 196290298*2^192,1489428190971104004 + 1029826439468126837*2^64 + 6338164051304693059*2^128 + 280422574*2^192,9242217885423171462 + 3943944633850676709*2^64 + 1569475787375061990*2^128 + 279272112*2^192,14028616860307703084 + 17828024823528604049*2^64 + 11002728104492911560*2^128 + 36968818*2^192,4426020564826405136 + 13674768961320616637*2^64 + 10207971742757784297*2^128 + 913676845*2^192;\
13039547938771397580 + 16686934448525635246*2^64 + 9213591911198761871*2^128 + 598399454*2^192,11202307357017753330 + 5809529828266764931*2^64 + 2213226075235530463*2^128 + 637472675*2^192,11965330700790130102 + 15631365325092597388*2^64 + 12003258424282248606*2^128 + 131610678*2^192,4920672700192565700 + 9767972740451700558*2^64 + 18328307702263008462*2^128 + 745646068*2^192,4695107555782184232 + 17765378263126288069*2^64 + 17339237582579281568*2^128 + 1014695370*2^192,8774318258583219402 + 9813142778482565983*2^64 + 5840229761677337782*2^128 + 96840415*2^192,17166597239572857216 + 17324795105843074054*2^64 + 10275159055212816574*2^128 + 210342872*2^192,10462749957428287520 + 1586593594302355747*2^64 + 1122275799135960182*2^128 + 765783063*2^192;\
7850876163625042222 + 16450240318214052380*2^64 + 6734685070494169814*2^128 + 88783299*2^192,898450481497785952 + 10307103480156127707*2^64 + 8082694545857142845*2^128 + 306379735*2^192,7758269493053216130 + 17066226723188705034*2^64 + 15968084922365353671*2^128 + 693578699*2^192,16174887618147168000 + 14466034155651708519*2^64 + 8990830693470251011*2^128 + 564759882*2^192,5399477146736691344 + 13774089507071018832*2^64 + 5713690714216718727*2^128 + 454267025*2^192,17051929449059757560 + 8355737819562484811*2^64 + 13603381719763367817*2^128 + 407534897*2^192,7326442409505957928 + 4827493473705429195*2^64 + 1932048250596015878*2^128 + 611372827*2^192,15097918813331368300 + 3335291598270283730*2^64 + 8349280375568045528*2^128 + 294712932*2^192;\
9180240476997880677 + 6759877280009889889*2^64 + 2584410028015073651*2^128 + 600867864*2^192,5836715835035406038 + 73250471710670481*2^64 + 4339978821425661555*2^128 + 184057254*2^192,16707732449729975440 + 5269854626142379298*2^64 + 11562483178980037982*2^128 + 852025964*2^192,5274276054227531748 + 14867096828912117108*2^64 + 15932670760702224736*2^128 + 410108733*2^192,6154213519230959322 + 8611956207997250556*2^64 + 16400737703199592640*2^128 + 295990659*2^192,17197882747651990258 + 7371929035211187540*2^64 + 8375223444307297791*2^128 + 335018701*2^192,16753007746729270652 + 4471580074297914242*2^64 + 10830651828045912948*2^128 + 904520093*2^192,15419531331907937528 + 554596586148902720*2^64 + 2341059338167772869*2^128 + 768166693*2^192;\
1953138010454710867 + 3918674767296187028*2^64 + 6131203353346286079*2^128 + 624484871*2^192,5277771061166040120 + 8088121353752338724*2^64 + 5266639865186499905*2^128 + 112956110*2^192,5422370320770587698 + 11298609985316142684*2^64 + 17467696371649056165*2^128 + 780274284*2^192,12220819012433963040 + 14083740894110494123*2^64 + 3762893393881271774*2^128 + 494584406*2^192,5909681191806732584 + 749567129531447041*2^64 + 4288879854956511231*2^128 + 293702372*2^192,12865270265257782894 + 11052446599021257413*2^64 + 17036717874511601635*2^128 + 1061242170*2^192,3669769963249008838 + 16930954665348765755*2^64 + 7543128767260606812*2^128 + 237580300*2^192,5945811744614155972 + 7314346351787293246*2^64 + 2151875038162958212*2^128 + 341237254*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4736 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 36
