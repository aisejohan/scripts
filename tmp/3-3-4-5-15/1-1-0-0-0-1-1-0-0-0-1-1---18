/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 51
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	8 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	3 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[3, 0, 4, 0, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 2, 1, 3, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	6 
[2, 3, 0, 0, 2]  	15	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 3, 0, 2]  	21	6 
[0, 3, 2, 1, 4]  	22	3 
[0, 3, 1, 2, 4]  	23	3 
[0, 4, 2, 0, 5]  	20	4 
[0, 3, 0, 3, 5]  	24	4 
[0, 0, 5, 0, 252]  	20	2 
[0, 1, 1, 3, 253]  	22	2 
[0, 1, 0, 4, 253]  	23	2 
[1, 0, 1, 1, 254]  	12	4 
[0, 5, 0, 0, 254]  	15	3 
[0, 0, 4, 2, 254]  	26	1 
[0, 2, 1, 2, 255]  	20	3 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 6 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[16239477531393877400 + 9870857514374176855*2^64 + 5294677366229731546*2^128 + 4648360920*2^192,15920736455151689792 + 7030676157072119919*2^64 + 17940846956328431329*2^128 + 2505756033*2^192,7844947065872982480 + 8757689741413212471*2^64 + 7659654696069354823*2^128 + 3316617546*2^192,9723800299235549328 + 9430561213710233431*2^64 + 4386787294088956889*2^128 + 8492751588*2^192,2826025567924214192 + 4713117431598541200*2^64 + 16015562296161845373*2^128 + 4110482238*2^192,9913709159140823632 + 280570812603796848*2^64 + 10629839654722296819*2^128 + 8435477592*2^192,1750480281700527424 + 6107360675092700472*2^64 + 9386394622806779814*2^128 + 4165406816*2^192,7109434105853851648 + 14598763118762738830*2^64 + 5738522969966919227*2^128 + 5394395941*2^192;\
11548495207894755938 + 2718869925731466574*2^64 + 13450772116584967746*2^128 + 1391325493*2^192,6977652827324848896 + 3531099759735242515*2^64 + 5994120900191871684*2^128 + 55120298*2^192,7861897562048788772 + 15103671244181459498*2^64 + 13963092695123729305*2^128 + 2463319713*2^192,10871806834120920692 + 15399920519441719284*2^64 + 8463192173158989366*2^128 + 2798134250*2^192,18202412779670001696 + 12600266131340203669*2^64 + 14039792552225561756*2^128 + 2893703734*2^192,3457455262845381792 + 17033608410072167910*2^64 + 16642901764111818823*2^128 + 2529398190*2^192,4210904035940771072 + 12890388523918135969*2^64 + 1063731459706945011*2^128 + 335288595*2^192,10738567557005403048 + 3447763585545707462*2^64 + 2558688662079359071*2^128 + 2882252633*2^192;\
14729343779920512778 + 13378337475892895854*2^64 + 16395606233721205566*2^128 + 4313474456*2^192,15460130572649058976 + 4295190537443514574*2^64 + 14965471459839842297*2^128 + 7996514531*2^192,3061775711947581684 + 12425983619086247321*2^64 + 11415348053743883053*2^128 + 3181099106*2^192,13440221320483798804 + 5777402977895932859*2^64 + 15281838916424802393*2^128 + 3015815309*2^192,2425175523931765096 + 7762641592885453146*2^64 + 5029300486022281713*2^128 + 2409469086*2^192,16681325932911225016 + 16592635362039662866*2^64 + 7288692416355266347*2^128 + 2938955001*2^192,1463301027907179376 + 13178313168971946138*2^64 + 7202243979299912301*2^128 + 6731598429*2^192,9644723305645098520 + 14800019670865616397*2^64 + 13004713507693299471*2^128 + 3709657069*2^192;\
16385131532416432714 + 8858474268546237927*2^64 + 14016157813951644198*2^128 + 5173136066*2^192,7712280376290187472 + 5570963959813584528*2^64 + 18247254532707675030*2^128 + 3834602702*2^192,10237265411879181364 + 7147397114955949196*2^64 + 3914782803458188382*2^128 + 7056072409*2^192,2595173341947206644 + 13125604733649782591*2^64 + 1883475433496982347*2^128 + 5765374379*2^192,634644596358768816 + 881479481456614996*2^64 + 6282019019691693496*2^128 + 7528986909*2^192,13967835978458564688 + 12729736596321719624*2^64 + 10059963055128286527*2^128 + 5449623829*2^192,13912370371343538944 + 18091748831951432977*2^64 + 799163276847847531*2^128 + 6524593680*2^192,5729746149421079400 + 10346742363790193889*2^64 + 12562875323077327873*2^128 + 879774023*2^192;\
10870673311359112183 + 5967478069246035511*2^64 + 685908836254595452*2^128 + 8342834730*2^192,13931615822824965664 + 8056760167081451478*2^64 + 756560198824217551*2^128 + 8578431453*2^192,4528043121894707346 + 6941760754555146965*2^64 + 4936101615615515235*2^128 + 7771336315*2^192,11743831816811415998 + 4781292466546334287*2^64 + 18035625301978319364*2^128 + 1595238406*2^192,1352619664605217982 + 18318463582493529020*2^64 + 15833980183802355148*2^128 + 1865113396*2^192,7062302504840638106 + 9166369250554889335*2^64 + 9226743563362486086*2^128 + 3070829060*2^192,4042510080524901044 + 10306870260590040030*2^64 + 2753004312153933493*2^128 + 3376578029*2^192,9644383635370226392 + 15133424106011957145*2^64 + 16539869113245534327*2^128 + 1468834997*2^192;\
15726670342584275763 + 17536976699148954304*2^64 + 4480453964729567995*2^128 + 1299136477*2^192,5998220551108312736 + 16476554907652033462*2^64 + 18255125604668975541*2^128 + 2355977293*2^192,694545144817287770 + 9239255272334598428*2^64 + 14196534760087154496*2^128 + 1357080159*2^192,18281440666108358582 + 8214632742376811922*2^64 + 9174709731195439391*2^128 + 3591178905*2^192,6689020195174028470 + 5967569029169986766*2^64 + 2505782540957849597*2^128 + 442066213*2^192,5551136963114561794 + 5915639932335464807*2^64 + 6158900484204096292*2^128 + 1609833047*2^192,3799177983063398596 + 8792405482781829518*2^64 + 5922078195907415682*2^128 + 35974131*2^192,4779095143456526616 + 17174948142619707829*2^64 + 530153547540307286*2^128 + 2838714231*2^192;\
12669543547812719620 + 11700269532115573764*2^64 + 13339819070634983606*2^128 + 1161920581*2^192,5592700008830687104 + 9742075340896828542*2^64 + 10320440112878311592*2^128 + 3455945525*2^192,1344840966511356080 + 15820625210290384544*2^64 + 4958212586303829991*2^128 + 7374324433*2^192,5902570025411265336 + 10531151660197014917*2^64 + 8050887206528651003*2^128 + 5706070932*2^192,319445201164531596 + 6347873718624836143*2^64 + 13235933048365968417*2^128 + 6168390241*2^192,867227887446601636 + 11204359919538691505*2^64 + 2675794807292581051*2^128 + 3496913824*2^192,12695764502322019176 + 1102836919599464794*2^64 + 15374012844316297713*2^128 + 5211103000*2^192,16677053222458740072 + 5381735613987511641*2^64 + 5389223502417777906*2^128 + 5303184277*2^192;\
7933162717573678120 + 11398572552257460984*2^64 + 17585157971362946219*2^128 + 2173572282*2^192,3746551158507080960 + 16076894160562355540*2^64 + 12466102159256522974*2^128 + 449583750*2^192,8197929279470476656 + 15819597102065712709*2^64 + 5457711228532896818*2^128 + 3536970172*2^192,2405632200411922064 + 11110597776189458436*2^64 + 7058345364132208538*2^128 + 1491049299*2^192,8351033152423637008 + 7683494017696177840*2^64 + 7305223146821109589*2^128 + 1742446012*2^192,4575357811667781168 + 7791223993444282507*2^64 + 14310664385070513740*2^128 + 3361712625*2^192,5992554891747567328 + 795383124870713380*2^64 + 17944384855667398049*2^128 + 1961700511*2^192,11809443498964879712 + 13717755047636043298*2^64 + 3252767527509797245*2^128 + 4109691317*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4185 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
Look at the ideal generated by: 
1*x^2*y^1 + 1*x^1*y^2 + 1*z^1*w^1
1*x^1*z^2 + 1*y^2*w^1 + 1*y^1*z^2
