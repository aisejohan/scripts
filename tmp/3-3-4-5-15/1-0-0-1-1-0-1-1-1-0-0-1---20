/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 47
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[2, 2, 0, 0, 0]  	12	3 
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	4 
[1, 3, 0, 1, 0]  	17	4 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	4 
[0, 3, 1, 2, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 1, 0, 2, 1]  	16	6 
[1, 5, 0, 0, 1]  	18	7 
[1, 1, 2, 1, 1]  	19	5 
[0, 2, 1, 2, 1]  	20	4 
[1, 0, 2, 2, 1]  	21	5 
[0, 2, 3, 1, 1]  	23	3 
[0, 2, 0, 4, 1]  	26	2 
[1, 2, 2, 0, 2]  	17	5 
[0, 4, 1, 0, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	4 
[0, 4, 0, 1, 255]  	17	3 
[0, 6, 0, 0, 255]  	18	4 
[0, 3, 0, 2, 255]  	19	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 254.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6955520457332033162 + 18310794158351897269*2^64 + 13637001603675180426*2^128 + 320889867*2^192,15110673535032339908 + 8645550688226335007*2^64 + 9851448995709561362*2^128 + 559473500*2^192,12021723723584470876 + 4821843648148268783*2^64 + 14711195195642824511*2^128 + 259108261*2^192,16606834841454505948 + 4808019217909453079*2^64 + 9510907765091287562*2^128 + 1205275070*2^192,15901502314307714452 + 2880777449696423037*2^64 + 11499714557278394057*2^128 + 348772072*2^192,2664968868789423804 + 6673385991209563619*2^64 + 16337788049728654501*2^128 + 1044896170*2^192,5796641317870649280 + 6195673636381136007*2^64 + 11587766627287034096*2^128 + 891523056*2^192,10722184842440989632 + 7949529663735574878*2^64 + 16469475495946455662*2^128 + 12956771*2^192;\
3547937066285846957 + 10058398025469683615*2^64 + 14560151876096752078*2^128 + 689521851*2^192,3202682381737129214 + 17281028298978759937*2^64 + 8968578555987367197*2^128 + 586234160*2^192,8978953754760205030 + 11397863281157865965*2^64 + 6317571016011170796*2^128 + 2095156656*2^192,1768961641624379198 + 16675858652881522990*2^64 + 14108398160557253987*2^128 + 1405735389*2^192,24469606769420286 + 11248544821130879167*2^64 + 11259429442150852691*2^128 + 1856727634*2^192,12808119407397601958 + 15381660744250388221*2^64 + 13491804497582724257*2^128 + 733687152*2^192,8428448637013565540 + 7402363936209984561*2^64 + 5777046831226633694*2^128 + 1732236365*2^192,12367772958613453864 + 5054451268277906967*2^64 + 13140305302473639977*2^128 + 1895391121*2^192;\
11145869202908519950 + 9321493380893012046*2^64 + 5288072241759054628*2^128 + 744906631*2^192,6776551275244586852 + 10170319791662216019*2^64 + 14226262496293917933*2^128 + 2015849642*2^192,6092293037876004772 + 9415662813132891473*2^64 + 13835538767835012924*2^128 + 1414988725*2^192,10534425676674954372 + 14152735283801502245*2^64 + 13388058711214665985*2^128 + 673959179*2^192,8475853404321564684 + 8217127982752448228*2^64 + 14173869853159946836*2^128 + 141648380*2^192,9372992748895976976 + 6829954335130118530*2^64 + 14495851490256589419*2^128 + 1269637970*2^192,821839819983455680 + 7749036412875089980*2^64 + 7124074674140215642*2^128 + 2017668228*2^192,22892168082588736 + 177942188511806854*2^64 + 18239219179104869732*2^128 + 1238684544*2^192;\
7252165768862619419 + 616038089391764067*2^64 + 11040654097739417735*2^128 + 534344765*2^192,13358570681832607758 + 1047957976854328555*2^64 + 1356923410596632285*2^128 + 1957682079*2^192,11269982734585500034 + 8064336785489021614*2^64 + 14320968252953900845*2^128 + 866913413*2^192,635787240160861518 + 17803906263918789635*2^64 + 6798678567602506077*2^128 + 349374548*2^192,8587037589737342834 + 557383065437960032*2^64 + 7440716633122953018*2^128 + 1176136544*2^192,16331006283578210374 + 15924883442192661142*2^64 + 6700926776066367501*2^128 + 2122379484*2^192,16656429777667638532 + 11728640592748114117*2^64 + 1107925564172460122*2^128 + 1782740995*2^192,3066871306449376848 + 4505795871065173623*2^64 + 4222893253737124843*2^128 + 1922443568*2^192;\
13668588642412994146 + 4040873695015435912*2^64 + 1971290338451230636*2^128 + 51765817*2^192,9672070843982593620 + 11311234430029792418*2^64 + 826645024245459898*2^128 + 760864645*2^192,1640276740960038696 + 12294210298362436106*2^64 + 14171235782198769146*2^128 + 317883727*2^192,10618178233074816936 + 11317672370281746466*2^64 + 18163959683516572718*2^128 + 602615502*2^192,13033609153383712944 + 218412718469069445*2^64 + 16046998033623589631*2^128 + 369646219*2^192,11062092516878553820 + 18407480364691167001*2^64 + 2179548904066069239*2^128 + 858016173*2^192,778010845263859712 + 7358685604050782162*2^64 + 12760954863483603094*2^128 + 747743422*2^192,9420385356114249768 + 1416493749549717574*2^64 + 8923335743070285414*2^128 + 590608917*2^192;\
5176724811694725564 + 1651412603180042812*2^64 + 8689458327421204693*2^128 + 868335590*2^192,8575233744072441440 + 17005554761682312916*2^64 + 4723979322259634426*2^128 + 47904453*2^192,17112541711034416192 + 16046105151608936451*2^64 + 17285013833311152283*2^128 + 313787726*2^192,13356832375691582356 + 10822181840281505340*2^64 + 817912365348392307*2^128 + 847131352*2^192,3310914644392027200 + 578481953437089853*2^64 + 12732130546879490854*2^128 + 754745145*2^192,6630860397396406284 + 13135478633671954357*2^64 + 9303943710681825956*2^128 + 558855754*2^192,2569964035069822800 + 10194842299464430026*2^64 + 16198076948276628307*2^128 + 390340750*2^192,5843922906465472896 + 16709473777703054663*2^64 + 6391209456084340683*2^128 + 714320463*2^192;\
8462957437128117703 + 7208227463041568717*2^64 + 6207642562883461483*2^128 + 1592728658*2^192,16467625115874933422 + 6900802591952207092*2^64 + 10171881702387417417*2^128 + 1131248021*2^192,15446173139675749530 + 10845599645511954748*2^64 + 17145982225991564343*2^128 + 369772469*2^192,13318533546554397822 + 17405875446507293577*2^64 + 17387996328240021780*2^128 + 2008745312*2^192,8798339762996391774 + 4450503656914641039*2^64 + 14392979593712031800*2^128 + 1767151373*2^192,14272409998236320534 + 14144642211884915531*2^64 + 11371495014332852831*2^128 + 1020476807*2^192,14723785194283200852 + 1098057616639792808*2^64 + 18123711546238039199*2^128 + 1086299270*2^192,15923089062333612936 + 3024161042784017535*2^64 + 7086425713479889749*2^128 + 233149287*2^192;\
18344585659232053132 + 3281321428184438239*2^64 + 4918620223503600887*2^128 + 1606755081*2^192,11464594596253943440 + 15944150541144593405*2^64 + 8209320236245047532*2^128 + 313987780*2^192,9677234425389324008 + 15366151367039249894*2^64 + 16276449828852247380*2^128 + 1058463341*2^192,17392643014322415496 + 6606862434924066691*2^64 + 10444053631941289547*2^128 + 1972120428*2^192,9211748333406554080 + 10158658110163318013*2^64 + 6708749135035809370*2^128 + 741418021*2^192,3001912165722607068 + 17531721383981999874*2^64 + 1055782202379893007*2^128 + 1642249459*2^192,7423744279799792600 + 13566281568046698649*2^64 + 11585375223467406112*2^128 + 229227507*2^192,11200837707915081080 + 16122833974924096778*2^64 + 4178197913248502135*2^128 + 1352796171*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5214 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 - 4*x^5 + 16*x^3 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 2*x^2 - 4*x + 16, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 
Look at the ideal generated by: 
1*x^2*y^2 + 1*x^1*z^1*w^1 + 1*y^4
1*x^3*w^1 + 1*x^1*y^2*w^1 + 1*y^2*z^2 + 1*z^1*w^2
