/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[2, 2, 0, 0, 0]  	12	4 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 1, 2, 1, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	6 
[1, 1, 1, 2, 0]  	20	6 
[0, 5, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	6 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	3 
[1, 3, 0, 3, 0]  	27	4 
[0, 9, 0, 0, 0]  	27	3  <--- 2
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	5 
[1, 5, 0, 0, 1]  	18	7 
[1, 2, 0, 2, 1]  	19	6 
[1, 1, 0, 3, 1]  	21	6 
[1, 0, 5, 0, 1]  	23	3 
[1, 0, 4, 1, 1]  	24	6 
[0, 8, 0, 0, 1]  	24	5 
[1, 0, 3, 2, 1]  	25	2 
[1, 0, 2, 3, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[1, 0, 2, 1, 2]  	16	5 
[1, 0, 1, 2, 2]  	17	5 
[0, 4, 2, 0, 2]  	20	4 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[1, 0, 4, 0, 3]  	19	5 
[0, 2, 1, 2, 252]  	20	3 
[0, 3, 2, 1, 252]  	22	3 
[0, 5, 1, 0, 253]  	19	3 
[0, 4, 1, 0, 254]  	16	3 
[0, 4, 0, 1, 254]  	17	3 
[0, 0, 4, 2, 254]  	26	1 
[0, 1, 2, 1, 255]  	16	1 
[0, 1, 1, 2, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	3 
[0, 0, 0, 4, 255]  	20	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[14153666637159323528 + 13571854279111240026*2^64 + 3327823637584439192*2^128 + 339877278*2^192,17577184250292576678 + 4238338189348371842*2^64 + 8235285517002025368*2^128 + 656017774*2^192,1815095654347050194 + 1338951566982273301*2^64 + 1502765228034140155*2^128 + 26999185*2^192,13715272351887041738 + 12694937138788531125*2^64 + 18429170406875723387*2^128 + 431614702*2^192,5605820946108433268 + 3056651357770905385*2^64 + 12902969621675664882*2^128 + 129321070*2^192,13233997386530630514 + 3999938441957978123*2^64 + 1918419884340041734*2^128 + 103560411*2^192,11353120650118838404 + 7149196548282632380*2^64 + 12573242927183561967*2^128 + 1038493231*2^192,11545902821780799304 + 11377746116280644100*2^64 + 2310771682143740646*2^128 + 63515797*2^192;\
17887672373939260482 + 12898158254094966236*2^64 + 5009082240195058418*2^128 + 984197081*2^192,11563775231900311410 + 17467001819707047791*2^64 + 8925713099511928469*2^128 + 332929075*2^192,16326228049756173394 + 13284241850577139265*2^64 + 3896072668525329761*2^128 + 657426980*2^192,12939804235038695154 + 10640061940630139380*2^64 + 14256745412414576090*2^128 + 131402038*2^192,970971889739232976 + 4402010896368548296*2^64 + 17895883929726072085*2^128 + 170952508*2^192,5815913815527170424 + 7966241076462196159*2^64 + 8185343653851973413*2^128 + 924402143*2^192,6536412541263928968 + 17236963137090154539*2^64 + 16249768950729496864*2^128 + 110963332*2^192,13191051585001643176 + 681062726158469577*2^64 + 3968113270599043085*2^128 + 885367247*2^192;\
13884529713309020404 + 14693537940569707018*2^64 + 15713006850284697240*2^128 + 351635627*2^192,15882872228999816000 + 902082999291443215*2^64 + 8700284579446345116*2^128 + 163763194*2^192,2985641273194144612 + 3720216716762100377*2^64 + 6482569663874525678*2^128 + 83684360*2^192,9972765498239428128 + 12725782587394505489*2^64 + 4840845939858409000*2^128 + 535187688*2^192,9837808693111076272 + 16401663446619688853*2^64 + 18223080754550943837*2^128 + 684770117*2^192,11575497955430334304 + 17417970340957042151*2^64 + 9054272145627307930*2^128 + 72523464*2^192,5749435529639632684 + 13593758519688285111*2^64 + 17627800421313777382*2^128 + 387920092*2^192,6326398316052363316 + 17188579517970120275*2^64 + 4187757354575160043*2^128 + 415786910*2^192;\
7850876163625042222 + 16450240318214052380*2^64 + 6734685070494169814*2^128 + 808106435*2^192,11532007947678434564 + 7610631939436239808*2^64 + 16085065480164442579*2^128 + 628051453*2^192,7758269493053216130 + 17066226723188705034*2^64 + 15968084922365353671*2^128 + 118959051*2^192,17051929449059757560 + 8355737819562484811*2^64 + 13603381719763367817*2^128 + 1003126065*2^192,8489102980243876628 + 6333037261037163086*2^64 + 3021114273690470236*2^128 + 389552403*2^192,7799415074750736484 + 7029301538896862157*2^64 + 16626552637390353756*2^128 + 46621517*2^192,7326442409505957928 + 4827493473705429195*2^64 + 1932048250596015878*2^128 + 460377883*2^192,15097918813331368300 + 3335291598270283730*2^64 + 8349280375568045528*2^128 + 36763236*2^192;\
12033617938590977823 + 14169543278813638471*2^64 + 17056020532499571884*2^128 + 182861345*2^192,7920485544538164644 + 7296143881776117199*2^64 + 14674959272055316666*2^128 + 354317848*2^192,4872012405162244288 + 17265069589817752754*2^64 + 8498739041496727776*2^128 + 110784547*2^192,14152904506803594808 + 4662706864673290238*2^64 + 6866793408311444380*2^128 + 529812179*2^192,10254130351135467696 + 12121827511511152852*2^64 + 17645973162109476062*2^128 + 460821326*2^192,2223563386022663760 + 4088309287824017813*2^64 + 2037531163555838245*2^128 + 328932743*2^192,7079018151817197842 + 17944973480430011005*2^64 + 142181766712745966*2^128 + 273016410*2^192,12006770389599604604 + 10359232585332166426*2^64 + 12580557393979591903*2^128 + 165973130*2^192;\
11494813202162315324 + 7771441165538398188*2^64 + 6367466734031273890*2^128 + 1038056780*2^192,17235448046473381336 + 7650246583359608794*2^64 + 10766650977917923019*2^128 + 327055048*2^192,1199075778073239534 + 15663816311628876590*2^64 + 17134162967910154656*2^128 + 135076739*2^192,15833904405408446522 + 11262897717794103438*2^64 + 13652831503615588493*2^128 + 421739584*2^192,6737290044202483198 + 9922882646028834870*2^64 + 18357144358913000552*2^128 + 608074928*2^192,17196324929801495352 + 15850826901600907186*2^64 + 13105764339987154715*2^128 + 95957934*2^192,4483643383105312584 + 709469467745845850*2^64 + 3208907705685641671*2^128 + 408496073*2^192,4785759801595683648 + 13678833737814572549*2^64 + 11831953387272413221*2^128 + 401876316*2^192;\
683574868841562129 + 5615825162561051020*2^64 + 6105751584878859560*2^128 + 802464978*2^192,8344920863686296724 + 9071917440464330070*2^64 + 9817764465201826095*2^128 + 568073240*2^192,7140553305086324406 + 2519377850597983474*2^64 + 15380806616808547073*2^128 + 728424765*2^192,3197885152466560668 + 1637837618607276819*2^64 + 11393912616151585380*2^128 + 664324207*2^192,3330489119043716364 + 17785525691093163581*2^64 + 3435488637393943092*2^128 + 1051751841*2^192,11407763015277694370 + 3798636729258654585*2^64 + 13420606835610190237*2^128 + 393251685*2^192,8553697273367038604 + 7012467977656083504*2^64 + 6973308184204379715*2^128 + 565353815*2^192,14528300977671017304 + 7878926393766140455*2^64 + 6435946239867087514*2^128 + 230468039*2^192;\
2725505378759251995 + 17599793445644581365*2^64 + 7554265941930030069*2^128 + 259428432*2^192,10261277668061217738 + 7909517594387829518*2^64 + 7461199994344863083*2^128 + 738405557*2^192,10805497782129032982 + 11282384492048003083*2^64 + 5678872062980327332*2^128 + 945789126*2^192,112105154990393526 + 1104197092510712878*2^64 + 3907044966687700472*2^128 + 96107658*2^192,8998588047947886342 + 6143321312661706109*2^64 + 16394580252318328706*2^128 + 958808857*2^192,1673185846199602410 + 3718549508884075411*2^64 + 1772598586320264987*2^128 + 330227804*2^192,10011246891482781154 + 16015245447542604049*2^64 + 1852882405169418456*2^128 + 622945812*2^192,8784306822530457908 + 10491598316885960653*2^64 + 6020408280949507500*2^128 + 284115299*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4626 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 36
