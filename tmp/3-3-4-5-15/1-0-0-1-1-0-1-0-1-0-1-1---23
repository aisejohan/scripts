/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[2, 2, 0, 0, 0]  	12	4 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 1, 0, 2, 1]  	16	6 
[1, 2, 2, 0, 1]  	17	6 
[1, 5, 0, 0, 1]  	18	7 
[1, 0, 2, 2, 1]  	21	6 
[0, 5, 2, 0, 1]  	23	3 
[0, 4, 0, 3, 1]  	27	3 
[0, 4, 2, 0, 3]  	20	4 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 0, 3, 3]  	24	4 
[0, 0, 5, 1, 6]  	25	2 
[0, 0, 0, 5, 250]  	25	1 
[0, 2, 1, 2, 253]  	20	3 
[0, 3, 2, 1, 253]  	22	3 
[0, 7, 0, 0, 254]  	21	5 
[1, 0, 2, 1, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	3 
[0, 6, 0, 0, 255]  	18	3 
[0, 1, 0, 4, 255]  	23	2 
------
The gap is between 7 and 249.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10359393103800551026 + 3288709457281284453*2^64 + 6596814244984552976*2^128 + 62325878473*2^192,114789899797803284 + 12992566968002184340*2^64 + 18268850460581904555*2^128 + 52676266173*2^192,16445518005674886480 + 9852732267273492648*2^64 + 14511024626218133798*2^128 + 51780435480*2^192,12697471888778627376 + 11933917725125778050*2^64 + 16695958745924243525*2^128 + 20534390143*2^192,2978910838199618540 + 1540592517982960128*2^64 + 9261329941732974620*2^128 + 4318522599*2^192,525240984142931264 + 6426850571443351000*2^64 + 7988419408471817067*2^128 + 43252117893*2^192,16052630363968158380 + 5799051793693424269*2^64 + 17853512461275382488*2^128 + 14690826325*2^192,5083129543209432816 + 8035772530828186161*2^64 + 13403700889983205627*2^128 + 17926654761*2^192;\
4391581040346217980 + 3683344594012678275*2^64 + 14838768115566903660*2^128 + 40562043614*2^192,6570622627049017624 + 945431235524401759*2^64 + 4642950184672022049*2^128 + 1374738140*2^192,11491671001971114336 + 8961172422183860262*2^64 + 18142404743837762316*2^128 + 26630569604*2^192,7813967967689155360 + 17825385332074067267*2^64 + 9576691606595402133*2^128 + 15810018163*2^192,16975033301526878568 + 13518048735522632332*2^64 + 18205111800501545382*2^128 + 51938969582*2^192,15263023030127642112 + 2957818295292522883*2^64 + 1153246539703172747*2^128 + 36074722321*2^192,9294165060673598312 + 5418552427969453988*2^64 + 1644488579578867950*2^128 + 38814045728*2^192,12444999601784372768 + 16892618901169954699*2^64 + 11867125757915307164*2^128 + 26616235741*2^192;\
13289582948061767569 + 10069243931459998544*2^64 + 672875669407465344*2^128 + 55198670201*2^192,6039233886962522362 + 16497892511775002156*2^64 + 14545709004495756414*2^128 + 43145481425*2^192,9988361170640296552 + 16419808090870406431*2^64 + 6210679969314740659*2^128 + 66590184829*2^192,1595980078225355352 + 17640705848795581731*2^64 + 2726540132730510766*2^128 + 48277553999*2^192,15213417532314990342 + 7203692285290560008*2^64 + 3664436602033453889*2^128 + 11178969866*2^192,9682846561613582368 + 17277735353908448594*2^64 + 7511624839612358713*2^128 + 22276706044*2^192,2234435132966352102 + 3043171029015709667*2^64 + 12964774959655660212*2^128 + 38709892427*2^192,2932191642221510072 + 14654694299384957614*2^64 + 10758247057699303597*2^128 + 27780537523*2^192;\
15856885311109136657 + 6620933587840057694*2^64 + 17889898257842599475*2^128 + 27220176571*2^192,14313974818721131002 + 18128648065475111027*2^64 + 11009478114090347559*2^128 + 66109022814*2^192,536765506275511144 + 695378050524719338*2^64 + 10066307966054963911*2^128 + 47291725699*2^192,9653166145630066648 + 2817280828515054459*2^64 + 4942089073363620152*2^128 + 14566832430*2^192,4497414916732861574 + 9909392366749275283*2^64 + 13557173929097132753*2^128 + 51619979440*2^192,8952474278366028832 + 3704070857156457267*2^64 + 444292404891821485*2^128 + 3389481144*2^192,13805485286559620838 + 3429302971029355486*2^64 + 9195559986803281161*2^128 + 22777165785*2^192,15996367277191728056 + 975832575494255687*2^64 + 3933780978143157867*2^128 + 44682678566*2^192;\
2696987445283785411 + 1756538269204565438*2^64 + 16228097453224927757*2^128 + 18526297239*2^192,15520880617580411150 + 1270694042734135373*2^64 + 9877988695648612274*2^128 + 46280925127*2^192,3963532427843750584 + 9488812813449719398*2^64 + 11961364294218264348*2^128 + 51448268641*2^192,8449874820340557064 + 17956443609836850116*2^64 + 1865588274578812270*2^128 + 1904229755*2^192,61055802423428722 + 5694418265981973379*2^64 + 2909319740929627615*2^128 + 15496938287*2^192,7242789661922088160 + 5941982115578675280*2^64 + 11458270580010023273*2^128 + 6034279845*2^192,18116506213784790290 + 13542149323859097122*2^64 + 3931036592685888110*2^128 + 24039474847*2^192,4037753656305226664 + 5973782066543151759*2^64 + 4071950958453683229*2^128 + 19482529050*2^192;\
11478706957560450273 + 4872327323641971096*2^64 + 8945649174294846106*2^128 + 26810411426*2^192,2639506334524307610 + 7322257820345596482*2^64 + 16413993880535888462*2^128 + 24577444263*2^192,10494620132763803880 + 13607523298440234260*2^64 + 325534773039031842*2^128 + 27825103529*2^192,8490604037363263448 + 7607863758568777685*2^64 + 13463357554274598175*2^128 + 17953134093*2^192,8905568805729780454 + 402326350767870861*2^64 + 16386214543931779026*2^128 + 8470915025*2^192,17574365711169476640 + 14250408973850712779*2^64 + 17347614859246624292*2^128 + 7014331460*2^192,10579610543379417542 + 9251725570960452884*2^64 + 6680436261987910771*2^128 + 2441834813*2^192,2455952804380143416 + 3454034850432462949*2^64 + 759798250479191973*2^128 + 20899033077*2^192;\
17057512998038039674 + 1946147004063617730*2^64 + 15011237330105390598*2^128 + 15226756045*2^192,11570250287064481892 + 16113446693504167459*2^64 + 7838072786688523013*2^128 + 13223720016*2^192,1907567904525792272 + 10138806260682059100*2^64 + 14831426911747622381*2^128 + 50303651274*2^192,11536575259348462832 + 4486379282577841591*2^64 + 8570446051074156785*2^128 + 38251294145*2^192,9548529913085953820 + 9280854239832979698*2^64 + 13427844295008599616*2^128 + 18220572956*2^192,8119027221492362432 + 12035805308664188024*2^64 + 9609121889213695130*2^128 + 1911384828*2^192,4158272803097313372 + 12061270387873621058*2^64 + 224085054697328594*2^128 + 14914234581*2^192,6612363941312560816 + 11597886122618095313*2^64 + 1112025584099493289*2^128 + 18747286899*2^192;\
1253816247493491639 + 1676121644350511012*2^64 + 2313204321236576702*2^128 + 19501229555*2^192,5496733026152284502 + 2769360672453665385*2^64 + 13329304665984707873*2^128 + 30135900234*2^192,5819307021216621016 + 6191546957063375913*2^64 + 7387078651636542340*2^128 + 29663133649*2^192,6003328575166508392 + 17736319603584151278*2^64 + 8743661650618501083*2^128 + 34569759443*2^192,12868397283367816874 + 8822817893671625538*2^64 + 8786754258184101414*2^128 + 607800695*2^192,6621961637455772896 + 12086615898587110931*2^64 + 755524898538438237*2^128 + 51100459969*2^192,14717240208208120522 + 70530777917232561*2^64 + 16573950715056758510*2^128 + 48195261980*2^192,16541077216079730440 + 5411697425584175560*2^64 + 14204357930974549531*2^128 + 42353711778*2^192]
/* 
This matrix times 2^(-6) should be the matrix of frobenius.
*/ 
B = 2^(-6) * A; 
/* Freed 4626 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 23
The valuation of subst(g,x,A) is: 17
