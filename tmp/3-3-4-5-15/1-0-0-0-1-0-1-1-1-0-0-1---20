/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 38
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 1, 1, 0]  	12	2 
[1, 4, 0, 0, 0]  	15	3 
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	5 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	2 
[0, 7, 0, 0, 0]  	21	5  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	4 
[0, 3, 1, 2, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 2, 1, 2, 1]  	20	4 
[0, 6, 1, 0, 1]  	22	3 
[0, 2, 3, 1, 1]  	23	3 
[0, 2, 0, 4, 1]  	26	2 
[0, 5, 1, 0, 2]  	19	5 
[0, 3, 0, 2, 254]  	19	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17683200847978893022 + 15756049953000188595*2^64 + 14851313053478202837*2^128 + 647171348*2^192,7956770438660140216 + 11518834913914495007*2^64 + 16846959562820861069*2^128 + 1761220390*2^192,4898757412579412104 + 4492504574196867848*2^64 + 10099546004218772385*2^128 + 966961952*2^192,12842240966901756556 + 241003849650844321*2^64 + 8989310781977547361*2^128 + 1149283365*2^192,3576240787715399256 + 9507088936744924937*2^64 + 704343729831624951*2^128 + 280229227*2^192,11167392796307087464 + 4883200646574325428*2^64 + 14254758968282959974*2^128 + 457358059*2^192,9220951865016835644 + 11882815981336667147*2^64 + 9916036698241585948*2^128 + 509222792*2^192,9581326401987773496 + 1433688038577423637*2^64 + 14779357072307229439*2^128 + 964881949*2^192;\
3172933466769215915 + 1876155678316725816*2^64 + 8237678031249003138*2^128 + 960507396*2^192,8737866428602437200 + 13489957096443497538*2^64 + 16853076889102061114*2^128 + 598202224*2^192,15031111415866883492 + 8474745935916772131*2^64 + 3119122225165310823*2^128 + 60313859*2^192,12739110428283382734 + 6502856725635842797*2^64 + 16068618425603734848*2^128 + 810621969*2^192,11478723001399075952 + 10306532139596963185*2^64 + 4326015863308158160*2^128 + 333223544*2^192,16306617946220546180 + 8039423758942824868*2^64 + 6536281465108208347*2^128 + 591183256*2^192,16700272703884490042 + 9514748306715028435*2^64 + 17036636271289128744*2^128 + 839852286*2^192,10002572346049879868 + 17205095512308854364*2^64 + 8608992126852077648*2^128 + 296369931*2^192;\
12037751345727370191 + 18229228304248280440*2^64 + 12945671136347756732*2^128 + 201161565*2^192,4608071757768166840 + 17283355667024049544*2^64 + 6856096275006404417*2^128 + 978811608*2^192,7109789801079247468 + 4900521972245422363*2^64 + 9333677549371446589*2^128 + 615743546*2^192,1643189112518584930 + 14946676630579107245*2^64 + 4875293100070870404*2^128 + 771286027*2^192,4447740655037670816 + 7639754431211263629*2^64 + 7440157704939310742*2^128 + 711170836*2^192,7833833281791941424 + 5879470725806392122*2^64 + 14267822305046842560*2^128 + 987894064*2^192,13126552865463216854 + 16876644912824818706*2^64 + 8960050309548484937*2^128 + 113475768*2^192,6363615398123140308 + 16116943168375086824*2^64 + 10960491024374655047*2^128 + 904981345*2^192;\
2638912352398002558 + 18255774426333143577*2^64 + 8930979059515320833*2^128 + 1908967444*2^192,1293657913124696188 + 15351694628171594480*2^64 + 13174165983275966076*2^128 + 347904480*2^192,1294441165428290952 + 739476343783574922*2^64 + 11316202287243116111*2^128 + 57144233*2^192,12189102964834037968 + 10997307751319917596*2^64 + 12066451303736974389*2^128 + 1783844309*2^192,10278811355359259200 + 4070145373591770107*2^64 + 7458914522442390537*2^128 + 32284404*2^192,801728014894909744 + 4968451817057640953*2^64 + 3082907551846338532*2^128 + 771970055*2^192,1602136963252027688 + 15476665787055968168*2^64 + 3058850476954793934*2^128 + 1933053945*2^192,17668854038191786248 + 17262102904957450181*2^64 + 8461855790313010834*2^128 + 2025824916*2^192;\
617204910197264549 + 15916601597522232308*2^64 + 10204267828958950923*2^128 + 424842772*2^192,17641660553115246208 + 17226994305121444349*2^64 + 11241053814048524784*2^128 + 283391262*2^192,8975841083903074704 + 8118099192250590341*2^64 + 6067506847801753026*2^128 + 840224737*2^192,18082202933513562990 + 8561440987501827466*2^64 + 18360777446128807684*2^128 + 11168802*2^192,9095289149885302832 + 8077864283527089239*2^64 + 17409414429204850439*2^128 + 600996291*2^192,17762049551573003004 + 8348391144606207606*2^64 + 4395360233397101764*2^128 + 348115461*2^192,10930583235442936082 + 13808631679964787068*2^64 + 9444336133898431559*2^128 + 708961621*2^192,13308554127437579164 + 9096450007544224148*2^64 + 17440699869572924857*2^128 + 619401725*2^192;\
12796888785736843093 + 15298065090083067619*2^64 + 9308424006321071834*2^128 + 735894647*2^192,17867859060835827196 + 2479194336963952665*2^64 + 15954793873510580136*2^128 + 565969739*2^192,6276079162796721552 + 4424788580733332101*2^64 + 14488912736310731717*2^128 + 64910928*2^192,7641753690820770382 + 13003622696046906674*2^64 + 10153425838154131466*2^128 + 78444483*2^192,6070794547228457424 + 16202916451459589404*2^64 + 7202900192749027051*2^128 + 777760790*2^192,13091174396040995796 + 7757953866894868976*2^64 + 11046751641337671802*2^128 + 946903029*2^192,17151970455297839766 + 2464427225229371235*2^64 + 3049964445487705066*2^128 + 714662910*2^192,16509318047065799916 + 1477853717491236008*2^64 + 4225825320055112708*2^128 + 892333134*2^192;\
7351623093712484820 + 6966020065224322973*2^64 + 14440413918018741189*2^128 + 1805790884*2^192,9260729233381763012 + 13732177393602614734*2^64 + 14748864066877737207*2^128 + 935671913*2^192,7623977832035712296 + 1572170409050040376*2^64 + 14667316879022200875*2^128 + 518109387*2^192,8788140913702575780 + 4307320210580574844*2^64 + 628529272511975433*2^128 + 1540067171*2^192,17369950999344004284 + 11845982889926602159*2^64 + 843146196812880865*2^128 + 369532657*2^192,16851468992304119300 + 11218863697250200771*2^64 + 8282216754027424157*2^128 + 1139859429*2^192,10128919994960942828 + 4344339112092117618*2^64 + 12932624623955799734*2^128 + 362501410*2^192,10796980764630477272 + 9785236455876740334*2^64 + 655193030153102621*2^128 + 2054424652*2^192;\
17453533978598650960 + 1058793944362966494*2^64 + 4415918206652886050*2^128 + 667787701*2^192,5825741034383912112 + 17396133101759294078*2^64 + 16454461105682659041*2^128 + 340098805*2^192,15952525511918354232 + 9621846754929662134*2^64 + 7244017643817230665*2^128 + 60863048*2^192,15286210315540620256 + 11816950759446272240*2^64 + 929435364034306515*2^128 + 775101551*2^192,18031578129059447168 + 17197651266603164593*2^64 + 10230610821634131006*2^128 + 85168276*2^192,11377888491486178728 + 5463642925216205995*2^64 + 13252567413840580462*2^128 + 711223885*2^192,7005720446121736656 + 10756637117101998950*2^64 + 10453485235818902680*2^128 + 79272619*2^192,2875754214405397672 + 10275992585156199635*2^64 + 2734039965114968913*2^128 + 675195635*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4919 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 4*x^5 + 16*x^3 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 4*x + 16, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^2*z^1*w^1 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
Look at the ideal generated by: 
1*x^2*y^1 + 1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*y^1*z^2
