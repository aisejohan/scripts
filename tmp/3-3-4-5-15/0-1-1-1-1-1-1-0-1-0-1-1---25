/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	6 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	4 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	5 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 1, 1, 1]  	18	4 
[1, 1, 0, 3, 1]  	21	6 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	6 
[0, 4, 2, 0, 2]  	20	4 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[1, 0, 2, 1, 253]  	16	4 
[1, 0, 1, 2, 253]  	17	4 
[2, 2, 0, 0, 254]  	12	5 
[0, 2, 1, 2, 254]  	20	3 
[0, 3, 2, 1, 254]  	22	3 
[0, 6, 0, 0, 255]  	18	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[15232876306783796994 + 17970849921644214558*2^64 + 8619711605028893375*2^128 + 1823698058*2^192,16335687163328437424 + 6905001297519440572*2^64 + 3092677232788652033*2^128 + 1532505060*2^192,17172566104069216664 + 14958368097506364044*2^64 + 12122050360560424093*2^128 + 1530775620*2^192,6075256905708568336 + 58873527803525473*2^64 + 7830817655411228410*2^128 + 389915598*2^192,9896242011048515280 + 11626724050895750949*2^64 + 1900773052894534210*2^128 + 447554971*2^192,11379613056315347200 + 17491880335367966510*2^64 + 15135189538035707097*2^128 + 1564075001*2^192,7936897656163249544 + 17981978509789543032*2^64 + 3563733365070627553*2^128 + 962752375*2^192,4424589464275103392 + 16377274492114746945*2^64 + 12111004910786364984*2^128 + 1821802299*2^192;\
13587182362357941755 + 10557582616374152924*2^64 + 1768882899151617111*2^128 + 1314935570*2^192,2373014245381549592 + 9322149721794338404*2^64 + 7683413158665660992*2^128 + 1044415274*2^192,8728866266376814416 + 14511069659395871936*2^64 + 13091919714133950080*2^128 + 289341414*2^192,11495170606308808820 + 8461982955420538166*2^64 + 352300725603538939*2^128 + 1484422662*2^192,12638668156252237800 + 15504743189884173247*2^64 + 7927685362747451478*2^128 + 170454139*2^192,291475220915679776 + 7163094677439074058*2^64 + 6384470387139721230*2^128 + 54672411*2^192,4908621087564524344 + 10424953484677169579*2^64 + 1229037752736527010*2^128 + 1491156576*2^192,18207172306393625872 + 18034051361272908643*2^64 + 17155877979754653630*2^128 + 499100475*2^192;\
14040525772670157318 + 14731075116182298056*2^64 + 7645251446141480370*2^128 + 1101038768*2^192,17982102678812932016 + 12364840952104664793*2^64 + 15724787698387495738*2^128 + 962945019*2^192,9479379709386025692 + 2968368042062535375*2^64 + 5548739868136341135*2^128 + 2068080807*2^192,16515155113572078020 + 6244351473926008776*2^64 + 387088345239065236*2^128 + 1126485646*2^192,15684011228715965368 + 9308537312368402528*2^64 + 3393911527260530473*2^128 + 1344870968*2^192,5009710680080000908 + 15830656133049695462*2^64 + 9228004344142280796*2^128 + 953253089*2^192,6631975947213809992 + 13068605415344812199*2^64 + 5988129932698481647*2^128 + 642668426*2^192,12656483475108106480 + 4677968212628192423*2^64 + 7073364838840706144*2^128 + 433216211*2^192;\
0 + 0*2^64 + 0*2^128 + 654311424*2^192,0 + 0*2^64 + 0*2^128 + 629145600*2^192,0 + 0*2^64 + 0*2^128 + 780140544*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 182360687*2^192,0 + 0*2^64 + 0*2^128 + 1040187392*2^192,0 + 0*2^64 + 0*2^128 + 209715200*2^192,0 + 0*2^64 + 0*2^128 + 511705088*2^192,0 + 0*2^64 + 0*2^128 + 1040187392*2^192;\
11243576474948465335 + 8361639649379051133*2^64 + 17318796286989920348*2^128 + 1047533980*2^192,16630394889151850380 + 9721188176745218362*2^64 + 3110798761322459446*2^128 + 1657269594*2^192,17841494886367923876 + 9941028617327765724*2^64 + 15904663411372813045*2^128 + 170446470*2^192,3350276095227067360 + 14130660448901361662*2^64 + 8755100524013339147*2^128 + 863483009*2^192,1504346282726068636 + 146299263475653283*2^64 + 3271284304330239110*2^128 + 892548372*2^192,16217412389358903668 + 11135561984776096426*2^64 + 16518487915377610281*2^128 + 394026189*2^192,1695295920646372504 + 5146797916877279384*2^64 + 1041989629736025106*2^128 + 2007291501*2^192,10057194002256279536 + 13503199318923361106*2^64 + 420953927002709417*2^128 + 1093061285*2^192;\
16575393901962312371 + 14983835104374771478*2^64 + 14322771188818538978*2^128 + 1036731938*2^192,1390879124760948460 + 3046553915997438037*2^64 + 6362561998644972612*2^128 + 171144690*2^192,13818737759936451644 + 15529610878211352632*2^64 + 4698572273765192750*2^128 + 125901075*2^192,9712779893200941808 + 5168772096724922318*2^64 + 14521603513179312214*2^128 + 482220766*2^192,7736902106015556264 + 3276420770863620884*2^64 + 16136444399783172170*2^128 + 2112024514*2^192,12528382606828246908 + 14349635956829023474*2^64 + 9793125367598874253*2^128 + 1488821088*2^192,12719158947519949736 + 6861496429412916882*2^64 + 12823354713141765796*2^128 + 1965704551*2^192,11093292720224005952 + 17732227541200046333*2^64 + 11348761779011712561*2^128 + 1120268232*2^192;\
13281214360096521023 + 12582973881799630779*2^64 + 14030104235533350190*2^128 + 2132678759*2^192,14490776749010851440 + 12996018500162652*2^64 + 17304620352887321858*2^128 + 281304191*2^192,6552008812748935216 + 14174054292342148706*2^64 + 13751711870527711860*2^128 + 530048733*2^192,15733939590044371736 + 11914939175436825452*2^64 + 9772307229550139477*2^128 + 2042886526*2^192,11713071509482950272 + 2006101512626445451*2^64 + 16115458918504741944*2^128 + 155642226*2^192,14038664142310134340 + 18365094760169442202*2^64 + 9111272581178641095*2^128 + 495955841*2^192,18234391716872324680 + 17070596646665861224*2^64 + 8483670216847032314*2^128 + 1967505610*2^192,4953901290301642208 + 6353243238358359883*2^64 + 543096843764465725*2^128 + 2001880740*2^192;\
7630235405747862082 + 12352521973130074103*2^64 + 11865787400905955447*2^128 + 957234572*2^192,11765348938424728376 + 3055495267696701392*2^64 + 7873421585193622610*2^128 + 738616022*2^192,17883471846010330780 + 15634462745790484663*2^64 + 1403956354121582023*2^128 + 386962885*2^192,3093222155549756332 + 9131510082068372384*2^64 + 10854782527599502762*2^128 + 896618861*2^192,13592661110529139880 + 10599388783909990340*2^64 + 5849253765175397950*2^128 + 328399782*2^192,5468305808290344652 + 3270212636225366819*2^64 + 1782708210406581754*2^128 + 1353477585*2^192,11410284938205086984 + 15926205905711215092*2^64 + 15306996934685371179*2^128 + 259099250*2^192,2916082279946664104 + 10229631153330271595*2^64 + 4597362552299896810*2^128 + 367245942*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3942 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 6*x^6 + 4*x^5 + 16*x^4 + 16*x^3 - 96*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 2; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
