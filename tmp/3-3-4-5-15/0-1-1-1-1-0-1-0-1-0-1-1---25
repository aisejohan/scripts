/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[0, 4, 2, 0, 1]  	20	4 
[1, 1, 0, 3, 1]  	21	6 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	5 
[0, 0, 5, 1, 2]  	25	2 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[1, 0, 2, 1, 253]  	16	5 
[1, 0, 1, 2, 253]  	17	5 
[2, 2, 0, 0, 254]  	12	4 
[0, 0, 0, 5, 254]  	25	1 
[0, 6, 0, 0, 255]  	18	2 
[0, 2, 1, 2, 255]  	20	2 
[0, 3, 2, 1, 255]  	22	2 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7895688843813851172 + 16962405321732122259*2^64 + 6111184652308141599*2^128 + 1838494960*2^192,1457610641225852326 + 17568820997722539791*2^64 + 2179204290590660203*2^128 + 306178667*2^192,9344202652470130280 + 776278444527814723*2^64 + 4759061676878626443*2^128 + 669874234*2^192,15437651856680160408 + 13699445747056906025*2^64 + 6768418728451559706*2^128 + 1878553417*2^192,17699996574960146142 + 5643466554923962124*2^64 + 16914576163943318165*2^128 + 1995656943*2^192,6569964420954390474 + 11381323177870940637*2^64 + 16926651898892614854*2^128 + 953285306*2^192,7498208982847142868 + 2086547438539393280*2^64 + 3966387442039634895*2^128 + 1935973874*2^192,3798850508318161060 + 302643508387031057*2^64 + 9427179044967897162*2^128 + 514086041*2^192;\
13980710309155592696 + 12216021950705218394*2^64 + 3945247169460043391*2^128 + 2102041089*2^192,9735337973169637741 + 11562618548540325653*2^64 + 7896185146291842188*2^128 + 213776951*2^192,14551830040851782392 + 13984952726095533324*2^64 + 99216154826537006*2^128 + 21771526*2^192,4582585471448520148 + 6538909200955767906*2^64 + 1665948365182231419*2^128 + 1142426250*2^192,2893899248542491457 + 16998616458087837225*2^64 + 11110032566235336158*2^128 + 1792575969*2^192,14642906945247693635 + 817662421165509605*2^64 + 16228153066463587873*2^128 + 91601443*2^192,17768019774140109834 + 16305331165833752426*2^64 + 14246542551244573791*2^128 + 485620038*2^192,2372298571273291182 + 9978301821682797619*2^64 + 17510457157717724974*2^128 + 705024703*2^192;\
13365020070706336748 + 1749357692736764323*2^64 + 3578358528947431892*2^128 + 2133746100*2^192,10953986098044110052 + 3810872895830590643*2^64 + 5855048291304655902*2^128 + 1447743724*2^192,12011462938382365616 + 17177599784174091143*2^64 + 3553888337982226088*2^128 + 349080160*2^192,16752633098413558236 + 10925327170154984689*2^64 + 1444855355595595045*2^128 + 376068826*2^192,6048434598347859076 + 181946308763306192*2^64 + 18019210559964749880*2^128 + 898461571*2^192,8009450100144486196 + 13093816775200655449*2^64 + 5658618189764098008*2^128 + 29819574*2^192,15816798223381169184 + 10900228519343339108*2^64 + 10435156991067652606*2^128 + 88163852*2^192,6777306772173038992 + 15627952455930555284*2^64 + 12977729801394826071*2^128 + 390967675*2^192;\
0 + 0*2^64 + 0*2^128 + 478150656*2^192,0 + 0*2^64 + 0*2^128 + 335544320*2^192,0 + 0*2^64 + 0*2^128 + 243269632*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 484350575*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 570425344*2^192,0 + 0*2^64 + 0*2^128 + 503316480*2^192,0 + 0*2^64 + 0*2^128 + 125829120*2^192;\
12462497390477319068 + 14844076259397705313*2^64 + 14148199855774971726*2^128 + 1036113171*2^192,6589868645693646766 + 1087382662014464909*2^64 + 1077155088495057611*2^128 + 2110596499*2^192,7619580391330277160 + 5882229511306055709*2^64 + 10961878254850422098*2^128 + 480582563*2^192,10183957186730321988 + 2295783343076237254*2^64 + 2497159629307500691*2^128 + 2142341510*2^192,8008973972411301162 + 14991603971969691117*2^64 + 16086465649464252882*2^128 + 1217027625*2^192,730283991987073290 + 12948563261048230349*2^64 + 9759935720127562987*2^128 + 1647290428*2^192,15342565405910428076 + 16967151276830047637*2^64 + 11119528720138150292*2^128 + 736683618*2^192,12768886142520891844 + 10453086733061250896*2^64 + 17291324621616354619*2^128 + 1005343635*2^192;\
8421568438129812602 + 15791148608702373383*2^64 + 9301260397362096345*2^128 + 885753011*2^192,5239943959228730867 + 3523949515021385724*2^64 + 9977908900998666445*2^128 + 852161815*2^192,14465054221890172112 + 262975662517109439*2^64 + 14916218598627142424*2^128 + 403164203*2^192,625819966264959768 + 5856598479929821887*2^64 + 4656169762976913845*2^128 + 542830640*2^192,1013670136900097239 + 7031300091593157327*2^64 + 280052802718337156*2^128 + 2129917891*2^192,3143034809519908809 + 17965072313515509479*2^64 + 4176158519611176410*2^128 + 814583411*2^192,8657819088242463222 + 16841016910809963420*2^64 + 5458312810272537178*2^128 + 1660003285*2^192,4874750400595885930 + 5983119755167964607*2^64 + 17343508339851807321*2^128 + 183135810*2^192;\
17349796897346157268 + 11448878700618342613*2^64 + 17830706341091601985*2^128 + 2035723646*2^192,893565577740428601 + 16875851129233276037*2^64 + 11453351226501881414*2^128 + 1127836928*2^192,10256154605289773628 + 560164153757613792*2^64 + 17530707352709806387*2^128 + 48216503*2^192,9064566635700835100 + 16980792121851060837*2^64 + 13816812357267752240*2^128 + 2055384279*2^192,1403793926913009941 + 17889913566513299563*2^64 + 3590463690664167783*2^128 + 1510769245*2^192,16303124841258996999 + 17563737623471442332*2^64 + 12046288453257067027*2^128 + 555960604*2^192,928508504070524698 + 3462710069994727253*2^64 + 4632413093532320681*2^128 + 1921270847*2^192,3776627402127845046 + 7030827816617440382*2^64 + 9315640011222700717*2^128 + 1778134677*2^192;\
8236767159549830472 + 13247568476897505041*2^64 + 474537168561622587*2^128 + 667407294*2^192,1652962135293524360 + 825334784195113760*2^64 + 13183067930758806475*2^128 + 824958986*2^192,15645773791465275408 + 5383237340901605688*2^64 + 4816021949018412107*2^128 + 345775932*2^192,14883938448617147804 + 4128076079444737130*2^64 + 11793444275586037740*2^128 + 951016260*2^192,13386547516328701112 + 5052584485288404775*2^64 + 11749349539414615644*2^128 + 965661714*2^192,13492227289413780552 + 7962660628351370295*2^64 + 14502220399773607171*2^128 + 395614778*2^192,15580553497659950616 + 6501088065784309825*2^64 + 7897233226277014835*2^128 + 663509858*2^192,9713555846661258928 + 9645224455900487503*2^64 + 6451187653248301961*2^128 + 536522209*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4233 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
