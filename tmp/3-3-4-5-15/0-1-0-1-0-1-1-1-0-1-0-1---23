/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	4 
[0, 0, 5, 1, 2]  	25	2 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[0, 3, 0, 2, 254]  	19	3 
[0, 3, 2, 1, 254]  	22	3 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 3 and 253.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1707288733517869704 + 6552327337656600360*2^64 + 9790856530998693020*2^128 + 15108544270*2^192,12814407425556089136 + 5476830327342381037*2^64 + 6333941271531558097*2^128 + 6760716332*2^192,6641396220521175488 + 4148938461203763955*2^64 + 12433171161439592994*2^128 + 10573911590*2^192,9928455138648092208 + 945802629000516206*2^64 + 11031388620840108595*2^128 + 8024238961*2^192,4370197353130825312 + 4288439708129331912*2^64 + 6647679255554226526*2^128 + 9818005361*2^192,5051226180473636848 + 4467254264907474350*2^64 + 3574119189412548891*2^128 + 1735883960*2^192,9879966482643368960 + 13077766669025428200*2^64 + 1527222951682608629*2^128 + 1785696956*2^192,8760148539900743872 + 15164023767571313778*2^64 + 7932230277434342639*2^128 + 2458128898*2^192;\
1589896965873920248 + 5120214487985858716*2^64 + 14553123073429909503*2^128 + 7304588587*2^192,17139623843045018896 + 11336498006101938267*2^64 + 170631238366988352*2^128 + 333350640*2^192,13725633262837240672 + 6452298971910345478*2^64 + 10373030986475302997*2^128 + 7238964617*2^192,10611533664467053680 + 4057950167216035559*2^64 + 17090756050448758639*2^128 + 4618861657*2^192,18383240307380935808 + 16377644145186797442*2^64 + 8782031043559341798*2^128 + 5802320323*2^192,2577866527994099280 + 17507809519918025972*2^64 + 12749268786762121796*2^128 + 8357253266*2^192,8943655221324586304 + 16159696925281179529*2^64 + 13782938370821848647*2^128 + 1165528667*2^192,10633871615113623040 + 4552335160009771466*2^64 + 16762231386167013538*2^128 + 193720201*2^192;\
12044227557132749840 + 16261291224506142232*2^64 + 6753164322948518352*2^128 + 12785369186*2^192,14231541265967833936 + 368278573129986561*2^64 + 13665972151479851017*2^128 + 5621178139*2^192,6996308488423160144 + 1982848789883238118*2^64 + 4769309691078965003*2^128 + 13816222401*2^192,9298943078431740000 + 6098979520897087656*2^64 + 2211510204232974098*2^128 + 15828475768*2^192,17395635990914083408 + 13019747816527291283*2^64 + 16042028254300835525*2^128 + 13414739724*2^192,8254525222745017200 + 10266314529765296126*2^64 + 14360641207557763826*2^128 + 4093022656*2^192,13108254833614545952 + 16555284559303651994*2^64 + 1803237502266644642*2^128 + 4332066242*2^192,15064784409469848160 + 15218010433535302262*2^64 + 139066234547494423*2^128 + 9386074150*2^192;\
10359888508455987709 + 4306145748412677577*2^64 + 11215870072273389346*2^128 + 1206536248*2^192,5776269410950233286 + 12669055185865462309*2^64 + 9533652627164249666*2^128 + 1419803652*2^192,10669658832620634920 + 10254315280767322509*2^64 + 396820655608186982*2^128 + 3475147218*2^192,11938172827241280966 + 13019060807775045489*2^64 + 13327453082289523161*2^128 + 2786216677*2^192,8722932125146284012 + 15782564963223884467*2^64 + 18121754357008808857*2^128 + 1241269646*2^192,3759961759068145630 + 5543289452072397461*2^64 + 18043980579429939656*2^128 + 16969652095*2^192,8515670152613529144 + 8670237157608387408*2^64 + 8686915729953832406*2^128 + 3568075576*2^192,17716731766947108584 + 10148668841839885886*2^64 + 1663608539250981285*2^128 + 4039823862*2^192;\
516132601273312307 + 10213685580023238708*2^64 + 12093408973919117766*2^128 + 15030708763*2^192,7287983222302902314 + 2453919044505894898*2^64 + 10554388732648574078*2^128 + 9475824759*2^192,688178203768534408 + 10043403988025638818*2^64 + 14934820202952208194*2^128 + 1603512746*2^192,447906087612259162 + 8119052138894298579*2^64 + 5892469189066731408*2^128 + 5961985203*2^192,1529732316162746244 + 2962662127733283912*2^64 + 6548381245592932527*2^128 + 12384547095*2^192,12140517183176662514 + 2523533509276883712*2^64 + 7585362044752884209*2^128 + 3201394523*2^192,5487258600524697832 + 12089748304216549526*2^64 + 468943283444025904*2^128 + 16204880563*2^192,1406232386418455288 + 16253719900197613251*2^64 + 4385402969114891129*2^128 + 1157991953*2^192;\
10359888508455987709 + 4306145748412677577*2^64 + 11215870072273389346*2^128 + 3807004728*2^192,5776269410950233286 + 12669055185865462309*2^64 + 9533652627164249666*2^128 + 4859132932*2^192,10669658832620634920 + 10254315280767322509*2^64 + 396820655608186982*2^128 + 2669840850*2^192,7828856420323816870 + 10515557131132283391*2^64 + 8389897253291062304*2^128 + 16460380010*2^192,8722932125146284012 + 15782564963223884467*2^64 + 18121754357008808857*2^128 + 10049308046*2^192,7869278165985609726 + 8046793128715159559*2^64 + 4534792334718848897*2^128 + 728574715*2^192,8515670152613529144 + 8670237157608387408*2^64 + 8686915729953832406*2^128 + 1940685624*2^192,17716731766947108584 + 10148668841839885886*2^64 + 1663608539250981285*2^128 + 4593471990*2^192;\
17437554559991579332 + 11529249182199444786*2^64 + 6274330655931315710*2^128 + 4547041150*2^192,12480784662868032760 + 1185150103738970254*2^64 + 7542316618827007526*2^128 + 353033576*2^192,8435787735707323584 + 14575680991758368132*2^64 + 10960513503739924508*2^128 + 13417608552*2^192,1569592719032601592 + 2772435551296089835*2^64 + 9296363984103863359*2^128 + 16200380401*2^192,13906776921670681488 + 7906688506410616353*2^64 + 4410503765923994040*2^128 + 1585137763*2^192,1212893329350930936 + 11802910897946975380*2^64 + 15261035818854370514*2^128 + 8652598182*2^192,14612388418347558496 + 10338730741675016573*2^64 + 3815202912692132506*2^128 + 994203594*2^192,12472852243441670048 + 17785280973974109528*2^64 + 16757508042545947*2^128 + 16799761729*2^192;\
1045798032865211144 + 6268526855935111093*2^64 + 14476753466232915080*2^128 + 5595284018*2^192,15407761802447615088 + 611457229070864944*2^64 + 10530271654471137853*2^128 + 2527161323*2^192,14461172916953248192 + 17878466811574170224*2^64 + 1866069862975415118*2^128 + 3682880856*2^192,7140785799129542832 + 18157897960303095638*2^64 + 15121132799227371468*2^128 + 6241870651*2^192,4466183585151269600 + 9264483321961143488*2^64 + 3565015887927751587*2^128 + 947235410*2^192,1006766060262014704 + 538924418236486238*2^64 + 7125186058342171643*2^128 + 6245286721*2^192,13376829628214868672 + 10619871078075056514*2^64 + 1127305693354070678*2^128 + 8285065457*2^192,16846892707479141248 + 12503951152029640357*2^64 + 17840402949124922053*2^128 + 7494342099*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 4358 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 22

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
