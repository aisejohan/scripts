/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 57
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	5 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	7 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	5 
[0, 3, 1, 2, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 3, 1, 0]  	26	4 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	7 
[1, 1, 2, 1, 1]  	19	5 
[1, 0, 2, 2, 1]  	21	5 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	6 
[1, 2, 2, 0, 2]  	17	5 
[0, 3, 2, 1, 2]  	22	4 
[0, 2, 1, 3, 2]  	25	2 
[0, 2, 0, 4, 2]  	26	3 
[1, 1, 0, 2, 3]  	16	6 
[0, 2, 1, 2, 3]  	20	4 
[0, 2, 3, 1, 3]  	23	3 
[0, 0, 5, 0, 253]  	20	2 
[0, 0, 4, 2, 253]  	26	1 
[2, 2, 0, 0, 254]  	12	5 
[1, 0, 2, 1, 254]  	16	5 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[0, 4, 1, 0, 255]  	16	1 
[1, 0, 1, 2, 255]  	17	4 
[0, 4, 0, 1, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	4 
[0, 3, 0, 2, 255]  	19	3 
[0, 1, 1, 3, 255]  	22	2 
[0, 1, 0, 4, 255]  	23	2 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6672654162968829954 + 11648346626005896033*2^64 + 15646702586830482518*2^128 + 2069801577*2^192,17098126540215422600 + 2907533309118828363*2^64 + 7099817456388050722*2^128 + 199428633*2^192,18141291836596155296 + 6610912929113587458*2^64 + 4992261551601642925*2^128 + 1093337392*2^192,14481138408693627196 + 12283714620720252067*2^64 + 13771828625178013572*2^128 + 324661475*2^192,6090817145678111518 + 10866011206429110860*2^64 + 18303539222264119698*2^128 + 1898566935*2^192,7258300756912857204 + 12231828225977201064*2^64 + 2794731246241199864*2^128 + 329128599*2^192,12113906421864544442 + 6687999931929679994*2^64 + 11988142247753028564*2^128 + 83315441*2^192,7933421987825286452 + 11029090320220723628*2^64 + 6756825620853724606*2^128 + 543805228*2^192;\
542030134914982209 + 15494837924017391180*2^64 + 2674908142331475690*2^128 + 1988620768*2^192,13662203417800881048 + 14155641683488755774*2^64 + 15191906913379747352*2^128 + 878974661*2^192,17848510096390915996 + 3223822354347475769*2^64 + 5184558424612866502*2^128 + 86166610*2^192,8534335169671212622 + 11272700187411560790*2^64 + 1450471641459107986*2^128 + 1811201519*2^192,9785446140094225817 + 1125925699498160835*2^64 + 4889729169836295362*2^128 + 1990805454*2^192,979977924641881470 + 15023024577819349811*2^64 + 7676281590195174824*2^128 + 1094816768*2^192,2312617047611521207 + 10493833129029882677*2^64 + 10244306365802210348*2^128 + 1620719708*2^192,15505681196105471694 + 819115981664854044*2^64 + 6179917029300937269*2^128 + 1341603022*2^192;\
5251528022559565313 + 710377598411158479*2^64 + 2494663735992735108*2^128 + 1753513318*2^192,12359677203146281332 + 7596135247735461226*2^64 + 16380263688522471985*2^128 + 1278823161*2^192,5119162322634495436 + 4409195843897407321*2^64 + 17589078517334297598*2^128 + 2036083113*2^192,9648215274397432938 + 15976933278484290596*2^64 + 12250380986085914618*2^128 + 1878351385*2^192,14484018574185092049 + 15612467317341556382*2^64 + 18407105353136064656*2^128 + 1154541556*2^192,2247073704971609130 + 866012218731198153*2^64 + 13307061955752198534*2^128 + 709589680*2^192,3498142433569693439 + 11997352609181168819*2^64 + 4343467468672861759*2^128 + 819535407*2^192,11288846353284554142 + 413445355695716017*2^64 + 8915556348730817328*2^128 + 699040303*2^192;\
4347157809570108357 + 654990351845894195*2^64 + 16249122245960107108*2^128 + 520228086*2^192,3141692905406856500 + 14442894560150772632*2^64 + 9558270182133884784*2^128 + 685743569*2^192,5254323055632129180 + 8496583838517764415*2^64 + 8533830970936790876*2^128 + 333507422*2^192,2583989716624925994 + 16030247802504438121*2^64 + 14369891347909793587*2^128 + 1547725222*2^192,9250175698197660307 + 2029059693199501983*2^64 + 9267084053800371749*2^128 + 284116402*2^192,6540237593897981366 + 11561790276981569963*2^64 + 6277306641553121605*2^128 + 1458021981*2^192,2012810428347822277 + 2393797224766256200*2^64 + 618181165520882726*2^128 + 1256042545*2^192,9947519880716876858 + 8293324748326524691*2^64 + 13621497227185613861*2^128 + 1792449179*2^192;\
7350562521631623820 + 5553784135518922133*2^64 + 13505759969021614291*2^128 + 2062052168*2^192,14195537904204346672 + 6319114837715793553*2^64 + 4279723570412854484*2^128 + 2090382446*2^192,1580086461415877112 + 13503423695196449531*2^64 + 5510851307794467653*2^128 + 1104463482*2^192,14702279988496640224 + 17619944818731435069*2^64 + 9216339433015111949*2^128 + 1267671396*2^192,12594688192926193924 + 1698682017606391246*2^64 + 3018979100511916057*2^128 + 662247148*2^192,4713211977065357340 + 12481370624632871196*2^64 + 3118747392717814833*2^128 + 152968130*2^192,4221001433123608892 + 1216154941793457039*2^64 + 874802009301433403*2^128 + 146047221*2^192,15929653457175655128 + 17640595631802809388*2^64 + 6028231468652397314*2^128 + 1743307703*2^192;\
17413097009577397122 + 7576831582156338014*2^64 + 5122128184081828810*2^128 + 77924065*2^192,10509734585246095844 + 17094066709309975774*2^64 + 3692966001147297331*2^128 + 1618682587*2^192,818296968411655684 + 3779894304405911141*2^64 + 11499784899939941033*2^128 + 1098262997*2^192,3991345188478620916 + 9758463482436206259*2^64 + 6760890965033862005*2^128 + 1495810928*2^192,17220117605802967060 + 12456712378253844530*2^64 + 1219253102953522947*2^128 + 1525255191*2^192,1645183149677255684 + 13288350429177435347*2^64 + 2770411440767051656*2^128 + 1203727813*2^192,10483000431402617908 + 13635046892635123825*2^64 + 1776804927560803634*2^128 + 185628884*2^192,14315161699887807544 + 7407536595436132654*2^64 + 9338283071441104881*2^128 + 1937059118*2^192;\
1025586287232874270 + 11095027615812799766*2^64 + 11692599352949313302*2^128 + 1629120773*2^192,14914985400438329680 + 11876217773456516731*2^64 + 3426172224974292555*2^128 + 478239088*2^192,16764465342642138504 + 6072435873128132902*2^64 + 11189076766036420861*2^128 + 1808614763*2^192,5608977298916573492 + 4671870084669045887*2^64 + 17827844423380743066*2^128 + 961887211*2^192,12209547555982213292 + 16032344439517314435*2^64 + 15085651730766080710*2^128 + 456615577*2^192,2465118277150033660 + 2649169567529271009*2^64 + 1909112143006430943*2^128 + 1712317803*2^192,8842247787594937800 + 18236840648604667082*2^64 + 4097874785964110857*2^128 + 1924414098*2^192,9939660845173896136 + 5711491554474253771*2^64 + 10497553786567528594*2^128 + 646517178*2^192;\
13433410136893281413 + 17366692730143929620*2^64 + 4560172804785078354*2^128 + 240831698*2^192,1660319166629001916 + 12988131396079649210*2^64 + 16447760640724211701*2^128 + 1248160397*2^192,7403276716887145292 + 1590193788147639808*2^64 + 2264132536599889217*2^128 + 1203189046*2^192,16887178425132631906 + 8289444103747101516*2^64 + 16294922406298858428*2^128 + 134899518*2^192,9646546144867212253 + 15909814174312145803*2^64 + 12632192890633979564*2^128 + 437504172*2^192,7665145299626501674 + 14562734035751204180*2^64 + 402050453401181407*2^128 + 3004775*2^192,8449444779492997211 + 9791393592856392799*2^64 + 12158255503373074383*2^128 + 739231972*2^192,16023508230297912990 + 4317470024113143293*2^64 + 9555048826672977883*2^128 + 1946127777*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4736 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
Look at the ideal generated by: 
1*x^1*y^2 + 1*z^1*w^1
1*x^2*w^1 + 1*y^1*z^2
