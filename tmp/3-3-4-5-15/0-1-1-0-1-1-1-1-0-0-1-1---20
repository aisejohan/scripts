/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 51
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	3 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	7 
[1, 0, 0, 3, 0]  	18	2 
[1, 2, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 4, 1, 1, 0]  	21	4 
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 1, 2, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 3, 1, 0]  	26	3 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	7 
[1, 1, 2, 1, 1]  	19	5 
[1, 0, 2, 2, 1]  	21	6 
[0, 3, 2, 1, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	6 
[1, 1, 0, 2, 2]  	16	5 
[1, 2, 2, 0, 2]  	17	5 
[0, 2, 1, 2, 2]  	20	4 
[0, 2, 3, 1, 2]  	23	3 
[0, 2, 0, 4, 2]  	26	2 
[2, 2, 0, 0, 254]  	12	5 
[0, 4, 1, 0, 254]  	16	1 
[0, 4, 0, 1, 254]  	17	1 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[0, 6, 0, 0, 255]  	18	4 
[0, 3, 0, 2, 255]  	19	3 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[13416129410135619458 + 6644262974925636398*2^64 + 5010170208955592446*2^128 + 822694172*2^192,9020584115050733472 + 1687835071844793220*2^64 + 16618340657947096175*2^128 + 3274304489*2^192,15505687370669105904 + 15013581522646963837*2^64 + 7929624489483356498*2^128 + 444105865*2^192,7648733571587336928 + 12388375917481459343*2^64 + 6893341175916155139*2^128 + 1645468049*2^192,13339808770577924540 + 1161065053054830481*2^64 + 1961821703155781211*2^128 + 915948159*2^192,16120816268781749700 + 12381985700264012664*2^64 + 12573583252818132268*2^128 + 2084518238*2^192,8564982749020003448 + 10839914559051874202*2^64 + 910414576117784401*2^128 + 2469369762*2^192,7853966535070914240 + 12045274194270651241*2^64 + 5401168266313357020*2^128 + 3164983643*2^192;\
443693278224438395 + 2120474215123866860*2^64 + 9038304998202819696*2^128 + 1183245842*2^192,15224314549512143680 + 16554471100560326291*2^64 + 7451441003913040277*2^128 + 1377987718*2^192,2007787562593810960 + 17853770555756898022*2^64 + 16637396570167164662*2^128 + 3322759728*2^192,5471894958329780120 + 2776365829614041946*2^64 + 1270035009072453191*2^128 + 1829633249*2^192,7714247010986043154 + 8177113150921299114*2^64 + 16371558930485123710*2^128 + 1790780573*2^192,16933622599427240574 + 93249427910854863*2^64 + 8764630924996939100*2^128 + 2540538232*2^192,14851899620285523132 + 8934344426822686273*2^64 + 9229022477596091331*2^128 + 3145224550*2^192,4833500873852889520 + 11684868089813152113*2^64 + 4003774199758854736*2^128 + 2789489643*2^192;\
10618844027276294187 + 15730898930046703175*2^64 + 2736811668468795009*2^128 + 3078459994*2^192,2213177835900251920 + 8171842027508490564*2^64 + 2406416533717771389*2^128 + 842257271*2^192,331989866807978080 + 11069704866283510633*2^64 + 17493555151725237191*2^128 + 1271793482*2^192,12554024180008807216 + 15006303564828885324*2^64 + 18050725600834264976*2^128 + 3312653897*2^192,2124203447774363586 + 5539457362422235659*2^64 + 4196790199048447352*2^128 + 2412750309*2^192,11192126740574041078 + 2093108157423587579*2^64 + 1151717386870098828*2^128 + 664433120*2^192,9506872670717927900 + 10546509926114866498*2^64 + 15909050602211746721*2^128 + 480444480*2^192,15752384820680760624 + 14820662122677072340*2^64 + 14046100044133481674*2^128 + 309674456*2^192;\
9910608899257646982 + 1999654066327912618*2^64 + 6784525479261923452*2^128 + 926926084*2^192,12026586575137220696 + 9663965354956712970*2^64 + 8583460327966308908*2^128 + 250439125*2^192,7871572842255103904 + 15599307441147111058*2^64 + 16948721572299834067*2^128 + 349031980*2^192,443186690505585136 + 5895821970725873945*2^64 + 9933542242154963760*2^128 + 2380162595*2^192,12861241729731798172 + 5033467386582023710*2^64 + 6602877646630288997*2^128 + 2428471337*2^192,16858513236226968780 + 10567198193141520167*2^64 + 10582518286177992485*2^128 + 1318361575*2^192,7675065112866218536 + 8831486038491950208*2^64 + 16741577365043297102*2^128 + 1430504622*2^192,9746244731519422784 + 6537137043529145391*2^64 + 10206740669443079968*2^128 + 595661635*2^192;\
12752479692920605987 + 1658291564730075486*2^64 + 347221467927282549*2^128 + 1157016588*2^192,10486910158556700752 + 17293586258165988703*2^64 + 3383036135937063229*2^128 + 4149488941*2^192,17697736627011284048 + 15710367689924641345*2^64 + 12256112448189732317*2^128 + 3784292275*2^192,721124866961793728 + 5476570750205763649*2^64 + 8957039894596793196*2^128 + 1853307797*2^192,4300832165627334594 + 11126498453700095495*2^64 + 58745270774007675*2^128 + 3299040905*2^192,17733168450781718286 + 4916879934234581314*2^64 + 9401888130912195213*2^128 + 1734130586*2^192,14541876449675455836 + 16002883077350407048*2^64 + 15377512252010567710*2^128 + 243796338*2^192,12208218081431716016 + 3822876052297262699*2^64 + 12067109700517235739*2^128 + 82858561*2^192;\
12175871534848266648 + 17825037946246808143*2^64 + 6280556421369800337*2^128 + 1360067166*2^192,17315343304810907936 + 3123612994588082717*2^64 + 11073585338980508442*2^128 + 3729131376*2^192,14892060869269169992 + 17533163659982933473*2^64 + 7278464912086298093*2^128 + 2626465224*2^192,9519525253695362168 + 4003058619179226156*2^64 + 7179165293491808882*2^128 + 2094006761*2^192,9483240830937668376 + 17310910991941182298*2^64 + 16042572479054818068*2^128 + 3862276842*2^192,15464300517318337712 + 17629465754690179460*2^64 + 18394794360315574600*2^128 + 433610231*2^192,11671069015564836400 + 2647633406855459723*2^64 + 14846827393555322985*2^128 + 1333226568*2^192,9256833311663437488 + 13609444072251316778*2^64 + 6471519018730568700*2^128 + 810250660*2^192;\
12536461851013762170 + 11544843199630576421*2^64 + 4663411196699927182*2^128 + 212671904*2^192,16233436981618047240 + 7581714540251473689*2^64 + 4774463365628429139*2^128 + 2869432845*2^192,9447119082670565480 + 15147220791301746966*2^64 + 17829021638058397588*2^128 + 2592813255*2^192,13289780472552459368 + 10976305242671740299*2^64 + 13812495989959869238*2^128 + 1808402398*2^192,14013974377628288028 + 15639623074473120015*2^64 + 15589919802963353393*2^128 + 1882538517*2^192,1266099287501559748 + 1902159991205341333*2^64 + 8433308447931672390*2^128 + 123603891*2^192,7897845305183401400 + 985515199864569207*2^64 + 10210556276627347124*2^128 + 871901691*2^192,15801423413401435632 + 1071240011633659086*2^64 + 1663833898220318855*2^128 + 551111866*2^192;\
423606001822047485 + 14883256416942355446*2^64 + 9802528992495636464*2^128 + 444230471*2^192,10897917397178832928 + 11856130241988176401*2^64 + 82960548522286584*2^128 + 146497786*2^192,7863957213765666320 + 18123017876022286224*2^64 + 6076447855910303567*2^128 + 838616506*2^192,5271652512164125200 + 9335107726493621465*2^64 + 18033882546213450981*2^128 + 4159268891*2^192,10837063717919204222 + 747188896260736506*2^64 + 673968876653697183*2^128 + 3658949024*2^192,13957507751598285162 + 4769695564020450681*2^64 + 12784197673235812833*2^128 + 758867625*2^192,5553001563198285956 + 12808268044094356512*2^64 + 11081671219581158828*2^128 + 3264315970*2^192,6070698711056498880 + 1871615060372116695*2^64 + 14642389323896411889*2^128 + 3794965728*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4736 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 
Look at the ideal generated by: 
1*x^1*y^2 + 1*y^3 + 1*z^1*w^1
1*x^2*w^1 + 1*y^2*w^1 + 1*y^1*z^2
