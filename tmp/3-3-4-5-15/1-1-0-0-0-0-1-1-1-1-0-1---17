/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[2, 0, 1, 1, 0]  	15	5 
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	4 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 3, 0, 3, 0]  	24	5 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 2, 1, 3, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[1, 0, 2, 2, 2]  	21	6 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 1, 2, 2]  	23	3 
[0, 2, 1, 2, 3]  	20	4 
[0, 7, 0, 0, 252]  	21	5 
[1, 0, 1, 1, 254]  	12	4 
[0, 5, 0, 0, 254]  	15	3 
[0, 1, 3, 1, 254]  	20	3 
[0, 0, 4, 2, 254]  	26	1 
[0, 0, 5, 0, 255]  	20	1 
[0, 1, 1, 3, 255]  	22	2 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5811288498678786280 + 16429115844420707606*2^64 + 6518061751861793424*2^128 + 7677954666*2^192,6801846637141222624 + 10056159809741650767*2^64 + 4751954202293650782*2^128 + 8565457302*2^192,4515441023727873344 + 3510328459485353278*2^64 + 4754667331666806637*2^128 + 8395482598*2^192,12713736535259793184 + 2716710424677706201*2^64 + 11972066930502215834*2^128 + 3802372753*2^192,17272440962413687808 + 12887679263323750462*2^64 + 14606800236684118864*2^128 + 3833904846*2^192,5722180768805316624 + 10987217295880450207*2^64 + 3905861109087784478*2^128 + 2697577903*2^192,141098736918682416 + 4650782657424726744*2^64 + 6817086898970970628*2^128 + 5053363735*2^192,17769668883203806784 + 17247677150078560999*2^64 + 16906398266714819771*2^128 + 6229926984*2^192;\
8868756537718236176 + 3999711739869499318*2^64 + 3579535653000162334*2^128 + 4221574419*2^192,8790350958274994800 + 17531456820040583496*2^64 + 18155730673033030272*2^128 + 568042804*2^192,17969414391948066752 + 16562430507191845071*2^64 + 17455019577896825703*2^128 + 407147979*2^192,780616495488320048 + 14704358068800264392*2^64 + 10503354250742406848*2^128 + 297660792*2^192,10703100642417551760 + 11104378838466200977*2^64 + 358652127071525707*2^128 + 133431224*2^192,4539720075632529712 + 4720215724951488154*2^64 + 1157895730137947895*2^128 + 3225178420*2^192,10123354896514188608 + 74732470771942124*2^64 + 16439328003583901746*2^128 + 654150141*2^192,12151961798489405472 + 6075037229927729512*2^64 + 4050100674414343860*2^128 + 3582565345*2^192;\
4058461563843946932 + 12163175309911668801*2^64 + 1815431065521091286*2^128 + 40490302*2^192,9468743117848588224 + 13754093857006311909*2^64 + 1374103312753736910*2^128 + 1305645794*2^192,16319402092788127216 + 18155159156682228197*2^64 + 6935640414859224248*2^128 + 6780990889*2^192,3510196661944157840 + 16671665336507051993*2^64 + 17679864082702755223*2^128 + 1713566586*2^192,12795031594971543008 + 11640567625123534630*2^64 + 3971614313319397767*2^128 + 3885785450*2^192,3942680975663769304 + 1726221110550228796*2^64 + 1846679890655300264*2^128 + 2781569167*2^192,1908587617320149608 + 579862635529854431*2^64 + 7846154909548666602*2^128 + 8124426330*2^192,8831851594212713376 + 15451701384681843116*2^64 + 13917851870553019887*2^128 + 5089250195*2^192;\
7581376051642261437 + 2134094205591978627*2^64 + 7562036266398558301*2^128 + 5177903364*2^192,13977684698764169536 + 5483182092193830192*2^64 + 9005171621334573706*2^128 + 6606965195*2^192,2944743101732586812 + 16278438956373390471*2^64 + 6015421531609022544*2^128 + 3873938980*2^192,3784449222411416196 + 7061943841862388666*2^64 + 13579605454346565131*2^128 + 5416974965*2^192,1413882676948425424 + 1893155467549252900*2^64 + 10330827311464079653*2^128 + 7311896834*2^192,115275174089865666 + 10647245843784014168*2^64 + 8917593059631589130*2^128 + 3101958590*2^192,4566269841693221446 + 15799771507764649516*2^64 + 5986042142652775518*2^128 + 2954024082*2^192,13206551099412255536 + 14677344138192393552*2^64 + 17123608698306900569*2^128 + 3764013946*2^192;\
373159512672150736 + 12311611176282499498*2^64 + 5576818394359540044*2^128 + 2080324322*2^192,12841118150578844976 + 991508135768042891*2^64 + 3145282442175695235*2^128 + 6078363934*2^192,13184056048704980192 + 12331443914964829989*2^64 + 12931386164717207121*2^128 + 5997830886*2^192,664160858716250464 + 18032532829059604049*2^64 + 2733006686507963338*2^128 + 7939277854*2^192,9658203278743841696 + 5496017045339422736*2^64 + 152041118474191770*2^128 + 6334902957*2^192,240826380180334672 + 6094722997963146133*2^64 + 14476917025640806809*2^128 + 2879435794*2^192,13045186753787242992 + 2625434323972867794*2^64 + 32754752690159632*2^128 + 4714434219*2^192,9423300879193085120 + 3890656520313623730*2^64 + 11770047906041585257*2^128 + 4528993165*2^192;\
8981424519989715639 + 15826058717508766965*2^64 + 14458994162338376534*2^128 + 694261139*2^192,11304673407886007632 + 7203365674101053293*2^64 + 10011133197931839329*2^128 + 2853513110*2^192,1394864940279779508 + 16051301985445015767*2^64 + 8608129676706785952*2^128 + 475265972*2^192,7684002988976968604 + 16402567118142904539*2^64 + 16319973761779749969*2^128 + 2810493697*2^192,9643449692646434352 + 3303593511308244868*2^64 + 10326151816935700777*2^128 + 8453542995*2^192,11119011760219223014 + 16312144263820985151*2^64 + 6771288007427236951*2^128 + 7699385912*2^192,7116104911655704610 + 16457880978413893729*2^64 + 8626105808386655813*2^128 + 1410383305*2^192,16275867739273967376 + 12993611812626631999*2^64 + 15776850830226225232*2^128 + 933521827*2^192;\
2912360578976452173 + 15142956963040633128*2^64 + 11815538706171501143*2^128 + 1330884841*2^192,2600929556168403264 + 6979673112566895460*2^64 + 15691021553035216162*2^128 + 2685633217*2^192,9053535944880054444 + 9472762327076763935*2^64 + 7047856950819941713*2^128 + 252867854*2^192,10276735860917053764 + 5948646072789713704*2^64 + 3780704476302521402*2^128 + 6645805463*2^192,7807986032590045632 + 16304002165261689727*2^64 + 6538220240205239425*2^128 + 2574499876*2^192,6196242161968756290 + 2331243184910356316*2^64 + 12475731425108734837*2^128 + 5510058373*2^192,10522617123132962502 + 15114510103557701637*2^64 + 12749108488252097910*2^128 + 303133771*2^192,9340085591233039120 + 11923460826315831922*2^64 + 739664713632876515*2^128 + 4180204635*2^192;\
14470756901442453648 + 13661536828012150671*2^64 + 17663753702804261869*2^128 + 8451442482*2^192,13821572708118869920 + 3171908475920174424*2^64 + 18164734866994167028*2^128 + 5130492324*2^192,2060288534329538176 + 12545963591233377208*2^64 + 11706393918468219822*2^128 + 1434366808*2^192,10291012296465324000 + 11006110333978647625*2^64 + 1358016891104375525*2^128 + 7025799440*2^192,1706697441603429216 + 331266527698417022*2^64 + 47070216504178771*2^128 + 3524429683*2^192,1318879442452198208 + 13823353221865498261*2^64 + 4112650330040129623*2^128 + 8398896086*2^192,15776619346576935776 + 9650138044841445284*2^64 + 17705843192201953597*2^128 + 3540903374*2^192,12643644773037479392 + 2696654376923927662*2^64 + 14917478922729853464*2^128 + 3621871501*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 27
