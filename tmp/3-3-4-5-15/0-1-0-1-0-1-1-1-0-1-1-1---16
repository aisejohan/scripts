/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 5, 0, 0, 0]  	18	6 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	3 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[2, 0, 1, 3, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[2, 0, 0, 4, 0]  	26	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 5, 0, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	5 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 1, 3, 2]  	22	4 
[1, 0, 0, 4, 2]  	23	3 
[0, 2, 3, 1, 2]  	23	3 
[0, 3, 4, 0, 2]  	25	2 
[1, 0, 2, 2, 3]  	21	6 
[0, 7, 0, 0, 253]  	21	5 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	3 
[0, 3, 0, 2, 254]  	19	1 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8385514746561687300 + 13288525949851272797*2^64 + 10020340417911184892*2^128 + 6411166264*2^192,8232873467446297464 + 2322130106109660963*2^64 + 3923643406311562422*2^128 + 2127594750*2^192,17107181572013691976 + 7715948999282277677*2^64 + 11620659471808721360*2^128 + 4675588602*2^192,13207280310768093880 + 11029240421741038502*2^64 + 14404936475365136509*2^128 + 448923328*2^192,17439570645952249040 + 7592106927391429181*2^64 + 17852025991733060306*2^128 + 2461231934*2^192,16803829526499503464 + 8736974583812916336*2^64 + 16987610681306854162*2^128 + 6196079473*2^192,17129965498040006896 + 3233085044394196788*2^64 + 1820829152235568803*2^128 + 1175531332*2^192,15707933070141828480 + 5643804314831750866*2^64 + 10802336532626714041*2^128 + 2396889782*2^192;\
5683741587325918010 + 17764019070513877352*2^64 + 5572136051040269809*2^128 + 3155545615*2^192,1325924945500624460 + 12186062134236143569*2^64 + 5358479321996988972*2^128 + 651668671*2^192,12981671080004045748 + 7780809121902711793*2^64 + 2683673295819647108*2^128 + 1052997898*2^192,10688249714708494188 + 14796649440274797621*2^64 + 8120218214175510700*2^128 + 4293093985*2^192,15860060863496139336 + 10560938847313018545*2^64 + 6556882259135933109*2^128 + 4177047431*2^192,11842161144977580516 + 2011573460551736304*2^64 + 10388968520922305430*2^128 + 2912598248*2^192,13733622673618474600 + 14342794077716913680*2^64 + 15718613847644092832*2^128 + 4195715463*2^192,4923946699824586464 + 13018222091245786232*2^64 + 3720738062148311541*2^128 + 1092320764*2^192;\
1528874177412730197 + 13668541136333004522*2^64 + 125722744874361781*2^128 + 5271679316*2^192,16165432219867499574 + 9892147654813448310*2^64 + 4734259187682148973*2^128 + 5473443594*2^192,12116907453544615274 + 239096501498979884*2^64 + 16784986382887914896*2^128 + 7326664699*2^192,15721093636989784934 + 13410346899802054158*2^64 + 1700837595851056819*2^128 + 8520718730*2^192,3862076050589253828 + 6977533754142386376*2^64 + 12707694057854279944*2^128 + 592449272*2^192,11636482945196225186 + 2030168957958046432*2^64 + 14253287180010128621*2^128 + 2283334521*2^192,850667797311939860 + 12279426488235078088*2^64 + 2098265921311825244*2^128 + 5886924710*2^192,3453219256967818352 + 17508203374202574906*2^64 + 9530931651728641333*2^128 + 6188621024*2^192;\
14865913348886470473 + 2999481099491868927*2^64 + 10176788218892885178*2^128 + 628860806*2^192,845118520888145642 + 16773573116727811374*2^64 + 680944433090657687*2^128 + 1761037374*2^192,758760802467056706 + 5292887023120069349*2^64 + 17255740177843696209*2^128 + 361846289*2^192,18380446341503692038 + 2235795464933464416*2^64 + 14649506627474268481*2^128 + 1208055385*2^192,11537740855780125884 + 9382816728621509917*2^64 + 1378054459103525106*2^128 + 570347251*2^192,10200071341315997706 + 5466277953090031086*2^64 + 319521109688573809*2^128 + 7970880989*2^192,11512597669299327804 + 13247229057737925312*2^64 + 6665621973855394037*2^128 + 1318659846*2^192,5395995060424358368 + 9805705565293718087*2^64 + 6086738967309844144*2^128 + 8390515941*2^192;\
18016557545490841502 + 8102134058855182000*2^64 + 12677441493124847623*2^128 + 5665034503*2^192,14967172105632088920 + 17246022488041725623*2^64 + 6141711917392543823*2^128 + 6471378524*2^192,10192043713423695484 + 11820331752907045993*2^64 + 14180391189491843639*2^128 + 5135189344*2^192,17868170668156137356 + 883492789583155080*2^64 + 12547553935846926050*2^128 + 1310017740*2^192,6121001637531379952 + 11507196035928608053*2^64 + 17882234510125955852*2^128 + 312660187*2^192,6785190175987761500 + 14824465649918682529*2^64 + 15437253788606265215*2^128 + 307661369*2^192,13411040629950088576 + 16400209719137825408*2^64 + 7328697725117059049*2^128 + 1697258850*2^192,1354451923942454064 + 7252857610566785419*2^64 + 8312006213217720430*2^128 + 7897345851*2^192;\
13528028805541154232 + 18361291967508698443*2^64 + 10467645102508541678*2^128 + 898316022*2^192,11420102027260986228 + 2082924529549336539*2^64 + 6137880211538327628*2^128 + 8568851454*2^192,14394547447817062480 + 3806988012986401460*2^64 + 9047464052948793198*2^128 + 4875526330*2^192,10884640455076798488 + 13718906059638789770*2^64 + 16993374437695029553*2^128 + 6754832251*2^192,12925501469821679464 + 1979833780041156715*2^64 + 2687770623320741672*2^128 + 5732785157*2^192,17590314776944459632 + 10275209387668179364*2^64 + 35660530261144415*2^128 + 6667521042*2^192,12179261788233386120 + 14534990680672738541*2^64 + 12863477559762415549*2^128 + 4733451252*2^192,13299809552647806384 + 15047763698069557376*2^64 + 3047686925137386441*2^128 + 4288833821*2^192;\
5532820406581586478 + 5247164991549478546*2^64 + 589372110140980270*2^128 + 8384564201*2^192,4631460968820672788 + 5837770584040134863*2^64 + 14396510515587133574*2^128 + 3785819892*2^192,14993882433423004076 + 3243131787333067240*2^64 + 9077109712439196479*2^128 + 2245145105*2^192,4192153089880761876 + 1573197782221586024*2^64 + 9068030354954321194*2^128 + 5362958669*2^192,7008955954666134872 + 6689768955145833024*2^64 + 8255128901454556930*2^128 + 86666846*2^192,6334360289373308476 + 7551377423065764360*2^64 + 16013857700296037692*2^128 + 2319833646*2^192,15893466916630896888 + 16990441954863414135*2^64 + 6590362530891005709*2^128 + 6813889633*2^192,11988182136503131296 + 8851901739894463316*2^64 + 7747819129115699847*2^128 + 363534383*2^192;\
889208534875647032 + 16336206281247363537*2^64 + 16387323478590720756*2^128 + 3826313009*2^192,11371055559879046160 + 10886167044747401104*2^64 + 1776751638592684697*2^128 + 3339677285*2^192,11342027240788455760 + 9183931154143638328*2^64 + 2922840303324573041*2^128 + 1492519223*2^192,8716126863946550576 + 17667509995143087517*2^64 + 6139665108607250238*2^128 + 759693332*2^192,8225076201476674592 + 16655854327710059337*2^64 + 5187866511506305490*2^128 + 1463606382*2^192,13818441924650570896 + 4127294272151322211*2^64 + 9759931558113945496*2^128 + 1016455233*2^192,17866232090077105184 + 11383611786450645187*2^64 + 5461878257122174306*2^128 + 660468299*2^192,4661188137396827872 + 7236006191981796506*2^64 + 16550016058287467254*2^128 + 101671012*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4370 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
Look at the ideal generated by: 
1*x^3 + 1*x^2*y^1 + 1*z^1*w^1
1*x^2*w^1 + 1*x^1*z^2 + 1*y^2*w^1
