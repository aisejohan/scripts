/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	7 
[1, 1, 2, 1, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 6, 0, 1, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 5, 1, 1, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	7 
[1, 3, 0, 1, 1]  	17	6 
[1, 5, 0, 0, 1]  	18	7 
[1, 2, 0, 2, 1]  	19	6 
[0, 5, 0, 1, 1]  	20	4 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	7 
[0, 5, 1, 0, 2]  	19	5 
[0, 1, 3, 2, 2]  	25	2 
[1, 1, 0, 2, 3]  	16	6 
[0, 1, 2, 3, 4]  	26	2 
[0, 0, 4, 2, 252]  	26	1 
[1, 0, 2, 1, 253]  	16	5 
[2, 2, 0, 0, 254]  	12	5 
[0, 2, 2, 1, 254]  	19	3 
[0, 0, 0, 5, 254]  	25	1 
[0, 4, 1, 0, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	2 
[0, 6, 0, 0, 255]  	18	2 
[0, 3, 0, 2, 255]  	19	4 
[0, 0, 5, 0, 255]  	20	2 
[0, 2, 4, 0, 255]  	22	1 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5996773602835044286 + 12592209013233391656*2^64 + 6647047191768296401*2^128 + 691218852*2^192,14231241647265629916 + 2783364246995616514*2^64 + 2956031658624597097*2^128 + 3302429586*2^192,12826035605514282284 + 12409792528700748835*2^64 + 1502481330832759225*2^128 + 288587721*2^192,10489467531425272228 + 15247905496465842264*2^64 + 13784388138901826847*2^128 + 3643568084*2^192,15986804808982113268 + 3122818589769881629*2^64 + 7298109254267895477*2^128 + 2276363592*2^192,9882888082591583680 + 5578394440955645821*2^64 + 16365557926906809933*2^128 + 1146209580*2^192,1988268641188804908 + 11911611892705429365*2^64 + 17324182915254314325*2^128 + 1489774431*2^192,13429633086390959088 + 4757108551224094635*2^64 + 12199401206340780295*2^128 + 3736568747*2^192;\
15945908426668765501 + 12440561716307665821*2^64 + 16741017971528347177*2^128 + 480112295*2^192,7968922511991729458 + 13379524076519876197*2^64 + 15773636387553447148*2^128 + 3984775737*2^192,1353395157685885930 + 2849532070328679920*2^64 + 12649319083475218607*2^128 + 799794999*2^192,4041292300990476670 + 2479065647696476300*2^64 + 12458060084973666859*2^128 + 3707957574*2^192,7906073668290266902 + 10234682352028066972*2^64 + 16810080984773245127*2^128 + 3107916666*2^192,16494095765454913560 + 8959046274671346674*2^64 + 10099902608179458314*2^128 + 2095328068*2^192,14815047559052944514 + 15403981120098809143*2^64 + 9154430741791088883*2^128 + 4241041406*2^192,15364968234082002824 + 9604609323835745409*2^64 + 9234511176014913287*2^128 + 3556142785*2^192;\
8746091512268454 + 14174410820547493942*2^64 + 4590341698964132050*2^128 + 2475621151*2^192,5866234006802798812 + 2921820670155244132*2^64 + 15805485016411546770*2^128 + 334992613*2^192,15699861524083721532 + 657359541980963836*2^64 + 8464099573057463064*2^128 + 3988455251*2^192,6168227294997914308 + 2226059663523442410*2^64 + 2470838678514469517*2^128 + 3735267466*2^192,3121760532892857892 + 14656857745016746186*2^64 + 12855470378219049880*2^128 + 3499649530*2^192,11131157729577120800 + 1365394944954947619*2^64 + 3457809342975542305*2^128 + 2474254443*2^192,14425631816825374172 + 13525207105703589876*2^64 + 2912622442708799221*2^128 + 171967351*2^192,12187521546394445120 + 8886704279791346473*2^64 + 11407535572456053907*2^128 + 2221888250*2^192;\
3803282173166715536 + 6823097250266639768*2^64 + 12482627805830652178*2^128 + 3339589455*2^192,7038906170932806568 + 17302510173011654811*2^64 + 11165859434117615232*2^128 + 3172694207*2^192,9264781082922073080 + 15644596798490380483*2^64 + 2703378144999121435*2^128 + 1243541556*2^192,6999366223665683416 + 13384818203848893028*2^64 + 15596419522894761928*2^128 + 1957972584*2^192,15754740928648424560 + 828979620897903075*2^64 + 4963245089232557662*2^128 + 3248062806*2^192,14011824797941057632 + 7796100477732438231*2^64 + 10080635485850309069*2^128 + 2859558837*2^192,1247955124817371640 + 6814995063863018889*2^64 + 10722852619249445851*2^128 + 1256120190*2^192,12427383816699933504 + 7338873458412463662*2^64 + 12115352457399465320*2^128 + 3198880450*2^192;\
6976757645014636787 + 13953831545128853040*2^64 + 16770738436515562380*2^128 + 3025614451*2^192,5954722249429452286 + 10740196651206378711*2^64 + 742385604616124750*2^128 + 1215365795*2^192,15377476939519813166 + 14263304792910650258*2^64 + 9456628759614587998*2^128 + 2364615786*2^192,17975661053912084706 + 2028868357435608023*2^64 + 11575521358973246996*2^128 + 923757194*2^192,1472283253840525250 + 14311517410357184518*2^64 + 2612169442575284667*2^128 + 3541626355*2^192,1201046973528312680 + 10258272165983672365*2^64 + 17010716986470027085*2^128 + 2501157007*2^192,4910073480739462598 + 15884868619738173051*2^64 + 17459338431096258983*2^128 + 830128897*2^192,6580276809934408680 + 7384385840587387257*2^64 + 8543861756079080339*2^128 + 4114089972*2^192;\
7768242607311810248 + 1237320490133313790*2^64 + 3121060873783326442*2^128 + 175486539*2^192,9337372434976786224 + 8147802919233632751*2^64 + 18268995459675165701*2^128 + 1901697524*2^192,15153344610607262680 + 1927273758874335350*2^64 + 15704425984000422627*2^128 + 449282313*2^192,17225895208018866536 + 7059010985883795372*2^64 + 7768234856516409149*2^128 + 28533792*2^192,14998898090516339272 + 16346275021700475387*2^64 + 3770831321845640917*2^128 + 367974047*2^192,9425567547529386248 + 1556552338533106111*2^64 + 11499974962899814990*2^128 + 1583105909*2^192,560525303313379192 + 1838204722460439381*2^64 + 10448166645977295547*2^128 + 1127209061*2^192,4022250950182737280 + 12480849186770657991*2^64 + 14832752295056375969*2^128 + 264288359*2^192;\
13506201924590127557 + 1691314845498098567*2^64 + 14409662988639870328*2^128 + 330007521*2^192,14734059647920071546 + 12437599233637137659*2^64 + 16238997063718944392*2^128 + 1597903936*2^192,15795795388254914522 + 17586797123324168959*2^64 + 1577079434770528905*2^128 + 3217451776*2^192,9032472521189117374 + 14916198066334858115*2^64 + 4465281477230060090*2^128 + 1878441689*2^192,7025433875483688102 + 2234422358163492472*2^64 + 11691706765744467390*2^128 + 2687913029*2^192,6485871304182497128 + 4808886899265752175*2^64 + 13378208010184043526*2^128 + 257923252*2^192,8989520190115914154 + 3980354450811567842*2^64 + 9590847835823205002*2^128 + 3929984119*2^192,9916243663723569976 + 12169812192461471277*2^64 + 10384322936457564179*2^128 + 1167177946*2^192;\
16370552811820671753 + 6894699606985075203*2^64 + 18315901068146528269*2^128 + 1662215869*2^192,5085174776573323218 + 1769672596309062226*2^64 + 18303920548055457864*2^128 + 2565397119*2^192,5016389828907330570 + 12790873263047190380*2^64 + 2165075008176775099*2^128 + 16986226*2^192,16685459655122148358 + 16440819189085405460*2^64 + 2636676944757779646*2^128 + 2194877010*2^192,4221186584640339806 + 10212063531132126189*2^64 + 14004440582503931320*2^128 + 15907088*2^192,7722289868496221016 + 6459472672671277160*2^64 + 11647710592412179653*2^128 + 3889536141*2^192,2776689862739113538 + 4315005775285774965*2^64 + 2053997086386229759*2^128 + 3093052039*2^192,15289085178656040840 + 4031629625744307817*2^64 + 9421666795752338460*2^128 + 3411018376*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5276 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 + 16*x^4 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: Mat([x^8 - 2*x^6 + 16*x^4 - 32*x^2 + 256, 1])
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 32
