/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	7 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	3 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	7 
[2, 0, 2, 2, 0]  	24	5 
[0, 1, 3, 2, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 5, 0, 0]  	26	2 
[1, 0, 1, 4, 0]  	27	5 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 10, 0, 0, 0]  	30	3  <--- 2
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 4, 0, 2, 1]  	22	4 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	7 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	5 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	3 
[1, 0, 0, 4, 2]  	23	3 
[0, 2, 3, 1, 2]  	23	3 
[0, 8, 0, 0, 2]  	24	4 
[0, 3, 4, 0, 2]  	25	3 
[0, 0, 0, 5, 253]  	25	1 
[2, 2, 0, 0, 254]  	12	6 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	3 
[0, 3, 0, 2, 254]  	19	1 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 3, 2, 1, 255]  	22	3 
------
The gap is between 3 and 252.
Lengths: 1 1 6 6 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[655443815810697096 + 13937808085189996493*2^64 + 18237612226370422535*2^128 + 3431371696*2^192,13056415559436381636 + 9123863750848551832*2^64 + 14018544723652948574*2^128 + 309384944*2^192,15222970218061342774 + 17639028687870905526*2^64 + 11468182623032873700*2^128 + 878560331*2^192,6107569708856252002 + 1276898492611644027*2^64 + 6192247533387950127*2^128 + 3169244792*2^192,11989999091191855982 + 11232184376108872095*2^64 + 9794094602499498427*2^128 + 52029242*2^192,5071148772209519104 + 826864219635624223*2^64 + 17531348910598447315*2^128 + 2839289836*2^192,7939090298131052546 + 9158947402330276917*2^64 + 11937903427870774987*2^128 + 2840197085*2^192,2657901379257683720 + 7862358418636360938*2^64 + 8294047928218223541*2^128 + 738091478*2^192;\
8458680065958674460 + 5527171590379769458*2^64 + 827591905034294467*2^128 + 537313599*2^192,12404829584125363382 + 4090582118208613700*2^64 + 8403788499963661150*2^128 + 1275483345*2^192,5285347094711076073 + 11974092790084709358*2^64 + 13136309646418765592*2^128 + 2551393577*2^192,17007721265591779587 + 10459793115876533997*2^64 + 10360638573643366023*2^128 + 2981735704*2^192,8131879909153135373 + 2242730842084976395*2^64 + 11888857326519149142*2^128 + 2363584250*2^192,14274821904759359416 + 2715413058715729489*2^64 + 17284680399843109786*2^128 + 2543455572*2^192,17756957350448169651 + 8844845644013290896*2^64 + 2104146680095816262*2^128 + 2432532737*2^192,11615149328871379580 + 16378690019177073595*2^64 + 8528484607960958471*2^128 + 2738727282*2^192;\
18083664777385266964 + 5478836559625296725*2^64 + 12616801734257115340*2^128 + 1488366703*2^192,17875222919186840604 + 13964681698561909838*2^64 + 6080305781127724064*2^128 + 2484389393*2^192,8757615873949497602 + 8700475872811751204*2^64 + 3585544078532878248*2^128 + 4112600424*2^192,296354203252232086 + 7553559644229570822*2^64 + 9173051200326779466*2^128 + 3783008649*2^192,13270603756364341426 + 17462656054348416938*2^64 + 15271581968680878416*2^128 + 2751478268*2^192,6280010570745652392 + 3394424946307346238*2^64 + 13423136212283463913*2^128 + 1732571244*2^192,2418206287212678334 + 12964009187905459366*2^64 + 7140383719697037128*2^128 + 3026895055*2^192,1065355822233623496 + 12088780833938742234*2^64 + 7272409942871803079*2^128 + 3894293018*2^192;\
12083628133447801084 + 6384482244607765502*2^64 + 3871718788266356093*2^128 + 3270792777*2^192,4436007289145513482 + 16374211671201078687*2^64 + 4260640446595013209*2^128 + 3638489706*2^192,11731818159737152311 + 11615039929409559706*2^64 + 10610430272104110366*2^128 + 940904261*2^192,16979289750635933997 + 16311072027768152245*2^64 + 2548061235473362740*2^128 + 2901313517*2^192,6591728352006001923 + 16583962650555406033*2^64 + 16901957982665127567*2^128 + 474393325*2^192,17502941448483423840 + 13211349590601643331*2^64 + 13573916438674053194*2^128 + 3097298581*2^192,12644955301583936397 + 9361919887044222296*2^64 + 17191352592178670306*2^128 + 1619003431*2^192,15835962719198144004 + 11862872349283674125*2^64 + 12305502067454453874*2^128 + 2073064878*2^192;\
10556010068634741124 + 13333849541712629395*2^64 + 1299335193137422902*2^128 + 3554379060*2^192,17919636929892022736 + 7062202717086530931*2^64 + 5629470591347668849*2^128 + 3877074804*2^192,11458434481586188352 + 5328522730906006689*2^64 + 4991816774322373628*2^128 + 4049265573*2^192,5802812278850906072 + 3480385290498362274*2^64 + 5389869506302249747*2^128 + 481979696*2^192,2582785612424995904 + 15241642772268754484*2^64 + 6728560685085697544*2^128 + 2738026214*2^192,3456287474757523952 + 7630132207671268655*2^64 + 4806252370266152388*2^128 + 1021343951*2^192,10438913988684397840 + 2596093555436232254*2^64 + 8051378729805588019*2^128 + 927395541*2^192,5501607023094979920 + 3230398387100205632*2^64 + 16831542835152001872*2^128 + 2411805477*2^192;\
16528040499262453676 + 6595189341696781513*2^64 + 1709587025487762221*2^128 + 29023472*2^192,16614220777214477456 + 10382414668009388305*2^64 + 1893595183236078676*2^128 + 3955597044*2^192,14931358365709019884 + 446025758269535844*2^64 + 9010492450858398621*2^128 + 1378180008*2^192,969309433178314140 + 8121182046705413547*2^64 + 1772303254182964569*2^128 + 3372145078*2^192,9009020014659583484 + 15398745187594642657*2^64 + 6419896305014121820*2^128 + 3248252317*2^192,5181576639292037400 + 4356101468251564654*2^64 + 6237606667546580498*2^128 + 712866622*2^192,14132260211290502284 + 8186809653900097731*2^64 + 9083722220699815869*2^128 + 475868149*2^192,635904219568995600 + 16062737629455497357*2^64 + 6805252650267700462*2^128 + 2147041368*2^192;\
4610087564506665036 + 14415338871704905003*2^64 + 11807002992606971545*2^128 + 2689096800*2^192,5643774355094973678 + 8415983388012664468*2^64 + 10915269568263669469*2^128 + 1950811719*2^192,14014910783535762061 + 5924701827518254187*2^64 + 3333538864241592858*2^128 + 3598299130*2^192,9156700404181672143 + 3270743688810234066*2^64 + 6450844687935953792*2^128 + 218655617*2^192,13452353440377298745 + 7887379911741562058*2^64 + 4556327587962947369*2^128 + 3679998931*2^192,6436128732828334728 + 2885767115290276445*2^64 + 17196079785813944232*2^128 + 2174880315*2^192,11462867955802487999 + 9989539585293439189*2^64 + 17324901911136678324*2^128 + 1949699939*2^192,15679800818812024060 + 9116080155913354871*2^64 + 4566822520171242445*2^128 + 1240004902*2^192;\
17898774293227470712 + 2341480934672971686*2^64 + 1702465252933830775*2^128 + 299142386*2^192,8211515952983468228 + 212569058456257527*2^64 + 9441091225118395100*2^128 + 2136648662*2^192,13867596638527983382 + 6858201173037908228*2^64 + 13455079285684122253*2^128 + 1743937178*2^192,1622728287155182962 + 7612521802900108963*2^64 + 18187195668544553228*2^128 + 1997870654*2^192,7813103788779941438 + 4167303953679180274*2^64 + 2548294790707376362*2^128 + 202445707*2^192,5531017333794142896 + 12653642123286812407*2^64 + 14444674777873909623*2^128 + 1684506005*2^192,11596424117059370002 + 6500980635964360628*2^64 + 447938046902921889*2^128 + 1585553186*2^192,274556402306682744 + 10640204852497706941*2^64 + 4400826245276214075*2^128 + 860790244*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 28
