/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 45
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 5, 0, 0, 0]  	18	6 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	4 
[0, 3, 0, 2, 0]  	19	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[3, 0, 2, 1, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 7, 1, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[0, 6, 1, 0, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	5 
[0, 0, 5, 1, 7]  	25	2 
[0, 0, 0, 5, 249]  	25	1 
[0, 3, 2, 1, 253]  	22	3 
[0, 5, 0, 0, 254]  	15	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	3 
------
The gap is between 8 and 248.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 10.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8919043965032719192 + 2400249366858518970*2^64 + 18165709931397396599*2^128 + 351552079632*2^192,13003601769148720768 + 160320188073150438*2^64 + 16681429652121750580*2^128 + 344430486385*2^192,187089512040951952 + 15537460126356992145*2^64 + 16608441981046133463*2^128 + 323143092973*2^192,13503358581563897456 + 16421551589014110046*2^64 + 14161657051686361974*2^128 + 258287964108*2^192,7444169558178330400 + 16381568621105239064*2^64 + 17865678123101262044*2^128 + 542002449331*2^192,9505818071615677840 + 11150635120993396129*2^64 + 7586201890958403833*2^128 + 180143568841*2^192,9706995849490749920 + 7454930066601235394*2^64 + 5658899548506048082*2^128 + 279023631015*2^192,16510457935514611872 + 7563476391605950242*2^64 + 11203043732412924587*2^128 + 259615022446*2^192;\
3679639225025749480 + 16420409233372984719*2^64 + 3443196042980238473*2^128 + 262845938121*2^192,14927336801512028544 + 3121257067540655490*2^64 + 9759218764787334439*2^128 + 104965119092*2^192,17934764132009136880 + 11672627082999869997*2^64 + 7626384769536413624*2^128 + 72393248101*2^192,13289075105005324816 + 12889547346944452087*2^64 + 17836682199114846521*2^128 + 2518114133*2^192,16953161068147749856 + 13068618612961346923*2^64 + 11726127961117877138*2^128 + 51396180717*2^192,4700255593580189168 + 10855652039612168740*2^64 + 5416659564648536375*2^128 + 14436868355*2^192,11688929328559496992 + 12358374699522004586*2^64 + 12419109517613075014*2^128 + 122228509132*2^192,16190356653925204576 + 16039050530357938181*2^64 + 9328942252376091611*2^128 + 6765221865*2^192;\
15730549092012804506 + 6873817028016648889*2^64 + 2292160554781219087*2^128 + 193646522833*2^192,1521908245529543008 + 15340855005791650454*2^64 + 9245791845531015379*2^128 + 262361050986*2^192,5939169874415348604 + 16293714336197111280*2^64 + 13454849310554381269*2^128 + 29157537670*2^192,9285003141186307780 + 15043728209250307969*2^64 + 10646557123981416348*2^128 + 15603815890*2^192,8280896982912193400 + 3801904853627448132*2^64 + 14278862230099630799*2^128 + 109710619292*2^192,18155338402311527484 + 2207936360820890642*2^64 + 10581735166806234420*2^128 + 86524360772*2^192,2866252437780880968 + 10531518302031903454*2^64 + 9701686926702150831*2^128 + 353447592713*2^192,6726444935543086616 + 8066850792569708666*2^64 + 11370132734366489217*2^128 + 369129336236*2^192;\
405676684893122197 + 723502884848201043*2^64 + 1533697652608851274*2^128 + 15566160109*2^192,11742488353584250672 + 3366305820966324350*2^64 + 6456592401359616907*2^128 + 135593495444*2^192,3552129980697378030 + 12640255085710294061*2^64 + 12878884495982823051*2^128 + 57214475667*2^192,10410635009342453810 + 6474211223126572003*2^64 + 6454023950328180116*2^128 + 90087598752*2^192,4448527974467122972 + 15878232261285188589*2^64 + 11155595348115252901*2^128 + 197004345833*2^192,14279914524094984270 + 16050297505823947729*2^64 + 2865893998639704680*2^128 + 140948525770*2^192,6830655424118626244 + 12321721685491875468*2^64 + 12308614086106664288*2^128 + 194313036517*2^192,5888799539353484780 + 1115747891966143530*2^64 + 13738518453322173632*2^128 + 117641065758*2^192;\
14659224549593872729 + 18111140811072806675*2^64 + 14491536569622633535*2^128 + 313880886790*2^192,10478495190567462128 + 14309045201301682387*2^64 + 1519042697603592126*2^128 + 185076484843*2^192,6610865590151918662 + 7685844000927408272*2^64 + 11281368647316310021*2^128 + 252051889165*2^192,8110994229642193754 + 13420783795513555575*2^64 + 8081149704473718526*2^128 + 517847579746*2^192,9061010719344254668 + 6911088864734820886*2^64 + 888000981704502724*2^128 + 294169126530*2^192,17674502097751162662 + 12381105345889521780*2^64 + 4159174558116959889*2^128 + 300724131255*2^192,14279053326694663572 + 12781763646435131760*2^64 + 16881275983894929506*2^128 + 410265577846*2^192,16289467703414448092 + 7466647745264648516*2^64 + 5282439297270777502*2^128 + 180184790557*2^192;\
1220357127299457429 + 9703534428189646868*2^64 + 4365962441225836029*2^128 + 319926123939*2^192,18325372231942474032 + 17734412047318251527*2^64 + 12486230196691656782*2^128 + 226623433730*2^192,14738670349880613102 + 10451691901176928732*2^64 + 264151712090786065*2^128 + 303409862250*2^192,16954974428718192178 + 9721684088667879436*2^64 + 15290573757791710810*2^128 + 390263969856*2^192,2225870404911906076 + 4396438653893921084*2^64 + 1110628919291787164*2^128 + 72958722716*2^192,7360790159186445390 + 9900902438974295962*2^64 + 15316169662836291239*2^128 + 37095305915*2^192,16206149569738507204 + 893267640785873843*2^64 + 17180119777840355798*2^128 + 304546368778*2^192,17594541612133482988 + 13705615531751397878*2^64 + 15112638816843618524*2^128 + 287625119981*2^192;\
8326479243226026560 + 12114243226899612880*2^64 + 2616403712413690824*2^128 + 209294705273*2^192,5437897689131144192 + 6709949350932729791*2^64 + 12197929983831180283*2^128 + 90272545877*2^192,5486291207712990592 + 18298643894474470334*2^64 + 3443901247484166207*2^128 + 159161390900*2^192,14997556607635648128 + 17835458992311203182*2^64 + 2045753318332954599*2^128 + 352458943485*2^192,18202275179848507136 + 10704594857720833279*2^64 + 14821524039403251386*2^128 + 339918459862*2^192,1601449613917441408 + 3226854020472424300*2^64 + 2088620558585596101*2^128 + 19426762928*2^192,16843442271565456640 + 10399622396170423092*2^64 + 5076930562823581975*2^128 + 437575024002*2^192,14406748504798777088 + 318035641086862625*2^64 + 105082015488599459*2^128 + 164509325034*2^192;\
2477050347436598568 + 4992117974759255474*2^64 + 521716397569005876*2^128 + 252227727590*2^192,13239954212045832576 + 5348889487786185280*2^64 + 11510692020079681805*2^128 + 125552460484*2^192,9542617138149653104 + 1640282900742160282*2^64 + 7574174056959636116*2^128 + 80998962604*2^192,8175164756867933840 + 16106348805530965941*2^64 + 13140366798870347156*2^128 + 140609034921*2^192,17491874154830214880 + 12530502348848470060*2^64 + 18118592220882643598*2^128 + 210991305902*2^192,4553776829565052272 + 12394859814045009617*2^64 + 2776794133949138511*2^128 + 43842408220*2^192,7309958770183477280 + 15976636709728474093*2^64 + 3429705105730374849*2^128 + 66407825431*2^192,12816298679981159776 + 12833880257410553106*2^64 + 10720672390438755499*2^128 + 48703800576*2^192]
/* 
This matrix times 2^(-9) should be the matrix of frobenius.
*/ 
B = 2^(-9) * A; 
/* Freed 4370 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 21
The valuation of subst(g,x,A) is: 12

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 
Look at the ideal generated by: 
1*x^1*y^2 + 1*y^3 + 1*z^1*w^1
1*x^2*w^1 + 1*y^2*w^1 + 1*y^1*z^2
