/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	8 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	4 
[0, 3, 4, 0, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	4 
[1, 3, 0, 1, 1]  	17	5 
[1, 2, 2, 0, 1]  	17	4 
[1, 0, 2, 2, 1]  	21	4 
[0, 1, 5, 0, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	6 
[0, 0, 5, 1, 2]  	25	2 
[0, 5, 0, 0, 254]  	15	4 
[0, 0, 0, 5, 254]  	25	1 
[1, 3, 0, 0, 255]  	12	5 
[0, 4, 0, 0, 255]  	12	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 1, 1, 2, 255]  	17	2 
[0, 1, 0, 4, 255]  	23	2 
------
The gap is between 3 and 253.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[516330557752526736 + 4432155516176122196*2^64 + 18281637006360046476*2^128 + 1475693598*2^192,2044877667637331436 + 7601750618816429206*2^64 + 9501805226661403477*2^128 + 4188264001*2^192,17454213469820597840 + 3294718927325629615*2^64 + 682624791569753036*2^128 + 2507735143*2^192,10085006079314101620 + 7820003216393480218*2^64 + 4304565754760012928*2^128 + 3363910287*2^192,11824909154920576872 + 3156225757704180533*2^64 + 12514376613278638616*2^128 + 3009886778*2^192,3142746828797308588 + 13933507348898949581*2^64 + 13479437238748110081*2^128 + 2536043749*2^192,17725972943062945188 + 17269149890216858837*2^64 + 41814402707228417*2^128 + 1948261161*2^192,14955132245098917176 + 14961757555564903086*2^64 + 15219564695459894197*2^128 + 3064300655*2^192;\
12654190110035943550 + 13421631683451080041*2^64 + 18024675044154131681*2^128 + 3703307300*2^192,9691781678335422196 + 8715711121520225874*2^64 + 17354201699424116190*2^128 + 2397885091*2^192,2175404295205584056 + 6266476234372763573*2^64 + 14697503738874508098*2^128 + 1854718431*2^192,8068262522815386488 + 12173256515473800466*2^64 + 11593427156457012531*2^128 + 3659478582*2^192,2952504832109148552 + 9229425553343786690*2^64 + 2300728281353542375*2^128 + 2867466394*2^192,4263984341481882136 + 5296506806299753105*2^64 + 3747188934132770365*2^128 + 3337145773*2^192,6096068421034434788 + 10532937087223319602*2^64 + 15664166572918711965*2^128 + 726681519*2^192,16875178302657091328 + 1673739770293701499*2^64 + 11299798053313083659*2^128 + 3809228840*2^192;\
7635899427400327918 + 511931785570894348*2^64 + 3291490800653597132*2^128 + 3354166463*2^192,15905303307373933960 + 15005523162006587042*2^64 + 11612605205505199299*2^128 + 1878660966*2^192,4215889091381629312 + 10534093617756119003*2^64 + 17671322874296600230*2^128 + 2833257136*2^192,456518064227581628 + 16573389919314841372*2^64 + 11080497075987790039*2^128 + 2252542231*2^192,12979825484562580544 + 15482864621595914837*2^64 + 7924874953510726143*2^128 + 2029500397*2^192,7819871210257722372 + 5055513582082529292*2^64 + 803237823845746699*2^128 + 1788553257*2^192,1189177361074441304 + 17823229913529162440*2^64 + 861050784359115223*2^128 + 4248853225*2^192,4877641205720985400 + 7935769166876580210*2^64 + 1752928567879996576*2^128 + 3382611621*2^192;\
12815297796393011676 + 6206620461304418641*2^64 + 2247682678921913103*2^128 + 2970638340*2^192,7088583976840743357 + 287724229390043106*2^64 + 7051567093472112319*2^128 + 3224974414*2^192,2059096888776844738 + 15607716943616215667*2^64 + 13330115504169476788*2^128 + 2427587689*2^192,2976077069452409317 + 6919119791023592592*2^64 + 9696915149507087345*2^128 + 3912690100*2^192,7308976729195762578 + 17017195044347455957*2^64 + 589699682508797756*2^128 + 2926751509*2^192,7959762598776219835 + 3050869407551040512*2^64 + 13666494677370035149*2^128 + 1902629150*2^192,7233335932632682913 + 220391189536879401*2^64 + 4112525470483003107*2^128 + 504475718*2^192,11055639686139885562 + 5857897038712473492*2^64 + 907064713609705516*2^128 + 2298586654*2^192;\
15950250507120989616 + 4588540000185979454*2^64 + 8452576889449940175*2^128 + 348649665*2^192,12892217053874938545 + 10496535576269786682*2^64 + 15161387261879053404*2^128 + 600576852*2^192,384566159130118938 + 67801065755084807*2^64 + 16030874711444203174*2^128 + 666465227*2^192,15633446406953282961 + 9548715599548983924*2^64 + 9547773295219545620*2^128 + 245634228*2^192,16037914274599133370 + 4869023702109291862*2^64 + 3307680927523149573*2^128 + 3931012683*2^192,6823494188719363983 + 1670310713861785071*2^64 + 11140725338353754194*2^128 + 1130149595*2^192,17750520563975746501 + 10391293803396249228*2^64 + 15378675109014808085*2^128 + 389301927*2^192,7538871255242227058 + 1094497047029030835*2^64 + 3050162052694145370*2^128 + 1262139299*2^192;\
17319639191004488024 + 9011253816473400527*2^64 + 2479185916050250045*2^128 + 3764944168*2^192,17655429448281655679 + 3037283420290690405*2^64 + 6428820637180283203*2^128 + 1296036514*2^192,17186906737635944042 + 17875827151452253306*2^64 + 1035760786492445184*2^128 + 3536079732*2^192,16795712574104811547 + 1315806921798416642*2^64 + 13055076692424965330*2^128 + 2380012253*2^192,1649877556476754254 + 10315086425652517072*2^64 + 5222976993231964618*2^128 + 14755433*2^192,11925166177472947925 + 8138067888718211945*2^64 + 15460963071553554770*2^128 + 1057469818*2^192,4538786296943322999 + 13478577305483133902*2^64 + 7016727783150562858*2^128 + 1242670502*2^192,10587539098575243566 + 14344547065524500897*2^64 + 4905349030535696471*2^128 + 1788235268*2^192;\
7875140605563263182 + 480406429717943174*2^64 + 7738648030804352793*2^128 + 2243552616*2^192,12465210900857323196 + 14431207935006991447*2^64 + 5077378869889842179*2^128 + 228523025*2^192,9183884868636960964 + 1496677676034866686*2^64 + 14225417306880053648*2^128 + 1459348795*2^192,9010393672133978588 + 9860617274917109005*2^64 + 6250766491754214764*2^128 + 23423896*2^192,466632520209552984 + 14243462317204594827*2^64 + 12305770767773191113*2^128 + 4241703732*2^192,16061617783170217756 + 11110701789173282912*2^64 + 12094066042282959535*2^128 + 3361667990*2^192,7716849799309760784 + 11069530276784255389*2^64 + 5267040034091496979*2^128 + 3527668810*2^192,17694538379034202400 + 12413722436990733083*2^64 + 5140046140436594788*2^128 + 1477367574*2^192;\
1358438626837382122 + 3741214438790586792*2^64 + 9945615995073055720*2^128 + 1338143648*2^192,2604384686087342198 + 2452376795140274214*2^64 + 7670418241129720710*2^128 + 2164032649*2^192,4387514207433514276 + 8313568899241138670*2^64 + 12699098190293509150*2^128 + 2276958056*2^192,1666008290354596314 + 3548140843104972350*2^64 + 5958163714015275615*2^128 + 2208753747*2^192,1326304682765843308 + 225558597541722928*2^64 + 3840501748713960216*2^128 + 2605650273*2^192,2283516188670612694 + 7607849287762733485*2^64 + 11428834173514479107*2^128 + 2380160948*2^192,15228317982566080054 + 15293262979155999514*2^64 + 1334316630632354540*2^128 + 929020582*2^192,764603337188318580 + 1981260349837530617*2^64 + 15285718071680718298*2^128 + 2135707976*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4706 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 
Look at the ideal generated by: 
1*x^2*y^2 + 1*x^1*z^1*w^1 + 1*y^4
1*x^3*z^1 + 1*x^2*y^1*z^1 + 1*x^1*y^2*z^1 + 1*y^3*z^1 + 1*y^1*w^2
