/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 38
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[2, 0, 1, 1, 0]  	15	4 
[1, 0, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	4 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	3 
[3, 4, 0, 0, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 2, 2, 1]  	21	6 
[0, 4, 0, 2, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	5 
[0, 0, 5, 1, 2]  	25	2 
[0, 7, 0, 0, 253]  	21	5 
[1, 0, 1, 1, 254]  	12	4 
[0, 5, 0, 0, 254]  	15	4 
[0, 0, 0, 5, 254]  	25	1 
[0, 3, 2, 1, 255]  	22	3 
------
The gap is between 3 and 252.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[14581624894387659130 + 12860972549010373025*2^64 + 6726894859873191422*2^128 + 2997212855*2^192,15219753996498570356 + 14669315959810814460*2^64 + 8521357130968612795*2^128 + 1837697470*2^192,18401791221170202772 + 5821847518555405757*2^64 + 17980987929150023776*2^128 + 961925202*2^192,16084159354448536488 + 8524543381159594906*2^64 + 8627160818924108855*2^128 + 1740387266*2^192,16955888644407072260 + 15652565814770009095*2^64 + 13387005972715217550*2^128 + 2119098743*2^192,9810585320099849588 + 1959135787919781739*2^64 + 4433358814331129798*2^128 + 580317258*2^192,14809612388684180944 + 14441772513540240593*2^64 + 11197989731541837524*2^128 + 2307575106*2^192,11241323330774096680 + 13272086762448387545*2^64 + 3021706400882979546*2^128 + 1295026353*2^192;\
6619014273301133373 + 17780135359586819291*2^64 + 11334590141366894622*2^128 + 734589214*2^192,5028262070302052834 + 10035464306756445563*2^64 + 17251613637449859105*2^128 + 1620601124*2^192,12297263482764963586 + 2084324995674115555*2^64 + 10298511344760048908*2^128 + 1893934320*2^192,17353469621748427276 + 576326953133248526*2^64 + 1018891293831216326*2^128 + 546702140*2^192,3636742914507066178 + 14451355181680533529*2^64 + 2976283635466242531*2^128 + 579276147*2^192,6071096346391750170 + 11258151378413914766*2^64 + 16522992773278285925*2^128 + 345362508*2^192,17939269921377440784 + 11942520628717765223*2^64 + 10656775454913952941*2^128 + 894338187*2^192,5314286010931606244 + 2860164676749610704*2^64 + 12582986576581201061*2^128 + 1110844384*2^192;\
18035890045594237471 + 6092959513206383742*2^64 + 11532210334365667893*2^128 + 4168292269*2^192,6042042664346620022 + 17669227890458658117*2^64 + 12040633222869052551*2^128 + 2469798474*2^192,13144940923550113446 + 1418102813990301556*2^64 + 5489813153652340458*2^128 + 1865830475*2^192,2510623558303912532 + 4788428312022730019*2^64 + 5487081943461077800*2^128 + 3662332342*2^192,15224287403709538966 + 17759550560020412859*2^64 + 7770767701092454835*2^128 + 1995606679*2^192,11056660666892049422 + 11176675845520509525*2^64 + 4317855325066975819*2^128 + 3012260089*2^192,4942477574308475824 + 3421323111058197817*2^64 + 11827711263716702165*2^128 + 613507225*2^192,367993780677666172 + 14331296555315483615*2^64 + 9644794112978176995*2^128 + 1248100295*2^192;\
11568957827908194926 + 10150697289357640287*2^64 + 4779167586875140482*2^128 + 491748760*2^192,4343661951592215566 + 4884612330879509516*2^64 + 795856075472115653*2^128 + 1351406270*2^192,17610782043150042088 + 4003444902117827581*2^64 + 13359495326279722745*2^128 + 2394825750*2^192,10823209526670294558 + 3200507261664984520*2^64 + 2296950078734656224*2^128 + 1236939101*2^192,9024756859129119552 + 14845049868303208817*2^64 + 14035676111152550076*2^128 + 1002434208*2^192,15989389775091562726 + 13390352219396038447*2^64 + 14567002298522197916*2^128 + 3678646845*2^192,4716262829704638216 + 7554969852752675486*2^64 + 9516619347002312374*2^128 + 2434715980*2^192,10827016154405892332 + 13224245049339598070*2^64 + 6708388714037583860*2^128 + 883443195*2^192;\
8997081677811675694 + 12022526167559845476*2^64 + 5970056324306121968*2^128 + 4077227669*2^192,4499517181657842394 + 7265954634590927025*2^64 + 10253367664221000760*2^128 + 3894766381*2^192,2852458499702987896 + 5227451950425605273*2^64 + 14297765350250645985*2^128 + 423780581*2^192,225366403158422930 + 12387950898696193365*2^64 + 15349906654074162300*2^128 + 1649898180*2^192,1741285107196306256 + 5752174223266324016*2^64 + 5525252968355547164*2^128 + 1119334808*2^192,6468444395121054842 + 1006055450135741733*2^64 + 18095178832147940869*2^128 + 4260343494*2^192,5551946566760756792 + 5262854303506412488*2^64 + 8931518785894763570*2^128 + 1082886747*2^192,3527295436266821124 + 15095033146407396024*2^64 + 9086606736187637187*2^128 + 505824834*2^192;\
1713019161118256563 + 14406457504586069271*2^64 + 8935037198334977883*2^128 + 1394222650*2^192,17543481393452864652 + 15891711724594733701*2^64 + 2440278852345312838*2^128 + 571778759*2^192,15693928843869583722 + 4181244889417625779*2^64 + 18014972749844828755*2^128 + 690102364*2^192,13557036874280528718 + 2678498272851516318*2^64 + 10641425169465728503*2^128 + 1996679776*2^192,17548167366147890818 + 18410285000981881881*2^64 + 11422695244280201826*2^128 + 196848323*2^192,13170305709247738132 + 4108244928085205547*2^64 + 9252802901933970656*2^128 + 475058872*2^192,11911018295930963784 + 14127057803728382702*2^64 + 14480433124428487638*2^128 + 569858117*2^192,15393466464908100280 + 11040135689536556987*2^64 + 12108055097868357744*2^128 + 718230973*2^192;\
6078564236232474954 + 15863577996787942564*2^64 + 5298295045668502133*2^128 + 2350166303*2^192,3217362524178525406 + 16219631538180678827*2^64 + 7569119587846852372*2^128 + 670549817*2^192,14306658166102977032 + 3866484818063533888*2^64 + 11980251001638017188*2^128 + 71265928*2^192,1741282798114398910 + 18114444262488258185*2^64 + 14771815385487987460*2^128 + 1290450635*2^192,7317594890421747176 + 1480167332524479955*2^64 + 15844706549357169695*2^128 + 3184292850*2^192,14895132773878839358 + 4857582229420396691*2^64 + 14082533323996162172*2^128 + 655853694*2^192,223813038242360168 + 16754379464040028073*2^64 + 5353045378984613583*2^128 + 3630730039*2^192,124907600512740940 + 12112868863892139234*2^64 + 13720280178942566029*2^128 + 3075972405*2^192;\
10772630119180898970 + 12707111080514281632*2^64 + 6304386773239265324*2^128 + 7752006*2^192,7272308115358270308 + 7447947490199177789*2^64 + 11070603457799071850*2^128 + 1644289900*2^192,14197076596100284836 + 17060383513125190867*2^64 + 6745977618764771845*2^128 + 116994410*2^192,13642438869294166936 + 4624839181739886793*2^64 + 18419449748444049238*2^128 + 1823353838*2^192,15442479271421789412 + 17971189185668902416*2^64 + 2666185059258562394*2^128 + 750736311*2^192,12654829640546174612 + 2856716057457058952*2^64 + 13879392720609791972*2^128 + 709870906*2^192,4672649247800842592 + 18361693671800487956*2^64 + 15683590041731104765*2^128 + 1271777420*2^192,15160104597586997272 + 15621211001313158311*2^64 + 16750987307399901218*2^128 + 1398087918*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5218 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 + 4*x^5 - 8*x^4 + 16*x^3 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 + x^5 - 2*x^4 - 4*x^3 - 8*x^2 + 16*x + 64, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26
