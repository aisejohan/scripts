/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[1, 0, 3, 0, 0]  	15	2 
[1, 0, 0, 3, 0]  	18	3 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 2, 0, 1]  	17	6 
[1, 2, 0, 2, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	4 
[1, 3, 1, 1, 1]  	21	7 
[0, 7, 0, 0, 1]  	21	6 
[0, 3, 2, 1, 1]  	22	4 
[0, 1, 5, 0, 1]  	23	3 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 3, 1, 0, 2]  	16	6 
[1, 1, 0, 2, 2]  	16	6 
[1, 3, 0, 1, 2]  	17	6 
[0, 3, 0, 3, 2]  	24	4 
[1, 0, 2, 1, 254]  	16	4 
[0, 4, 1, 0, 254]  	16	2 
[0, 4, 0, 1, 254]  	17	2 
[0, 2, 4, 0, 254]  	22	3 
[1, 0, 1, 1, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	2 
[0, 2, 2, 1, 255]  	19	2 
[0, 1, 3, 1, 255]  	20	3 
[0, 0, 0, 4, 255]  	20	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1274434327508639264 + 17393928969025856875*2^64 + 13311294550337756770*2^128 + 319321720*2^192,12046376930950050200 + 1480040958417417746*2^64 + 11287960405753399032*2^128 + 3341237545*2^192,7260382617388200776 + 5355806267929093204*2^64 + 6011060912136560620*2^128 + 2062542404*2^192,14968504780041651864 + 16953352757393487371*2^64 + 14494397994298549856*2^128 + 2875729337*2^192,16042501398703418824 + 15999753767831912494*2^64 + 7673679537360166936*2^128 + 3090207596*2^192,8740140583932859416 + 10124408224505661509*2^64 + 9780301745268800252*2^128 + 2244887138*2^192,8518994453056250384 + 10150042119420977906*2^64 + 13399483561315144637*2^128 + 4070086846*2^192,9290123139704093984 + 8617496317703473170*2^64 + 9243086728574962586*2^128 + 3936662100*2^192;\
16469950478756803032 + 5511300992236439210*2^64 + 11417499522617720301*2^128 + 1308576471*2^192,17758630547676767792 + 8034363771673465511*2^64 + 10443547748194020649*2^128 + 375020746*2^192,17581230525618716136 + 16566208206250158978*2^64 + 11297165742420823712*2^128 + 325710449*2^192,9189857217535198160 + 906137095312880376*2^64 + 9893399048831756823*2^128 + 1086871577*2^192,17087483545248471888 + 7882101901785412190*2^64 + 3395553162120822699*2^128 + 1336367193*2^192,166660300585202272 + 5819276662472858401*2^64 + 4455254131770368552*2^128 + 1626832971*2^192,4316411454476262944 + 15857054610373056119*2^64 + 13708909140266912692*2^128 + 1379289786*2^192,3292414977119096560 + 15316733041885250078*2^64 + 10489099935440763357*2^128 + 104100682*2^192;\
16798345421417699486 + 10851547995322340822*2^64 + 6193099754765470981*2^128 + 397201624*2^192,7602620558365198496 + 14596406790678251617*2^64 + 10976041936607516868*2^128 + 890567967*2^192,14960666179803992832 + 5114912629722024821*2^64 + 7416797728116486971*2^128 + 1517236745*2^192,5563140497357668392 + 12655796466356743641*2^64 + 9257509315418679625*2^128 + 1452133420*2^192,6800542069470324480 + 3167343554591755357*2^64 + 17960194252755387859*2^128 + 298163136*2^192,990915819876562968 + 1699453075685348868*2^64 + 13070185913837759755*2^128 + 773323511*2^192,15437727293564366228 + 14751545102550625660*2^64 + 18445691066493371206*2^128 + 201463630*2^192,2322759831595922536 + 7450218235253889260*2^64 + 12011389349134562989*2^128 + 583205994*2^192;\
12318838408986309163 + 9534325901357252944*2^64 + 8009999116136348247*2^128 + 631114396*2^192,3827228671073059944 + 3841017783721276578*2^64 + 17123127042941042805*2^128 + 602359395*2^192,13284439357868170376 + 14933124660399525497*2^64 + 17145902640342969911*2^128 + 1907523192*2^192,16404311503762816988 + 7425538864001221042*2^64 + 15082474214424310897*2^128 + 282470656*2^192,10810875344100586992 + 15835601991263527089*2^64 + 6244774556973709528*2^128 + 2140927334*2^192,1349847034111959412 + 9218824576332722466*2^64 + 7891229755685224291*2^128 + 2124822099*2^192,7483166498151628010 + 1270080412625914408*2^64 + 13555839480280330215*2^128 + 1786001735*2^192,642521837601836332 + 5905952430984328723*2^64 + 14823724347469138841*2^128 + 57502203*2^192;\
6743638062586034224 + 3640809912298417036*2^64 + 17370616701988183251*2^128 + 2941978623*2^192,15564169946718224696 + 10732205778474223966*2^64 + 3630212651879796360*2^128 + 495461621*2^192,13764201410022390392 + 4887344002304189052*2^64 + 17501962159023105069*2^128 + 2241216824*2^192,1333521532798127328 + 1100595911834350109*2^64 + 17875365580523862354*2^128 + 2775740512*2^192,10554022618107274848 + 15404230196573147653*2^64 + 14560937965500956744*2^128 + 2139419129*2^192,859889801567331920 + 7880797083596891066*2^64 + 370978994849843826*2^128 + 3093406453*2^192,9998486889840227360 + 5139824060615823842*2^64 + 14997401422057184436*2^128 + 2821537861*2^192,1868980502724997504 + 16504802371303110195*2^64 + 1110681014612093336*2^128 + 3680164258*2^192;\
4827857471826234267 + 15507484172939537510*2^64 + 11493126367659652959*2^128 + 594491049*2^192,315825239011084848 + 6960657118893275668*2^64 + 11809966719471972042*2^128 + 324280675*2^192,5913317952101669824 + 12538371654250557307*2^64 + 5600207060064535652*2^128 + 1979986097*2^192,2708939575271719988 + 18033975335171034381*2^64 + 18034564139147928483*2^128 + 1954041467*2^192,11117816930113318800 + 1994802365410537449*2^64 + 10187655817779191226*2^128 + 1455920035*2^192,10358942637458823724 + 14409201954602385071*2^64 + 9524155075181551858*2^128 + 20892189*2^192,16948346685376437594 + 15937891107311848562*2^64 + 710908833563729834*2^128 + 1285390274*2^192,4693619726869368172 + 14902674779241728901*2^64 + 7562554748769304669*2^128 + 426163893*2^192;\
1563236176044186596 + 17964195312171392029*2^64 + 11150009185592206277*2^128 + 3588299952*2^192,3136098779876982880 + 13571171611028076918*2^64 + 4168925724163283981*2^128 + 558888644*2^192,14599418295500462136 + 8863666890850602667*2^64 + 17559137537215879897*2^128 + 3359403659*2^192,8798920165052263696 + 3090730477345726130*2^64 + 8228694621523837904*2^128 + 980204289*2^192,7292041473706648392 + 9641752285828929411*2^64 + 7081251534652602465*2^128 + 1419001654*2^192,9809828952684530816 + 14277688175669689191*2^64 + 6465862805133015849*2^128 + 2297495960*2^192,11800001698468091312 + 10754100931731002622*2^64 + 1304001925910500313*2^128 + 3515794926*2^192,3359314374581321632 + 12410439285086971822*2^64 + 2635218692229570282*2^128 + 3803695413*2^192;\
12073084814359069900 + 1111302825812931047*2^64 + 6596572774224249011*2^128 + 1447802842*2^192,17892422630785629320 + 2685928521553525500*2^64 + 11535347810848339535*2^128 + 744128641*2^192,1844553832232312568 + 9449894332314240332*2^64 + 11339344960810962877*2^128 + 460159364*2^192,10285641740809139304 + 9494777440934257377*2^64 + 5546930995534263963*2^128 + 4128270390*2^192,8138265824783435496 + 1980248593032438959*2^64 + 16798082005650115200*2^128 + 728330192*2^192,8121833831312621192 + 9559081280907367949*2^64 + 720090515117539720*2^128 + 3062167142*2^192,7119542739802532872 + 7569776474225541129*2^64 + 15554016357875140759*2^128 + 3150006207*2^192,16104140531386372752 + 5731427336392777766*2^64 + 10296711243617706545*2^128 + 3564626805*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4675 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 32
