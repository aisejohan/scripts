/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 46
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	3  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	3 
[1, 0, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[3, 0, 4, 0, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 3, 0, 0, 1]  	15	6 
[2, 0, 0, 2, 1]  	16	6 
[0, 4, 2, 0, 1]  	20	4 
[3, 0, 3, 0, 1]  	21	6 
[0, 3, 2, 1, 1]  	22	3 
[0, 3, 1, 2, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 2, 1, 3, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	2 
[1, 0, 1, 1, 255]  	12	3 
[0, 5, 0, 0, 255]  	15	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 2 and 254.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[13911040914664066324 + 18174844242994242922*2^64 + 8827259133640809237*2^128 + 672188439*2^192,13356260554905877288 + 5761554899392846075*2^64 + 4552685040847236498*2^128 + 2871766481*2^192,3853887776818347360 + 17325040245133335838*2^64 + 6548478400437715086*2^128 + 908135425*2^192,5329937737578847608 + 13346771982419127238*2^64 + 14228832025747757386*2^128 + 840938325*2^192,15766710902183788984 + 10156999921703429261*2^64 + 12657882580553342591*2^128 + 757709680*2^192,5991336425420962376 + 15025882582478330918*2^64 + 11559299774293831551*2^128 + 4010138186*2^192,11593282635741298560 + 12391347272762272014*2^64 + 4728789180864516576*2^128 + 3288276961*2^192,2997625611172427648 + 15899059327471149757*2^64 + 14492206918183359708*2^128 + 3319490759*2^192;\
5342496144830589719 + 16470093438270739826*2^64 + 7829172874515260809*2^128 + 4126048182*2^192,7596004626288453986 + 7635024689516811340*2^64 + 2387822551386774954*2^128 + 3277277893*2^192,13624993363496855828 + 18277177127185363099*2^64 + 8239065418087588643*2^128 + 3869301992*2^192,9316065626359505682 + 2986555911422394165*2^64 + 9314037384258965838*2^128 + 3367593449*2^192,9844236719763758270 + 7661375717863220349*2^64 + 10749472545195878972*2^128 + 903104040*2^192,11950097850078448106 + 169915860225539130*2^64 + 5076949669828677240*2^128 + 368423316*2^192,11574317127223705500 + 7315007271891579762*2^64 + 1298118822031020878*2^128 + 1038974256*2^192,6472997753615045672 + 16225280304531079797*2^64 + 4706366183666930850*2^128 + 321557657*2^192;\
707058742280316831 + 5048242093780236772*2^64 + 986216914354446071*2^128 + 15575125*2^192,18324396039862450186 + 17544252189183810628*2^64 + 17489829084083943005*2^128 + 2664492130*2^192,2105427955839269484 + 8271466899861753688*2^64 + 16680825232437409060*2^128 + 4197018272*2^192,9746379257850196674 + 15325416647295816971*2^64 + 6327953806924585174*2^128 + 4157873356*2^192,13292169779350250838 + 16224301255372975252*2^64 + 11580749024644780511*2^128 + 1505285399*2^192,12399102016978081682 + 7714534187804769785*2^64 + 2753440612434757631*2^128 + 35484294*2^192,13197989036060827148 + 18328412540078732040*2^64 + 8008253991285934759*2^128 + 1218632317*2^192,11948111501770937144 + 11621231806029568393*2^64 + 8085449782470006577*2^128 + 1659707943*2^192;\
6805512557103604171 + 11691171254599953625*2^64 + 2818764778745657307*2^128 + 1668692753*2^192,6597359682014634114 + 8355163159452852155*2^64 + 14204831651608129016*2^128 + 2737280032*2^192,17524806926941007428 + 9568714474964586429*2^64 + 7772033158015449555*2^128 + 2916502119*2^192,453601387395210610 + 10889296523093520493*2^64 + 5116082923780927655*2^128 + 1551875876*2^192,7660589605911324782 + 592572380621193178*2^64 + 11523278527156017014*2^128 + 3135721106*2^192,8365574278670939786 + 12467336789497761126*2^64 + 15974190675958440040*2^128 + 2225190199*2^192,15158223506835631676 + 12987320662718875490*2^64 + 8172362991617071304*2^128 + 3642387664*2^192,17766816928027043544 + 9917752213418650742*2^64 + 18088857683404593006*2^128 + 563737868*2^192;\
3309753232878306641 + 1848114268175292202*2^64 + 14675218219508701589*2^128 + 3907017912*2^192,7314368695502476886 + 1672149196313880097*2^64 + 3875405825659307438*2^128 + 3318039073*2^192,11086732648649100056 + 9911823654828261381*2^64 + 10920178514198849917*2^128 + 2373822878*2^192,12099530703315527890 + 10881162179158880196*2^64 + 1656036254489550889*2^128 + 977719957*2^192,16072005702144640218 + 5519871252816138683*2^64 + 7703979548129857926*2^128 + 35754036*2^192,11516283309406478662 + 14933656670490229457*2^64 + 18421818806652141503*2^128 + 3337463411*2^192,13075801185583812364 + 16739177704534790737*2^64 + 3323776692517380367*2^128 + 478504969*2^192,9200613919348130544 + 13517387613195520869*2^64 + 12668679761211374529*2^128 + 2327214992*2^192;\
10503045569326825049 + 2089847378545107204*2^64 + 11138069292705261019*2^128 + 1685274278*2^192,10131014068342605654 + 6620216742194821909*2^64 + 1611835811104764728*2^128 + 3641998348*2^192,16856763365262669448 + 2776775308856568234*2^64 + 3994773159073187483*2^128 + 1060968012*2^192,4754515526871908722 + 14581552186723648909*2^64 + 4692832790718637178*2^128 + 348194072*2^192,5352372613580722714 + 14294943393298480201*2^64 + 13967863264919874235*2^128 + 4178696369*2^192,15171653696387133238 + 13465177550541947311*2^64 + 9246278934056050154*2^128 + 3955921877*2^192,13422903338018306636 + 11035295639417903280*2^64 + 16860613952054847842*2^128 + 3922315156*2^192,9309888813801555488 + 14258814030597373850*2^64 + 12471809574184216949*2^128 + 515064145*2^192;\
8231810201939300680 + 391138719833615230*2^64 + 12707530710664452819*2^128 + 447715295*2^192,3781864888099020392 + 8642764270390316094*2^64 + 11299316721369498731*2^128 + 2956288030*2^192,5923501984319723544 + 17255056584933947176*2^64 + 3507952235844028162*2^128 + 853710184*2^192,12262091800063287728 + 5812546583653242746*2^64 + 16718708072622514694*2^128 + 4162500546*2^192,7248997544259791568 + 5689804194149718452*2^64 + 5493818261288493794*2^128 + 3667326117*2^192,4347517711158497856 + 5103969899990951389*2^64 + 6226838846927150414*2^128 + 2433751733*2^192,1300246995908854400 + 116080373288953106*2^64 + 9718511961285035094*2^128 + 3772458947*2^192,13681742499304658560 + 16860632490455084137*2^64 + 2026112240881952585*2^128 + 2756079411*2^192;\
14991547444290349018 + 5088833567215533342*2^64 + 9739825252041358490*2^128 + 2118941609*2^192,16879520188207845340 + 14254482543569774149*2^64 + 799635018380255414*2^128 + 3508156319*2^192,8139189897931476744 + 134134412624262949*2^64 + 9176912944194005277*2^128 + 3851740460*2^192,17580315088151515788 + 17960029949723460365*2^64 + 4119658390107516338*2^128 + 3081856426*2^192,12883772935599063604 + 12571189314717232526*2^64 + 15921789944419291035*2^128 + 2899426026*2^192,5990111180361657500 + 660103360739944398*2^64 + 6435521578477195048*2^128 + 108901823*2^192,18081014999248917096 + 9379164015714056519*2^64 + 7418062059052424505*2^128 + 3407226965*2^192,16158657908477983520 + 4045905716606441713*2^64 + 107479506049912165*2^128 + 3630364661*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4131 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 - 4*x^5 + 16*x^3 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 2*x^2 - 4*x + 16, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 
Look at the ideal generated by: 
1*x^4 + 1*x^2*y^2 + 1*y^1*z^1*w^1
1*x^2*y^1*w^1 + 1*x^2*z^2 + 1*y^3*w^1 + 1*z^1*w^2
