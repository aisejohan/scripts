/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 39
[0, 2, 1, 0, 0]  	10	2 
[0, 2, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 1, 0, 2, 0]  	19	4 
[3, 1, 2, 0, 0]  	20	4 
[2, 0, 1, 2, 0]  	20	4 
[0, 0, 5, 0, 0]  	20	2  <--- 3
[3, 0, 3, 0, 0]  	21	6 
[2, 0, 0, 3, 0]  	21	5 
[2, 1, 2, 1, 0]  	22	3 
[2, 0, 4, 0, 0]  	22	3 
[2, 0, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 0, 0, 5, 0]  	28	1 
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 10, 0, 0, 0]  	30	2  <--- 2
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[2, 1, 1, 1, 1]  	18	6 
[1, 0, 3, 2, 1]  	25	2 
[1, 0, 2, 3, 1]  	26	2 
[1, 0, 1, 4, 1]  	27	3 
[1, 1, 2, 2, 2]  	24	4 
[2, 2, 0, 0, 255]  	12	3 
[2, 0, 0, 2, 255]  	16	3 
[2, 1, 2, 0, 255]  	17	3 
[2, 0, 3, 0, 255]  	18	2 
[0, 7, 0, 0, 255]  	21	3 
[1, 0, 4, 1, 255]  	24	3 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 3 and 254.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11472429735331794266 + 12505482720083444243*2^64 + 17038348327998692350*2^128 + 885555575*2^192,8539468913851472404 + 3342108462629905333*2^64 + 13028793388661499767*2^128 + 176040661*2^192,12645818426868545788 + 14302935237789772403*2^64 + 5131065863955081550*2^128 + 93398490*2^192,8206219730884653016 + 10512120585059338646*2^64 + 15046229788769867149*2^128 + 1278766111*2^192,11437016236152620820 + 13223619466701243198*2^64 + 10080380280680810403*2^128 + 2078867717*2^192,12356720222775060056 + 17544188144783012154*2^64 + 5625113357743864278*2^128 + 96672949*2^192,16002238225518760628 + 9529949983671666385*2^64 + 14034066890863352148*2^128 + 1280125988*2^192,9920486011132402480 + 11472942594104785817*2^64 + 3948110839617393360*2^128 + 278261499*2^192;\
9645434777141240899 + 5343363822875936406*2^64 + 8062637548872235859*2^128 + 1027755698*2^192,10639621265074504214 + 15265024883272909417*2^64 + 16375563334168437462*2^128 + 485177107*2^192,7097564742334144906 + 12156779249918189839*2^64 + 2111406452271911953*2^128 + 939325974*2^192,8887213242375444924 + 7779687677261703148*2^64 + 12605842405163453959*2^128 + 260536715*2^192,1206756154821962710 + 17578228580476651089*2^64 + 7995378507151984586*2^128 + 867219155*2^192,16615684071841948840 + 7121297922304218741*2^64 + 14605636989471102770*2^128 + 523104919*2^192,15642960350874758594 + 13129024891451141705*2^64 + 1148255780296596352*2^128 + 790055443*2^192,11152782202648794088 + 17932388727064775479*2^64 + 5456681311589432492*2^128 + 913411020*2^192;\
4792085232684603058 + 619500924571123300*2^64 + 12747217034993402541*2^128 + 910332761*2^192,15137160236998327080 + 11220696471282360632*2^64 + 6482897158898768155*2^128 + 1906620172*2^192,13818674787060018336 + 2394499309688972216*2^64 + 15001727042756942178*2^128 + 392586992*2^192,12136769457910675160 + 556020551826401201*2^64 + 317388208945345569*2^128 + 156566677*2^192,11549254870464200452 + 12299377360618541654*2^64 + 11371554067774342168*2^128 + 1756960112*2^192,10173373200877928828 + 11555655944956310238*2^64 + 2764896666565358113*2^128 + 146808669*2^192,5150301375487871728 + 16740131529495946262*2^64 + 3462872863317728649*2^128 + 1705025800*2^192,530160458206513696 + 5653153576215877547*2^64 + 11790618611239817444*2^128 + 1796952560*2^192;\
3515054592997655838 + 14901331010961607228*2^64 + 8813151490656635717*2^128 + 1025641855*2^192,1853874730911092844 + 4621377033494974291*2^64 + 17193667685748978665*2^128 + 1339345991*2^192,5862238290060593932 + 18334799913440177641*2^64 + 5259908984348746673*2^128 + 979051182*2^192,9661487315449168576 + 11896899515732437281*2^64 + 17195092315906831142*2^128 + 1398938441*2^192,606896254389648444 + 7502984491387062633*2^64 + 14902903328070745531*2^128 + 296878889*2^192,1689073665058379568 + 6512113851603140445*2^64 + 15281172773603359662*2^128 + 1923935223*2^192,17974003832356810132 + 9142314896864137201*2^64 + 17526950190553515104*2^128 + 1649673606*2^192,12731959899031883304 + 10504306587354661130*2^64 + 7873624841599024264*2^128 + 1615161029*2^192;\
13981884620898370208 + 6206614109942582079*2^64 + 7659561355073894564*2^128 + 1282818048*2^192,15182150377788459544 + 11580587061316889503*2^64 + 12237557390634942760*2^128 + 1662812661*2^192,14630899622265814692 + 17943812963594511039*2^64 + 5701614356664817364*2^128 + 1909463867*2^192,2382672597874442044 + 11780551670581712205*2^64 + 8712637811222025517*2^128 + 233344267*2^192,17870658443808227812 + 12558403549506741665*2^64 + 14352168406028772249*2^128 + 1911819023*2^192,7006329817681773144 + 12564483733970170917*2^64 + 4349025267892366687*2^128 + 293561285*2^192,17120918818815746308 + 13087537957865153610*2^64 + 2431635539540034495*2^128 + 1744361464*2^192,3699897066846871040 + 14383924294276384215*2^64 + 3567928319653981021*2^128 + 197982313*2^192;\
9493559637705902233 + 12296210055120860770*2^64 + 3230771204505527784*2^128 + 1367035040*2^192,12324681070486497450 + 13456394560479868878*2^64 + 4101368354535889692*2^128 + 579608811*2^192,8909672347134452994 + 798773340035377937*2^64 + 11604368391548194949*2^128 + 489008394*2^192,14046024697146516964 + 6936546801825868569*2^64 + 9971257726715056264*2^128 + 979396061*2^192,7876820107778244398 + 269952103968651276*2^64 + 18150687670928665031*2^128 + 67378653*2^192,18174803315733354816 + 14589477984956660673*2^64 + 12129798539345095532*2^128 + 1048477226*2^192,636251842951408110 + 14522889081902566884*2^64 + 5114755059415309652*2^128 + 1826138584*2^192,5611481874254115736 + 7222390913681567207*2^64 + 7611059077104479901*2^128 + 9691950*2^192;\
18308647895461229500 + 8577241248980435214*2^64 + 11367301180106356462*2^128 + 262097620*2^192,6146990304435893472 + 7418220373620137459*2^64 + 7166235496654602195*2^128 + 663633479*2^192,6716046213785655160 + 7258217855780629670*2^64 + 4108081607520024306*2^128 + 1515129043*2^192,12044234748436594500 + 14245096284379326309*2^64 + 58037514951948223*2^128 + 1663558568*2^192,6509570094989224076 + 10802690618066858711*2^64 + 13845961855163786200*2^128 + 890997072*2^192,14386272905241084512 + 4938005415970354351*2^64 + 12237025037685255956*2^128 + 691128972*2^192,7891478313156151760 + 13477858259674137246*2^64 + 7724147155735370154*2^128 + 278274857*2^192,2068928354026149304 + 1016636294016707881*2^64 + 11449523750253930828*2^128 + 1612751639*2^192;\
14434381631797192928 + 8208855184787319627*2^64 + 4716414939670750366*2^128 + 209485874*2^192,6778794391525056736 + 3537054504994928567*2^64 + 1888546980456055194*2^128 + 537311977*2^192,4858046314471867208 + 3874069711673547540*2^64 + 6086048749199097769*2^128 + 1037228180*2^192,13548687201202800120 + 9097865855530246949*2^64 + 3261399996604983653*2^128 + 2080795252*2^192,1128791668315702468 + 12379079328901113012*2^64 + 16021085167669179383*2^128 + 1265162858*2^192,12790036953970900096 + 17147609080593640782*2^64 + 14345896566820362907*2^128 + 21771897*2^192,6587802249000407248 + 1321706625868255289*2^64 + 2035101903550149966*2^128 + 408779570*2^192,4408621890261343288 + 18305823248627115843*2^64 + 8794589586022834741*2^128 + 1194134691*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4149 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 34
