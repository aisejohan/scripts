/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	4 
[1, 0, 0, 4, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	5 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 2, 2, 1]  	21	6 
[0, 2, 1, 3, 1]  	25	3 
[0, 2, 0, 4, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[0, 0, 5, 1, 2]  	25	2 
[0, 3, 1, 2, 4]  	23	3 
[0, 0, 2, 3, 253]  	23	1 
[0, 0, 0, 5, 253]  	25	1 
[0, 5, 0, 0, 254]  	15	2 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[1, 0, 2, 1, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	2 
------
The gap is between 5 and 252.
Lengths: 1 1 6 8 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4553371254255609448 + 4712950762097160548*2^64 + 8556835740237576959*2^128 + 31704471283*2^192,16329275021655991664 + 9293146240399238223*2^64 + 8917643196564517329*2^128 + 21206833096*2^192,1107144064588685488 + 122967238504309887*2^64 + 838423551332895127*2^128 + 2270368392*2^192,18288379006457531472 + 16375738828567032757*2^64 + 13044036396669908638*2^128 + 32355214989*2^192,12281725510406593472 + 14694208806833036297*2^64 + 9785448344336326621*2^128 + 24770960198*2^192,5412751607189976640 + 11848419650438492733*2^64 + 3302330941870176199*2^128 + 17089022599*2^192,17488899764199302608 + 12073975579398529296*2^64 + 11205707495992788232*2^128 + 20456206596*2^192,4724051814554703008 + 8827230421337876966*2^64 + 15301417861390033844*2^128 + 25343345765*2^192;\
1003395516979606384 + 16460935840452285752*2^64 + 9964748510418986882*2^128 + 31610928535*2^192,10326508794673535776 + 8247994249177529387*2^64 + 15177901433893510241*2^128 + 20161593604*2^192,6238511603984423968 + 18441304694462394136*2^64 + 10382702975825329982*2^128 + 29085312975*2^192,5033153586450119872 + 2979905022708825960*2^64 + 13546961474403783750*2^128 + 32638763424*2^192,6286869202417159936 + 5653721544562458688*2^64 + 15255609932258055745*2^128 + 33332664124*2^192,17704442085789943552 + 13625948180909703403*2^64 + 768757365080840778*2^128 + 11983090309*2^192,11279882272465707712 + 11494759122485584283*2^64 + 14051532502083690123*2^128 + 1594742406*2^192,13210956243409196672 + 17615876830412856824*2^64 + 4945560742025720295*2^128 + 33521102714*2^192;\
3648208855181587236 + 3136685351789480244*2^64 + 9638000763915513818*2^128 + 1189811878*2^192,5559812804042657496 + 5429674310366542481*2^64 + 16592458349371752007*2^128 + 26722105445*2^192,2659566206917478264 + 11274125304886747932*2^64 + 8179171708696851390*2^128 + 22223662669*2^192,18059092143977582056 + 15357685851908844680*2^64 + 2163758245705792958*2^128 + 4604332455*2^192,8760146426630618400 + 14559886018338508357*2^64 + 16298123942745789296*2^128 + 5391538236*2^192,8293976506384078816 + 15397228192822155114*2^64 + 3517062522984282928*2^128 + 25313346783*2^192,9997843717697049128 + 7394723329779460552*2^64 + 9222144576523705077*2^128 + 25354189010*2^192,2125833663994803664 + 12657346522587158934*2^64 + 1142910937396825925*2^128 + 20852088577*2^192;\
0 + 0*2^64 + 0*2^128 + 5905580032*2^192,0 + 0*2^64 + 0*2^128 + 5905580032*2^192,0 + 0*2^64 + 0*2^128 + 13958643712*2^192,8218632813834928192 + 5007007353285524196*2^64 + 9875111657996921714*2^128 + 1441375990*2^192,0 + 0*2^64 + 0*2^128 + 16642998272*2^192,0 + 0*2^64 + 0*2^128 + 13690208256*2^192,0 + 0*2^64 + 0*2^128 + 2147483648*2^192,0 + 0*2^64 + 0*2^128 + 2415919104*2^192;\
2342321418808866215 + 3849659030645984945*2^64 + 7024639490066021678*2^128 + 5902859116*2^192,7026173044849827514 + 818966900541636423*2^64 + 5478542288164744621*2^128 + 14555227335*2^192,13459887538558422386 + 12000683388470269820*2^64 + 16060244283560808390*2^128 + 6543448405*2^192,8570506957587494542 + 4759517806433835243*2^64 + 2617806233789074150*2^128 + 1483081199*2^192,14261999070010345656 + 9988651039299828352*2^64 + 1822771698464953317*2^128 + 6373369161*2^192,17677327321515770184 + 2624006979560336368*2^64 + 2506352902438154292*2^128 + 6351995429*2^192,10454906828405348638 + 12460494555879960594*2^64 + 10211621131350978446*2^128 + 12852925016*2^192,10028278948770759324 + 16947149027476764291*2^64 + 14719398346323866640*2^128 + 1173706605*2^192;\
3353866062191133567 + 3858305315564160012*2^64 + 17368392399384729107*2^128 + 12416155470*2^192,8167282032689215434 + 9708915698518459009*2^64 + 10043458530805274806*2^128 + 33323887237*2^192,14740115758198060226 + 9768936330658854909*2^64 + 8402014250986720105*2^128 + 13321185210*2^192,3887351273370516094 + 6639294886561970031*2^64 + 4788680483936170354*2^128 + 5229925501*2^192,16931787326238126200 + 9353479210922331835*2^64 + 6772780466665997286*2^128 + 33796886407*2^192,5625505996928249224 + 4711687937029868293*2^64 + 7876874747954378356*2^128 + 32650079920*2^192,13024148336130505486 + 11724366500943924492*2^64 + 11547895187601846679*2^128 + 12217991257*2^192,13565705355278444924 + 16771155444507553878*2^64 + 8665581597699882168*2^128 + 5587208685*2^192;\
1962290180523565356 + 10638748984623970371*2^64 + 7458465724336657987*2^128 + 33676329155*2^192,15621794876537224712 + 11247851813927308741*2^64 + 10580024302710307118*2^128 + 9508146057*2^192,13690502182807520744 + 13400098198667245314*2^64 + 13335688755600053474*2^128 + 21465957079*2^192,15218393342120793368 + 3408521390577215435*2^64 + 6522182217812146684*2^128 + 12030667208*2^192,16909385766615745312 + 10447746399304241106*2^64 + 16330353015605387678*2^128 + 10248617637*2^192,8912830936162275552 + 11915008959145335792*2^64 + 2710795676628218937*2^128 + 222232293*2^192,1407133725835056344 + 17966634449475479279*2^64 + 6476810361908655584*2^128 + 29453143998*2^192,14449274614250789808 + 10019568214925977076*2^64 + 8797590272851847714*2^128 + 6985747561*2^192;\
13802225058880887266 + 11962349415781455548*2^64 + 12600953710438760085*2^128 + 6887649610*2^192,13363712070664373612 + 8190842310558258747*2^64 + 11374234146362286818*2^128 + 12390940755*2^192,13474567354978578300 + 3040187401376925284*2^64 + 16947582616036461855*2^128 + 11431567030*2^192,5648128754221997220 + 11326411614980297851*2^64 + 17336856982541146077*2^128 + 2339327469*2^192,3851921215811728656 + 9608244994478259518*2^64 + 17452223548581733761*2^128 + 5102638070*2^192,5367100281433661680 + 7107712564978571184*2^64 + 16225382733977474907*2^128 + 18558808834*2^192,18438357720197762692 + 14639668820519542358*2^64 + 11301696420898204984*2^128 + 8682956791*2^192,4949675719592389576 + 6010012232927107146*2^64 + 2738780663136334303*2^128 + 16037360914*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 4204 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 25
The valuation of subst(g,x,A) is: 20

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
