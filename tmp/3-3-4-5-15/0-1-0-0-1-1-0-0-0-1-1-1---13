/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 60
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	3 
[0, 1, 3, 0, 0]  	15	2 
[0, 5, 1, 0, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	4 
[1, 2, 1, 2, 0]  	23	4 
[1, 0, 5, 0, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[1, 3, 2, 1, 0]  	25	3 
[1, 1, 1, 3, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	3 
[0, 2, 0, 4, 0]  	26	2 
[1, 3, 0, 3, 0]  	27	3 
[0, 4, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 0, 2, 1]  	19	6 
[1, 3, 2, 0, 1]  	20	6 
[1, 1, 1, 2, 1]  	20	5 
[1, 0, 3, 1, 1]  	20	4 
[0, 4, 2, 0, 1]  	20	4 
[1, 3, 1, 1, 1]  	21	5 
[0, 7, 0, 0, 1]  	21	5 
[1, 2, 2, 1, 1]  	22	5 
[1, 0, 1, 3, 1]  	22	4 
[0, 4, 0, 2, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	3 
[1, 3, 1, 0, 2]  	16	5 
[1, 1, 0, 2, 2]  	16	6 
[1, 3, 0, 1, 2]  	17	5 
[1, 2, 2, 0, 2]  	17	6 
[1, 1, 2, 1, 3]  	19	5 
[1, 0, 4, 0, 253]  	19	4 
[0, 2, 1, 2, 253]  	20	3 
[0, 3, 2, 1, 253]  	22	3 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[0, 0, 4, 2, 254]  	26	1 
[1, 0, 1, 1, 255]  	12	2 
[0, 4, 0, 0, 255]  	12	1 
[0, 1, 2, 1, 255]  	16	2 
[0, 1, 1, 2, 255]  	17	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7837458684293277420 + 11608438730805645040*2^64 + 4480698065419769962*2^128 + 729264944*2^192,16645431711213407496 + 15924077647989644082*2^64 + 12017783654107506198*2^128 + 1828211541*2^192,5583668283132346836 + 2756302428195042145*2^64 + 8824391640446484770*2^128 + 1230211192*2^192,13324528765522365088 + 7103882960214545202*2^64 + 8029661797609438030*2^128 + 1019525771*2^192,10095795401071405816 + 17259473258192047955*2^64 + 6930415353418524930*2^128 + 1666794328*2^192,18063760979433096344 + 5816585589006577073*2^64 + 15776936844645159012*2^128 + 1536530676*2^192,12169051115685390316 + 13596124246759010645*2^64 + 2328372631563065207*2^128 + 359201928*2^192,11612102898049699176 + 9114762533592673873*2^64 + 12224804437541113644*2^128 + 1704894197*2^192;\
11279375757411512374 + 7084668605317511343*2^64 + 16566937069387758696*2^128 + 488774625*2^192,4398109026154115368 + 10404545027440106730*2^64 + 15925077787407732456*2^128 + 1036560050*2^192,16272489996835360542 + 8097722216368602807*2^64 + 12540658469420911899*2^128 + 970924097*2^192,902953437560276780 + 15587307050522800808*2^64 + 16715013500529649796*2^128 + 450368224*2^192,7756250919559280884 + 15913868467194002388*2^64 + 625460365467570348*2^128 + 932297322*2^192,2649677128956568652 + 7401359914384163477*2^64 + 500341189357002205*2^128 + 888492798*2^192,13006141096961472010 + 17548726458433619068*2^64 + 12625060329489956319*2^128 + 219649490*2^192,2683184093514314012 + 12101086411716234558*2^64 + 11262345081524691490*2^128 + 591412074*2^192;\
3647481841793442780 + 15693266705571097705*2^64 + 13572158941062843067*2^128 + 693420*2^192,10908940835545304536 + 16906078764536818044*2^64 + 10814789546606818706*2^128 + 721300356*2^192,9857534063924348640 + 15867517730840200753*2^64 + 6620131011965850634*2^128 + 289611308*2^192,10827631998996350048 + 12358620725395991225*2^64 + 5769096474858939045*2^128 + 525357653*2^192,12817607588133760560 + 5617976214197483599*2^64 + 16047907988549919801*2^128 + 25020486*2^192,2793868334883847956 + 2241892383638093856*2^64 + 812565886506210078*2^128 + 723065605*2^192,7636871286456308238 + 2945553130801545203*2^64 + 3644528149842467199*2^128 + 432198394*2^192,18155837925400479320 + 6738729327804587924*2^64 + 15149511177268098582*2^128 + 239102463*2^192;\
0 + 0*2^64 + 0*2^128 + 167772160*2^192,0 + 0*2^64 + 0*2^128 + 251658240*2^192,0 + 0*2^64 + 0*2^128 + 603979776*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 828283503*2^192,0 + 0*2^64 + 0*2^128 + 452984832*2^192,0 + 0*2^64 + 0*2^128 + 603979776*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 989855744*2^192;\
6623728942121922240 + 1262928767133147746*2^64 + 3576630357915286508*2^128 + 101027939*2^192,7600383784301443388 + 2510937906913910952*2^64 + 14246746997477794476*2^128 + 595638548*2^192,6239946401961429558 + 8728804349027291756*2^64 + 13842347962403322169*2^128 + 704375610*2^192,12419057393885306864 + 12590602307100653478*2^64 + 4959391033268901661*2^128 + 467340261*2^192,18381420616870546204 + 11555832976690239094*2^64 + 17360808214039278069*2^128 + 783690369*2^192,10408272079374269214 + 5385627842814616999*2^64 + 13159257629844117718*2^128 + 260463132*2^192,6505860556533989477 + 5404078736651360466*2^64 + 11200695625986775862*2^128 + 268658047*2^192,4957516740982244236 + 15746921609189413202*2^64 + 10920556315729416669*2^128 + 94029559*2^192;\
3306543880909047300 + 15969241861600014150*2^64 + 13124416690009001210*2^128 + 1840016904*2^192,9869035679923276972 + 1306499261376355488*2^64 + 1712753797175704679*2^128 + 399829491*2^192,945266674486000114 + 15583924827152737065*2^64 + 356236173116859546*2^128 + 229683372*2^192,7005827122912949004 + 4498855270333267341*2^64 + 16915134072801147035*2^128 + 1663314531*2^192,11673687574384478236 + 2328636538166961438*2^64 + 13912862607714261065*2^128 + 20106855*2^192,10684604719133337580 + 13834136120075794499*2^64 + 9246400529608990630*2^128 + 450371558*2^192,9124350322862076938 + 10061587286070254025*2^64 + 3245967385944968902*2^128 + 803945463*2^192,16954852342087642876 + 16812062172227219653*2^64 + 2642317337417361402*2^128 + 1675429104*2^192;\
1436955802617625774 + 15518527998111110412*2^64 + 11789443420786872684*2^128 + 153026473*2^192,18184921099333382240 + 1371330132612872486*2^64 + 693006808300813367*2^128 + 1573420681*2^192,11025938305463086668 + 17975365698114924799*2^64 + 11843492795667007880*2^128 + 972033370*2^192,779411739255474468 + 13007301355218421573*2^64 + 16905748639905044679*2^128 + 35106024*2^192,1689179805343659128 + 3781507371173341416*2^64 + 4800299970583946089*2^128 + 2036711093*2^192,6390814980042495228 + 14495358425176743794*2^64 + 15114911971907243789*2^128 + 401767075*2^192,12139614484488746336 + 1136261030740439514*2^64 + 15286636806836879530*2^128 + 811453437*2^192,7954372140259330064 + 12624339019399089956*2^64 + 7911724090751520494*2^128 + 1413820076*2^192;\
4557582067123566624 + 5183232654799636642*2^64 + 10674313738117261804*2^128 + 1760334958*2^192,18018843849519808512 + 12934472956918912665*2^64 + 9363704720721908157*2^128 + 253754103*2^192,12790980631425195808 + 14422226321071488720*2^64 + 15327293913327378697*2^128 + 233330801*2^192,5430058276294590688 + 8314106112661812071*2^64 + 18262612677913275044*2^128 + 750505491*2^192,253322856947366768 + 9050617908178823251*2^64 + 16000403990358124929*2^128 + 435591853*2^192,16567271895005795832 + 12979092092292431440*2^64 + 7550712249733539210*2^128 + 1207866101*2^192,14535414182589949356 + 2280513629472590689*2^64 + 6155606773807110328*2^128 + 2118280620*2^192,8173842193285232800 + 17346275992821035464*2^64 + 5122500532543568981*2^128 + 837300205*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4057 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + 4*x^5 - 16*x^3 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 + 4*x^4 + 4*x^3 + 16*x^2 + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
