/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	5 
[1, 0, 0, 3, 0]  	18	2 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	4 
[1, 1, 2, 1, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[1, 1, 1, 2, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	4 
[0, 0, 5, 0, 0]  	20	2  <--- 3
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 6, 1, 0, 0]  	22	3 
[0, 4, 0, 2, 0]  	22	3 
[0, 2, 4, 0, 0]  	22	3 
[0, 6, 0, 1, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	5 
[1, 5, 0, 0, 1]  	18	6 
[0, 5, 1, 0, 1]  	19	4 
[3, 1, 0, 0, 2]  	12	6 
[0, 3, 0, 3, 2]  	24	4 
[1, 1, 0, 2, 3]  	16	5 
[0, 5, 0, 1, 3]  	20	4 
[0, 1, 3, 2, 5]  	25	2 
[0, 1, 2, 3, 5]  	26	2 
[0, 0, 0, 5, 251]  	25	1 
[0, 0, 4, 2, 251]  	26	1 
[1, 0, 2, 1, 253]  	16	4 
[0, 2, 1, 2, 253]  	20	3 
[2, 2, 0, 0, 254]  	12	4 
[0, 2, 0, 2, 255]  	16	2 
[1, 0, 1, 2, 255]  	17	3 
[0, 6, 0, 0, 255]  	18	3 
------
The gap is between 6 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5171700199088157814 + 17966989461438629579*2^64 + 16804680073428082785*2^128 + 9500770727*2^192,8502800066332266740 + 10305514720129930211*2^64 + 2468254756636424058*2^128 + 4622835680*2^192,16553986324230385260 + 16574705968489910590*2^64 + 682282707138894789*2^128 + 33430626975*2^192,299727639520921252 + 6165437225096805115*2^64 + 16646094328884068965*2^128 + 20466189089*2^192,5146734761154432704 + 2646035215627539229*2^64 + 12271081080158255283*2^128 + 16566956615*2^192,9607103692270906784 + 8771695824906405974*2^64 + 10638813391213961858*2^128 + 2065347504*2^192,1378858078040755108 + 1044235078436920262*2^64 + 8915897169613916706*2^128 + 8598730121*2^192,11304422027240600480 + 9149569693949185856*2^64 + 689679364904056728*2^128 + 16756264685*2^192;\
18208602045265380881 + 8221690320753755980*2^64 + 1387462800698130231*2^128 + 27606502043*2^192,10210461905634993710 + 3866473168217577134*2^64 + 16855484579970971723*2^128 + 32743811927*2^192,16465279577350859874 + 16109140435676824004*2^64 + 106361857962857717*2^128 + 28981578425*2^192,8510714546558911030 + 3048364533761786166*2^64 + 18857326772361371*2^128 + 5763228898*2^192,2367010974132238240 + 2191644879421767581*2^64 + 14603313036555086563*2^128 + 11153658329*2^192,5138566166070918320 + 5520477523555417184*2^64 + 3441744824091508664*2^128 + 16941623902*2^192,8945625422121818358 + 18133239522765070109*2^64 + 16437361327593544992*2^128 + 33533797938*2^192,5891215995278343280 + 12619886611348675074*2^64 + 8816720502250713481*2^128 + 16929312153*2^192;\
1875460788415731014 + 6621549583654330122*2^64 + 1522764897530678549*2^128 + 9196765572*2^192,1322225013994538196 + 10862193445348654022*2^64 + 2902393889471576632*2^128 + 29042227300*2^192,8377063988885398924 + 6208932503212989753*2^64 + 15498881750780598339*2^128 + 19090560696*2^192,8085645077432049156 + 18404437632820306991*2^64 + 2954303945632793442*2^128 + 1618617789*2^192,13800945632702202176 + 9599770808130020961*2^64 + 17726494818258780665*2^128 + 668251624*2^192,5778173108991812000 + 7609716099000952990*2^64 + 12146038990103595638*2^128 + 29721782888*2^192,15330257757307486596 + 17672562765097179546*2^64 + 13840338292981591948*2^128 + 13488137511*2^192,18063528540801253152 + 1622076736426333288*2^64 + 11237883031378654298*2^128 + 23591594845*2^192;\
15065713169613287246 + 5472829266660259210*2^64 + 14601597513428305948*2^128 + 10234343782*2^192,2436789189150513988 + 8851017496408027961*2^64 + 14605623619333329120*2^128 + 14919508277*2^192,10604604052769818332 + 9363820869441144946*2^64 + 3500709484409474602*2^128 + 23604616530*2^192,104410679720609652 + 14624983994900258689*2^64 + 1224160888800619252*2^128 + 4270270630*2^192,18426869682567705408 + 10255871839845181504*2^64 + 2482664863439688700*2^128 + 12010324112*2^192,13918026112548604640 + 4023247444870560496*2^64 + 7480329358582847030*2^128 + 12008777918*2^192,11344817216684643572 + 13110983466458115672*2^64 + 13861233067819770799*2^128 + 15441910728*2^192,12548632356791646624 + 9117224837667087345*2^64 + 12858673350338915283*2^128 + 33317190448*2^192;\
6457475730816651301 + 13562748160120098365*2^64 + 2912161545075738616*2^128 + 5103597760*2^192,13024089029821594182 + 13479229850359974636*2^64 + 2667471728052807954*2^128 + 2500792242*2^192,16582959372819591050 + 16886849688019840593*2^64 + 10302648565007597134*2^128 + 14628065823*2^192,7868189658932818798 + 14991351226087646393*2^64 + 1096229810496044925*2^128 + 3023974635*2^192,11292679384821042848 + 13401331873118481395*2^64 + 2327778120893849276*2^128 + 3930271868*2^192,3189655424276719664 + 5695636939781510770*2^64 + 9420020467561091983*2^128 + 14690553252*2^192,17858433851299652014 + 15693106641758044582*2^64 + 2611193488602053960*2^128 + 3872968976*2^192,12309409015788805552 + 17902128218374868983*2^64 + 16132474251058138061*2^128 + 2085965843*2^192;\
9339758998771322722 + 11066223650930293288*2^64 + 5081946345911371964*2^128 + 24445904839*2^192,16097183347752204060 + 12608871647752028629*2^64 + 9770150201643426740*2^128 + 25417870849*2^192,8014484847029504516 + 10623878142531187342*2^64 + 17051315014333516735*2^128 + 23470276914*2^192,11872139194408702828 + 14771824164782830395*2^64 + 11298549376556430913*2^128 + 13547728344*2^192,6690947303552493056 + 1112144412191956341*2^64 + 15752531577159471771*2^128 + 13626854497*2^192,7396147936322290080 + 11964254488923187587*2^64 + 11483690426170053297*2^128 + 33236175112*2^192,4091508674813220332 + 14175541915757096847*2^64 + 11467175515234827566*2^128 + 22585552569*2^192,6880330345097447392 + 16016920153863782290*2^64 + 13067062511171191987*2^128 + 8417057128*2^192;\
11944553550654024442 + 16202955870434009878*2^64 + 10766032009908975824*2^128 + 27805994749*2^192,9259159242107951020 + 1769791562424314983*2^64 + 17922951313215800637*2^128 + 19027558331*2^192,10647977139980605364 + 11758476241938197712*2^64 + 7273584880449404782*2^128 + 463055745*2^192,15502490670150409404 + 16782906333037271678*2^64 + 14909666878686504406*2^128 + 23384625655*2^192,14540078050530484928 + 12862150554189730458*2^64 + 4940347462797921493*2^128 + 23019207391*2^192,10701117677760518368 + 16334834524954176437*2^64 + 1352489905180518022*2^128 + 30771065889*2^192,16699412762402560380 + 10555551585150191944*2^64 + 8061840665027271585*2^128 + 1018543278*2^192,1629788400231735648 + 6575580901723816569*2^64 + 11331068186659516265*2^128 + 24292636088*2^192;\
15247074014212767090 + 14489784887146268063*2^64 + 7230654815304680171*2^128 + 27771996344*2^192,12175077148360557756 + 4396707837770170507*2^64 + 5510108665686925339*2^128 + 33190727307*2^192,10061553881363086948 + 10579595045754096735*2^64 + 15567316027976017229*2^128 + 25495142863*2^192,4355062356282367884 + 12952002379112585247*2^64 + 2248802771369757706*2^128 + 1219172721*2^192,4691356796119580096 + 8690722489865398786*2^64 + 7186526867923044922*2^128 + 17667746636*2^192,2226209966236938464 + 4328314226937449618*2^64 + 16717932006320253565*2^128 + 5887437233*2^192,12370387168842268748 + 16858026610441271711*2^64 + 10854976512537709119*2^128 + 483871137*2^192,8305731579683409632 + 424434014200701932*2^64 + 3567098116628568273*2^128 + 22718325845*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 5276 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 - 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 - 2*x^4 - 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26
