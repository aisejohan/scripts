/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 55
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	3 
[0, 1, 3, 0, 0]  	15	2 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	3 
[1, 1, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	3 
[1, 0, 5, 0, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	4 
[0, 2, 0, 4, 0]  	26	3 
[1, 3, 0, 3, 0]  	27	3 
[0, 4, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 3, 1, 1]  	20	5 
[0, 4, 2, 0, 1]  	20	4 
[1, 3, 1, 1, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[0, 4, 0, 2, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	3 
[1, 3, 1, 0, 2]  	16	4 
[1, 1, 0, 2, 2]  	16	3 
[1, 3, 0, 1, 2]  	17	4 
[1, 2, 2, 0, 2]  	17	3 
[1, 0, 2, 2, 5]  	21	6 
[0, 1, 2, 3, 6]  	26	2 
[0, 0, 4, 2, 249]  	26	1 
[0, 7, 0, 0, 251]  	21	4 
[0, 2, 1, 2, 253]  	20	3 
[0, 3, 2, 1, 253]  	22	2 
[0, 4, 1, 0, 254]  	16	3 
[0, 4, 0, 1, 254]  	17	3 
[1, 0, 1, 1, 255]  	12	2 
[0, 4, 0, 0, 255]  	12	1 
[0, 1, 2, 1, 255]  	16	2 
[0, 1, 1, 2, 255]  	17	2 
[1, 0, 4, 0, 255]  	19	3 
[0, 0, 5, 0, 255]  	20	2 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 7 and 248.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[201760027105750376 + 3488496143318659910*2^64 + 18086189339996106796*2^128 + 259758792*2^192,5486572629923999608 + 9940620266982361030*2^64 + 16829508390357619837*2^128 + 1795487540*2^192,15557017182903765708 + 14529418964441676046*2^64 + 10996640364633790103*2^128 + 1618803262*2^192,11621832426740919932 + 16502584484902283453*2^64 + 11357845872125400834*2^128 + 1789470962*2^192,16208169887997669128 + 8233981309395310024*2^64 + 15237387605340372666*2^128 + 1910989384*2^192,15276068627263518200 + 8090239419396706105*2^64 + 8162921848065624884*2^128 + 8681252*2^192,15751818898547366228 + 4139484995472044613*2^64 + 4583128583145279282*2^128 + 582613717*2^192,9435041443195764288 + 9419350126994898137*2^64 + 7055728192991138471*2^128 + 131026951*2^192;\
18417980951746903238 + 3018193711183120277*2^64 + 7465549410076351109*2^128 + 476901657*2^192,17835259605483280936 + 2642166422556821144*2^64 + 5530134608503651583*2^128 + 368658709*2^192,17570891962108526734 + 14636498523733643649*2^64 + 14014058388913926064*2^128 + 644021760*2^192,9831252188465338674 + 6892616398843343632*2^64 + 6005446192125523086*2^128 + 792867553*2^192,15222276972900166372 + 13992096958292945943*2^64 + 643521036497345054*2^128 + 299915353*2^192,6687306877496805432 + 2966073546225178121*2^64 + 15055128965777507623*2^128 + 911373655*2^192,14854168596131953390 + 17757218341679857072*2^64 + 15988954296834154703*2^128 + 303389220*2^192,14419392530824835280 + 5500131507422729979*2^64 + 13142379119880425624*2^128 + 920909450*2^192;\
426973898616605556 + 10864290054654683228*2^64 + 3991244542872835753*2^128 + 759240592*2^192,11190523170079130868 + 10403321981291377874*2^64 + 14615578380571017139*2^128 + 87050113*2^192,2207785693709020112 + 10661270871019521668*2^64 + 3375819342874667913*2^128 + 541050484*2^192,4520095870621693242 + 7777664301977273903*2^64 + 12154512218403798857*2^128 + 1992334378*2^192,18137620876424141088 + 14989053881201212726*2^64 + 2998661347936468802*2^128 + 244499867*2^192,5710618179841669608 + 4461477379144380144*2^64 + 18009938170942164575*2^128 + 18698510*2^192,10870511367224236566 + 6759508133539480095*2^64 + 18176160469717268041*2^128 + 186847850*2^192,12982866516162407856 + 7478719832095325073*2^64 + 7899367518915582311*2^128 + 215757959*2^192;\
0 + 0*2^64 + 0*2^128 + 771751936*2^192,0 + 0*2^64 + 0*2^128 + 352321536*2^192,0 + 0*2^64 + 0*2^128 + 905969664*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 22977135*2^192,0 + 0*2^64 + 0*2^128 + 385875968*2^192,0 + 0*2^64 + 0*2^128 + 369098752*2^192,0 + 0*2^64 + 0*2^128 + 1056964608*2^192,0 + 0*2^64 + 0*2^128 + 1006632960*2^192;\
7859689742821000422 + 7671856729324023684*2^64 + 11409959671307266989*2^128 + 641098919*2^192,18427285913275552962 + 13837730348149937624*2^64 + 15838536776236193957*2^128 + 332451083*2^192,10436400824791278132 + 3226041586645855403*2^64 + 16720290729034211502*2^128 + 25659785*2^192,12386463448575292921 + 1325213196159207647*2^64 + 9498345815808384681*2^128 + 201253333*2^192,6600021090671739848 + 10446039798811933645*2^64 + 8488587273834102641*2^128 + 1054979886*2^192,4310772500718774324 + 3355154964932178895*2^64 + 779069229559683495*2^128 + 1186494399*2^192,9416865639372147459 + 9623564184046524940*2^64 + 2592998548080649294*2^128 + 710654391*2^192,16966313509135750508 + 14150597661141661312*2^64 + 4031611976426102980*2^128 + 129920935*2^192;\
2147880582778368148 + 3020794206921559017*2^64 + 3711128660292226994*2^128 + 379375123*2^192,965183508671684100 + 16805961882093096030*2^64 + 12916615807856478209*2^128 + 402013984*2^192,8702883232372670522 + 10527071793902940763*2^64 + 12126423598132949226*2^128 + 320962252*2^192,1894569885926299218 + 2574226485364056125*2^64 + 1777480113760938362*2^128 + 483651230*2^192,13724619847895902284 + 9917608496891830841*2^64 + 11152150113729430425*2^128 + 328416483*2^192,3462529276779718912 + 4327481994962625585*2^64 + 15952403259792602272*2^128 + 540815448*2^192,18211950056661358502 + 16429618689683065582*2^64 + 11326982787792055983*2^128 + 66735415*2^192,17293479537026120568 + 10002167560127949942*2^64 + 11741208298692523400*2^128 + 703309360*2^192;\
2006104996553806262 + 17629179273909442145*2^64 + 9361887907697076890*2^128 + 211603728*2^192,16562192058820783544 + 17806642768174446321*2^64 + 3686912246228334802*2^128 + 1400400521*2^192,6137464620365896056 + 7179316139393730567*2^64 + 14769427189814142521*2^128 + 930244498*2^192,8026633843527242108 + 6096456635980294634*2^64 + 250013448307516556*2^128 + 65449095*2^192,219526129091636576 + 6411533921397234012*2^64 + 1713771604881090706*2^128 + 748112110*2^192,18148694202865426036 + 9234488470540257013*2^64 + 7878051743133203187*2^128 + 1421798544*2^192,2892096199468165464 + 16017436294960478726*2^64 + 12515516989979135261*2^128 + 1675346604*2^192,5789024668382050064 + 15975251193156515653*2^64 + 2690542501503743527*2^128 + 1769789103*2^192;\
5809836096926252480 + 11410082743049245685*2^64 + 4076722484939185260*2^128 + 1848545474*2^192,11028048283796400560 + 7411126017924978356*2^64 + 2941853115830267929*2^128 + 319223792*2^192,14110710638543511536 + 5650114984563047390*2^64 + 646570421783567071*2^128 + 931376433*2^192,6936970235749858256 + 10986987418812914518*2^64 + 16559273830843668077*2^128 + 600760153*2^192,1225660102653100400 + 1039396309459581313*2^64 + 197484493733678783*2^128 + 1530299141*2^192,2611699210345815392 + 12456250642485051197*2^64 + 5947437610522587617*2^128 + 812704210*2^192,3993830124796693536 + 5541304726160573153*2^64 + 16157011197123999839*2^128 + 264128273*2^192,17591638147233953408 + 18280329047096959968*2^64 + 13695860042136853996*2^128 + 426059901*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4143 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^7 - 4*x^5 + 16*x^4 - 16*x^3 - 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 2; x^6 + 2*x^5 + 4*x^4 + 4*x^3 + 16*x^2 + 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
