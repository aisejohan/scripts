/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 44
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 1, 2, 0]  	17	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 1, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[2, 0, 0, 3, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	3 
[0, 6, 0, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 2, 0, 3, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 5, 0, 2, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 1, 1, 1, 1]  	18	6 
[1, 6, 0, 0, 1]  	21	6 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	6 
[0, 5, 0, 1, 3]  	20	4 
[1, 3, 0, 2, 3]  	22	4 
[0, 3, 0, 3, 3]  	24	4 
[0, 4, 0, 2, 253]  	22	3 
[2, 2, 0, 0, 254]  	12	4 
[2, 0, 0, 2, 254]  	16	4 
[0, 0, 5, 0, 254]  	20	2 
[0, 7, 0, 0, 254]  	21	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 1, 3, 1, 255]  	20	3 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4251005929711443218 + 5525311556500466772*2^64 + 13670073194282217687*2^128 + 1552279864*2^192,7972814183915083180 + 15489345235323687717*2^64 + 9300378369660434054*2^128 + 451098125*2^192,13680296731434035148 + 14623760826095399261*2^64 + 13505202834253372173*2^128 + 1116313010*2^192,10181141663261219076 + 3917595230457680284*2^64 + 4684726747496266685*2^128 + 258683199*2^192,6497185054461006428 + 15001065057506889840*2^64 + 7896660546756432440*2^128 + 677299423*2^192,4687654405603764396 + 7432632055624702472*2^64 + 13003714843021953989*2^128 + 73028354*2^192,9420599104140295452 + 18001096973144297928*2^64 + 15718049115865474333*2^128 + 531988304*2^192,12620782810677212768 + 12067102592943779693*2^64 + 9062255110526585661*2^128 + 615410607*2^192;\
806247522647475102 + 6407926595491680575*2^64 + 1259212242398597958*2^128 + 145400258*2^192,5694741909987086592 + 17424507816160147196*2^64 + 13347824036899885945*2^128 + 657025893*2^192,7484110698095884924 + 5148668168424009813*2^64 + 16736428225041814652*2^128 + 778741878*2^192,4758618391970887668 + 16822326006453197036*2^64 + 11344329044105699071*2^128 + 339202317*2^192,2318090830953865676 + 13467693653606743390*2^64 + 7396810404538849218*2^128 + 304967952*2^192,10553334041956050880 + 6290364990146361579*2^64 + 1632010757573578611*2^128 + 927739316*2^192,16101116104109390972 + 8286390891565279142*2^64 + 13877470987121459333*2^128 + 889325637*2^192,2940753746877137104 + 13843036740507309645*2^64 + 1261723494510476297*2^128 + 249235501*2^192;\
8185814103289870735 + 18265662601257808819*2^64 + 3946953278880025347*2^128 + 1506423084*2^192,14629367718115455710 + 7039815138978590236*2^64 + 7465159277140959202*2^128 + 845323933*2^192,11783994986085169462 + 934172666371241182*2^64 + 7861330470019800018*2^128 + 1134483562*2^192,5176911262055547306 + 3697885171467718826*2^64 + 16001964232186083897*2^128 + 1449434339*2^192,8804773418368897214 + 1300777291003685174*2^64 + 8871121050582594537*2^128 + 138762304*2^192,16310040133455771838 + 2534626715107834954*2^64 + 16786747817499192749*2^128 + 10040717*2^192,13204123789822772926 + 378700295330269472*2^64 + 12617415418758451150*2^128 + 1323931915*2^192,16319010720636036616 + 1216464956613345486*2^64 + 3485513095219257234*2^128 + 1949382377*2^192;\
13831137511680840876 + 8265846988196053283*2^64 + 9908109436643383449*2^128 + 2120729732*2^192,10072838537458160032 + 10888252071874322177*2^64 + 9828565537989605612*2^128 + 1622118546*2^192,14205123614730981904 + 14999091180762044811*2^64 + 18167105315761738243*2^128 + 1306370497*2^192,7544763764061242648 + 11307436133851113475*2^64 + 9564806866083759971*2^128 + 216713015*2^192,9495288084213084000 + 6611439895775132373*2^64 + 8636511474028221405*2^128 + 703624193*2^192,16031983934323670160 + 16991815816860657892*2^64 + 1140368363314500466*2^128 + 1107602222*2^192,2479313995236302352 + 14027468426425813756*2^64 + 11901121352293139227*2^128 + 2000454303*2^192,797956645524065224 + 86942808945850784*2^64 + 17034284144235381546*2^128 + 635937644*2^192;\
8925550272650800985 + 4352755130173615023*2^64 + 8833915713891089785*2^128 + 1047004612*2^192,12956316022447310470 + 18342938951508900715*2^64 + 8746302208900764486*2^128 + 200686457*2^192,2847819124772846678 + 17169887337298996629*2^64 + 16799360738891571361*2^128 + 1789711925*2^192,18235379607001713942 + 727639907096087299*2^64 + 11368802524841588571*2^128 + 1287436563*2^192,3844461786395338790 + 13758876361861608081*2^64 + 4570390402042058249*2^128 + 425360092*2^192,11897124943205293102 + 12626916026829850237*2^64 + 6753392963233315483*2^128 + 1714106366*2^192,11350987002133260642 + 12594596956724200542*2^64 + 2595317438752071083*2^128 + 1297882480*2^192,16076211950169102176 + 18084530229498023672*2^64 + 17011090852119898662*2^128 + 1906024990*2^192;\
926032508699814966 + 8916265999979891950*2^64 + 4691317284347095050*2^128 + 2013880424*2^192,9286282217044550008 + 966188021551936044*2^64 + 12055783227286005865*2^128 + 37318437*2^192,864117372569095620 + 14953619167314108571*2^64 + 12602257641466149852*2^128 + 1101803157*2^192,5788483626930882188 + 18020052991550016968*2^64 + 126996076788427345*2^128 + 1538019787*2^192,8601865203696969668 + 8814574083856128237*2^64 + 5763637041562219412*2^128 + 1270153418*2^192,3750359096586852828 + 12504468051943749745*2^64 + 15964413349008527308*2^128 + 951220306*2^192,11116915100151699700 + 16496575561158277970*2^64 + 8606611889557907542*2^128 + 1464384210*2^192,12775679405265184320 + 16494837599134910282*2^64 + 5960217104120269913*2^128 + 1502141403*2^192;\
7200496257032279683 + 7369487036666843532*2^64 + 10657879960884189957*2^128 + 579482829*2^192,17617518465622171462 + 10590323449738034039*2^64 + 8766421333014762857*2^128 + 1636329544*2^192,10602940324554921606 + 5260314876893186073*2^64 + 12225867104630518420*2^128 + 1009694384*2^192,6219100232626839138 + 16088149761136316600*2^64 + 3810262272398143487*2^128 + 773786104*2^192,12727377816108786682 + 2326614582601669045*2^64 + 10019953254535573313*2^128 + 1089192741*2^192,9350731976392500598 + 9268465322313830851*2^64 + 7127258243253146889*2^128 + 1100859929*2^192,10711616212704524690 + 2205575021217831256*2^64 + 11798609083305813679*2^128 + 1846008390*2^192,5938950577157900896 + 1807325806067123949*2^64 + 2832585636346106531*2^128 + 1224357044*2^192;\
16224140741812449877 + 3970355128852763177*2^64 + 17730771623553679337*2^128 + 1873885221*2^192,6805618338654150882 + 7468733472453224950*2^64 + 7959556185001900201*2^128 + 1244346573*2^192,15749071616611191818 + 14877570101398801230*2^64 + 8132988713718081421*2^128 + 5949337*2^192,3595926625234535802 + 3923284244660367478*2^64 + 3506593371364620635*2^128 + 329387454*2^192,4034144708870700662 + 1221257355532351698*2^64 + 8834407023155427629*2^128 + 860649209*2^192,8424500135318715714 + 2549847464795943538*2^64 + 5349385517523867800*2^128 + 1806127813*2^192,471694671463709838 + 10677379572830470920*2^64 + 4637300480353659272*2^128 + 34867301*2^192,14544036098071664656 + 17887885302445899619*2^64 + 11088734781983390348*2^128 + 181940766*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5175 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 - 2*x^6 + 4*x^5 - 16*x^3 + 32*x^2 + 128*x - 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*z^3 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
