/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 57
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 2, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	6 
[1, 3, 2, 0, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	5 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	5 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 1, 1, 3, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	4 
[0, 2, 0, 4, 0]  	26	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	6 
[1, 2, 1, 1, 1]  	18	5 
[1, 1, 2, 1, 1]  	19	5 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	4 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[0, 3, 1, 2, 2]  	23	3 
[1, 0, 2, 2, 3]  	21	6 
[0, 7, 0, 0, 253]  	21	5 
[0, 1, 0, 4, 253]  	23	2 
[2, 2, 0, 0, 254]  	12	4 
[0, 0, 4, 2, 254]  	26	1 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 1, 1, 3, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[14627024398041035486 + 17340279056516069222*2^64 + 7036702648218972293*2^128 + 120709731*2^192,14834671014162076180 + 7904520972122759641*2^64 + 6500265318634292946*2^128 + 1243592538*2^192,1443425982174062576 + 14982110406678057889*2^64 + 8529891321349493774*2^128 + 1621347612*2^192,16402796177245084608 + 17475745280922379011*2^64 + 314177583048088432*2^128 + 1908528887*2^192,7013056434282394948 + 2469303925457127863*2^64 + 56367764411252690*2^128 + 550636663*2^192,17358681094524962128 + 7564860578946380642*2^64 + 14324520533687976228*2^128 + 491627722*2^192,4016898396496454780 + 3279393844733671120*2^64 + 993452518225364051*2^128 + 1526438799*2^192,11311447221028598288 + 16137725651798897273*2^64 + 10367586997841627768*2^128 + 1570611004*2^192;\
17784648340023905766 + 6433289042707947973*2^64 + 7464416091077298977*2^128 + 905065981*2^192,2901341814995284708 + 17028829251536443514*2^64 + 12755196424448973066*2^128 + 1296536149*2^192,12704377019470860324 + 11439035071274482475*2^64 + 6353046298944283707*2^128 + 1113659002*2^192,8099207993408784292 + 3698317197002859583*2^64 + 14181747919848222801*2^128 + 1108815850*2^192,9247614884033629348 + 12951723994622634862*2^64 + 10159482787214301037*2^128 + 840657582*2^192,13066539025937855364 + 13448744130367042463*2^64 + 3017159621003125190*2^128 + 1882849875*2^192,13818561935218323340 + 12704975084603715782*2^64 + 9659607691320073857*2^128 + 2031955848*2^192,11351493543099180600 + 3219838462215742272*2^64 + 675243349907210452*2^128 + 1994776532*2^192;\
1393861267090373276 + 3109541552809569889*2^64 + 9400007874740500151*2^128 + 1373150004*2^192,658715127043887760 + 16685993508868627306*2^64 + 16205338263024023750*2^128 + 366956038*2^192,10112166576831442480 + 14189006474020880558*2^64 + 12171307353742241769*2^128 + 1559167876*2^192,11448034012856379736 + 6646791809430543215*2^64 + 4302956085293710952*2^128 + 2053927835*2^192,5109064830454867640 + 16490596034117296291*2^64 + 9111946309814264070*2^128 + 1795441356*2^192,15147185580557651760 + 1605770818409796849*2^64 + 6383816333655124574*2^128 + 1616744241*2^192,1608990409040140760 + 1061729123263724710*2^64 + 16897915773336151878*2^128 + 955539511*2^192,288285560533306056 + 6289703426363529494*2^64 + 15086572845416442978*2^128 + 1178063441*2^192;\
0 + 0*2^64 + 0*2^128 + 805306368*2^192,0 + 0*2^64 + 0*2^128 + 578813952*2^192,0 + 0*2^64 + 0*2^128 + 486539264*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 173972079*2^192,0 + 0*2^64 + 0*2^128 + 562036736*2^192,0 + 0*2^64 + 0*2^128 + 385875968*2^192,0 + 0*2^64 + 0*2^128 + 8388608*2^192,0 + 0*2^64 + 0*2^128 + 914358272*2^192;\
59916616131110393 + 10644059324923278652*2^64 + 10285035547694648492*2^128 + 1417337757*2^192,6977107482236307094 + 13208423036968220597*2^64 + 10524182187972076009*2^128 + 1484491484*2^192,7349304113098459580 + 7083295775938416849*2^64 + 17702847775358076905*2^128 + 1423558588*2^192,9856978928414128596 + 1192890888444456705*2^64 + 4905856707602257596*2^128 + 1489834105*2^192,3842350086529101506 + 14765229633842188096*2^64 + 8643988668912298360*2^128 + 1943465481*2^192,1591619496274292224 + 9515642591113412540*2^64 + 16262638129024333500*2^128 + 46343383*2^192,235254153143034426 + 16592318842399788575*2^64 + 13990948054464027857*2^128 + 1919929609*2^192,15145593974040453328 + 13152632275297733335*2^64 + 17049026919000678161*2^128 + 1385170748*2^192;\
10994464818388157714 + 16330376299109262174*2^64 + 2187022215620339475*2^128 + 1692370572*2^192,14833818648179581872 + 17540380299410717649*2^64 + 14644714961019460658*2^128 + 2035196719*2^192,424928976671284868 + 12059320123525505048*2^64 + 5683620704747593680*2^128 + 121206864*2^192,3702903659137037916 + 1183833668507814873*2^64 + 3704549475596554553*2^128 + 400083916*2^192,7090004479398313188 + 13238889893384426039*2^64 + 9471130999831083472*2^128 + 1620092838*2^192,4878274522382317692 + 3156236433211261413*2^64 + 1257132444598148238*2^128 + 447022054*2^192,4462229025154688884 + 6095102417820731445*2^64 + 4107481946570253379*2^128 + 776953113*2^192,15381900213140430616 + 2809556367779041998*2^64 + 75198766515318619*2^128 + 1010217796*2^192;\
8326119325489637042 + 17934716480046783963*2^64 + 8262646842895565578*2^128 + 1202054035*2^192,1390926613490514028 + 2344551529913346983*2^64 + 8873774546645963421*2^128 + 443354039*2^192,11487641310939382484 + 5709065472471329543*2^64 + 7110082072232856027*2^128 + 1208642836*2^192,12813947789538974116 + 15348418842342245979*2^64 + 15193528660905475560*2^128 + 259735362*2^192,12516806470006020620 + 2404834327766119188*2^64 + 4505048230011874550*2^128 + 508670669*2^192,9914715980338098400 + 2570576479380887873*2^64 + 8472205306768981532*2^128 + 1140992663*2^192,18052353163851374304 + 5214325500170754776*2^64 + 495962624229877795*2^128 + 806424822*2^192,915655964847589864 + 11045065173707564940*2^64 + 5000549457854661214*2^128 + 1599131677*2^192;\
3499957891362264368 + 7109649865063166484*2^64 + 2434863018484769765*2^128 + 666850941*2^192,9456049855739563032 + 4626862122290979619*2^64 + 11452949433404301544*2^128 + 707351310*2^192,12132748567967225792 + 11252884640694713096*2^64 + 11863415514755831115*2^128 + 1417908518*2^192,3676689379070905064 + 10537237031364715320*2^64 + 285611245883882865*2^128 + 242649428*2^192,5854905007771840136 + 5250399865623894072*2^64 + 3032592159387027801*2^128 + 623920000*2^192,18070013549515537104 + 14101873782752890670*2^64 + 1342511553995007745*2^128 + 2099148572*2^192,10705871016603438324 + 13079069446089823507*2^64 + 12395455262290984010*2^128 + 184582006*2^192,11355846510336058864 + 609475696695349435*2^64 + 12053449382355134047*2^128 + 2105664676*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3942 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 - 2*x^6 + 4*x^5 - 16*x^3 + 32*x^2 + 128*x - 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 32*x + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 36

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
