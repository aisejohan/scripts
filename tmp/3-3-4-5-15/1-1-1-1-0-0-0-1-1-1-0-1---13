/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 44
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 0, 1, 2, 0]  	17	2 
[2, 4, 0, 0, 0]  	18	7 
[3, 2, 0, 1, 0]  	20	4 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[2, 2, 0, 2, 0]  	22	4 
[1, 3, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[3, 0, 0, 3, 0]  	24	4 
[1, 2, 0, 3, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[3, 0, 0, 2, 1]  	19	5 
[2, 3, 0, 1, 1]  	20	4 
[2, 0, 0, 3, 1]  	21	6 
[0, 1, 3, 2, 1]  	25	3 
[0, 1, 2, 3, 1]  	26	2 
[2, 3, 0, 0, 2]  	15	5 
[2, 1, 0, 2, 2]  	19	4 
[0, 0, 5, 1, 2]  	25	2 
[2, 1, 1, 1, 3]  	18	6 
[1, 5, 0, 0, 253]  	18	4 
[0, 0, 0, 5, 253]  	25	1 
[1, 4, 0, 0, 254]  	15	4 
[1, 2, 0, 2, 254]  	19	2 
[0, 4, 0, 0, 255]  	12	2 
[0, 2, 0, 2, 255]  	16	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5587457163882029972 + 12672549186295613328*2^64 + 5001492085873567019*2^128 + 5936618460*2^192,9935075064116770784 + 17084778803455656771*2^64 + 15815300271595535085*2^128 + 10725650965*2^192,6465531506020262744 + 634152655186701458*2^64 + 17919792706087245415*2^128 + 3493886548*2^192,5671493692072875240 + 16077878735203968490*2^64 + 10063939729570968200*2^128 + 13958301495*2^192,2798940879919060776 + 17003979010715761514*2^64 + 223375762952724518*2^128 + 662165976*2^192,17097483434120953944 + 16779346899344885756*2^64 + 16814170430396449874*2^128 + 10764404822*2^192,9217316199034876440 + 7164050636214007764*2^64 + 17432661023495274087*2^128 + 6440317876*2^192,5661000312252277184 + 14018554719109443809*2^64 + 1132910852463042015*2^128 + 8538694266*2^192;\
685543772186746806 + 13979980012870360187*2^64 + 5557388354104289619*2^128 + 91921743*2^192,17439748398275819088 + 2279709813629161358*2^64 + 9079808467031264294*2^128 + 2008818138*2^192,1093961871704109140 + 1499263010169664351*2^64 + 2622047953019237059*2^128 + 5720088435*2^192,3435366522468032108 + 16880778445754150893*2^64 + 15247904951252650359*2^128 + 4488136187*2^192,14530891852154745772 + 5560932771963788809*2^64 + 16509504172557314939*2^128 + 3612848421*2^192,4031655872389881684 + 17996341160920443320*2^64 + 15115904176163520183*2^128 + 1692307054*2^192,3122534043638951540 + 7457514657076140925*2^64 + 12058085791024427971*2^128 + 6559250907*2^192,14189374702676872544 + 7504003652700499788*2^64 + 13544224062033271689*2^128 + 267229473*2^192;\
6143805213076741659 + 1843865673074366522*2^64 + 349820377692531515*2^128 + 4424076334*2^192,7017821091961855184 + 7547801613538426053*2^64 + 16799589213689097186*2^128 + 13651475728*2^192,13689664330720165586 + 5586794471144343252*2^64 + 1106115139867375531*2^128 + 9180930567*2^192,402953122310121942 + 4618553344624435815*2^64 + 5818787882687238028*2^128 + 725861867*2^192,624253807276913902 + 6084721308838464669*2^64 + 4820015956468017047*2^128 + 11844403167*2^192,12544277848480530018 + 8114238723755041428*2^64 + 18224056346036848187*2^128 + 6775383279*2^192,9075788311578635170 + 10591965074970427922*2^64 + 5283456434528281744*2^128 + 9391925342*2^192,4307573773303568192 + 8614876813050806230*2^64 + 13501152486969885461*2^128 + 16105645164*2^192;\
13249743947006847642 + 15409959244582419644*2^64 + 6004919923560719999*2^128 + 10732213128*2^192,6319419532478632192 + 6709745105422011643*2^64 + 5720853970347322225*2^128 + 8205120314*2^192,10944259616615291420 + 1005317734859695874*2^64 + 15024121862652607289*2^128 + 10270577889*2^192,8087819890244470708 + 12767256905671462307*2^64 + 17502619688993018126*2^128 + 8008701664*2^192,18376549731332371620 + 15907266482284423128*2^64 + 17890751687672812133*2^128 + 4554879134*2^192,662756416908489532 + 16752428550957432825*2^64 + 9386685009276887968*2^128 + 11349215061*2^192,10791464579907576124 + 11950290979042405254*2^64 + 18100069788403338715*2^128 + 5779410319*2^192,13409679414441166464 + 5150993169074496269*2^64 + 13790422498580728948*2^128 + 7661494803*2^192;\
18350153531845486161 + 5627232148881385185*2^64 + 10338649322061738576*2^128 + 1961862371*2^192,3910587568741216984 + 17456599857750951394*2^64 + 8642874179246621204*2^128 + 10530047173*2^192,9942649383185218830 + 3314190424908391982*2^64 + 7387586435260874918*2^128 + 10260087783*2^192,12725415802486573362 + 9030367796087192340*2^64 + 9243899171777467121*2^128 + 8911008043*2^192,8270003343350305266 + 4632200548573939625*2^64 + 1098813008325495290*2^128 + 15421033772*2^192,6556011167672328430 + 15773258844693438998*2^64 + 14414261087057968772*2^128 + 4033243146*2^192,14543431919320906302 + 15443894783446601929*2^64 + 1930632838911423768*2^128 + 7812895921*2^192,1458013390287475920 + 14540542651344468647*2^64 + 2204933392488471744*2^128 + 8519043598*2^192;\
16600101101963035057 + 15850986665413458437*2^64 + 2869357916659111697*2^128 + 8862693002*2^192,18292708880007617512 + 12219394968960424079*2^64 + 11723375713057053991*2^128 + 13774704020*2^192,5232866831315171230 + 11173859513893802682*2^64 + 17079541781239997518*2^128 + 2885844398*2^192,8763400186474575922 + 10479070562218690924*2^64 + 14304239538151880142*2^128 + 13900315565*2^192,13828945086949861826 + 7651104408992178456*2^64 + 12873916229199098016*2^128 + 6866522776*2^192,6107710230935082814 + 7838856623068492128*2^64 + 16676413147318590029*2^128 + 8259102540*2^192,16437192399366358478 + 5540218050201859922*2^64 + 11760831833464040138*2^128 + 12367664870*2^192,13225798898480906416 + 17597850148617568446*2^64 + 3693416004225266435*2^128 + 7070370102*2^192;\
10685678358065862329 + 4465983056416776204*2^64 + 12711080156047882862*2^128 + 1935567764*2^192,13270718586537869264 + 12045551481613145095*2^64 + 6463584935914763500*2^128 + 9184414565*2^192,1791042685550260742 + 16549902935621782649*2^64 + 6566341954842566200*2^128 + 2588298106*2^192,15057218617735000690 + 12713586056290891448*2^64 + 3694297914076656944*2^128 + 10722924311*2^192,11396270054879356826 + 11600936935306616305*2^64 + 14644892200133528803*2^128 + 15589828395*2^192,14874582555540803094 + 16296149461414072026*2^64 + 13311234739418246513*2^128 + 4260779029*2^192,12195725873038657974 + 14003207455215953395*2^64 + 3923327240154539104*2^128 + 16632665168*2^192,7604685722119983936 + 7209371497018328383*2^64 + 980282628372580048*2^128 + 10011089335*2^192;\
4588690319307769738 + 6471644862441079875*2^64 + 341559698899931128*2^128 + 2041902855*2^192,3026191140988924120 + 3611346597615886947*2^64 + 3314721247745534859*2^128 + 1351651387*2^192,17963184621427646916 + 18134348844603665082*2^64 + 3375411257687200287*2^128 + 13784138336*2^192,8181293573509377668 + 3718004972599965064*2^64 + 14148916695627491136*2^128 + 6593734846*2^192,836156120031463932 + 4936522354438015908*2^64 + 3351341506098678632*2^128 + 800801518*2^192,6991740163935266804 + 16597664450537207817*2^64 + 5674886419030802136*2^128 + 14784593175*2^192,17378972004412991588 + 6927126580585431868*2^64 + 8591718103674432465*2^128 + 10327762427*2^192,7568322299901701296 + 8903330791782056438*2^64 + 9067512354819146242*2^128 + 613574974*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 5175 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 + 16*x^4 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: Mat([x^8 - 2*x^6 + 16*x^4 - 32*x^2 + 256, 1])
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 29
