/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	4 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	6 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[0, 4, 2, 0, 1]  	20	4 
[1, 1, 0, 3, 1]  	21	6 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 2]  	16	6 
[1, 2, 2, 0, 2]  	17	6 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	4 
[1, 0, 1, 2, 254]  	17	4 
[0, 6, 0, 0, 255]  	18	1 
[0, 2, 1, 2, 255]  	20	2 
[0, 3, 2, 1, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[9909330792163537452 + 6646071959986716448*2^64 + 8265642190145139844*2^128 + 758785986*2^192,18375377580779308286 + 6733986085132549822*2^64 + 10469674418835751489*2^128 + 925518238*2^192,3816970153871145198 + 16017642119668725279*2^64 + 3514207134850725407*2^128 + 74696171*2^192,3793206330495699496 + 2855098288677894053*2^64 + 13071453394107440443*2^128 + 221870262*2^192,15314393282307898348 + 276422742548211443*2^64 + 17993341313837165615*2^128 + 775183340*2^192,9474432028277322552 + 15183073407103376635*2^64 + 13021343268446295640*2^128 + 707136745*2^192,2365500684021566496 + 8198365143629584740*2^64 + 12266139724936184071*2^128 + 494828817*2^192,12201662545251270448 + 7076045620151222816*2^64 + 888271683082508188*2^128 + 198773921*2^192;\
12304745848035188667 + 4874107325214128822*2^64 + 11329016022822623061*2^128 + 369990991*2^192,11600407880691064807 + 14778904281528466611*2^64 + 8554577023137393385*2^128 + 894961072*2^192,13206371218091017777 + 8560815621273437286*2^64 + 2602009186593876431*2^128 + 66042584*2^192,12124540266420448054 + 15393078723941552534*2^64 + 3081646867330841628*2^128 + 390576045*2^192,9676801478480832038 + 6100967102160750311*2^64 + 14331584038125660809*2^128 + 533397058*2^192,8793640726582763056 + 11089531956319837337*2^64 + 1659901564935562717*2^128 + 664821830*2^192,17558874992500029662 + 11377472703482691805*2^64 + 3667568299733116336*2^128 + 927632301*2^192,12102150713031405568 + 16857954152053671028*2^64 + 2590145505576920455*2^128 + 236059509*2^192;\
11113289546702249336 + 2801148886777642729*2^64 + 13006413335810125010*2^128 + 941042356*2^192,11574875397974250494 + 8143868257325798116*2^64 + 18317914935379092784*2^128 + 1011746877*2^192,1577375279444625912 + 7783142159338349456*2^64 + 16186257153572801643*2^128 + 729401284*2^192,6521095637367983532 + 2886114656480448226*2^64 + 18132761006514959965*2^128 + 193371580*2^192,787656420398661092 + 15702979032822325574*2^64 + 7721655159133008134*2^128 + 535453951*2^192,11982597991522917370 + 14151884361368548173*2^64 + 11998936723933818896*2^128 + 231486822*2^192,4238451362618808452 + 17933226602892886742*2^64 + 10406574280165726716*2^128 + 347639857*2^192,3127386571256995912 + 109550559119186997*2^64 + 11453877367682842756*2^128 + 783666185*2^192;\
0 + 0*2^64 + 0*2^128 + 369098752*2^192,0 + 0*2^64 + 0*2^128 + 423624704*2^192,0 + 0*2^64 + 0*2^128 + 163577856*2^192,2562675284646035458 + 10532762521251795415*2^64 + 12990733789987720539*2^128 + 313478455*2^192,0 + 0*2^64 + 0*2^128 + 79691776*2^192,0 + 0*2^64 + 0*2^128 + 12582912*2^192,0 + 0*2^64 + 0*2^128 + 452984832*2^192,0 + 0*2^64 + 0*2^128 + 16777216*2^192;\
6710619972695249919 + 5838151248150382877*2^64 + 16718926789807936643*2^128 + 422518123*2^192,15032016365123777222 + 991288220531674209*2^64 + 16599096142363028409*2^128 + 206631063*2^192,17678018049636208286 + 2500877021406930919*2^64 + 6515265426153667170*2^128 + 609122295*2^192,10135129861681221540 + 7910766960129016875*2^64 + 13192305535826476206*2^128 + 1050336070*2^192,8916599400244345446 + 7444692047638337958*2^64 + 2894972867479192803*2^128 + 618295996*2^192,6540275081860719410 + 18346525869728278918*2^64 + 14839209102177650356*2^128 + 583098292*2^192,11268143954132313556 + 15635484387830752776*2^64 + 3727224486331417976*2^128 + 757764826*2^192,17750047473655200664 + 6658965930623031592*2^64 + 16937196542996873828*2^128 + 715156801*2^192;\
3510850487872700241 + 8006165813055452076*2^64 + 9160138252807175326*2^128 + 1046258962*2^192,14069105628731403550 + 14075086637583094016*2^64 + 3303770450151616633*2^128 + 210005386*2^192,5471642988271582060 + 10521747659330484512*2^64 + 3624529881846089619*2^128 + 315984762*2^192,1609533726355689732 + 9261416911216613784*2^64 + 15923283013157106073*2^128 + 964883970*2^192,12334130992935703964 + 8359598024915638240*2^64 + 9060838332994948633*2^128 + 757273951*2^192,15361656001931717196 + 12102581493090493614*2^64 + 2782368462499184778*2^128 + 345413933*2^192,15324915286673144180 + 6978419847599801606*2^64 + 1649829191277100863*2^128 + 489269571*2^192,5020451444316300268 + 2420283159638709482*2^64 + 5090571399006692660*2^128 + 347521597*2^192;\
6863829012576437169 + 2927324624109507101*2^64 + 16752740214601016951*2^128 + 632832246*2^192,2261230784647023631 + 11970128846338328339*2^64 + 13666070053906103785*2^128 + 367678260*2^192,6432806966978043593 + 1493374431829686386*2^64 + 4577985859901475697*2^128 + 604308817*2^192,12356194964492432904 + 2423010565317017225*2^64 + 10409536967498369310*2^128 + 210178921*2^192,6365239051593571718 + 16331906133579727052*2^64 + 7599056428105499860*2^128 + 541714642*2^192,2303855400058452906 + 7080818399369336527*2^64 + 13624426669543023710*2^128 + 895662996*2^192,1747614129208496790 + 13330059773896691879*2^64 + 8421089305592639924*2^128 + 216144254*2^192,6030115696007080220 + 12920341459566081037*2^64 + 11688948454523342172*2^128 + 820689963*2^192;\
1475624954065353924 + 6440646241027951981*2^64 + 4457002108245822227*2^128 + 454845386*2^192,9516045151868715264 + 1251191578421220095*2^64 + 18063645087438773518*2^128 + 1045133251*2^192,9725330950053329190 + 17960261321036590603*2^64 + 5301775071940747105*2^128 + 933074977*2^192,18026541777231229380 + 14761057108006252749*2^64 + 14093959829524265083*2^128 + 306674282*2^192,5213919737679591912 + 3332293403153795692*2^64 + 5993847671640592020*2^128 + 577415491*2^192,3299528089425327830 + 10156351050479631499*2^64 + 9986013353892838221*2^128 + 240015742*2^192,12237986138012417016 + 7974897014849201262*2^64 + 2756458202070125053*2^128 + 366239211*2^192,1821957563552804012 + 9918274293399075718*2^64 + 4221055716002652284*2^128 + 308013036*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4233 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 31

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
