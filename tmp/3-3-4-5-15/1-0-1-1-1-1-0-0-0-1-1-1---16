/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 59
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 1, 2, 1, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	7 
[1, 1, 1, 2, 0]  	20	6 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	5 
[0, 6, 0, 1, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 7, 1, 0, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	6 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 3, 1, 1]  	20	5 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	5 
[1, 0, 0, 4, 1]  	23	4 
[0, 3, 1, 2, 1]  	23	3 
[1, 5, 0, 0, 2]  	18	6 
[0, 5, 0, 1, 3]  	20	4 
[0, 6, 1, 0, 3]  	22	4 
[0, 2, 1, 2, 253]  	20	3 
[0, 3, 2, 1, 253]  	22	3 
[0, 0, 5, 0, 254]  	20	2 
[0, 1, 1, 3, 254]  	22	2 
[0, 1, 0, 4, 254]  	23	2 
[2, 2, 0, 0, 255]  	12	2 
[0, 4, 1, 0, 255]  	16	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 4, 0, 1, 255]  	17	3 
[0, 1, 1, 2, 255]  	17	2 
[1, 2, 1, 1, 255]  	18	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4546360951496741294 + 6579047119648837344*2^64 + 7265192569851560400*2^128 + 911721982*2^192,4751439763369225492 + 125935297317040133*2^64 + 8379079606456025836*2^128 + 1363449207*2^192,15776082316046045228 + 13626946669707676174*2^64 + 3516323334509655724*2^128 + 795445551*2^192,8819843240566186424 + 4185116320117978057*2^64 + 835989780404896802*2^128 + 1612762796*2^192,12481488003750152472 + 18170615586182344906*2^64 + 12381463368310701183*2^128 + 1920360107*2^192,4728460505696612992 + 3867690105676402640*2^64 + 8383000785216214067*2^128 + 1764189149*2^192,16478633398439269484 + 12301794340521200046*2^64 + 16435276546651688478*2^128 + 1870034846*2^192,2254193676395539872 + 6465464839695757847*2^64 + 16645750203624659988*2^128 + 1707753314*2^192;\
3133196644021820046 + 16898743006795064339*2^64 + 14182342076061075709*2^128 + 168275723*2^192,5092446206556266856 + 3518169276407435570*2^64 + 14807388539011101300*2^128 + 2128710774*2^192,7168878797821060832 + 14947250836492869381*2^64 + 14700103740382369251*2^128 + 1573281012*2^192,12144921285386075680 + 8407241788881035733*2^64 + 10814246814534740811*2^128 + 677676020*2^192,17337236833693110984 + 8755151262644188136*2^64 + 12566173391845631675*2^128 + 998360499*2^192,8081872273741807060 + 15508870404825383186*2^64 + 4012696243897150571*2^128 + 2005921353*2^192,2552652440431875088 + 5430933505065845311*2^64 + 16111352419745568706*2^128 + 599652584*2^192,6384998352654475304 + 7051986093600917224*2^64 + 1831142512669218350*2^128 + 1603968812*2^192;\
12457703163462638352 + 6477765829693534807*2^64 + 17634248235425219427*2^128 + 16327958*2^192,3834571063346166392 + 12047927021299887027*2^64 + 1074299518783949546*2^128 + 492514084*2^192,3863095051531415424 + 4150431304904111845*2^64 + 4676918451986026821*2^128 + 1970864703*2^192,2232504369221991912 + 16793415331001722067*2^64 + 17392805515087258397*2^128 + 1836679907*2^192,7997730869340173720 + 7563926459262620155*2^64 + 16910466282673729258*2^128 + 939153814*2^192,4239358076358371528 + 4151895743926283707*2^64 + 5497065596859346685*2^128 + 451886029*2^192,14660522600616671720 + 17165148384524377501*2^64 + 2474129831841606501*2^128 + 1141482000*2^192,3981214201526484248 + 14179096382231357719*2^64 + 9940502478619797137*2^128 + 561495304*2^192;\
8454772452481517220 + 2236549235301643983*2^64 + 13347747454010730439*2^128 + 306565185*2^192,3118010886989053100 + 17364748526411094029*2^64 + 5888181467002828782*2^128 + 1208277252*2^192,16851612948450306216 + 15604547413140146455*2^64 + 17656279850148793158*2^128 + 1736694769*2^192,3672709154870806652 + 17192184575066008442*2^64 + 12278016531476821667*2^128 + 1605374697*2^192,9851782715704747308 + 10186456547437882015*2^64 + 6541874940771622315*2^128 + 2262065*2^192,16656907390314163916 + 2981782231452372500*2^64 + 17333895561982152503*2^128 + 1302424626*2^192,4858637270847608192 + 492581887532795047*2^64 + 3513728212082493241*2^128 + 1238469651*2^192,17548071442458996288 + 8849196664771625113*2^64 + 14537551827646661008*2^128 + 1766627247*2^192;\
15921145228328570249 + 2926036431900585449*2^64 + 943604646727144133*2^128 + 364906594*2^192,3132006453419929294 + 16866848769853706471*2^64 + 16539885238492767805*2^128 + 716783151*2^192,5339734080589144410 + 16429489495780753020*2^64 + 12319209921788644354*2^128 + 191703580*2^192,14743963209202581176 + 10527897627294529375*2^64 + 2334052213187856963*2^128 + 1897780816*2^192,230243597140084468 + 9178489082901277833*2^64 + 3784567816754204523*2^128 + 169884066*2^192,17715872843830147176 + 11128905036901134619*2^64 + 15334439741550898870*2^128 + 614958610*2^192,6780631497045698390 + 11422604537466523162*2^64 + 13101921184790315647*2^128 + 2100952490*2^192,8461292700129378424 + 2740139556683537379*2^64 + 9818994364096383332*2^128 + 1722201679*2^192;\
7673415593432552895 + 861712736283650351*2^64 + 6825513102248463940*2^128 + 613531867*2^192,6173363150133618726 + 2562525685243108172*2^64 + 1080614211168436612*2^128 + 1502407829*2^192,15962481529499221094 + 14635329766013441501*2^64 + 5730536697607043361*2^128 + 1172439412*2^192,4063289407166983080 + 5786751659780873070*2^64 + 15499581283528546843*2^128 + 1625869304*2^192,16063269678962211552 + 2551786453006356974*2^64 + 11490694440809848501*2^128 + 435246427*2^192,3952736117928457252 + 4793578676954193832*2^64 + 4357329970241647302*2^128 + 1256412020*2^192,10816418930835585370 + 2449322012116872219*2^64 + 9696823433630154517*2^128 + 225726560*2^192,12635309266766981152 + 16303401014655675240*2^64 + 1457024292793370564*2^128 + 1182902004*2^192;\
3238837833254491113 + 8457608408017386502*2^64 + 14681463551977005136*2^128 + 1706585632*2^192,10153453417763844534 + 5032024069434368842*2^64 + 10037777189171201394*2^128 + 601773356*2^192,6218717044994965378 + 10974752453346214936*2^64 + 2477078934603568458*2^128 + 1854397588*2^192,4044958344119032588 + 7953566548767282927*2^64 + 5966995666566019513*2^128 + 538411250*2^192,2159277593756239180 + 11218711799518575274*2^64 + 4992305412054123357*2^128 + 536169443*2^192,16304486256547188156 + 4947654216761960889*2^64 + 2132884796264905420*2^128 + 1571697328*2^192,8479249627608967178 + 2261575889965379845*2^64 + 5093168489024857869*2^128 + 1462018963*2^192,17845775963326384240 + 10076631654655689281*2^64 + 13006440431260000242*2^128 + 593141885*2^192;\
77448910417472191 + 4984992850626597948*2^64 + 8486390200495296436*2^128 + 546516618*2^192,13499762520519269526 + 3301858591196963811*2^64 + 14309038075398661380*2^128 + 1794467887*2^192,18235120271156336042 + 12230295454919540963*2^64 + 1208868071743677320*2^128 + 715022115*2^192,2880598557604162544 + 17301527763647696430*2^64 + 2849092521508760976*2^128 + 1183333904*2^192,5076614673154838840 + 14427594380152187442*2^64 + 17691705563016896782*2^128 + 1539174513*2^192,3256619385080616424 + 4411760845210625518*2^64 + 8125736488187137096*2^128 + 1994880356*2^192,1132995907016903942 + 2736060751204078452*2^64 + 5972639551299146490*2^128 + 1403971566*2^192,17380015143436431816 + 15721901785530147177*2^64 + 5057877921744505603*2^128 + 1224337330*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4656 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 33
