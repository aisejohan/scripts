/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	6 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 1, 1, 2, 1]  	20	4 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 3, 4, 0, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[0, 2, 3, 1, 2]  	23	3 
[1, 1, 0, 2, 3]  	16	6 
[1, 0, 2, 1, 253]  	16	5 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[1, 1, 1, 1, 255]  	15	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[18185443805986965176 + 7869444404885797760*2^64 + 10614026205696689985*2^128 + 6465460217*2^192,15596522691656440688 + 8165310250489654811*2^64 + 17766413771239297611*2^128 + 1412157148*2^192,7764097043055526064 + 17614298531411601467*2^64 + 14065293338038622898*2^128 + 1638278332*2^192,559014979767350352 + 503741189268160533*2^64 + 15069574352114551728*2^128 + 143807965*2^192,467097949076900352 + 15470760422705610561*2^64 + 15085259067155304652*2^128 + 2619182965*2^192,1802328649472984880 + 11329320556563670746*2^64 + 5878605500172479053*2^128 + 4791634083*2^192,10574301372628423088 + 12313689214665696955*2^64 + 10400873965478099066*2^128 + 72998523*2^192,9016774705582159488 + 7415115285073479772*2^64 + 11242768593369985105*2^128 + 7518879115*2^192;\
439600184522411206 + 7567222548008693001*2^64 + 4412299135771887904*2^128 + 6708973766*2^192,9304213084776658564 + 15678873131013599787*2^64 + 13713638599354135860*2^128 + 4679246492*2^192,16643233234685342012 + 5428073266150717846*2^64 + 7512282962477263779*2^128 + 3694973810*2^192,12444052415094460012 + 15114561397630496384*2^64 + 2249318325031437085*2^128 + 4071266746*2^192,9169466433096034296 + 14079627388621517381*2^64 + 17994261667662462429*2^128 + 3472456971*2^192,16069602084108657988 + 11634668550097015318*2^64 + 3077881701270808419*2^128 + 5800221846*2^192,15590560630994252372 + 17003770397682827190*2^64 + 13325270976623879766*2^128 + 8006225181*2^192,14578866959657014416 + 10721412727843572692*2^64 + 12247090016558544538*2^128 + 7597859199*2^192;\
10960525153162521794 + 4370195167659182580*2^64 + 586468345402692603*2^128 + 1015899161*2^192,1373444190648887196 + 9601324368448200169*2^64 + 17180070321157780871*2^128 + 1456102755*2^192,14065628794631380500 + 5489258632326919213*2^64 + 9614462398345326591*2^128 + 1185869166*2^192,9130253612268311756 + 12466411519262584934*2^64 + 13824242684110018666*2^128 + 7227557086*2^192,4208292505546676416 + 8491520049988362449*2^64 + 1768303696320126085*2^128 + 412303*2^192,12482248585125321924 + 14064942503775910285*2^64 + 6435905557068014068*2^128 + 3106021762*2^192,15875316165748547660 + 15748498768061169678*2^64 + 3598704774907532722*2^128 + 8549323593*2^192,17995388657657363536 + 8353133909496453563*2^64 + 1249791332085311181*2^128 + 219808258*2^192;\
125993918525500997 + 6286678407063934881*2^64 + 13558362620441277921*2^128 + 7945439669*2^192,7860296281117048246 + 16000161228317059927*2^64 + 12469231243040842598*2^128 + 3872743823*2^192,8076391840195532930 + 10390397978662890766*2^64 + 1290715383583824056*2^128 + 339102736*2^192,18255072232842453678 + 9127222861146932073*2^64 + 15128663992963237211*2^128 + 3755508155*2^192,6431093090034912976 + 13941384157812055829*2^64 + 14900380740861735205*2^128 + 1584276504*2^192,12787800011613292410 + 437373366732898457*2^64 + 9986970668350810710*2^128 + 4664661144*2^192,5512819870370908478 + 263049483716482986*2^64 + 5816115196498842453*2^128 + 7687251094*2^192,13684115045134430648 + 10258966030191138713*2^64 + 5355797076719428921*2^128 + 6443352476*2^192;\
3023723287541556908 + 11838697695044777591*2^64 + 3007581120027104869*2^128 + 2852963970*2^192,13826610067306783816 + 8127211834312269033*2^64 + 7763580242453169158*2^128 + 1383851095*2^192,7814864467466836344 + 5988215063511352470*2^64 + 13436576107699071961*2^128 + 4424357160*2^192,6769351023274457256 + 15712900247100493263*2^64 + 1193658153869485379*2^128 + 4176338568*2^192,12779648344678728224 + 18062213337826142107*2^64 + 4075137740237799854*2^128 + 2963169332*2^192,13913953057997450744 + 257403147725587907*2^64 + 10364994266352015806*2^128 + 1758748673*2^192,9335602604965881704 + 15708270698861029445*2^64 + 7165055984672330496*2^128 + 5362668136*2^192,2863677344642157440 + 5383267372496237786*2^64 + 14258022439547449817*2^128 + 5047695373*2^192;\
4281550678058127605 + 656536556396663600*2^64 + 12966774067947629928*2^128 + 2313931373*2^192,11015576722872064358 + 15882292394626078686*2^64 + 12642632312866342717*2^128 + 1591884033*2^192,5061664078717679634 + 2676077862926748317*2^64 + 4674888940693050012*2^128 + 2989066867*2^192,3449309967368201054 + 8383276459833410718*2^64 + 2242068757921738515*2^128 + 8558995704*2^192,11212714557521754016 + 6267857426281763253*2^64 + 659525389461489663*2^128 + 3066590916*2^192,6029699980122205450 + 13163174351621479580*2^64 + 14170483014676285163*2^128 + 8018203349*2^192,6726943879504605102 + 2757954241269551058*2^64 + 17196830126987909872*2^128 + 2078608507*2^192,3615630090726678232 + 12952347039251385509*2^64 + 4383099180937032213*2^128 + 3307912941*2^192;\
8343753826778412924 + 10356240896460306677*2^64 + 9685130416005541868*2^128 + 2802096653*2^192,14596130156956603784 + 5395657897903551637*2^64 + 6410496530109090622*2^128 + 7863205675*2^192,15304081428424389112 + 8399085776258877168*2^64 + 5165530397049723091*2^128 + 3946224124*2^192,3981646771861041888 + 13636122993946729849*2^64 + 1693221263863571810*2^128 + 8331356876*2^192,17585436778397323192 + 787822108342975332*2^64 + 1854448114695227004*2^128 + 7658886130*2^192,17165753596532748320 + 2193746804459670120*2^64 + 7332363027995813029*2^128 + 7191672223*2^192,7728589914392863016 + 12001794885058289665*2^64 + 4561555081175287690*2^128 + 1912329920*2^192,10650835844673550144 + 1167986238704749731*2^64 + 10123864174953105709*2^128 + 8555728917*2^192;\
4921393147909440292 + 6520675990696527891*2^64 + 9199308299045457958*2^128 + 1344919711*2^192,2956289429575356312 + 14679351350667467443*2^64 + 16660256155858072756*2^128 + 5967514778*2^192,8724291541342610104 + 10634129561965939968*2^64 + 9578257628339260025*2^128 + 6801216736*2^192,16844240686433207888 + 1252663574869049151*2^64 + 3460319425868121207*2^128 + 1152944805*2^192,5318753566985240280 + 18203094065837818683*2^64 + 2286548875693839829*2^128 + 5969890400*2^192,3236810874920698064 + 3817773424171666142*2^64 + 7593099626764979089*2^128 + 6323013556*2^192,12273648150401069848 + 7988751679619543524*2^64 + 2808188932701626514*2^128 + 6766614342*2^192,1125120066410852768 + 9792427153490838028*2^64 + 6793177015936262828*2^128 + 3143372970*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4705 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30
