/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 62
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	6 
[0, 5, 1, 0, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	5 
[1, 3, 2, 0, 0]  	20	7 
[0, 5, 0, 1, 0]  	20	5 
[3, 4, 0, 0, 0]  	21	7 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[1, 0, 3, 2, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	4 
[1, 3, 0, 1, 1]  	17	4 
[1, 1, 2, 1, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	5 
[1, 0, 0, 4, 1]  	23	3 
[3, 1, 0, 0, 2]  	12	4 
[1, 0, 3, 1, 2]  	20	5 
[1, 1, 0, 3, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	5 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[0, 4, 2, 0, 3]  	20	4 
[1, 0, 2, 2, 3]  	21	6 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 0, 3, 3]  	24	4 
[0, 2, 1, 2, 251]  	20	3 
[0, 3, 2, 1, 251]  	22	3 
[0, 7, 0, 0, 253]  	21	5 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[1, 3, 0, 0, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	1 
[1, 1, 1, 1, 255]  	15	2 
[1, 0, 2, 1, 255]  	16	5 
[0, 2, 0, 2, 255]  	16	3 
[1, 0, 1, 2, 255]  	17	5 
[0, 3, 2, 0, 255]  	17	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 250.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12612128329873505580 + 15918823113598336705*2^64 + 4683951127922322134*2^128 + 1351858053*2^192,15427517559174225712 + 8583817125727030433*2^64 + 1988415706484928142*2^128 + 994769002*2^192,15673932488439383524 + 18168129674975269642*2^64 + 14356294628017188234*2^128 + 149035031*2^192,4060345990282599708 + 252006029350786963*2^64 + 9616206532658765369*2^128 + 184699322*2^192,2939780451789027000 + 5433010037752499140*2^64 + 17342739275224910200*2^128 + 1193200416*2^192,15930427788075846128 + 12639910884290672985*2^64 + 2398744950162474854*2^128 + 1259486655*2^192,7811890746850736788 + 12369450516373026754*2^64 + 3245436761847366522*2^128 + 1246720914*2^192,15533463311295490712 + 3484192242787603972*2^64 + 12440689179967112851*2^128 + 900145031*2^192;\
11312491776414719671 + 7979876114302170416*2^64 + 1537979991334959041*2^128 + 122034748*2^192,10685382674824429052 + 3396559013295250319*2^64 + 3674041874164681589*2^128 + 305047961*2^192,6907005099740786553 + 14418979953268583480*2^64 + 17626469273020096100*2^128 + 960421041*2^192,14076411175569225255 + 9385379644800995686*2^64 + 1726099014379848183*2^128 + 1028254760*2^192,14292314240509258614 + 4517370109584546081*2^64 + 8162013639459629976*2^128 + 927177305*2^192,7293264978137523392 + 4219586480113507448*2^64 + 12538806878209606286*2^128 + 2054972448*2^192,17142303531929168051 + 5035819757626668647*2^64 + 7975153215801747934*2^128 + 787732817*2^192,10165772328564802222 + 1851406721405404292*2^64 + 16893133131462616162*2^128 + 1112657236*2^192;\
4986504089049955190 + 8420380841186403863*2^64 + 5732689322353192209*2^128 + 2104072960*2^192,10672593970717042548 + 9057836436454745364*2^64 + 15042950350002166419*2^128 + 282244364*2^192,376468447925815548 + 3304064115839396374*2^64 + 6734427680955776004*2^128 + 690033515*2^192,14430983577596949556 + 16154081479117718398*2^64 + 17355776996042461016*2^128 + 129961212*2^192,8713828540900907600 + 18112213778831542909*2^64 + 8970820986171426017*2^128 + 353065640*2^192,10045687945501582928 + 4684310545344157550*2^64 + 8444481900944309333*2^128 + 450410233*2^192,7769301158091876350 + 7057010208846932571*2^64 + 17673477257815892511*2^128 + 774937917*2^192,11085731680302361216 + 3203354164972620191*2^64 + 1277414921970178124*2^128 + 134649851*2^192;\
0 + 0*2^64 + 0*2^128 + 922746880*2^192,0 + 0*2^64 + 0*2^128 + 436207616*2^192,0 + 0*2^64 + 0*2^128 + 268435456*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 660511343*2^192,0 + 0*2^64 + 0*2^128 + 150994944*2^192,0 + 0*2^64 + 0*2^128 + 771751936*2^192,0 + 0*2^64 + 0*2^128 + 436207616*2^192,0 + 0*2^64 + 0*2^128 + 587202560*2^192;\
17279727970153563793 + 5449653241465365261*2^64 + 9944025815763823173*2^128 + 2034762510*2^192,4406046268422278302 + 18260707612589495177*2^64 + 16193318545578860778*2^128 + 551589289*2^192,7810704549383461582 + 8082199068708269302*2^64 + 16041719455008683991*2^128 + 561853368*2^192,3424594402307736118 + 18283929225034907445*2^64 + 13692277832212798006*2^128 + 926228477*2^192,1691060302319016128 + 14940465293455610292*2^64 + 13322280706998211166*2^128 + 950166099*2^192,2378190983219291568 + 18335261658287216723*2^64 + 8185440407800610683*2^128 + 2068926487*2^192,7402497605829815099 + 15976767694116607478*2^64 + 2399187014336111279*2^128 + 664058313*2^192,457581975615778684 + 13452048016843403020*2^64 + 7070910782026530860*2^128 + 1255650440*2^192;\
9618637534135969902 + 5263369335928962277*2^64 + 10701946109888034537*2^128 + 1362642623*2^192,11680244897470073440 + 2398547383027218971*2^64 + 13599745286136570132*2^128 + 1813237960*2^192,4457998959834674376 + 13056453801178171893*2^64 + 14547717733104744964*2^128 + 272623352*2^192,8286194542696868992 + 6112131983787163780*2^64 + 13652378200087873218*2^128 + 931564809*2^192,6723257195676622736 + 17054516951623572924*2^64 + 1876410654707467303*2^128 + 1267529857*2^192,17899769894531485712 + 7755060769748140017*2^64 + 909529610354862226*2^128 + 489809461*2^192,11595062029954904068 + 16442330037987095891*2^64 + 9587693318719393310*2^128 + 1363888245*2^192,16644394124373767360 + 8445787286888342119*2^64 + 10398257100266198526*2^128 + 674876841*2^192;\
2883936796874326920 + 14721916951280857958*2^64 + 747684629765968765*2^128 + 995599040*2^192,3112258712517220776 + 4848199077609515181*2^64 + 2376624792304824202*2^128 + 1859319732*2^192,13027290505787283030 + 15889775801221984852*2^64 + 5403862883562487106*2^128 + 2123751418*2^192,1043292727649732826 + 8598548891871012576*2^64 + 3346672564963901820*2^128 + 972569110*2^192,6898405059316105492 + 717600579880380621*2^64 + 16447743473001250880*2^128 + 1399761114*2^192,2216727951357422172 + 13513457859818304610*2^64 + 15474976982727841672*2^128 + 2070181288*2^192,15395151990224676374 + 9831641905823255301*2^64 + 11172365415808599201*2^128 + 817744861*2^192,2199745336795871700 + 499551698533213399*2^64 + 5197856496725071018*2^128 + 1629621883*2^192;\
6085358261124099077 + 11222275273962846240*2^64 + 10632831693566674282*2^128 + 307190438*2^192,14164505933060380072 + 4143215052916621767*2^64 + 16271363352581546793*2^128 + 576980159*2^192,8938885699931121249 + 11094147272376404003*2^64 + 5050448517460249797*2^128 + 1445104088*2^192,4078775737209689063 + 10085118894947444227*2^64 + 2269104771433799645*2^128 + 458806957*2^192,9611312937281191854 + 69941430518107627*2^64 + 15158082821040109015*2^128 + 1321795513*2^192,17088484757581217232 + 4901851810413571943*2^64 + 2139423938273532597*2^128 + 502903041*2^192,7050569314463888193 + 224440439575576491*2^64 + 1828089317017650152*2^128 + 1538021080*2^192,8272422819828362486 + 11656598534856171626*2^64 + 2383409591281072366*2^128 + 774285104*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4176 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 + 4*x^5 - 16*x^3 + 128*x - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
