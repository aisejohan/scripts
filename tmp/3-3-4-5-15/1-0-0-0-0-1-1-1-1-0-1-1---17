/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 0, 2, 1, 0]  	16	4 
[1, 0, 1, 2, 0]  	17	5 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	5 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	7 
[1, 0, 0, 4, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 3, 0, 3, 0]  	24	5 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 2, 1, 3, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[1, 3, 0, 0, 2]  	12	4 
[2, 0, 0, 3, 2]  	21	7 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 1, 2, 2]  	23	3 
[0, 2, 1, 2, 3]  	20	4 
[0, 7, 0, 0, 252]  	21	5 
[1, 0, 1, 1, 254]  	12	3 
[0, 5, 0, 0, 254]  	15	3 
[1, 0, 0, 3, 254]  	18	4 
[0, 1, 3, 1, 254]  	20	3 
[0, 0, 4, 2, 254]  	26	1 
[0, 0, 5, 0, 255]  	20	1 
[0, 1, 1, 3, 255]  	22	2 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	2 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17971597053505055136 + 2676113057373784309*2^64 + 15536565785656316214*2^128 + 16684492839*2^192,18337472744411526368 + 1851408053655329936*2^64 + 14813422809390756756*2^128 + 6954845149*2^192,515354505926961984 + 3505386352639722231*2^64 + 13181963113401615364*2^128 + 13407492256*2^192,6060767529775155008 + 9463275026105051795*2^64 + 14891321886935646367*2^128 + 1172757707*2^192,5608724736065504 + 15784861122180004372*2^64 + 10669271833972983536*2^128 + 10332108792*2^192,16741197849159988288 + 12831491897350370613*2^64 + 17581649230089801777*2^128 + 7307357067*2^192,5766381085596030336 + 4937579251806206958*2^64 + 13126329199237348068*2^128 + 11082073071*2^192,1762231654174666304 + 1113966553421338856*2^64 + 17509852338138596084*2^128 + 7327056265*2^192;\
8954468039137271488 + 4695862830126764519*2^64 + 16181019989921061724*2^128 + 4968137548*2^192,7008262327011938480 + 14807875071444415079*2^64 + 10754116907734807538*2^128 + 5989450803*2^192,5945095353089042752 + 301663276869280560*2^64 + 17655490800550152033*2^128 + 8139942825*2^192,10854980604214539296 + 14415299474479727435*2^64 + 11485634351679345705*2^128 + 8450268771*2^192,17020999883057936400 + 10054096046558225590*2^64 + 15856136865386230819*2^128 + 1911196464*2^192,11618187019112888768 + 15192581639075702552*2^64 + 1666552514898911297*2^128 + 3549920585*2^192,3865938342497467808 + 8424063498569519293*2^64 + 11169068927903545608*2^128 + 4074814189*2^192,17703659207143837088 + 6838945938084838157*2^64 + 4935260332675699491*2^128 + 5505083759*2^192;\
1745784099688722624 + 2713057631302359669*2^64 + 9805297956002286407*2^128 + 15998845951*2^192,15807204318575449196 + 13075999274364788380*2^64 + 1772129439787398475*2^128 + 632055816*2^192,7470743140419613072 + 1799027758755759682*2^64 + 5103776371684327443*2^128 + 26368276*2^192,18344740605127495904 + 4218374418969221935*2^64 + 1239063964538968922*2^128 + 7286684848*2^192,7765758641850821372 + 7844263004735815393*2^64 + 9292614451571521358*2^128 + 2884587622*2^192,9122720273092849848 + 887585658156695674*2^64 + 8342466737022578476*2^128 + 4363765418*2^192,11027838823679182664 + 5260038895841662075*2^64 + 12398405456086147173*2^128 + 3055926657*2^192,2374207893975843272 + 13730535411004549252*2^64 + 14252439204857422286*2^128 + 17138519941*2^192;\
7118169119699575484 + 2722331762834911475*2^64 + 10937565223010946796*2^128 + 15739427594*2^192,17756161834494567349 + 5213689093814609801*2^64 + 15160544020730699153*2^128 + 12907522655*2^192,9603766228988645980 + 11958241142668144908*2^64 + 7597383572401152627*2^128 + 14644456468*2^192,2758057532408698856 + 13643305158779667693*2^64 + 11361791660626338010*2^128 + 14805132297*2^192,11135862125737064041 + 16139341895053029723*2^64 + 12933491817871359192*2^128 + 3300424281*2^192,13410923619052901602 + 10031937226277267823*2^64 + 9513267361152387061*2^128 + 11079305143*2^192,14390082230135700286 + 4883417307010061502*2^64 + 11295195440228253897*2^128 + 11647243328*2^192,14223088804767699038 + 9134768274181768822*2^64 + 17150153592902905766*2^128 + 4187772670*2^192;\
15498538138719707152 + 824600472778908320*2^64 + 18271219905106687620*2^128 + 13640748660*2^192,11011966882577224880 + 6412183961193040784*2^64 + 11278000525833299453*2^128 + 16897381483*2^192,14436970498986717888 + 18254527143389504081*2^64 + 7576162473044279863*2^128 + 15235674858*2^192,15417024457698741920 + 16758037579030034611*2^64 + 14309548060673484938*2^128 + 14721276698*2^192,10032176489447421968 + 10464004718906903162*2^64 + 3363277408889430082*2^128 + 10677225126*2^192,1730125703473612864 + 14903577432071239100*2^64 + 7135308097884753383*2^128 + 242507697*2^192,2736183497075089568 + 10870264198310332274*2^64 + 10569819467619248828*2^128 + 3047781113*2^192,15276509852882501344 + 10446411692876601102*2^64 + 15883420127645512789*2^128 + 5778000921*2^192;\
11727252208026132716 + 11704675442698781076*2^64 + 8994303722723603105*2^128 + 6885425896*2^192,14956676792322230261 + 9337765361119382497*2^64 + 717814669577648084*2^128 + 10875512895*2^192,17783484076685629276 + 7138473958256502931*2^64 + 1434216133472675138*2^128 + 11333670691*2^192,8518864227388944776 + 2414513655001926880*2^64 + 53598505225932294*2^128 + 365913139*2^192,6980311790289596265 + 6228614446703663166*2^64 + 3067467427533157565*2^128 + 11500620910*2^192,16079936314363834562 + 10626105370271994771*2^64 + 11006506656471325047*2^128 + 4623288952*2^192,4472287813190723006 + 11812197404365445070*2^64 + 5757296607088035180*2^128 + 3940331369*2^192,9140359176571455006 + 5072550818353035608*2^64 + 13383556257639860012*2^128 + 15329776271*2^192;\
17296802924401123212 + 5455228121965594446*2^64 + 14171517148043171174*2^128 + 9556458837*2^192,17120979884179211961 + 12621683228717841406*2^64 + 16200582486499357181*2^128 + 1215615087*2^192,4820495139513853292 + 16430852768303476411*2^64 + 2331410524975076386*2^128 + 16183774856*2^192,12416510701072705384 + 1405645705846862564*2^64 + 17961902777024372852*2^128 + 4212801166*2^192,16356154570365164253 + 12858381518652244489*2^64 + 16948299259502163091*2^128 + 5224101058*2^192,3017300466346820522 + 13548823111889237342*2^64 + 9448940849605559249*2^128 + 12625943272*2^192,5354823843337561878 + 3946368233475451842*2^64 + 15051448685723267455*2^128 + 8121037837*2^192,4353491896868935030 + 12465655020283921507*2^64 + 9352666510531317012*2^128 + 16625747865*2^192;\
4010400409927414400 + 17775269810882018103*2^64 + 10670204486770935532*2^128 + 6653308005*2^192,11865955416684002176 + 14811299278950261100*2^64 + 12507425856574592357*2^128 + 6461350678*2^192,14032490627295627264 + 11367507167534249707*2^64 + 9262940968205107562*2^128 + 3825691823*2^192,6361045563206985536 + 17224967596842168121*2^64 + 17766753887721456464*2^128 + 3877412953*2^192,7553373481414601408 + 10591929418106119337*2^64 + 1309632680937739906*2^128 + 987065227*2^192,13006281900362247616 + 14937104407497759185*2^64 + 7176447591655381613*2^128 + 8143180470*2^192,11344254963094586112 + 6170016413991268660*2^64 + 7970590493657191859*2^128 + 5005954159*2^192,1288081800624024640 + 12803735838739053335*2^64 + 17296622594256152846*2^128 + 7923357003*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 5100 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 23
