/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	3  <--- 1
[1, 4, 0, 0, 0]  	15	3 
[1, 0, 3, 0, 0]  	15	3 
[1, 0, 0, 3, 0]  	18	4 
[1, 1, 2, 1, 0]  	19	4 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 1, 1]  	21	7 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 3, 1, 0, 2]  	16	4 
[1, 1, 0, 2, 2]  	16	4 
[1, 3, 0, 1, 2]  	17	4 
[1, 2, 2, 0, 2]  	17	5 
[0, 3, 0, 2, 2]  	19	4 
[0, 7, 0, 0, 2]  	21	6 
[0, 4, 1, 1, 253]  	21	5 
[1, 0, 2, 1, 254]  	16	3 
[0, 4, 1, 0, 254]  	16	3 
[1, 0, 1, 2, 254]  	17	3 
[0, 4, 0, 1, 254]  	17	3 
[0, 2, 2, 1, 254]  	19	3 
[0, 0, 5, 0, 254]  	20	2 
[0, 2, 4, 0, 254]  	22	3 
[1, 0, 1, 1, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	2 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 3 and 252.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8565673369192574872 + 8845075014442747347*2^64 + 13088218313122038758*2^128 + 422496235*2^192,17912504646793156480 + 12792279557711430358*2^64 + 15338143612818369020*2^128 + 4024303769*2^192,1760263867746337312 + 13633369663292663757*2^64 + 17278555418289607315*2^128 + 2005162119*2^192,15705678472092685968 + 11667657992789829919*2^64 + 8914350931188872972*2^128 + 773254251*2^192,3343663363701187560 + 7737548255267574855*2^64 + 12511508989571329041*2^128 + 2401152682*2^192,7340226829955102544 + 8645932544794407086*2^64 + 5971418383539159029*2^128 + 2049820842*2^192,9222292275420703528 + 482130332661370028*2^64 + 12726115839133600227*2^128 + 1261845904*2^192,5134584134246390912 + 895456642612904046*2^64 + 1991573926343581763*2^128 + 3986315154*2^192;\
14560384216344941384 + 16654413929586377714*2^64 + 10090190317729672775*2^128 + 1752884304*2^192,1197343871778889928 + 15145600093530459516*2^64 + 6339249628320637258*2^128 + 1300858157*2^192,13009128594739404200 + 10392397820457557511*2^64 + 16482318574322147240*2^128 + 2004124646*2^192,2138539728126352512 + 2296700340994338875*2^64 + 11410489972313074232*2^128 + 297092368*2^192,9558111793497989772 + 961355490253034892*2^64 + 7762196614821311936*2^128 + 1400273524*2^192,10349764751052241344 + 1721835268324214401*2^64 + 17457201026981178704*2^128 + 145622077*2^192,4276768536528122852 + 18426046990078397331*2^64 + 13448494533745179123*2^128 + 958554470*2^192,12160744384765114960 + 2377388598569022736*2^64 + 9214129209451729085*2^128 + 1354572143*2^192;\
863663577295579432 + 16603875638091204949*2^64 + 1400349760497302400*2^128 + 545097221*2^192,2249745518891984932 + 9146185600482647637*2^64 + 322014741704739490*2^128 + 246125689*2^192,18284062964004568072 + 5943385868629521305*2^64 + 12590982819226964383*2^128 + 978870143*2^192,8624976145920885720 + 1542517613651520612*2^64 + 2450294466716418771*2^128 + 767343542*2^192,5640176741596005846 + 16368306925912964804*2^64 + 2270489179296626788*2^128 + 863089560*2^192,9157339900134468576 + 2477933687688689709*2^64 + 8094109199120959517*2^128 + 126970013*2^192,5829772663296710850 + 3728590529323673549*2^64 + 5106678102579758542*2^128 + 896737141*2^192,6958139916561833592 + 9310191537489782773*2^64 + 16625373258130824364*2^128 + 561827042*2^192;\
10607321184780479192 + 17709458900842963851*2^64 + 11077395955072508979*2^128 + 1620501387*2^192,874989081756565010 + 15733318470975460751*2^64 + 9113455169701577225*2^128 + 1046005297*2^192,10489657433462776156 + 1460119070106796468*2^64 + 5651795969026361334*2^128 + 3970324004*2^192,7594043711888562420 + 8684958252910570133*2^64 + 10614595191877477264*2^128 + 830018553*2^192,13151927642792945911 + 13618870702968569013*2^64 + 17811607288959850019*2^128 + 235264350*2^192,15939871264515993544 + 3900881685082224784*2^64 + 12502182819246436703*2^128 + 1670595672*2^192,16823242164750157229 + 18363482201894582379*2^64 + 18040799946420533664*2^128 + 220575007*2^192,15859054427557119892 + 14539914990290503628*2^64 + 12701566016946497760*2^128 + 594542471*2^192;\
16202832922578726100 + 17897350550549177492*2^64 + 6494767728298196863*2^128 + 58511249*2^192,3835211872403250352 + 3250874426804403269*2^64 + 1613092246318631717*2^128 + 650408796*2^192,7315935231411329304 + 2350793954844693388*2^64 + 9719852020640271399*2^128 + 2036481280*2^192,14654298328951664032 + 9426139701882272677*2^64 + 12251611706749719222*2^128 + 608943351*2^192,10596213399435813604 + 15275828086794241778*2^64 + 6085167402259780873*2^128 + 12343055*2^192,10652384050033938912 + 2093831990132072974*2^64 + 8898577257010126133*2^128 + 636144167*2^192,4290553714933523388 + 13231388969214952367*2^64 + 17563023820649552938*2^128 + 2142865659*2^192,7341447334847374992 + 16661041162717964569*2^64 + 16324793145880660132*2^128 + 962188284*2^192;\
6146659696203382944 + 9203760812698596181*2^64 + 6345947586628732693*2^128 + 435427069*2^192,289162132889859514 + 11343882042517902556*2^64 + 2103973225406792825*2^128 + 2033998212*2^192,3475232237296304212 + 13498757572683013869*2^64 + 6058722506915885804*2^128 + 3421837495*2^192,18113788744600033500 + 1367667932240262790*2^64 + 13398716587137695102*2^128 + 2526070122*2^192,8358447245920309631 + 11277713076497207074*2^64 + 9480357466569246515*2^128 + 3875163039*2^192,13808121333329195568 + 1939885217396452259*2^64 + 13205939462104817045*2^128 + 716683389*2^192,3133930363811398181 + 5237809530491700222*2^64 + 720140729220548908*2^128 + 3540478327*2^192,11330729305031988404 + 3255438918412031775*2^64 + 8235909006737368953*2^128 + 194830767*2^192;\
72989398423613240 + 7651534788848241154*2^64 + 11734652966373539734*2^128 + 2247560968*2^192,5054512715311543448 + 3175435102506086820*2^64 + 15979031083695635465*2^128 + 2437079910*2^192,16228847293562293992 + 3466968092980209998*2^64 + 1599748885403198103*2^128 + 110509642*2^192,8631697790404491144 + 14021350802254460464*2^64 + 15463350683642428571*2^128 + 3839700575*2^192,7965557341729484488 + 2972647762671551325*2^64 + 5196835894048762387*2^128 + 3156656464*2^192,2388434081785430888 + 7164076903350609136*2^64 + 12346438778124867688*2^128 + 412292211*2^192,17511911522869441680 + 15356154942046276654*2^64 + 8497371032397993680*2^128 + 863539334*2^192,7142652623863407232 + 6517320187430448879*2^64 + 7758703005455510019*2^128 + 778714570*2^192;\
4567560058498021852 + 12097040073368137834*2^64 + 12129272613688031251*2^128 + 4084135661*2^192,14291440351451051968 + 5224129020198301814*2^64 + 6180339381014722952*2^128 + 1926207927*2^192,13228443037296545712 + 15315428117037095689*2^64 + 12801187576154056401*2^128 + 3479068834*2^192,5938480668896187344 + 1275225891782600158*2^64 + 7319638171543718210*2^128 + 1520387703*2^192,4152923718278516696 + 16508940017418004508*2^64 + 13035866412353965667*2^128 + 2312833231*2^192,4959516433448638800 + 10296282975230285613*2^64 + 3076990314468012270*2^128 + 2157658119*2^192,4107859371064744728 + 8912146960031147664*2^64 + 1218489749196858772*2^128 + 2907347304*2^192,4613094615811608832 + 3275107599545851433*2^64 + 17496107605842531578*2^128 + 213605413*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4585 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + 4*x^5 - 16*x^3 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 + 4*x^4 + 4*x^3 + 16*x^2 + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 32

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
