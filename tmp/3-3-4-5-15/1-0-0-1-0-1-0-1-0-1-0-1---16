/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 37
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[2, 2, 0, 0, 0]  	12	3 
[2, 0, 0, 2, 0]  	16	3 
[1, 0, 1, 2, 0]  	17	2 
[1, 4, 0, 1, 0]  	20	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 6, 0, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 2, 0, 3, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 5, 0, 2, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 1, 1, 1, 1]  	18	6 
[1, 6, 0, 0, 1]  	21	5 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[0, 5, 0, 1, 2]  	20	4 
[1, 3, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[0, 0, 5, 0, 254]  	20	2 
[0, 7, 0, 0, 254]  	21	3 
[0, 4, 0, 2, 254]  	22	2 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6303548299789776786 + 17453741852383919534*2^64 + 14919501795102043048*2^128 + 1660777101*2^192,9933359711717711512 + 717200704702582653*2^64 + 13607479737840138427*2^128 + 1525177703*2^192,12389880554456390024 + 11171537699578532978*2^64 + 16497770361055853521*2^128 + 780862630*2^192,11289744612939142632 + 3924326471006791574*2^64 + 1100601859722609416*2^128 + 1630856186*2^192,7480522830949761564 + 15289329981289665499*2^64 + 18381432182181162584*2^128 + 634939184*2^192,9543512370215702060 + 12131672649082277973*2^64 + 16285645617974139768*2^128 + 1212769355*2^192,14344654668299733380 + 1398141711133370833*2^64 + 17243601936487387871*2^128 + 1949892139*2^192,11209653556004375392 + 18244910295641401935*2^64 + 3042970968219061520*2^128 + 1400047233*2^192;\
5889211546181896354 + 11109728138556925955*2^64 + 13461202115081357472*2^128 + 734839822*2^192,15276309397522796044 + 2958267110564952764*2^64 + 350116953755073142*2^128 + 493290968*2^192,13467651096191539600 + 356019474503165328*2^64 + 13000195459563464522*2^128 + 489688730*2^192,3439888318531459496 + 17076785646368531950*2^64 + 6798851667342630186*2^128 + 892009039*2^192,8819915447859459772 + 15741515302319726917*2^64 + 6213962350982573432*2^128 + 91668731*2^192,13930391539166518256 + 5715725400534682944*2^64 + 2692283234359820327*2^128 + 698667175*2^192,3683840048811129300 + 5059051613211007164*2^64 + 2409899341641593063*2^128 + 980401041*2^192,18239408045597877872 + 3919521984059173418*2^64 + 18095519290647670630*2^128 + 908750612*2^192;\
12055122824304063867 + 8750514823527853363*2^64 + 7477102446000956721*2^128 + 944348151*2^192,5160571251774403412 + 7330586404597856159*2^64 + 121727448192424923*2^128 + 1381524957*2^192,9463411555871301248 + 3538005676591087229*2^64 + 17180624419607305633*2^128 + 167870345*2^192,3429178007056344280 + 7041638058589200183*2^64 + 9022917703890876872*2^128 + 206872237*2^192,10302081453831155802 + 9333812898118338578*2^64 + 15475543569127969794*2^128 + 713138521*2^192,18218831457069641594 + 5248626013668353185*2^64 + 11887917162981782420*2^128 + 1049298754*2^192,13188261918801446590 + 12326660351704611062*2^64 + 7209466731957956069*2^128 + 848926184*2^192,13004464787867798776 + 4101403436619665960*2^64 + 10504319046688934373*2^128 + 460179130*2^192;\
9801512680526052392 + 18005558098228651493*2^64 + 436405005651717452*2^128 + 1873347274*2^192,2790391559374812128 + 2976699080025048411*2^64 + 1502807335446226842*2^128 + 888904375*2^192,10327455030859140384 + 18144795538180207592*2^64 + 1445128057039665035*2^128 + 1572024634*2^192,12151093769495587552 + 13373034515308058799*2^64 + 5460248611067499991*2^128 + 2118087398*2^192,7377045044835588712 + 12714621999715777479*2^64 + 2662768663058880359*2^128 + 1399577270*2^192,3446829142324964736 + 11795199779672610659*2^64 + 16349486193736956540*2^128 + 380545658*2^192,11217473208324611384 + 3631446312431548530*2^64 + 10632576722795413577*2^128 + 1793095038*2^192,2219658709628485112 + 11249356849306675100*2^64 + 13508582320215905360*2^128 + 1866216058*2^192;\
5227526991100091542 + 3165624893253666798*2^64 + 9485087460606770842*2^128 + 1007589736*2^192,15972333509016427212 + 14401600992798956804*2^64 + 11994502345065004229*2^128 + 796736028*2^192,317468390029697168 + 4334729313832522021*2^64 + 2500188516881737036*2^128 + 892290254*2^192,9317397749219262280 + 7711040557539270271*2^64 + 4125581014929305866*2^128 + 907112126*2^192,15680379562597101376 + 4979855976060614012*2^64 + 14802160131757130125*2^128 + 187258599*2^192,5366143714528467568 + 1262151120934287099*2^64 + 2147467051296375456*2^128 + 202710411*2^192,166995118588795092 + 2146043129786354373*2^64 + 8841869828389459781*2^128 + 587113498*2^192,3882234567900847232 + 2753882903943305633*2^64 + 4110213289408346928*2^128 + 28975599*2^192;\
5227526991100091542 + 3165624893253666798*2^64 + 9485087460606770842*2^128 + 235837800*2^192,15972333509016427212 + 14401600992798956804*2^64 + 11994502345065004229*2^128 + 100481564*2^192,317468390029697168 + 4334729313832522021*2^64 + 2500188516881737036*2^128 + 78595278*2^192,9317397749219262280 + 7711040557539270271*2^64 + 4125581014929305866*2^128 + 672231102*2^192,10555028993305030460 + 2361075007266574798*2^64 + 7267436625491240662*2^128 + 776649848*2^192,10491494283820538484 + 3880932089728326313*2^64 + 9682190557562264919*2^128 + 510900218*2^192,166995118588795092 + 2146043129786354373*2^64 + 8841869828389459781*2^128 + 1082041370*2^192,3882234567900847232 + 2753882903943305633*2^64 + 4110213289408346928*2^128 + 792338927*2^192;\
5895139456250939063 + 13409346653535045788*2^64 + 3249435739872484685*2^128 + 1299025120*2^192,16357743336302628052 + 15091024121295071730*2^64 + 3527656487414807123*2^128 + 295708894*2^192,13030500940143473716 + 7464252986192937308*2^64 + 5763946095731092706*2^128 + 1320341616*2^192,12127886793857449572 + 9397652104708853602*2^64 + 10444121835773203469*2^128 + 1281762753*2^192,5687184773788772414 + 12542564058074404317*2^64 + 7034209214695810577*2^128 + 1913765111*2^192,17037613558505780462 + 5795760427874998432*2^64 + 7015375102455568236*2^128 + 1360053929*2^192,2019572078345625754 + 2599906543026494699*2^64 + 7475196825963188701*2^128 + 317041188*2^192,12248142821553132440 + 16791991122144817628*2^64 + 5316207174224440940*2^128 + 1470391483*2^192;\
10698211408992822209 + 2183315652607798993*2^64 + 17268601905391624319*2^128 + 154799986*2^192,3085190212046618732 + 8432033631287911960*2^64 + 14466997198655179029*2^128 + 1572961814*2^192,6335122845018135916 + 4642463392308462835*2^64 + 11281802979903861826*2^128 + 867695630*2^192,14660499600861619416 + 8032823646731439240*2^64 + 3121665190859338979*2^128 + 2024211698*2^192,16540174212682089682 + 1544720930018306418*2^64 + 17570526501817824918*2^128 + 819546026*2^192,7816928189997623106 + 6913765051745551312*2^64 + 16316494031700044731*2^128 + 1749930874*2^192,17123696171108765718 + 6556714329087063012*2^64 + 10071052164457131946*2^128 + 603779801*2^192,12033551164252767928 + 4886232401040456316*2^64 + 16154335982368928274*2^128 + 1731295918*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4968 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 - 2*x^6 + 4*x^5 - 16*x^3 + 32*x^2 + 128*x - 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 32*x + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 36

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^2*y^3 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
