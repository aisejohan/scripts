/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[1, 0, 3, 0, 0]  	15	2 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 3, 2, 0, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[1, 0, 2, 2, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	6 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 2]  	26	2 
[0, 7, 0, 0, 3]  	21	6 
[0, 4, 1, 1, 252]  	21	5 
[0, 0, 4, 2, 254]  	26	1 
[0, 4, 0, 0, 255]  	12	2 
[1, 0, 2, 1, 255]  	16	2 
[1, 0, 1, 2, 255]  	17	4 
[0, 0, 5, 0, 255]  	20	2 
[0, 2, 4, 0, 255]  	22	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10807304722372519356 + 16233814039322586829*2^64 + 14073405296437944587*2^128 + 2380514502*2^192,8773112256282262312 + 3322211434253091040*2^64 + 3711105003544272994*2^128 + 3952545283*2^192,2886851964348125152 + 11517476739646564162*2^64 + 17059782642698987549*2^128 + 1401395768*2^192,11941120243297638672 + 6370171679725525320*2^64 + 17148621742419162599*2^128 + 2455898489*2^192,12026665918978915992 + 18348751737533520703*2^64 + 9098013369057426800*2^128 + 1661703743*2^192,14358848280780617600 + 16504746488135206407*2^64 + 628355166096176865*2^128 + 1178840558*2^192,8033796792992909560 + 6558787689467342240*2^64 + 1986905036450728102*2^128 + 2486646558*2^192,4176150368347644960 + 13828707229888242931*2^64 + 2288429921973703921*2^128 + 4093329017*2^192;\
17122552606338259916 + 12866578085415895947*2^64 + 14928832182154597954*2^128 + 1109683194*2^192,2158050350545485416 + 11237447412347690951*2^64 + 15677898792444584464*2^128 + 293106455*2^192,6962009965232169032 + 4431326068839413335*2^64 + 12706092597888567415*2^128 + 2571250932*2^192,3305179491139963256 + 15994883618156082468*2^64 + 2906870010476406504*2^128 + 471289968*2^192,8011367511213557792 + 9302387362582105851*2^64 + 15196893378465494290*2^128 + 224594450*2^192,16198415986817568584 + 7396634394005719166*2^64 + 9916751765986893986*2^128 + 2171494357*2^192,9190379796727095064 + 6963206095497879949*2^64 + 872471308930596099*2^128 + 599416593*2^192,4256243012488809584 + 6439676924431484545*2^64 + 1350486699814420904*2^128 + 1753989032*2^192;\
8800022773855165126 + 13800883462042808231*2^64 + 10430255936769130849*2^128 + 1049797636*2^192,9044694897741928932 + 7358321003862376716*2^64 + 13894347116020219167*2^128 + 2786514824*2^192,14984090780200416248 + 16474092472383712619*2^64 + 8323868386173061212*2^128 + 1619038768*2^192,5525145519034373136 + 106305910871833237*2^64 + 3077033914172665718*2^128 + 2173845657*2^192,9229868760115766604 + 309542203262951329*2^64 + 8511295783826910197*2^128 + 3413149441*2^192,15639997912349576280 + 8926147439121636251*2^64 + 16888065692529089823*2^128 + 1443351493*2^192,13208681460803707900 + 6734733991376538483*2^64 + 7575754548333935350*2^128 + 771149125*2^192,1402869332780328080 + 12368188453537984956*2^64 + 9744872135712038050*2^128 + 2599780032*2^192;\
12759198743640501775 + 11556989795642161978*2^64 + 4600982479749867384*2^128 + 3571590454*2^192,7716072656977153578 + 1962449080961277152*2^64 + 1920917249768282151*2^128 + 2905309830*2^192,129098049288763516 + 7032904593602851710*2^64 + 1665585059156503163*2^128 + 3965531032*2^192,12869820886244747688 + 1640778874461211393*2^64 + 6313670818899939724*2^128 + 4267247066*2^192,8589697435140473174 + 7510220442918041388*2^64 + 10126584860489156230*2^128 + 3564759633*2^192,10184017029671887748 + 4081000189382763051*2^64 + 16776445720914672819*2^128 + 3661948299*2^192,3163872810041830326 + 3209704248967302875*2^64 + 10521740273080994458*2^128 + 696023549*2^192,9778698345087065120 + 8386566474858600135*2^64 + 11381761430965269624*2^128 + 1655794993*2^192;\
1940438089659138082 + 13271818325048695392*2^64 + 15363821517360752716*2^128 + 821096986*2^192,543504351005554116 + 2800028911541820919*2^64 + 3086064823689175780*2^128 + 1347837746*2^192,384052474029739488 + 6332806666987720296*2^64 + 18279286270509830833*2^128 + 1264823425*2^192,16447288701005494840 + 1127651292606559989*2^64 + 2403510005268874039*2^128 + 3451383805*2^192,14082374038855068652 + 15332304079425332263*2^64 + 2875311072455982355*2^128 + 941939664*2^192,17642930666283140672 + 14670294314556759356*2^64 + 15907801721369047376*2^128 + 2815416754*2^192,12121092140588707284 + 9963748606374419445*2^64 + 6496784594254376830*2^128 + 221896464*2^192,16037180767331302448 + 4124237264509256434*2^64 + 13165662924451476126*2^128 + 1193931633*2^192;\
12759198743640501775 + 11556989795642161978*2^64 + 4600982479749867384*2^128 + 4192347446*2^192,7716072656977153578 + 1962449080961277152*2^64 + 1920917249768282151*2^128 + 4130046598*2^192,129098049288763516 + 7032904593602851710*2^64 + 1665585059156503163*2^128 + 4116525976*2^192,2619119747660605856 + 14849961010582684581*2^64 + 9690967880077712413*2^128 + 4003188987*2^192,8589697435140473174 + 7510220442918041388*2^64 + 10126584860489156230*2^128 + 4034521681*2^192,1987974094546477964 + 9318562126970841480*2^64 + 13399148659736900129*2^128 + 3556907626*2^192,3163872810041830326 + 3209704248967302875*2^64 + 10521740273080994458*2^128 + 3950803453*2^192,9778698345087065120 + 8386566474858600135*2^64 + 11381761430965269624*2^128 + 1840344369*2^192;\
5615838607092686754 + 15972808455837655087*2^64 + 15187369101352589176*2^128 + 112388272*2^192,11765652689667507412 + 9308428492211186656*2^64 + 1859619695605720220*2^128 + 2549113589*2^192,4704981641463649624 + 14030913219072793003*2^64 + 5849177246884089454*2^128 + 1621338556*2^192,12479677826060999104 + 10330074811431107609*2^64 + 7817010764012581436*2^128 + 392828705*2^192,14223568261120422612 + 17867988526391318865*2^64 + 10448246356431603574*2^128 + 2397498043*2^192,89007357875722776 + 10491527134419252182*2^64 + 14559476960347075943*2^128 + 1903060330*2^192,2409945957525791212 + 6138607801673939689*2^64 + 8367267016280439793*2^128 + 3513784789*2^192,4252525654541502016 + 4599136943173655791*2^64 + 3605317872383521844*2^128 + 904592121*2^192;\
17024161556283117409 + 5467022793001695830*2^64 + 17821581567619054264*2^128 + 3297098360*2^192,1489656273397639390 + 7150455283663187872*2^64 + 10131385317303089592*2^128 + 2738297010*2^192,6051655801881315092 + 3728569960856743669*2^64 + 11047436562149564687*2^128 + 982434908*2^192,15331168691279701928 + 898730118936177259*2^64 + 6164351991638702121*2^128 + 3589348881*2^192,1761534723944702674 + 4908540479113369261*2^64 + 16160410673059127193*2^128 + 290604256*2^192,2234817084137277708 + 14923160573958865835*2^64 + 14768615180389348211*2^128 + 2151543194*2^192,10590052951212436082 + 8824622933103617121*2^64 + 7203256100315481369*2^128 + 951282814*2^192,11628258776437345504 + 1966389128915112652*2^64 + 8375894032145072842*2^128 + 3209003732*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4906 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 - 2*x^6 + 4*x^5 - 16*x^3 + 32*x^2 + 128*x - 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 33

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
