/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 2, 2, 0, 0]  	17	5 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 4, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	5 
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 1, 1, 2, 1]  	20	4 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[0, 1, 2, 3, 2]  	26	2 
[1, 1, 0, 2, 3]  	16	5 
[1, 0, 2, 1, 253]  	16	4 
[0, 0, 4, 2, 254]  	26	1 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[1, 1, 1, 1, 255]  	15	4 
[0, 0, 5, 0, 255]  	20	2 
[0, 2, 4, 0, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[3093672487857214280 + 3695965156324199435*2^64 + 8327727126720330705*2^128 + 7640813162*2^192,18210044535487403168 + 485084099520822967*2^64 + 6798225301656736289*2^128 + 7451612269*2^192,2500851940849755696 + 13127188062570436217*2^64 + 2249610050531183123*2^128 + 3386265210*2^192,15858587374047825424 + 6831674258938508679*2^64 + 17171472831186173570*2^128 + 3680772303*2^192,11195896926706891888 + 1559804025753670182*2^64 + 4523171637356513901*2^128 + 4322244453*2^192,6022057402668365200 + 11244348011489199160*2^64 + 3466622714535677453*2^128 + 5464729794*2^192,2685343221297759440 + 4421849392858388485*2^64 + 4293400457523614977*2^128 + 7935051154*2^192,10263301981025492352 + 235659603676807613*2^64 + 15456505611361786186*2^128 + 5416962898*2^192;\
7574234042252004420 + 18299138968364173301*2^64 + 7436839705822574078*2^128 + 4373717203*2^192,3210759008541153336 + 7704128481394708052*2^64 + 16196352426790476924*2^128 + 7830691236*2^192,6899191366718544112 + 8992451749047389251*2^64 + 12057650491952159206*2^128 + 7083840204*2^192,12503793473604377688 + 2353342671808052027*2^64 + 17292572953293631333*2^128 + 3605063940*2^192,9009676578248086880 + 17657620112213014620*2^64 + 7846546965960614559*2^128 + 7563707450*2^192,11960348219247432760 + 13069739322097895377*2^64 + 5278585514572276094*2^128 + 8019761789*2^192,3075446263764626800 + 3283277383703910863*2^64 + 15233509967524968926*2^128 + 2596276495*2^192,18263719280745242288 + 14741151650520498913*2^64 + 6519966623352152823*2^128 + 4689809337*2^192;\
5578542340646851742 + 10577199340778606073*2^64 + 15279215894414484442*2^128 + 945908891*2^192,7608943021347230704 + 5654016518854401630*2^64 + 7302852462515725928*2^128 + 1783918151*2^192,6297123116322676252 + 12784957432265530275*2^64 + 8300011832402465754*2^128 + 8526587083*2^192,5348089151419777212 + 752027480661519688*2^64 + 3956627515999496923*2^128 + 514642925*2^192,14829372984604885524 + 7744570408536319430*2^64 + 12207690235195172987*2^128 + 8386150421*2^192,10301276298674279196 + 12579735034903242226*2^64 + 10139499551380898495*2^128 + 970076637*2^192,7482379048034968404 + 1140386531268438957*2^64 + 4073453588303877374*2^128 + 7799761261*2^192,646484811889987424 + 12458287747363505736*2^64 + 7079259566009519692*2^128 + 8308975676*2^192;\
10123067535465626443 + 8283971100767104197*2^64 + 18206433512173257624*2^128 + 8090858260*2^192,17403154213892520984 + 10411472800889259791*2^64 + 6371242903267949295*2^128 + 259108862*2^192,2971352606190798310 + 11071936496033088554*2^64 + 3375774764288472770*2^128 + 2204237277*2^192,7088197669306681782 + 3278092241310762706*2^64 + 3642296381523083620*2^128 + 105536671*2^192,6467661728006452642 + 12540147124318537752*2^64 + 13290043812626217716*2^128 + 1501133484*2^192,4757865040691341542 + 9685758261633493469*2^64 + 18404201076496900444*2^128 + 520004860*2^192,15089512080729476162 + 8477322176816122575*2^64 + 16707086573560219658*2^128 + 3796661968*2^192,16318901198880462368 + 6329615810366628155*2^64 + 11466250590273813131*2^128 + 3550010964*2^192;\
10856366059428179496 + 13179714115930368099*2^64 + 6604084052291719334*2^128 + 1952340038*2^192,10338405359502936416 + 15844115488077893957*2^64 + 12753804520046260*2^128 + 6271565052*2^192,1761724774245074016 + 11253239764414493232*2^64 + 3784501505905239818*2^128 + 1961734650*2^192,4499054542537856032 + 4507659588541238442*2^64 + 5825476334774127392*2^128 + 8303438790*2^192,3450185134080260640 + 6090104491613072744*2^64 + 9552717012263396746*2^128 + 6290781300*2^192,8935645700490574944 + 9827656587547608739*2^64 + 2208188078878753022*2^128 + 1691207273*2^192,11802978615138632416 + 3134276956962485765*2^64 + 15677658172408773438*2^128 + 7860451244*2^192,5963796309203689408 + 1128081089768570664*2^64 + 18386715434136081948*2^128 + 1291610578*2^192;\
73177929226025653 + 4833984129201538712*2^64 + 15967042219884709228*2^128 + 2754081829*2^192,13956065486255912368 + 7938679148112665147*2^64 + 9602497952193988536*2^128 + 28525352*2^192,16724535932197326658 + 16663166116129615041*2^64 + 9612036137216400613*2^128 + 5552966297*2^192,3392409486429468906 + 12387780720619546332*2^64 + 4987274929807861595*2^128 + 6882909508*2^192,656382372434533238 + 13947827654031915026*2^64 + 403691472134750141*2^128 + 3467134668*2^192,25149809739392538 + 18402263885831328971*2^64 + 14407336319717259437*2^128 + 7696540083*2^192,13516899582566821494 + 2071268224125986142*2^64 + 2611452103678744394*2^128 + 7999413152*2^192,13360747844883101808 + 6639785635403432183*2^64 + 4191949978753721477*2^128 + 6494929963*2^192;\
8634360175430044482 + 17850134445750118355*2^64 + 10558204231289340222*2^128 + 5274923524*2^192,13411158218632749832 + 3725063839858111358*2^64 + 12141247807759447434*2^128 + 5434546212*2^192,4675312436962951308 + 11863747517124674792*2^64 + 10105911278372665377*2^128 + 6504715350*2^192,8059603867517124068 + 2349728213170742532*2^64 + 8488326393358418567*2^128 + 2916238248*2^192,8550274773692217924 + 10830604161235359849*2^64 + 6907458248263571985*2^128 + 391234674*2^192,1045450676752706884 + 6838228775149765019*2^64 + 13233941599907680385*2^128 + 3827218818*2^192,2325713214542666708 + 4458834434102944588*2^64 + 5133653623296132907*2^128 + 3605380123*2^192,62271968896832304 + 15615832651478239678*2^64 + 18355995032053221265*2^128 + 7712974789*2^192;\
17748090452953016758 + 5408466852779547454*2^64 + 14661393042332350341*2^128 + 1616365664*2^192,15136767448497592200 + 7102231009741050235*2^64 + 8826498289302079197*2^128 + 3146702274*2^192,9355921057051140740 + 10141960288754770781*2^64 + 12650478165979188487*2^128 + 3061694439*2^192,7564153581018449804 + 4506197168805308121*2^64 + 8770827390347487891*2^128 + 4717577674*2^192,18369150659101781468 + 9503566769568766679*2^64 + 5606091320590160220*2^128 + 4016697404*2^192,12891749150421514572 + 10795819711181091591*2^64 + 10033205178108947*2^128 + 3852622725*2^192,125327592228496300 + 18372786898359421388*2^64 + 16175227274608870109*2^128 + 5978654588*2^192,12600504058104393872 + 5649966305974374580*2^64 + 17494439386649062478*2^128 + 4531205362*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4706 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 34
The valuation of subst(g,x,A) is: 33
