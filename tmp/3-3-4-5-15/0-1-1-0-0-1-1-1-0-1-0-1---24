/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 59
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	4 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	2 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	4 
[0, 5, 2, 0, 0]  	23	4 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	5 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[0, 4, 2, 0, 1]  	20	4 
[0, 2, 1, 2, 1]  	20	4 
[2, 0, 0, 3, 1]  	21	7 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 2, 0, 4, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	5 
[0, 0, 5, 1, 2]  	25	2 
[0, 5, 1, 0, 4]  	19	5 
[0, 1, 5, 0, 5]  	23	3 
[0, 3, 0, 2, 253]  	19	4 
[0, 1, 0, 4, 253]  	23	2 
[0, 0, 2, 3, 253]  	23	1 
[0, 0, 0, 5, 253]  	25	1 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	4 
[1, 0, 1, 2, 254]  	17	4 
[0, 7, 0, 0, 254]  	21	5 
[0, 6, 0, 0, 255]  	18	4 
[0, 1, 4, 0, 255]  	19	2 
[0, 1, 3, 1, 255]  	20	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
------
The gap is between 6 and 252.
Lengths: 1 1 6 6 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1138342813563902362 + 15013295745806453849*2^64 + 15974266990341557951*2^128 + 5462291900*2^192,5964873920224882064 + 16797162967891786895*2^64 + 14660640790749707761*2^128 + 7695987361*2^192,17487415862472069400 + 16597310634597248324*2^64 + 6012492251359337735*2^128 + 5392330980*2^192,15983572027498460664 + 15580312111379084549*2^64 + 849925495105312960*2^128 + 3580432212*2^192,3792777416815075488 + 14869079739915224580*2^64 + 11914428624007929797*2^128 + 5393394957*2^192,9183780770041770772 + 13317306743996533997*2^64 + 7872695117594865063*2^128 + 5228747171*2^192,4372224941049825652 + 3018493894849632324*2^64 + 2801426873998197058*2^128 + 4193008705*2^192,10404384990493451560 + 2206807605334469241*2^64 + 8437040483774896365*2^128 + 4111413529*2^192;\
14087944216127730550 + 4613847589656931670*2^64 + 11809310264184452665*2^128 + 602226936*2^192,1598730687280507664 + 521920239367382981*2^64 + 15177688516661219728*2^128 + 3383048994*2^192,15887960380653876264 + 4157832482864393961*2^64 + 1833907672973182331*2^128 + 3227367664*2^192,15286371192709315640 + 16431242687963067284*2^64 + 16987875650830617282*2^128 + 3103332377*2^192,18377484505765054064 + 7927306369050379836*2^64 + 1835310520547744973*2^128 + 2788078516*2^192,17275955152655307004 + 469944270032033696*2^64 + 9766090599391549859*2^128 + 1340216227*2^192,9865682413786065020 + 4427654004693378878*2^64 + 4945754532490104962*2^128 + 1537731456*2^192,14719414656909085112 + 18402745677967249012*2^64 + 16933289886553555497*2^128 + 869411999*2^192;\
7236834738155023733 + 7428916840705769766*2^64 + 15976036989153264090*2^128 + 7029544365*2^192,3475932767009103128 + 12139683266362721473*2^64 + 15522730280913976352*2^128 + 493743752*2^192,10643928752098830300 + 1420075288555709283*2^64 + 2927995338724501005*2^128 + 6127143065*2^192,15789963032618758988 + 13933652056280608925*2^64 + 2580443015460736406*2^128 + 1693439764*2^192,5219109288695584768 + 14564365910570590355*2^64 + 14601235743543050956*2^128 + 3835113155*2^192,15004274226416242074 + 14585851626604339994*2^64 + 12131193641966072739*2^128 + 852714276*2^192,17929011252189541322 + 8008511039826419824*2^64 + 11307892815415607676*2^128 + 5270900616*2^192,11804315598979456564 + 7082541609515589226*2^64 + 2662764934231733407*2^128 + 771490456*2^192;\
6929688497506139277 + 13581049059355029392*2^64 + 2341546496688673892*2^128 + 74754340*2^192,5892442440505256728 + 13172498375659813200*2^64 + 13133280349952419174*2^128 + 731704161*2^192,10876577590299899820 + 13275890046471786858*2^64 + 1344106746465565690*2^128 + 1014116916*2^192,2716071872882874700 + 16029597403905454569*2^64 + 5633326636074232046*2^128 + 691155160*2^192,9097829816625761776 + 174322130557812671*2^64 + 13018795318888821222*2^128 + 4261993640*2^192,15154665035002199258 + 13884335317950979491*2^64 + 7021516769166208588*2^128 + 3778380282*2^192,15782798325274817290 + 16451327567766354608*2^64 + 3403873710450326148*2^128 + 4833915080*2^192,3342759649590253108 + 5649049675825588097*2^64 + 4906466115441288880*2^128 + 8286291919*2^192;\
15443219320350190188 + 17928147665229268047*2^64 + 16115477538696786107*2^128 + 40033871*2^192,7733719165472635520 + 6156545054316326511*2^64 + 6029942844940760978*2^128 + 6528784708*2^192,6408129746800040272 + 16512581167633056443*2^64 + 3228678892821281581*2^128 + 1433773501*2^192,6358019087065726816 + 7898259819988688873*2^64 + 2971465173499466257*2^128 + 402830026*2^192,15425877301739220160 + 3723646702180465926*2^64 + 12507893479104992528*2^128 + 5037164004*2^192,6619752476740191528 + 10592781059975711692*2^64 + 4839680591812811451*2^128 + 5599844367*2^192,3700660865568979720 + 16234630502860897762*2^64 + 9442469923748569430*2^128 + 1230034196*2^192,1966373732937614736 + 11962599660043987605*2^64 + 9289694196970296471*2^128 + 4528217264*2^192;\
6929688497506139277 + 13581049059355029392*2^64 + 2341546496688673892*2^128 + 7993600292*2^192,5892442440505256728 + 13172498375659813200*2^64 + 13133280349952419174*2^128 + 261942113*2^192,10876577590299899820 + 13275890046471786858*2^64 + 1344106746465565690*2^128 + 1685205556*2^192,661413669424142652 + 5554473528729297712*2^64 + 12387920758429777426*2^128 + 1639434010*2^192,9097829816625761776 + 174322130557812671*2^64 + 13018795318888821222*2^128 + 2550717608*2^192,17209323238460931306 + 5912715119417584732*2^64 + 266922646810663209*2^128 + 8500800440*2^192,15782798325274817290 + 16451327567766354608*2^64 + 3403873710450326148*2^128 + 4129272008*2^192,3342759649590253108 + 5649049675825588097*2^64 + 4906466115441288880*2^128 + 5635491791*2^192;\
16120543676320154826 + 15694243421357870016*2^64 + 15703207647329441102*2^128 + 997314503*2^192,14123890760322575328 + 1806938627366324117*2^64 + 11081254903169148341*2^128 + 3267395272*2^192,17291275622147167736 + 9709408707410979837*2^64 + 801403394627725820*2^128 + 8472592025*2^192,7863281782544324504 + 17774382204416515924*2^64 + 12915551321745904846*2^128 + 6800271989*2^192,5031334931187227264 + 12508731311981546733*2^64 + 2446905457969931195*2^128 + 2182203628*2^192,12088174565442367380 + 16948887490963212199*2^64 + 16523558956634071888*2^128 + 8164281981*2^192,8078421818111924596 + 14252955435481999274*2^64 + 11173826868303701217*2^128 + 7608688290*2^192,17843723328413511624 + 12354376194617489374*2^64 + 13456117574708301886*2^128 + 5809200464*2^192;\
12414819805965961326 + 15684987231851905187*2^64 + 2047418873555557636*2^128 + 2682836038*2^192,3799977573051325840 + 18149289754952177102*2^64 + 17517492918303526024*2^128 + 1727470821*2^192,15715906018590618120 + 6759126582387852956*2^64 + 15194650816450442232*2^128 + 383805470*2^192,16047893721034764104 + 1483388783783654070*2^64 + 1926413646274690653*2^128 + 278734535*2^192,4777689189875465536 + 5881565601867167224*2^64 + 10858991449999116360*2^128 + 2565831761*2^192,6253237764183535452 + 18126323518787531723*2^64 + 12789622727021973491*2^128 + 2058482413*2^192,11104968982125804444 + 3890036778062158334*2^64 + 4636835702107376196*2^128 + 1459838726*2^192,5978109908366194456 + 14640009248849735990*2^64 + 16669153819108296256*2^128 + 354637*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4412 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
