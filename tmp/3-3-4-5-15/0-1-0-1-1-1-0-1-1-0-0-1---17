/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 46
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 2, 2, 0, 0]  	17	5 
[1, 5, 0, 0, 0]  	18	6 
[1, 0, 0, 3, 0]  	18	2 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	4 
[1, 1, 2, 1, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 0, 5, 0, 0]  	20	2  <--- 3
[3, 4, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 2, 4, 0, 0]  	22	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 2, 1, 3, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[1, 3, 1, 0, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	5 
[1, 1, 1, 2, 1]  	20	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 3]  	16	5 
[1, 0, 2, 1, 253]  	16	4 
[1, 3, 0, 0, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[1, 1, 1, 1, 255]  	15	4 
[0, 2, 1, 2, 255]  	20	1 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8996230793908073832 + 13128442732914673742*2^64 + 12813161090866114554*2^128 + 4213310943*2^192,16028252068708492816 + 8983627179591671000*2^64 + 3085650149786040510*2^128 + 6225064020*2^192,14378134849829060448 + 5154994192818251353*2^64 + 4844686933950813750*2^128 + 1038200959*2^192,6258193786798479120 + 13651995493407439402*2^64 + 10681992017832174455*2^128 + 5804095056*2^192,15711131581696338000 + 13368433850519621333*2^64 + 15221685407226895836*2^128 + 3782781782*2^192,8854576797191380048 + 16000989719385869562*2^64 + 3428032975304138382*2^128 + 3148088342*2^192,8668720680946387664 + 1226311787267562311*2^64 + 796035342324753746*2^128 + 6328463507*2^192,2788455897110506688 + 8998282229000040038*2^64 + 15792443358469573442*2^128 + 2555886572*2^192;\
12286046473880470366 + 13520637958093544609*2^64 + 2461913893913428080*2^128 + 5091239157*2^192,11375161782970863660 + 16276270226164680195*2^64 + 8526256306526297623*2^128 + 8552885116*2^192,17159833297610107032 + 15137276900782833252*2^64 + 8113633316493495701*2^128 + 4069393361*2^192,4193210187830892948 + 4531876825174900031*2^64 + 4053737242547742458*2^128 + 4549053475*2^192,5947178589185215732 + 9431385957686997124*2^64 + 17085989715737330006*2^128 + 6283245384*2^192,9632990450163086804 + 8851531687214044457*2^64 + 1335800034030266871*2^128 + 5854942605*2^192,16663121180489824556 + 12688457214631596820*2^64 + 2733064099659898979*2^128 + 1249371267*2^192,1834907437825529904 + 9743239994409220703*2^64 + 7458107624976675822*2^128 + 6490522545*2^192;\
15681343977097381902 + 4255375858604732223*2^64 + 17743745042240606347*2^128 + 2383151550*2^192,14589863769722413396 + 17427486977535888251*2^64 + 4502844485644528571*2^128 + 2667406612*2^192,12241633002418466392 + 15419902579046754080*2^64 + 17927451181660352460*2^128 + 7556747352*2^192,13084252032780125652 + 13570675541829115500*2^64 + 11239373108747384040*2^128 + 2490895575*2^192,7576609051725149612 + 6990155128311352356*2^64 + 1149160501663494737*2^128 + 375125667*2^192,12795017516808956932 + 13184906515650606574*2^64 + 2495042674469007767*2^128 + 8569012187*2^192,1926550092297482724 + 13026129636614640416*2^64 + 8562610750158160254*2^128 + 1545867565*2^192,10809754546814021168 + 11564595536669841302*2^64 + 3373877534184770002*2^128 + 1525476908*2^192;\
954790849963509683 + 8570241932194933001*2^64 + 16491907707990669699*2^128 + 4151691084*2^192,1765784008555837234 + 14592112950659275130*2^64 + 16964907441508491011*2^128 + 7860735772*2^192,5202364094193797516 + 5195547312986833740*2^64 + 18222179944036422441*2^128 + 5269225373*2^192,2012855789098976866 + 17848976214610179004*2^64 + 8534081011860665885*2^128 + 5989550217*2^192,12297132498572377054 + 17794505511766959652*2^64 + 3458784380965247323*2^128 + 6712679514*2^192,8291074001032978266 + 3305600860248306445*2^64 + 16677498100056786584*2^128 + 2787404571*2^192,5976531857831667530 + 3412577699577525894*2^64 + 8400477795711236287*2^128 + 578927794*2^192,14055066694624589384 + 17141879251784639819*2^64 + 18401636964263240469*2^128 + 2979354394*2^192;\
1688250961145860364 + 2926711217794194010*2^64 + 13803806121779391821*2^128 + 298400457*2^192,8166697588392514088 + 13997624173990508799*2^64 + 9535000474454711958*2^128 + 7014739547*2^192,17102108895792228080 + 12672006635337260977*2^64 + 13529881473234712605*2^128 + 5098038830*2^192,8967286570276598360 + 11318905200412327816*2^64 + 11500569977593453340*2^128 + 3987714977*2^192,5664996912878913624 + 5719867311962982822*2^64 + 10162021115545095003*2^128 + 7644961871*2^192,4827024619287850840 + 14972682100777949508*2^64 + 13534769954898386731*2^128 + 7231167309*2^192,7231609182370379528 + 15622611418385463591*2^64 + 4593023121186385410*2^128 + 2833066060*2^192,7717640663176073120 + 16389322687130447070*2^64 + 3379981172648178355*2^128 + 6124089137*2^192;\
10621241101872981067 + 6374854384004255782*2^64 + 3437070886393058379*2^128 + 7908025826*2^192,6609796335483280930 + 6419607754090462954*2^64 + 1244327422801452897*2^128 + 5211140449*2^192,14775276335518215836 + 12591614866675799681*2^64 + 9424092203904616015*2^128 + 7496492486*2^192,16004295509956747554 + 16702700708289217586*2^64 + 18296080026389616461*2^128 + 3775469689*2^192,5468924354065572446 + 12904555631868958187*2^64 + 5914102405018785272*2^128 + 8161487512*2^192,2879373730019886362 + 14149982362513817261*2^64 + 1180272194643774395*2^128 + 2987165145*2^192,15052198582988554714 + 3685098708620557015*2^64 + 6624063262696515325*2^128 + 2613927273*2^192,13187289816440279752 + 5415893623312032018*2^64 + 211402362510260559*2^128 + 4720659248*2^192;\
11914883416213789668 + 7268442468348505513*2^64 + 224723976753650445*2^128 + 1193739374*2^192,8185831327431102592 + 14616387366631838496*2^64 + 1539071238700267224*2^128 + 391522123*2^192,12004824433867945280 + 5128418420825351310*2^64 + 8119564832362109960*2^128 + 5618325770*2^192,15031081924640820520 + 10931318038660337022*2^64 + 17729337780920008646*2^128 + 1068387117*2^192,11094186392820448192 + 1734031995208596887*2^64 + 8139551407750377177*2^128 + 4898310849*2^192,10774417875291641272 + 8486179025470585288*2^64 + 10564256162796795438*2^128 + 6704960726*2^192,12217504028034447440 + 12280917838959039007*2^64 + 358145909622571660*2^128 + 6985720217*2^192,1008298938247950432 + 3530873574266876385*2^64 + 11409582621904502645*2^128 + 7826936181*2^192;\
9098367107591450964 + 7013714743878352210*2^64 + 4418544200071077338*2^128 + 4241650964*2^192,6297435576351730656 + 11706486484765991006*2^64 + 15753349857687787586*2^128 + 8272839659*2^192,9786732680365472528 + 16680536051280340069*2^64 + 6427738049646999824*2^128 + 3282858426*2^192,12269493389957433576 + 1413689440478591617*2^64 + 5794716647353129236*2^128 + 5005635855*2^192,8923872970468902880 + 13182877109542903286*2^64 + 17117678988868221771*2^128 + 2498786865*2^192,10635816438656211864 + 4311201688908606911*2^64 + 6816195609956022645*2^128 + 4811935706*2^192,10960591501414620656 + 3197403378937006488*2^64 + 15636853633371320190*2^128 + 2230279157*2^192,8575799798018523104 + 4137858532624170620*2^64 + 6048880725904519716*2^128 + 5177767225*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4705 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30
