/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 44
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[3, 0, 1, 1, 0]  	18	8 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 2, 0, 1]  	17	6 
[2, 3, 0, 0, 2]  	15	6 
[0, 0, 5, 1, 3]  	25	2 
[0, 4, 0, 2, 5]  	22	4 
[0, 3, 2, 1, 251]  	22	3 
[0, 0, 0, 5, 253]  	25	1 
[2, 0, 1, 1, 254]  	15	5 
[1, 5, 0, 0, 254]  	18	5 
[1, 0, 1, 1, 255]  	12	3 
[0, 5, 0, 0, 255]  	15	3 
------
The gap is between 6 and 250.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[16523357883646568008 + 4149661545335454380*2^64 + 17423957062053663394*2^128 + 6668370034*2^192,18269714323301595856 + 12209555176653607204*2^64 + 3181150857287778859*2^128 + 33102062005*2^192,7815704312311558048 + 13369404843571610303*2^64 + 11370622647074616444*2^128 + 25370366693*2^192,14908948603632387600 + 6546387162669865474*2^64 + 12472503923288812069*2^128 + 721123404*2^192,8279124518773409760 + 17320095401950951638*2^64 + 16210010409358103224*2^128 + 24546090828*2^192,3572904349855990032 + 9218973689413511425*2^64 + 10940625208888726715*2^128 + 13310926799*2^192,15697648623245911952 + 9143507880913705867*2^64 + 17075530748060826355*2^128 + 2986951578*2^192,8626448524633030464 + 3846099900990728763*2^64 + 7127212620153864003*2^128 + 26450117939*2^192;\
3674184125689412535 + 12992804311233302680*2^64 + 13127126349216874887*2^128 + 13758051297*2^192,3310598138241337654 + 15806848792686397401*2^64 + 11289996677807303111*2^128 + 3647383078*2^192,10709180023436549628 + 10869337380340538578*2^64 + 3659011210124320591*2^128 + 19925460476*2^192,12480299064554590318 + 4793513600602011015*2^64 + 3952237091233493447*2^128 + 9241438142*2^192,537290021469871124 + 11878666133184501223*2^64 + 7830520635969976658*2^128 + 7189703413*2^192,1705457017703082174 + 9867261122860312568*2^64 + 11322241975536817407*2^128 + 18769509687*2^192,5048863641905189870 + 12738240775189059448*2^64 + 7404066412595372100*2^128 + 17563132550*2^192,8083893602604159576 + 7518966991824497867*2^64 + 9192186586725853547*2^128 + 4297951785*2^192;\
3647451917202394503 + 16918194050756264173*2^64 + 13777805293891998563*2^128 + 25975529931*2^192,425926793772316310 + 1944606485078454137*2^64 + 17320013272907696620*2^128 + 26095526244*2^192,4795829700150279356 + 2881084833550680075*2^64 + 11055687613506922012*2^128 + 515494900*2^192,8844383179228240846 + 11692379633559977497*2^64 + 12622690458851931197*2^128 + 20767116566*2^192,13842349389449230676 + 10146438564918984681*2^64 + 10040472308134712394*2^128 + 24199891164*2^192,5304634564706542366 + 16907676714657677137*2^64 + 4575484747507634538*2^128 + 26104271062*2^192,5343668470530700750 + 526592997813675182*2^64 + 5328990884308789180*2^128 + 27478145717*2^192,4462029063189040600 + 14985022489196091452*2^64 + 5353998594611287368*2^128 + 2768528133*2^192;\
16502050095470760824 + 9535814306128258595*2^64 + 14040313243804028004*2^128 + 29904013772*2^192,7657400182551083440 + 18340039439409500178*2^64 + 772841277702335923*2^128 + 5120775003*2^192,7148579251142213504 + 5592099822815466996*2^64 + 15221163376813994153*2^128 + 18004172667*2^192,10817859377380885968 + 5229681114523598596*2^64 + 515472085281787075*2^128 + 25322548495*2^192,6304516385892857504 + 14019568359160181212*2^64 + 12152489298208587548*2^128 + 4423053657*2^192,3698254101971364464 + 222348785655823607*2^64 + 10614994082097237738*2^128 + 23844401188*2^192,7193808049386232848 + 15544243698804291285*2^64 + 15864302522602923073*2^128 + 34282802271*2^192,9585921930369135680 + 5318941843327652551*2^64 + 1844754758638593379*2^128 + 2242787119*2^192;\
9692558612184826046 + 7233579421713966927*2^64 + 17286886763880593302*2^128 + 29935670768*2^192,1584802683297990796 + 2160497100110786690*2^64 + 12783253926705227764*2^128 + 1316667002*2^192,15921131384675358872 + 11462610613520784370*2^64 + 4278262732253563830*2^128 + 25509496292*2^192,9333438850609225884 + 15326634170791324650*2^64 + 7030624833103337553*2^128 + 7874645293*2^192,8689464363712169448 + 3811124896415435749*2^64 + 13408916598299087069*2^128 + 9667661229*2^192,2783897430301153948 + 14986559972613264281*2^64 + 15384990315851484076*2^128 + 16878045187*2^192,8630474668686893788 + 20712635740702014*2^64 + 5502723546562284092*2^128 + 4050926421*2^192,16162590357468790704 + 10801787406228297600*2^64 + 13789173771070678409*2^128 + 19867055240*2^192;\
15115834874935440166 + 2588115419644201916*2^64 + 13683723268241796449*2^128 + 4788461609*2^192,13305933074934298716 + 16324157544342307803*2^64 + 8114187112642088739*2^128 + 32571032666*2^192,6831067457679163416 + 6319998570365395437*2^64 + 17329112213392799389*2^128 + 5576570930*2^192,15135918779344659916 + 12821388418901503991*2^64 + 15308550463421439598*2^128 + 14788530246*2^192,17989031896138521544 + 1014883624510114240*2^64 + 16179873007507737762*2^128 + 25969896305*2^192,10130875500866545644 + 14769623824789972081*2^64 + 16759179433380929510*2^128 + 34238419958*2^192,329698686162916044 + 6091563894882069417*2^64 + 849352073965611449*2^128 + 4810621885*2^192,12284043173977651184 + 12622735143897601657*2^64 + 8454134928724387638*2^128 + 22665952113*2^192;\
13383052997095092849 + 10230547724621546630*2^64 + 6238041337956163011*2^128 + 3370254855*2^192,16815643466334057370 + 1646248302211133799*2^64 + 15684226901996705659*2^128 + 26359492393*2^192,14571133291687481156 + 11590640191187484327*2^64 + 10331600680392845703*2^128 + 13282569135*2^192,9952592981476189762 + 2473138523122046386*2^64 + 13115634439094407536*2^128 + 32264904715*2^192,13977890360998715276 + 13028890564361116959*2^64 + 12571290305617993877*2^128 + 20938129771*2^192,14181971777653945298 + 17272781912323577860*2^64 + 137470213174859093*2^128 + 24236177415*2^192,14325235738367100610 + 14021507012635693309*2^64 + 10910477361357220842*2^128 + 681332327*2^192,16139238298363846632 + 6291187034964819763*2^64 + 15272630016055278172*2^128 + 26424546079*2^192;\
613909469858495576 + 12504184954995830902*2^64 + 14765385044723875571*2^128 + 8634771314*2^192,14602991904253411440 + 5123646825812619529*2^64 + 13385405219594417174*2^128 + 11990145061*2^192,7852526463119849824 + 1253781052355806972*2^64 + 5331117975977864967*2^128 + 559282856*2^192,10436338013790908464 + 8597108049662751026*2^64 + 179476508261895546*2^128 + 2549426334*2^192,14338109308928855328 + 5682743534681356434*2^64 + 7551315343246368337*2^128 + 8633281922*2^192,16914123328529248816 + 2579333444744829076*2^64 + 10285380268553689444*2^128 + 12150039737*2^192,9011938089105458736 + 2237531308367965389*2^64 + 18248790835368560948*2^128 + 9963425537*2^192,17322347062151485760 + 10981549469576642781*2^64 + 3207639797573343308*2^128 + 5038797096*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 + 4*x^5 + 24*x^4 + 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 21
