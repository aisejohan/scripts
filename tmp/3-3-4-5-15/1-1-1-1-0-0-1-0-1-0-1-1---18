/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 52
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[3, 0, 1, 1, 0]  	18	8 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[3, 0, 4, 0, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[0, 4, 2, 0, 1]  	20	4 
[3, 0, 3, 0, 1]  	21	6 
[0, 3, 0, 3, 1]  	24	4 
[0, 2, 1, 3, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	3 
[0, 1, 2, 3, 1]  	26	2 
[2, 3, 0, 0, 2]  	15	6 
[0, 3, 2, 1, 5]  	22	3 
[0, 3, 1, 2, 5]  	23	3 
[0, 1, 1, 3, 252]  	22	2 
[0, 1, 0, 4, 252]  	23	2 
[2, 0, 1, 1, 254]  	15	5 
[1, 5, 0, 0, 254]  	18	4 
[0, 0, 4, 2, 254]  	26	1 
[1, 0, 1, 1, 255]  	12	4 
[0, 5, 0, 0, 255]  	15	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 6 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[15257479320138882148 + 5210766373307609328*2^64 + 396000474989588590*2^128 + 1984755432*2^192,15586798467887638528 + 5918924184679487717*2^64 + 984108200089143658*2^128 + 693325241*2^192,16381330935761418832 + 9102402303670877772*2^64 + 1659382586749350419*2^128 + 4200907412*2^192,9737637106889153856 + 11662012595942147885*2^64 + 6225113917779053856*2^128 + 3155186323*2^192,8367301857166426264 + 11794508703372508408*2^64 + 6096204005838029446*2^128 + 1791352006*2^192,14556168881813332920 + 16791677729626612714*2^64 + 9882731508938675625*2^128 + 3247016769*2^192,2644130467318550688 + 6036686953901042282*2^64 + 1723350780566104182*2^128 + 1442482908*2^192,10894447334342640016 + 5989166526693652186*2^64 + 13744367757652283248*2^128 + 1325270717*2^192;\
5736890098069603061 + 16846862388078882389*2^64 + 7562823172098154484*2^128 + 763690266*2^192,18040111190370447136 + 7673562636663980156*2^64 + 6810774276774302091*2^128 + 2524613320*2^192,273894376024506906 + 6367752188248346172*2^64 + 926369173786650029*2^128 + 2106292788*2^192,17126970206902957746 + 5125490662176418848*2^64 + 13925426204029030564*2^128 + 2126482594*2^192,4344064558116046106 + 984182603000775325*2^64 + 3661027043381763437*2^128 + 1486111134*2^192,4353575797608201778 + 17304756127736634818*2^64 + 13513035157174263636*2^128 + 2527441254*2^192,16184283751032051880 + 3887542623471898450*2^64 + 12995222886072787500*2^128 + 636100428*2^192,15836518793599657812 + 6654719248749975577*2^64 + 8080498236706959683*2^128 + 337269685*2^192;\
4498492022503391761 + 16637043093980558132*2^64 + 8659390117011627102*2^128 + 2559959689*2^192,3924212566198019696 + 8815661184405435036*2^64 + 14426580074240536732*2^128 + 2658236025*2^192,7916455102541143738 + 17853535461789794811*2^64 + 3736437929392417247*2^128 + 2019779063*2^192,9740463321239174754 + 6140959542104398822*2^64 + 1749155716623151448*2^128 + 1275810495*2^192,3879169886610537514 + 11375086356710220286*2^64 + 9149439558156544140*2^128 + 2368437272*2^192,3824234238050586354 + 80389833427317016*2^64 + 11405163826171620921*2^128 + 191608727*2^192,3098944337758352168 + 9978473910452620653*2^64 + 13663529885212275672*2^128 + 655128779*2^192,16484742672514201396 + 7513872279407182782*2^64 + 17672620145862869149*2^128 + 105095907*2^192;\
5770509770064358525 + 17332913177982996843*2^64 + 8047523094891942680*2^128 + 774798506*2^192,9410508268219768752 + 5918990435501849474*2^64 + 3537637528917109814*2^128 + 750986896*2^192,1587002072052347730 + 10592662066253370587*2^64 + 14865659957673708328*2^128 + 1729891049*2^192,4382584139112014858 + 6373231583769937629*2^64 + 13373599417374858449*2^128 + 3704893397*2^192,12684604773939686066 + 5305665875475252965*2^64 + 1515453532978078215*2^128 + 771089535*2^192,1578981800518422666 + 18148659082979637249*2^64 + 4690582020262955199*2^128 + 976866758*2^192,17393296761314610840 + 7848800842387238952*2^64 + 15354146217340409977*2^128 + 2021476041*2^192,13578566719000191508 + 16861168588583609867*2^64 + 2267746677714344501*2^128 + 3001783294*2^192;\
6594873068213657523 + 18061951905158407602*2^64 + 3322373643714045864*2^128 + 1133766359*2^192,13730579524782770464 + 5977194092363767285*2^64 + 12971658588733994913*2^128 + 3747949248*2^192,3351548219710805932 + 4718568196563528176*2^64 + 3667389521441966536*2^128 + 4022485722*2^192,16827032663159239604 + 671128167587160107*2^64 + 7442823414933512733*2^128 + 188717079*2^192,4133160279558774 + 16328529713468113468*2^64 + 9911360519396775469*2^128 + 3190259172*2^192,8084086188442352934 + 2331585630097732441*2^64 + 2310528148296739563*2^128 + 3578596330*2^192,13337546236895316148 + 11174260582754949806*2^64 + 12449926359773802914*2^128 + 784274120*2^192,9305531187543537220 + 10289976169133429387*2^64 + 13991767250962161990*2^128 + 1637047054*2^192;\
1549247057082110439 + 10998735579643681208*2^64 + 12739543053263367193*2^128 + 3331111608*2^192,10422154783086686576 + 14394584352567300328*2^64 + 7078714133003882451*2^128 + 3799321540*2^192,2975603633729834520 + 2974923344190025558*2^64 + 6144723594961435820*2^128 + 859874230*2^192,4776098791719638576 + 535741284402927665*2^64 + 847151686435395812*2^128 + 1866113067*2^192,7104508497200968310 + 6920218982881526990*2^64 + 4950209629030284170*2^128 + 181802691*2^192,16684356668455523046 + 7270785825669193010*2^64 + 15468493281359204555*2^128 + 3913634948*2^192,8260573062054739948 + 15358804656910616359*2^64 + 14996309837785059814*2^128 + 698532703*2^192,9001480828692390004 + 7216589980335243206*2^64 + 2816590685192963659*2^128 + 1012506940*2^192;\
16026346007083771977 + 3233775133039293504*2^64 + 5875506665754714574*2^128 + 3801512050*2^192,6925374640506088696 + 17939580816675366642*2^64 + 4667173368375996159*2^128 + 3444047537*2^192,16092370329187482902 + 2379698477302128280*2^64 + 18320173990386611054*2^128 + 2416914378*2^192,12609138967827134838 + 16853397655470282341*2^64 + 7370841133344706343*2^128 + 445212479*2^192,2613522235892177578 + 7797118135898376966*2^64 + 1895531054864790224*2^128 + 2303366418*2^192,15837097604226832146 + 3576918406576170588*2^64 + 9354709205210461135*2^128 + 2852131415*2^192,17758325153429011584 + 16176005756822697091*2^64 + 17345950287868881635*2^128 + 1601270101*2^192,6609558614507076884 + 10228947713876501671*2^64 + 649334934693720326*2^128 + 614808515*2^192;\
14616927882008067460 + 12333766025130720491*2^64 + 9404289087470230885*2^128 + 1695737201*2^192,3167692897054332400 + 5483207594992878295*2^64 + 5451056325080796769*2^128 + 967747328*2^192,4970248508131655040 + 4901096963804930772*2^64 + 10424271317405305832*2^128 + 1380310876*2^192,17490107138753064912 + 9140577378459241757*2^64 + 3680069890359003666*2^128 + 731704820*2^192,17934881134603420808 + 15720926585427123837*2^64 + 8735795549673078265*2^128 + 1771738542*2^192,13917371548674786376 + 7502653778811428101*2^64 + 5511054401697422601*2^128 + 1985955529*2^192,15360102268232137008 + 6347995667768588017*2^64 + 9549005095732036309*2^128 + 1962540965*2^192,17624486562254968800 + 4347609665723607310*2^64 + 9709356071476503135*2^128 + 1207329168*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4185 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 - 4*x^5 + 16*x^3 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 - x^3 - 2*x^2 - 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 
Look at the ideal generated by: 
1*x^4 + 1*x^2*y^2 + 1*y^1*z^1*w^1
1*x^2*y^1*w^1 + 1*x^2*z^2 + 1*y^3*w^1 + 1*z^1*w^2
