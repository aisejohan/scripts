/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 55
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	7 
[2, 0, 1, 2, 0]  	20	6 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	5 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 7, 1, 0, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 7, 0, 1, 0]  	26	4 
[0, 2, 0, 4, 0]  	26	3 
[0, 6, 0, 2, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 2, 0, 1]  	17	6 
[2, 0, 2, 1, 1]  	19	5 
[0, 5, 1, 0, 1]  	19	5 
[0, 5, 0, 1, 1]  	20	4 
[0, 4, 2, 0, 1]  	20	4 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	5 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	3 
[0, 0, 5, 1, 1]  	25	2 
[0, 1, 2, 3, 1]  	26	2 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 2, 1, 253]  	22	2 
[0, 0, 0, 5, 253]  	25	1 
[0, 0, 4, 2, 254]  	26	1 
[2, 2, 0, 0, 255]  	12	5 
[0, 1, 2, 1, 255]  	16	2 
[0, 1, 1, 2, 255]  	17	2 
[0, 1, 4, 0, 255]  	19	1 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 1, 0, 4, 255]  	23	1 
[0, 0, 2, 3, 255]  	23	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 4.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[13306249199824899222 + 13160207625443103633*2^64 + 5739125826635145558*2^128 + 1046778689*2^192,209031192895916768 + 8028994415219425572*2^64 + 1077145345332634112*2^128 + 3145474936*2^192,8546853814176229832 + 149551708746092088*2^64 + 10395558845020526823*2^128 + 314266421*2^192,4852847848040619350 + 7698026361551722250*2^64 + 4890473291364819898*2^128 + 1566165577*2^192,12076667789634208930 + 7672139804028777925*2^64 + 638366021442523352*2^128 + 912724306*2^192,9088084156180161964 + 11850306356301764603*2^64 + 7218863113932059112*2^128 + 2328698572*2^192,3361936129968461994 + 11071876895625362769*2^64 + 10670315976075807402*2^128 + 533419250*2^192,11619833558255337192 + 11141842530291914624*2^64 + 17887070590941486481*2^128 + 3241981299*2^192;\
13561460354997283664 + 6320301637178308379*2^64 + 9116426388795063740*2^128 + 2534776505*2^192,9365831516120620736 + 13362393882354586461*2^64 + 1998772350952639454*2^128 + 512079111*2^192,7232889171286847544 + 2645262316927844440*2^64 + 13787941075560657337*2^128 + 2219500927*2^192,14770733625705904260 + 2117883813497854502*2^64 + 836143185394409985*2^128 + 2998622636*2^192,7258086667675371588 + 12262778749398298534*2^64 + 4676175491230637147*2^128 + 2257019774*2^192,11216710200966671368 + 13613795113735372083*2^64 + 5305124065045047946*2^128 + 1575664870*2^192,8014886206768305668 + 16368333213405319272*2^64 + 7549312791301045487*2^128 + 2326383744*2^192,10931140241887920688 + 9668330546577775688*2^64 + 6506944070175969344*2^128 + 149797668*2^192;\
8127313895198479566 + 7711383769529955119*2^64 + 2412142321599651001*2^128 + 2205598427*2^192,13194437007894615808 + 18206899291175040435*2^64 + 6521976440689098799*2^128 + 1113496146*2^192,12509302331349616976 + 12810934918957146826*2^64 + 3867430622496843539*2^128 + 1771301764*2^192,83806262962278418 + 5858462470569133073*2^64 + 13826317140852729617*2^128 + 1328589775*2^192,13736494050109820190 + 6291726605030639480*2^64 + 18109932855420761673*2^128 + 2079659758*2^192,2219195468982857348 + 11723967018142115118*2^64 + 2572862183002207856*2^128 + 4213707622*2^192,3237010018900893070 + 12505591887584140707*2^64 + 18037648485187377879*2^128 + 346939573*2^192,5517794011256024808 + 16425192392454895319*2^64 + 6771214751699447280*2^128 + 3030576670*2^192;\
17788497936173250143 + 14692151401579755034*2^64 + 8156755118908820728*2^128 + 3096644542*2^192,8243694165673843928 + 14847610721292929396*2^64 + 8118604411960794862*2^128 + 3921714390*2^192,13475947839126963020 + 4757871350462255598*2^64 + 11445210788001247634*2^128 + 3549275793*2^192,6830646116867831311 + 11396547787664995788*2^64 + 4338681751839242432*2^128 + 2852137715*2^192,17846050675310826893 + 4522553789043202651*2^64 + 10331804246260516613*2^128 + 2839211308*2^192,13019894976536137182 + 5706425178039354848*2^64 + 10951283562512971326*2^128 + 568336170*2^192,7729708591101836353 + 14793855913424993712*2^64 + 13562229083946182205*2^128 + 1873883903*2^192,15540837082510483268 + 11610318295390487843*2^64 + 485851778144059588*2^128 + 1894370729*2^192;\
10061986098986060241 + 17151715348749929924*2^64 + 7912566484806371425*2^128 + 578481100*2^192,2960638307691218136 + 15726163384327766857*2^64 + 13468322280168430631*2^128 + 2540100360*2^192,14070377382899268580 + 15644833111356994021*2^64 + 4225074641963222881*2^128 + 1793700825*2^192,5887805043625129141 + 6784893381459686086*2^64 + 14130452326288756060*2^128 + 2138855486*2^192,13004276890441849767 + 16213559280172868886*2^64 + 228024531743317462*2^128 + 2798385142*2^192,12291917533656025162 + 15220920489388983645*2^64 + 381377476502953372*2^128 + 3495075981*2^192,12137035526854457811 + 3909314629053707564*2^64 + 15845092389185432101*2^128 + 1459764826*2^192,6606255569245990908 + 15252404818707970513*2^64 + 17476794576665752766*2^128 + 1714954622*2^192;\
17788497936173250143 + 14692151401579755034*2^64 + 8156755118908820728*2^128 + 3146976190*2^192,8243694165673843928 + 14847610721292929396*2^64 + 8118604411960794862*2^128 + 3116408022*2^192,13475947839126963020 + 4757871350462255598*2^64 + 11445210788001247634*2^128 + 3280840337*2^192,15026689051993241095 + 6158985850076917359*2^64 + 7715978813017015122*2^128 + 3544380948*2^192,17846050675310826893 + 4522553789043202651*2^64 + 10331804246260516613*2^128 + 3627740460*2^192,4823852041410727398 + 10943987115627433277*2^64 + 7573986501335198636*2^128 + 1218270217*2^192,7729708591101836353 + 14793855913424993712*2^64 + 13562229083946182205*2^128 + 1202795263*2^192,15540837082510483268 + 11610318295390487843*2^64 + 485851778144059588*2^128 + 1810484649*2^192;\
13734876057132009110 + 5429940326069536841*2^64 + 3196213965649000237*2^128 + 660071425*2^192,15234103644428725400 + 6081578274846503362*2^64 + 15941131570353851465*2^128 + 639559889*2^192,15678582865440912944 + 6659501310186448308*2^64 + 15897686713713162865*2^128 + 3843651196*2^192,1448083185993843190 + 12724569212831809992*2^64 + 18321164142900372853*2^128 + 376312800*2^192,1547727887095751066 + 8727184973571120027*2^64 + 4073469676362015939*2^128 + 2668980126*2^192,7273027568751933012 + 55950339144121647*2^64 + 1087173717325105610*2^128 + 1386089962*2^192,18105944721653798522 + 15903947642680646075*2^64 + 16720935222368238545*2^128 + 191968724*2^192,7010716510674507544 + 2595446708986455658*2^64 + 14579586545309140176*2^128 + 4122631109*2^192;\
3454214521366387370 + 3469074940947255337*2^64 + 5690657790316019824*2^128 + 3096450152*2^192,12466627493267600592 + 17514068689138270780*2^64 + 11763275746479533751*2^128 + 476665962*2^192,3555883495266515416 + 15953522202480078164*2^64 + 12540880332034687900*2^128 + 229467491*2^192,3326822081552883218 + 16467265678529473180*2^64 + 15582403909654070360*2^128 + 2398856346*2^192,6055848875120698902 + 12200483997273329864*2^64 + 4461173277899017492*2^128 + 1339347651*2^192,14752518462670912724 + 3820417258825228911*2^64 + 7492388893298014231*2^128 + 2289267789*2^192,3096119288319764654 + 7432000570385298720*2^64 + 6172916791052453434*2^128 + 1083929603*2^192,7982321333910279496 + 6278830585098862428*2^64 + 4671815762825341213*2^128 + 93769690*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 4*x^6 + 16*x^4 - 64*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + x^3 - 2*x^2 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
