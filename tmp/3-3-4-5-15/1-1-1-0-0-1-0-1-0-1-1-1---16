/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 43
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	5 
[1, 0, 1, 2, 0]  	17	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 1, 0, 2, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	5 
[2, 0, 0, 3, 0]  	21	7 
[1, 0, 0, 4, 0]  	23	3 
[0, 6, 0, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[1, 2, 0, 3, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 5, 0, 2, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	3 
[0, 4, 0, 3, 0]  	27	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	6 
[2, 1, 1, 1, 1]  	18	6 
[0, 5, 0, 1, 1]  	20	4 
[1, 6, 0, 0, 1]  	21	6 
[1, 3, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 1, 3, 2, 1]  	25	2 
[0, 1, 2, 3, 3]  	26	2 
[0, 0, 4, 2, 253]  	26	1 
[0, 7, 0, 0, 254]  	21	2 
[2, 2, 0, 0, 255]  	12	2 
[2, 0, 0, 2, 255]  	16	2 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 4, 0, 2, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11143280131843961134 + 1451023580864551889*2^64 + 7967350567517199821*2^128 + 434643452*2^192,7386850992067492468 + 11989610046522044028*2^64 + 6064402394419698560*2^128 + 1674976054*2^192,11198377714580711708 + 9059087606700326286*2^64 + 16868746422056022491*2^128 + 1101485727*2^192,5102915466146170100 + 14633310017735638233*2^64 + 1373827394492212012*2^128 + 643099410*2^192,13494467967620102340 + 15480469970891337179*2^64 + 18097122051531119880*2^128 + 1386979846*2^192,15950771654128870268 + 2003157371524787161*2^64 + 1328786917982253824*2^128 + 87885555*2^192,10698346206846182028 + 16696965489753820125*2^64 + 15468514824059594480*2^128 + 46811777*2^192,9661245597802865424 + 12186105417977347412*2^64 + 9992279188702150122*2^128 + 1292792010*2^192;\
9633958727925436282 + 259866813239583484*2^64 + 15365562609438286080*2^128 + 372409043*2^192,4990289835601345120 + 15915980790477131312*2^64 + 15552211256640206800*2^128 + 886395684*2^192,16078543658470266108 + 14181889822127676354*2^64 + 1725418930276188314*2^128 + 325310231*2^192,2477650549221012652 + 18111288292151984214*2^64 + 8408558733498372216*2^128 + 395902363*2^192,17647356108467394116 + 6234824749960510162*2^64 + 14230293989066487492*2^128 + 981341649*2^192,15342180788660082312 + 9997826016303527058*2^64 + 16444144395178533389*2^128 + 46995923*2^192,14875203598822587524 + 8805224752302207807*2^64 + 2304876012933109342*2^128 + 488460245*2^192,10137597293867847736 + 695209149764970407*2^64 + 5507990090777898382*2^128 + 90409976*2^192;\
4538251437319680413 + 8912909688102533144*2^64 + 16760868804088879501*2^128 + 292852774*2^192,478912158537863558 + 10547994046872988370*2^64 + 803320680491652807*2^128 + 897796144*2^192,15640574970779073070 + 17220521064307807325*2^64 + 1522769744326013526*2^128 + 1530871382*2^192,17135491899275629826 + 12638199864822441411*2^64 + 10675155007002849652*2^128 + 1131808884*2^192,15123862591295028322 + 5243259024566735385*2^64 + 11704988496474083167*2^128 + 1272814583*2^192,11071447079829959094 + 5012153064251253139*2^64 + 1917731299492351445*2^128 + 807945166*2^192,4394294595138375982 + 16572319490567601493*2^64 + 4188791841180412610*2^128 + 1285996821*2^192,15517335311826432000 + 8370503960471933*2^64 + 12480521675331051088*2^128 + 1541789460*2^192;\
5864718329921813446 + 9858038431246051073*2^64 + 12118353850497676552*2^128 + 1306735828*2^192,16809288700966095156 + 7354680650315035482*2^64 + 11666674725043182323*2^128 + 1455756540*2^192,1914264603768457924 + 9841403743784009238*2^64 + 677924328815985928*2^128 + 1488116164*2^192,2019927101121215524 + 1801400828963577519*2^64 + 7357230500202190809*2^128 + 583320837*2^192,1438011779336290468 + 12450387766425063743*2^64 + 7938306690208250055*2^128 + 1884829171*2^192,832771887427919700 + 9292198454661786952*2^64 + 8203248633576025814*2^128 + 772010295*2^192,6356184109227797684 + 18207823072056903250*2^64 + 5782641378194479311*2^128 + 1198999143*2^192,16984949434577490744 + 6667849149682034432*2^64 + 10316312869460194552*2^128 + 2143845188*2^192;\
9599720480421736499 + 12247035710667626481*2^64 + 10263881775204802420*2^128 + 1999321712*2^192,7394864563187143550 + 7257111330945272488*2^64 + 13596508698742554484*2^128 + 748742539*2^192,7832866689729356190 + 16118502204228910294*2^64 + 7834335306435429423*2^128 + 988788962*2^192,15616882924698517990 + 17586728498293848414*2^64 + 14952308860879516510*2^128 + 1164242936*2^192,9462228896199098882 + 3220802524671623612*2^64 + 3567844189969482302*2^128 + 2058356399*2^192,2882239656026634094 + 3082352059264431364*2^64 + 5483934542165901718*2^128 + 1003598301*2^192,4141403928442402402 + 7786587325508498834*2^64 + 1460952913839068093*2^128 + 1959091163*2^192,10913645271001474504 + 1225235056663319938*2^64 + 13164100539430199681*2^128 + 1457472342*2^192;\
8074295436368720198 + 2966465389739756952*2^64 + 5315792573988451113*2^128 + 1956930852*2^192,13333808816268964864 + 14911417571836516646*2^64 + 11673244982985837251*2^128 + 358109647*2^192,17531065811813818324 + 6225995229140624718*2^64 + 10195915799296502029*2^128 + 664032231*2^192,17382033368922715516 + 6208355971735039553*2^64 + 13646484332001880669*2^128 + 162894786*2^192,2516032507595398828 + 5065124907498914128*2^64 + 15971996527074669614*2^128 + 664842651*2^192,14847608434381718620 + 1701244139872128695*2^64 + 13219836585911117023*2^128 + 1163279813*2^192,3654246132853658444 + 6938725005309271917*2^64 + 5456164830151294195*2^128 + 1729423170*2^192,4209903304227524192 + 7457786038894286812*2^64 + 13012704595800352996*2^128 + 120683985*2^192;\
6536727883138883709 + 4757302338834057511*2^64 + 5382311573388917564*2^128 + 2028430352*2^192,5715243554965481262 + 17620370113238314520*2^64 + 20201448352420633*2^128 + 457577329*2^192,2961101054212510738 + 14124417368089168612*2^64 + 11995229921043423711*2^128 + 922461740*2^192,5758354218455639458 + 10134457669178433756*2^64 + 5025391833787897182*2^128 + 1081056406*2^192,4944133337534574674 + 6336513129549463847*2^64 + 4659999466386919862*2^128 + 1224200490*2^192,14390622694684581138 + 7508252817264421255*2^64 + 9915071619262145918*2^128 + 1892605062*2^192,7751808079075909474 + 18169795773245524254*2^64 + 3276192180074537873*2^128 + 714818206*2^192,1472658836563142144 + 17580979870048743048*2^64 + 154547664359568429*2^128 + 1520430557*2^192;\
10601601752595931929 + 4499287433573184961*2^64 + 2183869239857192077*2^128 + 1374251098*2^192,7171369007526166466 + 7816819106335792492*2^64 + 7683936496240755680*2^128 + 851988819*2^192,4527099779604583562 + 12395352617026446652*2^64 + 9972244405582524307*2^128 + 1306058083*2^192,16931239118898558766 + 14722748744874694482*2^64 + 5327070637241644328*2^128 + 1194671440*2^192,4847791852208420946 + 15504942113601944067*2^64 + 4207279029890586371*2^128 + 627364540*2^192,14262125900370983586 + 6512370899400148085*2^64 + 2271519633094194512*2^128 + 433395907*2^192,90031831518146802 + 15385900329916099018*2^64 + 10201227564122218419*2^128 + 49604426*2^192,8806637699759405152 + 5756820491547071993*2^64 + 12853904884353223709*2^128 + 433639573*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5175 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 4*x^5 - 16*x^3 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + 2*x^3 + 2*x^2 + 8*x + 16, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
