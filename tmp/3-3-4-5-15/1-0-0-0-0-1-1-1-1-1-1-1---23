/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 38
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[1, 0, 2, 1, 0]  	16	5 
[1, 0, 1, 2, 0]  	17	4 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	3 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	7 
[1, 0, 0, 4, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 4, 0, 2, 1]  	22	4 
[1, 3, 0, 0, 2]  	12	5 
[2, 0, 0, 3, 2]  	21	7 
[0, 0, 5, 1, 2]  	25	2 
[0, 7, 0, 0, 252]  	21	5 
[1, 0, 1, 1, 254]  	12	4 
[0, 5, 0, 0, 254]  	15	4 
[1, 0, 0, 3, 254]  	18	5 
[0, 0, 0, 5, 254]  	25	1 
[0, 3, 2, 1, 255]  	22	3 
------
The gap is between 3 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10335883891597563872 + 12555879319498881342*2^64 + 6341677542230392529*2^128 + 28918555031*2^192,12050403932061082912 + 12482519153554156569*2^64 + 5983250299172890237*2^128 + 22904546128*2^192,1437462987569988672 + 6704195279136143824*2^64 + 1227213802471624692*2^128 + 33368906554*2^192,8714184799090170400 + 12436217447648195285*2^64 + 5254015758546902023*2^128 + 33660682237*2^192,81959673753392320 + 14541032150412144326*2^64 + 4352529522623667245*2^128 + 28614297670*2^192,1080689254911204128 + 5297663874164361060*2^64 + 5398643753072026992*2^128 + 27195171753*2^192,12513669716342306816 + 3505645242932458188*2^64 + 13963066690255488119*2^128 + 12203283235*2^192,7573781034385500992 + 4833270981483241957*2^64 + 2294798904495777228*2^128 + 30578299774*2^192;\
3741877468122125120 + 11922936748595686876*2^64 + 4979358165177442209*2^128 + 6013255233*2^192,8839526361411908672 + 15563170833480552569*2^64 + 7073851549391395141*2^128 + 6731907155*2^192,4143550083336535936 + 7238967779223494361*2^64 + 10983020307338195218*2^128 + 10186602666*2^192,10397984438816546688 + 15513874564837078342*2^64 + 3705427937525576334*2^128 + 8426966286*2^192,15678042948388651392 + 12519120736062434480*2^64 + 7892348198617776572*2^128 + 6265514537*2^192,2043389114227736064 + 16287700935831658251*2^64 + 15920680950928493902*2^128 + 15088465072*2^192,5584373881963126016 + 17431377728611711800*2^64 + 10514587465505834695*2^128 + 6676384872*2^192,6351847689830658560 + 2875930046299713853*2^64 + 1772927136765171395*2^128 + 14767802111*2^192;\
9599697256681293836 + 15889997255128603492*2^64 + 6450607402683115374*2^128 + 11174624689*2^192,4150462207296903900 + 5628217055872286773*2^64 + 13146064326876252004*2^128 + 10788065816*2^192,13774042582761996552 + 7966844582845953820*2^64 + 16875405435175413998*2^128 + 33979596986*2^192,2427695863918371596 + 2375280240847771549*2^64 + 15901340685445672857*2^128 + 1594578254*2^192,11037819815938608216 + 4237069370119652161*2^64 + 5708436866797211865*2^128 + 3853344757*2^192,10800656920836178124 + 2457310169751859727*2^64 + 14327637752702069099*2^128 + 16058537360*2^192,8471075323647597904 + 3842520894923941327*2^64 + 9204012525480963674*2^128 + 30534259545*2^192,16628663104518322840 + 4192457596022679686*2^64 + 14254514761397849620*2^128 + 8458834079*2^192;\
6645563079756520761 + 846293711764531138*2^64 + 7327087870923605280*2^128 + 23721666547*2^192,10566998116062875301 + 3189437891181508379*2^64 + 6926796685898766855*2^128 + 10609338177*2^192,10934062841844765862 + 15784187304069508786*2^64 + 8020355953277622291*2^128 + 2824834991*2^192,17906055286043450841 + 5383237589225961248*2^64 + 13908505426345370623*2^128 + 22438667651*2^192,17825635571183909794 + 18028691823221167573*2^64 + 10455486792072950095*2^128 + 26612505946*2^192,12575491070818119017 + 3589824032014038822*2^64 + 11193759909616474692*2^128 + 18915564071*2^192,18344020572388866876 + 6312120294614944746*2^64 + 2409580258505877549*2^128 + 32063525185*2^192,1482060618333421810 + 600385934845464840*2^64 + 7160125778388034323*2^128 + 23978862040*2^192;\
11009719104594678989 + 17787652801094600782*2^64 + 11971483696335760693*2^128 + 13559313081*2^192,16382356696760706441 + 13915179255375257907*2^64 + 18344666084724996493*2^128 + 4224951662*2^192,3918155308206072734 + 14463261432881376367*2^64 + 13939940619571433004*2^128 + 21364158164*2^192,5926236711050381 + 18079155135890752862*2^64 + 13805592743289963689*2^128 + 3065807367*2^192,1065524842404378314 + 11981762165659134476*2^64 + 8348532354224958927*2^128 + 9993698*2^192,8756799144192593245 + 7212324394153140200*2^64 + 4727982162996122035*2^128 + 8051301073*2^192,346097128042483180 + 10014792140473657950*2^64 + 13433224468136126323*2^128 + 26034868514*2^192,18128893389340361050 + 7156577733697281960*2^64 + 496480186962753735*2^128 + 26353062884*2^192;\
14427560208317573417 + 14483573571684545153*2^64 + 1763379989648668071*2^128 + 9352234383*2^192,10255551789407392789 + 9799355838775117990*2^64 + 1420821882875604732*2^128 + 1988811891*2^192,16681007349770108742 + 17716141619232333620*2^64 + 4978622717997712222*2^128 + 25945227865*2^192,13526323541833833801 + 8212250628074896700*2^64 + 9494401883331018808*2^128 + 25072281296*2^192,9571726903385335490 + 10908085054418693138*2^64 + 17235805882702871290*2^128 + 9222884024*2^192,1285295122118425497 + 4069911631788062290*2^64 + 12429328053474862615*2^128 + 23164394632*2^192,16014678786262432636 + 18260401434968276743*2^64 + 2148242350560193951*2^128 + 17948661005*2^192,17902175730706117714 + 17541832984594646720*2^64 + 554807362432427311*2^128 + 19582157681*2^192;\
17154088446867021621 + 14170403743921192579*2^64 + 2874865973039898037*2^128 + 9119451640*2^192,7418104512134416849 + 18264972463056623520*2^64 + 16730895969072423452*2^128 + 30457732856*2^192,13860970228055289422 + 15070268526118364422*2^64 + 7955808767800525141*2^128 + 12566373448*2^192,6889533342840391541 + 4203379516830627888*2^64 + 2815255658365604174*2^128 + 22371155678*2^192,8565336714438681306 + 8463997477495991386*2^64 + 7411206251838782366*2^128 + 27796979171*2^192,15966315325936817413 + 12088902880418741560*2^64 + 6889995309103601595*2^128 + 14435182046*2^192,17254503757615910988 + 14462895738149053468*2^64 + 6262946410286475077*2^128 + 22308410975*2^192,13215945392438749354 + 13517894571894746168*2^64 + 1752958878960895165*2^128 + 28713530466*2^192;\
4224973052830478328 + 13208675957814657068*2^64 + 17375333884234364707*2^128 + 6709481088*2^192,4956530242894270232 + 4865675330451805241*2^64 + 14563177799698460063*2^128 + 1942157115*2^192,2021330813973663568 + 12750667772853436375*2^64 + 5229427476589259546*2^128 + 15121200419*2^192,15702065078879375224 + 7315550304282534416*2^64 + 2689980411780211230*2^128 + 2398967480*2^192,14051905134406423664 + 6674477041332322661*2^64 + 5043882211963775085*2^128 + 3092669085*2^192,15543527900559019000 + 10446099173519505864*2^64 + 17245125644002063594*2^128 + 13048662692*2^192,3691195324120802080 + 18365113292565877046*2^64 + 8094032067493418407*2^128 + 29098453408*2^192,9178542117450715760 + 10070688312029041303*2^64 + 7818759352966043975*2^128 + 256641845*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 5102 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 + 4*x^5 - 8*x^4 + 16*x^3 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 + x^5 - 2*x^4 - 4*x^3 - 8*x^2 + 16*x + 64, 1]
The valuation of f-g is: 24
The valuation of subst(g,x,A) is: 19
