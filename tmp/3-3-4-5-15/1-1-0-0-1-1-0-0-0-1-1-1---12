/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 67
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[2, 4, 0, 0, 0]  	18	7 
[1, 5, 0, 0, 0]  	18	7 
[1, 4, 1, 0, 0]  	19	7 
[1, 4, 0, 1, 0]  	20	6 
[0, 5, 0, 1, 0]  	20	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 2, 1, 2, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[1, 3, 2, 1, 0]  	25	2 
[1, 1, 1, 3, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 3, 0, 3, 0]  	27	4 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 0, 2, 1]  	19	7 
[1, 3, 2, 0, 1]  	20	6 
[1, 1, 1, 2, 1]  	20	5 
[1, 0, 3, 1, 1]  	20	5 
[1, 3, 1, 1, 1]  	21	7 
[1, 2, 2, 1, 1]  	22	5 
[1, 0, 1, 3, 1]  	22	5 
[1, 0, 5, 0, 1]  	23	4 
[1, 0, 0, 4, 1]  	23	4 
[0, 5, 2, 0, 1]  	23	3 
[0, 4, 0, 3, 1]  	27	3 
[3, 1, 0, 0, 2]  	12	6 
[2, 3, 0, 0, 2]  	15	6 
[1, 3, 1, 0, 2]  	16	5 
[1, 1, 0, 2, 2]  	16	6 
[1, 3, 0, 1, 2]  	17	5 
[1, 2, 2, 0, 2]  	17	6 
[1, 1, 2, 1, 2]  	19	5 
[1, 0, 4, 0, 2]  	19	5 
[0, 4, 2, 0, 2]  	20	4 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[1, 0, 2, 2, 3]  	21	6 
[0, 2, 1, 2, 252]  	20	3 
[0, 3, 2, 1, 252]  	22	3 
[0, 7, 0, 0, 253]  	21	4 
[0, 1, 0, 4, 253]  	23	2 
[1, 4, 0, 0, 254]  	15	4 
[0, 4, 1, 0, 254]  	16	4 
[0, 4, 0, 1, 254]  	17	4 
[0, 3, 0, 2, 254]  	19	3 
[1, 0, 1, 1, 255]  	12	4 
[0, 4, 0, 0, 255]  	12	2 
[0, 1, 2, 1, 255]  	16	1 
[0, 1, 1, 2, 255]  	17	1 
[0, 0, 0, 4, 255]  	20	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 4 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1274434327508639264 + 17393928969025856875*2^64 + 13311294550337756770*2^128 + 4001920632*2^192,18049450471084707608 + 13845191467249999121*2^64 + 13091863050136517390*2^128 + 1944875063*2^192,7260382617388200776 + 5355806267929093204*2^64 + 6011060912136560620*2^128 + 2666522180*2^192,8740140583932859416 + 10124408224505661509*2^64 + 9780301745268800252*2^128 + 3595453026*2^192,12615650402160743728 + 3352691142121220348*2^64 + 1049494705977449840*2^128 + 1690396175*2^192,2453464447083325736 + 13282239740953651587*2^64 + 10921090500138293175*2^128 + 3461003335*2^192,8518994453056250384 + 10150042119420977906*2^64 + 13399483561315144637*2^128 + 3055065278*2^192,9290123139704093984 + 8617496317703473170*2^64 + 9243086728574962586*2^128 + 3659838036*2^192;\
8625803178485632953 + 819250444125300040*2^64 + 7330518666659439785*2^128 + 1795593739*2^192,7117859446510161464 + 3188246461235554345*2^64 + 14568424377699279560*2^128 + 2872488065*2^192,17079006259440782112 + 16949950570192061691*2^64 + 15689816264585270219*2^128 + 479803298*2^192,4882842605261889596 + 1412624820233804555*2^64 + 9056471778488412404*2^128 + 2310546546*2^192,282646932672502422 + 15816977129109935818*2^64 + 10444777252380051214*2^128 + 32488747*2^192,11793077901206724538 + 5830130487955816308*2^64 + 13424280478283325368*2^128 + 1453471056*2^192,7138068619417095518 + 9308537994904817357*2^64 + 16978343773627796029*2^128 + 1547444604*2^192,18389640398400991796 + 2067802133831478479*2^64 + 4682952351063475233*2^128 + 872316520*2^192;\
8563370182039297970 + 17319269536058897025*2^64 + 9707722030311386638*2^128 + 332213100*2^192,2690463138406610096 + 12209968022097598737*2^64 + 14760599892355460759*2^128 + 3666666932*2^192,6170050916994634764 + 15278552600306496948*2^64 + 10991586893760850922*2^128 + 618281168*2^192,10130957706438737640 + 17236558818158471283*2^64 + 1619186811097799670*2^128 + 3124509394*2^192,74383960558766052 + 3253021956171392418*2^64 + 15093284457250416544*2^128 + 387705046*2^192,336824973109196812 + 3269008642044639405*2^64 + 11778302996292879647*2^128 + 577953544*2^192,4056149529471458948 + 6823017797364097601*2^64 + 11591236496359914860*2^128 + 637989361*2^192,676552343036374256 + 9015223751166040029*2^64 + 6766839381414181310*2^128 + 1376307909*2^192;\
4827857471826234267 + 15507484172939537510*2^64 + 11493126367659652959*2^128 + 234829481*2^192,17077973992717381232 + 386685752789360152*2^64 + 12184642418847566807*2^128 + 722902991*2^192,5913317952101669824 + 12538371654250557307*2^64 + 5600207060064535652*2^128 + 3981717681*2^192,10358942637458823724 + 14409201954602385071*2^64 + 9524155075181551858*2^128 + 286181917*2^192,5731009239874882098 + 6941226985017007498*2^64 + 1952043216946219426*2^128 + 1747432919*2^192,894733541361698254 + 651566307642629493*2^64 + 703449854538927151*2^128 + 229120710*2^192,16948346685376437594 + 15937891107311848562*2^64 + 710908833563729834*2^128 + 218988482*2^192,4693619726869368172 + 14902674779241728901*2^64 + 7562554748769304669*2^128 + 1182187189*2^192;\
5105884417165575050 + 12457232807223053909*2^64 + 1757311137772957828*2^128 + 742403402*2^192,11631174707022400768 + 6504614319536022327*2^64 + 8525748006701201419*2^128 + 1497147359*2^192,4828064405450096774 + 14305192022147011871*2^64 + 11010766619676957783*2^128 + 1235583843*2^192,13793392980135863144 + 16991924908091337015*2^64 + 3497872485484795765*2^128 + 4127334381*2^192,3373268584437290760 + 10104814384258389170*2^64 + 2570301367507271682*2^128 + 705765885*2^192,16198431440210074032 + 4428780373793953264*2^64 + 17141072142650156183*2^128 + 87732659*2^192,3532583154808322168 + 14482480421116287586*2^64 + 5796144751788047634*2^128 + 164785489*2^192,8400268292575001668 + 10005874794810851192*2^64 + 6601097052994584968*2^128 + 2102584109*2^192;\
3728682731149936834 + 1535978260442859456*2^64 + 17969758299974038189*2^128 + 171919443*2^192,12401437727661154800 + 13437098557560284730*2^64 + 4983712591430359791*2^128 + 3313957384*2^192,1417521398632085852 + 11054193612991604542*2^64 + 17362641367150566612*2^128 + 3753351636*2^192,11479827054974368392 + 6658299651541148252*2^64 + 17326243809091750329*2^128 + 3241511533*2^192,12307124946870342532 + 2975555361902163513*2^64 + 2805951019240178217*2^128 + 924140106*2^192,12922107525615964508 + 7679104313384690847*2^64 + 8404255172990211569*2^128 + 3206770138*2^192,6535502705798910212 + 149485143149542040*2^64 + 9493062241751654494*2^128 + 887287068*2^192,7647100615276416560 + 5928818984814345022*2^64 + 17866029371508989508*2^128 + 4066581135*2^192;\
17334064867849930232 + 717741489294480494*2^64 + 3165089770454667108*2^128 + 4113250167*2^192,16087707599363402608 + 920816682040690794*2^64 + 4857078205426525493*2^128 + 2141051361*2^192,12628858901338251074 + 7882156315130681996*2^64 + 18078199537285922058*2^128 + 3062044384*2^192,14749865010365344624 + 16347041905635533926*2^64 + 3646022904529954123*2^128 + 636347838*2^192,15226104087972409404 + 9253178693094698642*2^64 + 12408064904352958628*2^128 + 1316628840*2^192,13359054232674373524 + 12631558806926176811*2^64 + 17383309014964288743*2^128 + 641047596*2^192,16001446398628157644 + 17696107838101680060*2^64 + 9782985082488024108*2^128 + 1643336981*2^192,12376307299863648292 + 16912283427639800800*2^64 + 14391883152068194727*2^128 + 3619922019*2^192;\
13580562480077118595 + 2163718651740709837*2^64 + 6297001975231321542*2^128 + 653891504*2^192,15630414438871302928 + 4588755520581804589*2^64 + 12322844536916820896*2^128 + 3769293886*2^192,8017893837927464838 + 15589841563825308395*2^64 + 11409005356747232105*2^128 + 1123863862*2^192,2811865204609102956 + 946957960080463548*2^64 + 10689202181706138085*2^128 + 4022010537*2^192,7469369085471110446 + 2935064064785883889*2^64 + 10331476639309413773*2^128 + 4251185103*2^192,17344514079128540738 + 7019356777121691455*2^64 + 10738378851070399045*2^128 + 3473571897*2^192,8851034831823191446 + 10064945932958682030*2^64 + 9082813911173129922*2^128 + 2875617620*2^192,3991708438255887416 + 11019419029637160353*2^64 + 11142409102024034267*2^128 + 1152631550*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4687 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 32
