/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 63
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[0, 1, 3, 0, 0]  	15	2 
[0, 5, 0, 1, 0]  	20	5 
[0, 6, 1, 0, 0]  	22	5 
[1, 2, 1, 2, 0]  	23	4 
[1, 0, 5, 0, 0]  	23	4 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[1, 3, 2, 1, 0]  	25	3 
[1, 1, 1, 3, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 3, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 2, 0, 2, 1]  	19	6 
[0, 5, 1, 0, 1]  	19	4 
[1, 3, 2, 0, 1]  	20	6 
[1, 1, 1, 2, 1]  	20	5 
[1, 0, 3, 1, 1]  	20	5 
[1, 3, 1, 1, 1]  	21	7 
[1, 2, 2, 1, 1]  	22	5 
[1, 0, 1, 3, 1]  	22	5 
[1, 0, 0, 4, 1]  	23	4 
[0, 4, 0, 3, 1]  	27	3 
[3, 1, 0, 0, 2]  	12	3 
[1, 3, 1, 0, 2]  	16	5 
[1, 1, 0, 2, 2]  	16	6 
[1, 3, 0, 1, 2]  	17	5 
[1, 2, 2, 0, 2]  	17	6 
[0, 4, 2, 0, 2]  	20	4 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[1, 1, 2, 1, 3]  	19	6 
[1, 0, 2, 2, 5]  	21	6 
[0, 7, 0, 0, 251]  	21	5 
[1, 0, 4, 0, 253]  	19	4 
[0, 2, 1, 2, 253]  	20	2 
[0, 3, 2, 1, 253]  	22	2 
[0, 0, 5, 0, 254]  	20	2 
[0, 1, 1, 3, 254]  	22	2 
[0, 1, 0, 4, 254]  	23	2 
[1, 0, 1, 1, 255]  	12	2 
[0, 4, 0, 0, 255]  	12	1 
[0, 2, 0, 2, 255]  	16	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 3, 2, 0, 255]  	17	3 
[0, 1, 1, 2, 255]  	17	2 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 6 and 250.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[16239035979214393928 + 7381203056617760835*2^64 + 10523432746914265562*2^128 + 1355881776*2^192,2563056741412785032 + 755235387687648614*2^64 + 9663772083703299258*2^128 + 933113159*2^192,49368470494352732 + 14317228793360257237*2^64 + 12799453495025278934*2^128 + 172242134*2^192,7282074918429387896 + 9691023223617123973*2^64 + 16463396614663349816*2^128 + 1589066404*2^192,9537407272711601768 + 336852986892564084*2^64 + 2161512922295447642*2^128 + 692831550*2^192,3157969863863155984 + 17434085325189368722*2^64 + 13782214475014853915*2^128 + 1069132353*2^192,17334285160120785132 + 4106308582924395232*2^64 + 11965311180740626304*2^128 + 669663598*2^192,13833886850330638568 + 13243135285373088648*2^64 + 7096734481088332211*2^128 + 1030169214*2^192;\
2368085905799706736 + 3523234476398469607*2^64 + 15121753564240605269*2^128 + 50760337*2^192,3208056763340704968 + 3522143145985109525*2^64 + 12684277167965882066*2^128 + 1052516101*2^192,11074674508983333066 + 5234680071048162517*2^64 + 12371955001362890924*2^128 + 1016745005*2^192,5052271107867478160 + 2124341095668471797*2^64 + 10947108214986820116*2^128 + 46055723*2^192,4160090147603136220 + 11117199069462681971*2^64 + 2404316693862581379*2^128 + 112407430*2^192,8522965860289084536 + 2629215888595461199*2^64 + 1548786321289119381*2^128 + 159778009*2^192,3795613095492166398 + 9201745423687562525*2^64 + 3301187709229926216*2^128 + 285983355*2^192,361319720507725724 + 13732152439182187110*2^64 + 9155404711409826343*2^128 + 526545517*2^192;\
17385304703201717028 + 17305701992817220735*2^64 + 13680567188426871885*2^128 + 129557385*2^192,16906697960497087460 + 17111058607129258588*2^64 + 5583966163386451833*2^128 + 2012710367*2^192,3236056717287811970 + 2521477123472340247*2^64 + 1784389827697469883*2^128 + 443155573*2^192,2111198155240602452 + 15218551152183811377*2^64 + 829464544544598732*2^128 + 983124363*2^192,16286734441515039884 + 8736091271102881157*2^64 + 12006708919343842742*2^128 + 215966480*2^192,8174702117999255048 + 1925035376210888780*2^64 + 16793011327313451262*2^128 + 1890800135*2^192,13916696983612022084 + 14113233765429255977*2^64 + 12452022827939231674*2^128 + 862073762*2^192,9072855759007204812 + 4727497222890500765*2^64 + 7776751193553232993*2^128 + 1840317721*2^192;\
0 + 0*2^64 + 0*2^128 + 117440512*2^192,0 + 0*2^64 + 0*2^128 + 1056964608*2^192,0 + 0*2^64 + 0*2^128 + 671088640*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 1012832879*2^192,0 + 0*2^64 + 0*2^128 + 369098752*2^192,0 + 0*2^64 + 0*2^128 + 687865856*2^192,0 + 0*2^64 + 0*2^128 + 788529152*2^192,0 + 0*2^64 + 0*2^128 + 385875968*2^192;\
5547723108491325502 + 521175915608534860*2^64 + 3981594310044995605*2^128 + 2015988379*2^192,12192321664512682298 + 9867752985007327780*2^64 + 12459147141115833819*2^128 + 1465781494*2^192,8938760613234156319 + 16773144781228654173*2^64 + 4706535619885032033*2^128 + 1676314908*2^192,2809976689110659062 + 1151368661228564747*2^64 + 16059021482030365211*2^128 + 1819272872*2^192,13895455765383671274 + 6394846659034834730*2^64 + 12445373627300983469*2^128 + 88057237*2^192,7608573759453035468 + 17992474539931615048*2^64 + 8392257521168325937*2^128 + 1411184430*2^192,17021304886890685176 + 8402054452291102720*2^64 + 7318934665856106146*2^128 + 1119745993*2^192,12542299607276153790 + 1298541003039119722*2^64 + 10959661512445404912*2^128 + 92995910*2^192;\
2439948733688600014 + 15810489504227671435*2^64 + 2785347986868162349*2^128 + 1653588751*2^192,5183772057760887996 + 3613508481773176964*2^64 + 4403714152074211226*2^128 + 76930805*2^192,6893175873276817510 + 16195453099115133426*2^64 + 14091874324085664716*2^128 + 1217485750*2^192,10863430844116214608 + 2061106413076165978*2^64 + 16180091239806392477*2^128 + 1367164922*2^192,16644601708413178132 + 14352030497902991432*2^64 + 16676283418276657409*2^128 + 1228951606*2^192,107485367159677880 + 2333355040447340689*2^64 + 2697730489480802520*2^128 + 840849322*2^192,3172499504497489626 + 9429095312776808350*2^64 + 8865814607225078877*2^128 + 1964872157*2^192,7469102318434850100 + 8039490602992783279*2^64 + 3468924155491484160*2^128 + 1467225689*2^192;\
7530208489394945818 + 12366954048734241980*2^64 + 2026616752141649922*2^128 + 2043726582*2^192,18239571872138288144 + 12565115244926409364*2^64 + 6211110236567008843*2^128 + 1166284399*2^192,1014649464176558464 + 9549326579751971637*2^64 + 11915603713509553428*2^128 + 538836230*2^192,14060929282192249608 + 13343598062313491594*2^64 + 15050101599328497305*2^128 + 2007832062*2^192,15931834421046079408 + 1664713343733070063*2^64 + 7844684892663178568*2^128 + 438210826*2^192,15724199053462764700 + 1566576809229779267*2^64 + 6922688240795503695*2^128 + 952652145*2^192,12213399920109293460 + 9916313986885251225*2^64 + 3320071087875906409*2^128 + 1433242431*2^192,1021548778222700840 + 2838179300859141850*2^64 + 2380946965918323549*2^128 + 257315678*2^192;\
4238806457153545524 + 14479168632206880313*2^64 + 8278426595554824277*2^128 + 847351291*2^192,14583520915002787816 + 10724531302794540304*2^64 + 18337997521330077461*2^128 + 672711857*2^192,5275222488234338756 + 6248689990675131600*2^64 + 9156448678497524819*2^128 + 113859131*2^192,16927259333059964168 + 12369096529931892768*2^64 + 6636873857208356641*2^128 + 583288705*2^192,3438529622113528872 + 15807345438427670098*2^64 + 17324319558555808837*2^128 + 1027700629*2^192,9647858641750535968 + 13784655274633007486*2^64 + 7067283239010110741*2^128 + 1083579540*2^192,14973609791261879464 + 63457985261612549*2^64 + 14563875845533922992*2^128 + 1571054382*2^192,4625872757670695992 + 13365189542771145875*2^64 + 5407996094626488047*2^128 + 1048242564*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4145 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^7 - 4*x^5 + 16*x^4 - 16*x^3 - 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 2; x^6 + 2*x^5 + 4*x^4 + 4*x^3 + 16*x^2 + 32*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 35

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^5 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
