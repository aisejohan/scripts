/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 2, 0, 2, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	6 
[1, 3, 2, 0, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	4 
[1, 3, 1, 0, 1]  	16	5 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	5 
[1, 2, 2, 0, 1]  	17	6 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	3 
[1, 5, 0, 0, 2]  	18	6 
[1, 1, 2, 1, 2]  	19	5 
[0, 5, 1, 0, 254]  	19	3 
[2, 2, 0, 0, 255]  	12	2 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	2 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	2 
[1, 2, 1, 1, 255]  	18	4 
[0, 6, 0, 0, 255]  	18	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11472429735331794266 + 12505482720083444243*2^64 + 17038348327998692350*2^128 + 422084983*2^192,10787920483554395588 + 17248056928634023562*2^64 + 2670498004458043613*2^128 + 249355668*2^192,8206219730884653016 + 10512120585059338646*2^64 + 15046229788769867149*2^128 + 1880648735*2^192,2363647634261932648 + 7827534191495835123*2^64 + 16680509930457553948*2^128 + 1228287622*2^192,4021454688302790576 + 18319122852158055298*2^64 + 15473222319290857539*2^128 + 1460485972*2^192,8539468913851472404 + 3342108462629905333*2^64 + 13028793388661499767*2^128 + 1224616661*2^192,16002238225518760628 + 9529949983671666385*2^64 + 14034066890863352148*2^128 + 1919757348*2^192,9920486011132402480 + 11472942594104785817*2^64 + 3948110839617393360*2^128 + 1463152379*2^192;\
17579143092133877116 + 5474953002663676310*2^64 + 10025167348340750557*2^128 + 403739493*2^192,1532301918809440188 + 14201436125114891939*2^64 + 11952507077529571513*2^128 + 1754857440*2^192,12728740771050503716 + 10683822321359252685*2^64 + 7920946673821619616*2^128 + 1136763556*2^192,11345017592907930924 + 17867368470982458559*2^64 + 18169897604443349729*2^128 + 672199077*2^192,2292646861697703204 + 9705815354487048541*2^64 + 15136648284771863976*2^128 + 1548668987*2^192,371559465368873324 + 5626159567569666954*2^64 + 9970296888813612930*2^128 + 447120679*2^192,13349764267212668976 + 14913528643671972822*2^64 + 2322725552021169164*2^128 + 2071278415*2^192,2993722800147935408 + 2411628449563707055*2^64 + 6312823062316344963*2^128 + 405794633*2^192;\
7152311448473553028 + 10743106256006166997*2^64 + 13949322360350224424*2^128 + 1766678991*2^192,4764581663741181512 + 18307420167524029324*2^64 + 16190147546186912837*2^128 + 642088494*2^192,1581526059443329856 + 4020270544157468811*2^64 + 17332858083014217008*2^128 + 1336107239*2^192,11277381919880009152 + 16361142918892778106*2^64 + 9944178169687820174*2^128 + 1322823800*2^192,12365948523893601760 + 17093024956110620523*2^64 + 5362183141353792607*2^128 + 144235435*2^192,13954013019274524616 + 5522126397703620905*2^64 + 11242510801637941914*2^128 + 1494010204*2^192,7701288932221385744 + 4477154233878017084*2^64 + 10339636469239392438*2^128 + 1444968906*2^192,8685529291766439288 + 17224969299375975195*2^64 + 14041290077781202380*2^128 + 650876820*2^192;\
7314512095192184662 + 6703730916122136692*2^64 + 13042906615813910127*2^128 + 2095557003*2^192,5355936778677494740 + 9244682428658431116*2^64 + 9810647275622388807*2^128 + 1112376121*2^192,2307536206225525400 + 14360330581916657340*2^64 + 1204988438722563497*2^128 + 1516944193*2^192,16796399554034008020 + 14186010835673599496*2^64 + 9157737833825410584*2^128 + 2005454551*2^192,6931336712309737420 + 2676555919124279412*2^64 + 14213208845407514076*2^128 + 1351679802*2^192,14217517630090778304 + 8656675586373162393*2^64 + 2860533923197771193*2^128 + 1784542220*2^192,9846497998615907400 + 2625271398944372051*2^64 + 15440456970995600564*2^128 + 359203187*2^192,7013626518612155200 + 13687539907067067738*2^64 + 15758100965884170407*2^128 + 1051696013*2^192;\
6577141011781542995 + 13350873769319637772*2^64 + 10227646789920688917*2^128 + 652995112*2^192,4747833205262261938 + 7021364799678291717*2^64 + 18181701168738519385*2^128 + 615908250*2^192,16789436043581074300 + 7842237184794227969*2^64 + 8781520694775718450*2^128 + 1290350554*2^192,14985945653322597820 + 12899117853091966313*2^64 + 13023166629918604571*2^128 + 75665955*2^192,8864195579162681660 + 13230883818535685943*2^64 + 3472853417019337781*2^128 + 362494535*2^192,2785475448260623814 + 2807589706566437003*2^64 + 38606911724648577*2^128 + 735608960*2^192,2761189331893258306 + 10754957626372093552*2^64 + 17284722752592524778*2^128 + 679416345*2^192,10900053800068924840 + 17744255650287041247*2^64 + 15875132974599845887*2^128 + 430969040*2^192;\
9645434777141240899 + 5343363822875936406*2^64 + 8062637548872235859*2^128 + 310529714*2^192,2241821642569149590 + 2829726300103081954*2^64 + 7486828512825751239*2^128 + 455863528*2^192,8887213242375444924 + 7779687677261703148*2^64 + 12605842405163453959*2^128 + 1053260171*2^192,7758142286779787020 + 17289660596795960298*2^64 + 4819192198204519332*2^128 + 111851227*2^192,5907725072154830836 + 16386134618047020054*2^64 + 6959061071033148107*2^128 + 678141195*2^192,10639621265074504214 + 15265024883272909417*2^64 + 16375563334168437462*2^128 + 898316051*2^192,15642960350874758594 + 13129024891451141705*2^64 + 1148255780296596352*2^128 + 525814291*2^192,11152782202648794088 + 17932388727064775479*2^64 + 5456681311589432492*2^128 + 11635660*2^192;\
15065382803402109944 + 5596572298186085051*2^64 + 17385309217886650652*2^128 + 209601225*2^192,4947237349998738828 + 7312549940386989197*2^64 + 3551421587078582662*2^128 + 1721191925*2^192,8763273835983474028 + 7411724842895679241*2^64 + 222408550006682243*2^128 + 1902648673*2^192,4493007679285085908 + 8847523669980206095*2^64 + 5887261507323421945*2^128 + 1118516664*2^192,11496014745414371640 + 12893981410243275359*2^64 + 14883731484741675880*2^128 + 1774250015*2^192,4505700245205884112 + 1283552674524569343*2^64 + 2355772985568325408*2^128 + 275817630*2^192,11343059101221690280 + 17579066435032753290*2^64 + 9210653149903957396*2^128 + 406513208*2^192,12790065048780694328 + 12633210661957832816*2^64 + 11497046335641585377*2^128 + 365558536*2^192;\
4022987882831363926 + 11809025060152793091*2^64 + 11445623936883858717*2^128 + 601889686*2^192,15712964533932988408 + 4997073966252518770*2^64 + 2329592019989701808*2^128 + 40583450*2^192,10519673497857044136 + 16487257848840295219*2^64 + 3414417170495595202*2^128 + 94057808*2^192,7802886066049907752 + 7759682924897668709*2^64 + 316660695623016102*2^128 + 425266535*2^192,11005508687176344716 + 14311640239001280173*2^64 + 18395893349167263332*2^128 + 350752489*2^192,5110500614043841560 + 2445674601663305700*2^64 + 13181906650441100137*2^128 + 847842206*2^192,8286522836422740456 + 13960629980005585507*2^64 + 4011468772699291373*2^128 + 1750685995*2^192,12664389727422863576 + 12342402456901868454*2^64 + 2090941538165446020*2^128 + 270468771*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4656 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 36
