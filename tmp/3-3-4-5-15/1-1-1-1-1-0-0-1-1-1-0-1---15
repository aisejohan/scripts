/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 55
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[2, 4, 0, 0, 0]  	18	7 
[1, 5, 0, 0, 0]  	18	7 
[1, 0, 0, 3, 0]  	18	3 
[1, 4, 1, 0, 0]  	19	5 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 3, 2, 0, 0]  	20	6 
[0, 5, 0, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	5 
[1, 0, 2, 2, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	5 
[0, 3, 1, 2, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 2, 1, 3, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	3 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[0, 7, 0, 0, 1]  	21	6 
[0, 2, 3, 1, 1]  	23	3 
[0, 3, 0, 3, 1]  	24	5 
[0, 3, 4, 0, 1]  	25	2 
[2, 3, 0, 0, 2]  	15	6 
[0, 2, 1, 2, 2]  	20	4 
[0, 1, 2, 3, 2]  	26	2 
[1, 2, 2, 0, 3]  	17	6 
[0, 3, 2, 1, 3]  	22	4 
[1, 0, 1, 2, 253]  	17	4 
[0, 0, 4, 2, 253]  	26	1 
[1, 4, 0, 0, 254]  	15	5 
[0, 1, 3, 1, 254]  	20	3 
[0, 4, 1, 1, 254]  	21	4 
[0, 2, 4, 0, 254]  	22	3 
[0, 4, 0, 0, 255]  	12	2 
[1, 0, 2, 1, 255]  	16	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17256644397036792308 + 868057336901711976*2^64 + 14173541734873837333*2^128 + 323663665*2^192,13261191688748784424 + 14320804002323046387*2^64 + 9830094540742950440*2^128 + 2646608435*2^192,11671567350822291736 + 10971895699433034921*2^64 + 14764819600354396525*2^128 + 3176151085*2^192,1515193267478279624 + 593131794449942287*2^64 + 7720587464086977259*2^128 + 2945623930*2^192,7187622446037666912 + 17542488063810102253*2^64 + 18098460014679516185*2^128 + 3387239149*2^192,15125974262062518296 + 13079503331365024819*2^64 + 12517373940425726987*2^128 + 3525572408*2^192,15933452758718873560 + 2909717392742025719*2^64 + 9107817360620285454*2^128 + 1707151222*2^192,10680744909507693088 + 13329558765358147225*2^64 + 17794662439782100972*2^128 + 2930076202*2^192;\
4488583792597635272 + 6238012325037262076*2^64 + 487905212990605917*2^128 + 3128928518*2^192,17623425847066313856 + 3412194686616460097*2^64 + 606481533445398018*2^128 + 3223830621*2^192,13057458722707266896 + 4368807885488279413*2^64 + 9940617455831127674*2^128 + 3530654871*2^192,10161030406432377194 + 15812419312903956452*2^64 + 6061755778492615434*2^128 + 1581167671*2^192,7535142277529599618 + 2931003819664384716*2^64 + 7628280534449180115*2^128 + 3054697764*2^192,3761827443159926922 + 13908771678477469391*2^64 + 2957210621574245419*2^128 + 1281222770*2^192,10884793059633590936 + 3886933527203228990*2^64 + 10451902698355865213*2^128 + 1760437056*2^192,12553582991605801632 + 16666143013109016963*2^64 + 7666177500697357117*2^128 + 211317489*2^192;\
13177164840600599574 + 15521068539668892046*2^64 + 15159122422956782803*2^128 + 1730418538*2^192,13415365212550421220 + 2017628076596412394*2^64 + 2392075060655306992*2^128 + 544452617*2^192,17910195397277167524 + 17075136437312573045*2^64 + 5672582209030877241*2^128 + 1724330808*2^192,17555661553701954176 + 9393153970435095014*2^64 + 2888155566872457790*2^128 + 1596492850*2^192,10492697037345801204 + 6405767683878720361*2^64 + 17450264106435544014*2^128 + 3738878089*2^192,281667242028557720 + 6323677783786488192*2^64 + 9358119041749408814*2^128 + 1512112301*2^192,15128905752164361068 + 4513500188903238314*2^64 + 8927694862090749754*2^128 + 940960765*2^192,3183203733804318896 + 14940085563563252375*2^64 + 14961712857812609184*2^128 + 3460174288*2^192;\
12413401807202806435 + 2754461952643641898*2^64 + 1919470931665564193*2^128 + 2647683748*2^192,9984920624307624858 + 8698558555252688028*2^64 + 7678709104999883950*2^128 + 2903353722*2^192,15586208972086556522 + 3962743644477264939*2^64 + 8791606565112965763*2^128 + 615834980*2^192,15245321074941869602 + 8679219649008844394*2^64 + 3058677592267303089*2^128 + 4205595226*2^192,3450796166472919948 + 608195658474891351*2^64 + 6899160142242114474*2^128 + 2575265913*2^192,17682130611876894118 + 5592190663586265743*2^64 + 5135204312128240963*2^128 + 4126075627*2^192,10490925208175449054 + 11707124810009436012*2^64 + 8610161873860983976*2^128 + 3648871388*2^192,14857951061543520480 + 6891616499141993004*2^64 + 7242171671895010426*2^128 + 3711639115*2^192;\
3666776035737537992 + 16435659389528755586*2^64 + 12897405969958871125*2^128 + 2121879364*2^192,633381856076221232 + 2950253536683903166*2^64 + 8978294653393132984*2^128 + 2900802261*2^192,17516543278760230032 + 435568680707171753*2^64 + 7274559889040521844*2^128 + 3710046383*2^192,2604456246570757932 + 12776257840651278638*2^64 + 3311933209631681761*2^128 + 115251325*2^192,5003130163710185868 + 12787873105882700218*2^64 + 8285068058418254490*2^128 + 1655934554*2^192,7378352048859925164 + 18273129831431615405*2^64 + 1071749601605269149*2^128 + 14763451*2^192,14319001171131117440 + 1948078852412121553*2^64 + 276938693571993345*2^128 + 847502719*2^192,13044354584362140672 + 12821204003515561460*2^64 + 6083628844408436972*2^128 + 2634067318*2^192;\
13175920655189446473 + 17780200645754976871*2^64 + 14441418543525306438*2^128 + 857921123*2^192,2187541133700319350 + 8166092104821261596*2^64 + 13882097417465670426*2^128 + 3149148212*2^192,4300420552944683430 + 11489429387125175328*2^64 + 130130354406917888*2^128 + 1778600723*2^192,456045680295415730 + 1805004744393086553*2^64 + 14163581027674677862*2^128 + 1154982863*2^192,14164138273729268240 + 7806491887444241473*2^64 + 3283016838453978371*2^128 + 3610099300*2^192,15931443665715133534 + 16282259161084848110*2^64 + 9813338176944380267*2^128 + 3641488256*2^192,7422002932024221746 + 7180845461820584954*2^64 + 11368354007395685018*2^128 + 860921907*2^192,16612549131881281152 + 4570116880373429677*2^64 + 17973964156225411962*2^128 + 2592078456*2^192;\
7015347964727468890 + 4789785452565673556*2^64 + 2621842303047690784*2^128 + 1367484243*2^192,11331511833087813084 + 6786252288178010079*2^64 + 7115857284487991548*2^128 + 3117233596*2^192,8534217785016851780 + 2703159138893928302*2^64 + 12542145690275216595*2^128 + 2143945498*2^192,8457351085157969342 + 17893868992000475642*2^64 + 3438501034939773276*2^128 + 1089430991*2^192,16585167803040162842 + 17158295182192856937*2^64 + 15521648347371422466*2^128 + 2828534339*2^192,17220536472387156518 + 14072426456865699242*2^64 + 15394870743793890331*2^128 + 1111051398*2^192,6349835595668433036 + 7149382545654479444*2^64 + 5895081261829411634*2^128 + 1583290841*2^192,17747627924238972320 + 1805347052271373216*2^64 + 10024322824343283029*2^128 + 2078921513*2^192;\
9542249242407709499 + 9144246428907456042*2^64 + 9184057044154415343*2^128 + 2268703276*2^192,16088987791631170690 + 11835357195003766904*2^64 + 16823653511006836022*2^128 + 1702185196*2^192,11687604203784784050 + 10166018587493314846*2^64 + 17817398685348560387*2^128 + 1677561696*2^192,15295323636724350344 + 17228871165224052165*2^64 + 10985026730359503214*2^128 + 3225710190*2^192,17380242459074052946 + 8227058902607558141*2^64 + 17046886638972068407*2^128 + 2412782941*2^192,9141275573666796060 + 2006539302763182862*2^64 + 1153232362602710107*2^128 + 1854479150*2^192,12360427832267299726 + 12089304405889767698*2^64 + 6387763442264992002*2^128 + 289776309*2^192,14795692986319301968 + 17791229856332322973*2^64 + 17126636505774159174*2^128 + 2466710296*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5276 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 8*x^4 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: Mat([x^8 - 2*x^6 - 8*x^4 - 32*x^2 + 256, 1])
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 35
