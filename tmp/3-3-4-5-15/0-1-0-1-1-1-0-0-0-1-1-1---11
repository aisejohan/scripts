/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 57
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 5, 0, 0, 0]  	18	6 
[1, 4, 1, 0, 0]  	19	4 
[1, 2, 0, 2, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	4 
[1, 3, 2, 0, 0]  	20	6 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[2, 3, 0, 0, 1]  	15	4 
[1, 3, 1, 0, 1]  	16	4 
[1, 3, 0, 1, 1]  	17	4 
[1, 1, 2, 1, 1]  	19	6 
[0, 5, 1, 0, 1]  	19	4 
[1, 1, 1, 2, 1]  	20	4 
[1, 0, 0, 4, 1]  	23	3 
[3, 1, 0, 0, 2]  	12	4 
[1, 0, 3, 1, 2]  	20	4 
[1, 1, 0, 3, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	4 
[1, 1, 0, 2, 3]  	16	5 
[1, 2, 2, 0, 3]  	17	5 
[1, 0, 2, 2, 3]  	21	6 
[0, 7, 0, 0, 253]  	21	5 
[0, 2, 0, 2, 254]  	16	3 
[0, 3, 2, 0, 254]  	17	3 
[1, 3, 0, 0, 255]  	12	3 
[0, 4, 0, 0, 255]  	12	1 
[1, 1, 1, 1, 255]  	15	2 
[1, 0, 2, 1, 255]  	16	4 
[1, 0, 1, 2, 255]  	17	4 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[3012219756498779716 + 1601992430042331634*2^64 + 10600257050664373046*2^128 + 52469981*2^192,1482166294338715616 + 10727698195773260615*2^64 + 15846953563452668198*2^128 + 407598464*2^192,11320472974293135364 + 9279841535673259483*2^64 + 15230801579840306519*2^128 + 812852277*2^192,15856845646886765164 + 6333050077402669494*2^64 + 11302507008423768074*2^128 + 1520874294*2^192,13044634822037353368 + 5169185634857834955*2^64 + 15925164685693527068*2^128 + 624478761*2^192,2150650272722208168 + 805283738764832087*2^64 + 10872678234576094072*2^128 + 1279844475*2^192,15461370253161880964 + 14222926269915956677*2^64 + 5468452327033423836*2^128 + 513258118*2^192,11758695086455419864 + 10577330785587567246*2^64 + 7057643384393383101*2^128 + 1051369864*2^192;\
17620806132101649513 + 14651384027965269227*2^64 + 8001917171006592998*2^128 + 1152882298*2^192,12661092584522400444 + 14177237472710517668*2^64 + 3031335507449949743*2^128 + 1378760153*2^192,12668115282137827627 + 8487883674717605206*2^64 + 10198527680494512608*2^128 + 1308532772*2^192,15565961434917338149 + 12786699701191804416*2^64 + 7296978808661571185*2^128 + 1746138014*2^192,9008392617030645202 + 18306560090383318416*2^64 + 17962848329150215917*2^128 + 1401867935*2^192,7806899797278192934 + 17537897161159962522*2^64 + 7951169598661554658*2^128 + 770149142*2^192,18079774236541297255 + 3259064031713660741*2^64 + 6539353396033856664*2^128 + 1313878865*2^192,17829693095055936010 + 17930093923034726322*2^64 + 4779594916984694*2^128 + 781401253*2^192;\
11832455096141346066 + 3350392260007875047*2^64 + 6856667615423268430*2^128 + 30014868*2^192,11883257884583022476 + 17340582063137760145*2^64 + 16103825361418488529*2^128 + 1009957103*2^192,30000606240346646 + 6972620908947443064*2^64 + 10852309025156610315*2^128 + 618890965*2^192,446150663911551386 + 7276520091854617417*2^64 + 7993767597605621061*2^128 + 17986519*2^192,1677895881036158668 + 14092422343163272173*2^64 + 16965933525697751203*2^128 + 226743557*2^192,11548879580519677400 + 1039732097983250804*2^64 + 18118344850718423777*2^128 + 635451426*2^192,474263884953615920 + 17678189680023535884*2^64 + 11567785116593338811*2^128 + 2042008667*2^192,9972657795808258684 + 3400391190193204290*2^64 + 18093029678092022083*2^128 + 202695942*2^192;\
0 + 0*2^64 + 0*2^128 + 738197504*2^192,0 + 0*2^64 + 0*2^128 + 419430400*2^192,0 + 0*2^64 + 0*2^128 + 117440512*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 979278447*2^192,0 + 0*2^64 + 0*2^128 + 754974720*2^192,0 + 0*2^64 + 0*2^128 + 603979776*2^192,0 + 0*2^64 + 0*2^128 + 234881024*2^192,0 + 0*2^64 + 0*2^128 + 184549376*2^192;\
2273903255420089875 + 9754354969447412666*2^64 + 14018497958397522307*2^128 + 689785972*2^192,15069339803055358210 + 10926891359209545710*2^64 + 16928856401909575039*2^128 + 551513424*2^192,16634631896210614843 + 8165380052482129385*2^64 + 3889115971860800944*2^128 + 461695453*2^192,8153381427907860833 + 1226206240691290345*2^64 + 11886156116291875073*2^128 + 743143056*2^192,3687434911317363742 + 416502322906052020*2^64 + 7902901311843472417*2^128 + 800470706*2^192,4528769432301276684 + 375392627451767011*2^64 + 4128044709949240113*2^128 + 2051202476*2^192,14833727238401895044 + 16085559352542534099*2^64 + 7819984249449564057*2^128 + 701521283*2^192,14459144848144371762 + 3321826634893401507*2^64 + 3021584602055549814*2^128 + 2143848794*2^192;\
5621575499675410798 + 10256236771843221775*2^64 + 5890267039581409538*2^128 + 1144444451*2^192,6319644679820651488 + 3325816544207350575*2^64 + 16160876931528146291*2^128 + 777965141*2^192,6457988463267132572 + 14146810000616921381*2^64 + 415500905845181273*2^128 + 2104437764*2^192,13484064563189929980 + 17043014155873290499*2^64 + 10817995626341250181*2^128 + 937540527*2^192,2495837589946379560 + 14746994511022485195*2^64 + 11323781068324764319*2^128 + 405070462*2^192,2252371381252959496 + 16757468820811323564*2^64 + 2717923750835409071*2^128 + 669705106*2^192,7030597599549129924 + 2194630125295035507*2^64 + 12164793789362824549*2^128 + 860880721*2^192,6942592604321828976 + 16271333065228187476*2^64 + 11140266653865608652*2^128 + 1006478524*2^192;\
5410456569973728876 + 18170067346814864451*2^64 + 2803652990161864777*2^128 + 489237434*2^192,17697102219442716808 + 3091138886420200458*2^64 + 2645390832454796736*2^128 + 746558473*2^192,13190455497833717014 + 873111636528627139*2^64 + 17715138190344803345*2^128 + 1527141438*2^192,2702547268574572414 + 13806205501960136624*2^64 + 11101201460253476523*2^128 + 1418493947*2^192,10188857696600389748 + 11364634784456123775*2^64 + 18205286469791058270*2^128 + 1905872269*2^192,1866332894453661432 + 12300751753662081262*2^64 + 14330030175336587284*2^128 + 1519128812*2^192,11412814044795596234 + 5949931952601803095*2^64 + 237283594965788155*2^128 + 42894542*2^192,1556534600229357108 + 2662412592510129147*2^64 + 3931278703738767542*2^128 + 1244296685*2^192;\
15362393001170846015 + 6904874895099464627*2^64 + 8753603112486105802*2^128 + 1414149052*2^192,4760853221442235872 + 9734922044762739454*2^64 + 64912029519674485*2^128 + 732712412*2^192,9336964784663336929 + 6919129990842366463*2^64 + 14536725257875613502*2^128 + 1355461037*2^192,13983601536723621911 + 2803210852342183539*2^64 + 9339624987228872305*2^128 + 682076634*2^192,4268684223989550430 + 11250750154068230835*2^64 + 12038583637392169157*2^128 + 893717301*2^192,15276096392086353062 + 11680831533727730154*2^64 + 691860204560002357*2^128 + 1008882679*2^192,7524773002329296899 + 2395395295350650234*2^64 + 6723695874329761179*2^128 + 636232163*2^192,9922876501580383734 + 2036152747226017284*2^64 + 9048487292866614495*2^128 + 1250790653*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4175 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 4*x^6 - 4*x^5 + 16*x^3 + 64*x^2 - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 4*x^3 + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 35

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
