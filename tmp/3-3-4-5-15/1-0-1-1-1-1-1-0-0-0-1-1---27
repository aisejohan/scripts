/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 49
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	6 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[1, 0, 0, 4, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[1, 1, 0, 2, 1]  	16	6 
[1, 2, 2, 0, 1]  	17	6 
[1, 0, 4, 0, 1]  	19	5 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 1, 3, 1]  	22	4 
[1, 5, 0, 0, 2]  	18	7 
[1, 0, 2, 2, 2]  	21	6 
[0, 0, 5, 1, 2]  	25	2 
[0, 6, 0, 0, 254]  	18	4 
[0, 0, 0, 5, 254]  	25	1 
[2, 2, 0, 0, 255]  	12	3 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
[0, 2, 1, 2, 255]  	20	2 
[0, 3, 2, 1, 255]  	22	2 
------
The gap is between 3 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[258165278876263368 + 2216077758088061098*2^64 + 9140818503180023238*2^128 + 995370511*2^192,5042503039657050810 + 3910001608196740109*2^64 + 11375654914234782272*2^128 + 1853495623*2^192,17950478771765074728 + 1647359463662814807*2^64 + 9564684432639652326*2^128 + 883294259*2^192,4248951552426599654 + 6069206974598945456*2^64 + 5720428348368176735*2^128 + 23385270*2^192,13374106185779054118 + 10192034285193588030*2^64 + 12544152785006460040*2^128 + 935328245*2^192,15135826614315064244 + 1578112878852090266*2^64 + 6257188306639319308*2^128 + 1140301085*2^192,18086358508386248402 + 17857946981963205226*2^64 + 9244279238208390016*2^128 + 694324628*2^192,7477566122549458588 + 16704250814637227351*2^64 + 16833154384584722906*2^128 + 276808247*2^192;\
9332937230041477958 + 8647908102932452205*2^64 + 728386440546671397*2^128 + 2011477284*2^192,13847145349462129141 + 6125259514229314465*2^64 + 2804181026191363368*2^128 + 996653822*2^192,15755402595723609660 + 4779736501046005649*2^64 + 4422285991653827029*2^128 + 1663966395*2^192,3894025434369658019 + 11182239682830907694*2^64 + 13770714685110578898*2^128 + 920666830*2^192,3392617523867752707 + 16351232305344870824*2^64 + 15178633777449486379*2^128 + 470963691*2^192,6147911958995982866 + 3338947276369447678*2^64 + 11528648855640883434*2^128 + 911647521*2^192,16825254086340137805 + 18421892951854112584*2^64 + 4113053845247899424*2^128 + 1665971696*2^192,12600553872742017382 + 1632567482861359105*2^64 + 12294749882329940436*2^128 + 125549499*2^192;\
12273342500469827032 + 8513364061268222975*2^64 + 9277876718964348059*2^128 + 1085934477*2^192,12900340014252935092 + 5463394662015308357*2^64 + 12108258580722371661*2^128 + 50643999*2^192,12673732033964285632 + 13627045886151386274*2^64 + 17290871909407213307*2^128 + 107348651*2^192,14163371159376072588 + 4792387782122807586*2^64 + 12974932695172594720*2^128 + 332183085*2^192,784809026650290568 + 3699875803221115674*2^64 + 12021252196140398281*2^128 + 385167898*2^192,17302615077605434576 + 3566788478468420068*2^64 + 13305923266192177862*2^128 + 519970474*2^192,1773865430353959508 + 1610921176945722614*2^64 + 9312250076402143847*2^128 + 350389871*2^192,991507453315893520 + 11809596368798085278*2^64 + 9268116950176643172*2^128 + 1067778314*2^192;\
1419014861020616902 + 12603404386245238975*2^64 + 13188762092284589400*2^128 + 780018733*2^192,13029805314821351086 + 9160683340559623158*2^64 + 1690415114470961086*2^128 + 711889691*2^192,9172429376091595180 + 13712043066950252295*2^64 + 16380777945774264625*2^128 + 642946232*2^192,15300621135097273182 + 4219124990614653528*2^64 + 14197506653212158755*2^128 + 346311970*2^192,15952980925904977030 + 11551827218697559668*2^64 + 8951698718798313366*2^128 + 1441971510*2^192,18424128497226592772 + 1757871321800286138*2^64 + 206050077618946441*2^128 + 1686513541*2^192,7752449121623916354 + 2513432464686103681*2^64 + 10858118164673084919*2^128 + 2032314514*2^192,14889701311771315100 + 15201101286296007569*2^64 + 4985672494196844873*2^128 + 1163806431*2^192;\
10049598546735458772 + 5941837401575085267*2^64 + 3094867158990084904*2^128 + 1915187300*2^192,12574409347939115154 + 15308793506205069009*2^64 + 11924562260665422343*2^128 + 1677034266*2^192,6895139759359649868 + 16422908892768441697*2^64 + 15998086024738734162*2^128 + 1978924106*2^192,5336186375399907402 + 13734279881248806271*2^64 + 11855250868520424484*2^128 + 238029920*2^192,3641756706010061898 + 15871719106421832465*2^64 + 15368185269597077151*2^128 + 1181757210*2^192,15426392512151526532 + 14490932485766623342*2^64 + 16764166025212848563*2^128 + 58746356*2^192,17161278943837314274 + 15454104380544543057*2^64 + 16910187921100542791*2^128 + 1318498823*2^192,9347181558947302356 + 7036075941175217977*2^64 + 3657219429277450962*2^128 + 1807522933*2^192;\
141532167938933760 + 3730480493431374731*2^64 + 15304934682544705777*2^128 + 194342448*2^192,11993276264363350861 + 978503771370801034*2^64 + 947538525207936681*2^128 + 1627897862*2^192,7717341506961513124 + 7518895849919857447*2^64 + 14272270950359837349*2^128 + 654626934*2^192,7165925591332802951 + 16363016248868277768*2^64 + 4438246551175879101*2^128 + 1573824202*2^192,14775371142802085503 + 16485438651423195330*2^64 + 14606084098378690290*2^128 + 522205894*2^192,4173666797503164474 + 2544529087140234930*2^64 + 15806517992358441041*2^128 + 1992102373*2^192,5320402003643974409 + 4687090592646324913*2^64 + 11867789547177889597*2^128 + 864797320*2^192,7822847637280794102 + 9634422968782258754*2^64 + 11952997977211451219*2^128 + 1401049412*2^192;\
6775375465043631340 + 8088487734738826855*2^64 + 9083498858104954749*2^128 + 1438994406*2^192,10434677177354340063 + 600721752359353520*2^64 + 4741887267612558301*2^128 + 467738578*2^192,9432870426180181212 + 3607749294724728669*2^64 + 16409556229148818280*2^128 + 950687069*2^192,12571678398188104097 + 124095220163413885*2^64 + 18245571441770342441*2^128 + 179797648*2^192,6127679564875909041 + 13509416064753251651*2^64 + 14454667641790150837*2^128 + 856349912*2^192,335086354278091290 + 17658054284210561404*2^64 + 14449032071456112379*2^128 + 1520299971*2^192,5865891999766360031 + 12671063121014212744*2^64 + 9112220497145521201*2^128 + 939918225*2^192,15630589581384389714 + 2365509688146763133*2^64 + 7804612956896822886*2^128 + 754920606*2^192;\
13450128502825009124 + 14932374111298839217*2^64 + 10274597117683673937*2^128 + 152032322*2^192,14960773358521124256 + 15452406736096768263*2^64 + 7205119643185040523*2^128 + 504046573*2^192,15901458507090969280 + 10766776006431872649*2^64 + 10408005812163312907*2^128 + 2132116354*2^192,14120953520546992384 + 3090441181279900472*2^64 + 7851562901192859176*2^128 + 1442644657*2^192,107222031775026492 + 8709236852533145720*2^64 + 13725775985400655628*2^128 + 2046202261*2^192,9829985437030300352 + 13730829640126352619*2^64 + 2435376068404346210*2^128 + 170191741*2^192,17771909758488055104 + 4706840614438483152*2^64 + 9365709653289337952*2^128 + 1696416449*2^192,713066800603343808 + 11323267280094456809*2^64 + 10883668234477695525*2^128 + 1348164050*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4657 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
Look at the ideal generated by: 
1*x^2*y^1 + 1*y^3 + 1*z^1*w^1
1*x^1*z^2 + 1*y^2*w^1 + 1*y^1*z^2
