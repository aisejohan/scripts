/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	4 
[3, 0, 1, 1, 0]  	18	6 
[1, 0, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	4 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	3 
[1, 0, 3, 1, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	3 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	3 
[1, 0, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[3, 0, 4, 0, 0]  	25	4 
[0, 4, 2, 1, 0]  	25	3 
[0, 1, 2, 3, 0]  	26	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 3, 0, 0, 1]  	15	6 
[2, 0, 0, 2, 1]  	16	5 
[3, 0, 3, 0, 1]  	21	6 
[0, 0, 5, 1, 1]  	25	2 
[0, 3, 2, 1, 2]  	22	3 
[0, 3, 1, 2, 2]  	23	3 
[0, 2, 1, 3, 2]  	25	3 
[0, 2, 0, 4, 2]  	26	2 
[0, 4, 2, 0, 6]  	20	4 
[0, 3, 0, 3, 6]  	24	4 
[0, 2, 1, 2, 252]  	20	3 
[0, 0, 0, 5, 253]  	25	1 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[1, 0, 1, 1, 255]  	12	3 
[0, 5, 0, 0, 255]  	15	1 
------
The gap is between 7 and 251.
Lengths: 1 1 6 8 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1310887631621394192 + 9428872096670441370*2^64 + 18028480379031293455*2^128 + 7877764961*2^192,5533254108674160348 + 4017624678508192575*2^64 + 1141445131289445239*2^128 + 2203045493*2^192,7377276980312213004 + 6196564252429909005*2^64 + 276256765044646911*2^128 + 6942496603*2^192,10142297544419038208 + 1653728439271248446*2^64 + 16615953747487343014*2^128 + 1226063833*2^192,15344905666500368848 + 16780801539943301773*2^64 + 15444692786632533187*2^128 + 7424549714*2^192,7666087045163211656 + 18247727501697103665*2^64 + 9590345373596345532*2^128 + 3750342113*2^192,15878180596262105092 + 18317894804660553834*2^64 + 5429062782031998358*2^128 + 5338558395*2^192,5315802758515367440 + 15724716837272721876*2^64 + 16588095856436447082*2^128 + 6545523628*2^192;\
2509670650849522924 + 28031207435376277*2^64 + 8005871129527895237*2^128 + 5290564979*2^192,13488221988107502650 + 1073792848982012995*2^64 + 12096337610873392290*2^128 + 609973341*2^192,10648130563915347498 + 4456221642634286515*2^64 + 7229171362044671280*2^128 + 8384271532*2^192,14874506358037342248 + 903523043437498598*2^64 + 18000526556326582399*2^128 + 274534275*2^192,13103500504253830520 + 13650438102963014035*2^64 + 13749874158679360561*2^128 + 7725229327*2^192,14512342995034824620 + 4297774098948550409*2^64 + 16500035670851441100*2^128 + 1075640998*2^192,8737956333524549526 + 16018689355320390413*2^64 + 5986676143974512224*2^128 + 1748887336*2^192,3554047652700276360 + 16912201152662601255*2^64 + 2521593794645609205*2^128 + 7566372951*2^192;\
4942485129634012012 + 8697833625232979747*2^64 + 16332697219088407728*2^128 + 4115368906*2^192,17903222372880454824 + 15247670339300193515*2^64 + 8553253095130689521*2^128 + 10417840*2^192,17665599996545879664 + 992904991426328850*2^64 + 3601711677062691191*2^128 + 4274244764*2^192,1028563644740112936 + 9979224542806747954*2^64 + 13747709735190839652*2^128 + 5709275814*2^192,6855057635870800096 + 15835767815424202808*2^64 + 3487840892546169282*2^128 + 2352988734*2^192,12917824696802232400 + 2062010739989151719*2^64 + 16280009260260991811*2^128 + 7768383371*2^192,1484040531365745256 + 17516118775199419267*2^64 + 2249042679883573161*2^128 + 6115311555*2^192,12872837544657422224 + 2195790296040091740*2^64 + 16477497346293347985*2^128 + 7028411797*2^192;\
14453731512104948028 + 4997454881113232129*2^64 + 8826374794228573874*2^128 + 2115390699*2^192,7893946718867126194 + 1387997679633789342*2^64 + 11479008850730240842*2^128 + 494293451*2^192,4300867127312744242 + 4154881350588752964*2^64 + 6049731701391085027*2^128 + 8346948865*2^192,18325084687106369144 + 12802205638307642212*2^64 + 2416491077177887002*2^128 + 2396984418*2^192,15155915059928157304 + 13645372972822497133*2^64 + 3326009322282983730*2^128 + 1052675607*2^192,11901510689679734060 + 10938198000794265157*2^64 + 9028284854628260754*2^128 + 8106101158*2^192,16124648778736758414 + 8753377478538569751*2^64 + 8051363125762967925*2^128 + 5992243560*2^192,12269386119357859336 + 5683391489954081472*2^64 + 915757498586558003*2^128 + 907918012*2^192;\
18011614210247728580 + 5481686371917668883*2^64 + 4405555373795002371*2^128 + 5182515575*2^192,14827232062911175185 + 2879739201762305188*2^64 + 15626764146306949871*2^128 + 2279624029*2^192,7666533236460679589 + 3237929518232646569*2^64 + 1685764462354731854*2^128 + 12451371*2^192,17297257035807810240 + 3436138379882993429*2^64 + 17239890845823421677*2^128 + 3081060665*2^192,7168430625085056508 + 12898290649676030694*2^64 + 3219745195936609152*2^128 + 3728304809*2^192,10999356230919582222 + 6884577906107263152*2^64 + 11942710046813418966*2^128 + 1526734059*2^192,4930043899985333087 + 7501508643965581812*2^64 + 15870848667492758361*2^128 + 5321351461*2^192,2099877794452021804 + 15504496518664918518*2^64 + 16949348457542715621*2^128 + 6970435836*2^192;\
17124834015531225864 + 15829326892563462908*2^64 + 12892326892774074641*2^128 + 8253827353*2^192,11315806825199440162 + 12953545155394694727*2^64 + 7145348925059417067*2^128 + 7753181833*2^192,4662773786036631802 + 8125382195099014432*2^64 + 17677810062756279714*2^128 + 2475133546*2^192,11784820573585809168 + 6126403872928625645*2^64 + 11087502329487481665*2^128 + 7129483298*2^192,6137166821572804632 + 12821985812323814649*2^64 + 18414540321485248457*2^128 + 4110367787*2^192,4054249458024216924 + 2836595276340357724*2^64 + 15968365706955701637*2^128 + 592834383*2^192,2509092696129863198 + 15552184344569048332*2^64 + 5398572398567483198*2^128 + 6576687792*2^192,14715776442019452184 + 12673259509168043331*2^64 + 15536555544810822557*2^128 + 2018007765*2^192;\
9220175129013330072 + 10383933669700258390*2^64 + 5167261911504391475*2^128 + 7555037377*2^192,8457962807045045874 + 15774759823483124117*2^64 + 9112655175925894738*2^128 + 1901242278*2^192,35042014983849066 + 7667241869554819925*2^64 + 5449508013562321318*2^128 + 5616729147*2^192,12872257465656669456 + 5771534230580552890*2^64 + 15945415497918336848*2^128 + 1428558967*2^192,11782371631362724728 + 15908871050652581664*2^64 + 17626167930690309239*2^128 + 5084338370*2^192,11287548710189947356 + 16831966776025328936*2^64 + 3383795062817787322*2^128 + 6716787855*2^192,4478991837895424382 + 1532335096877326763*2^64 + 16203059748563805033*2^128 + 8138792647*2^192,12912857563914496504 + 18232160311826709743*2^64 + 9133645040342484890*2^128 + 7648178764*2^192;\
17350804512745389808 + 4682961869345943373*2^64 + 3404930505867661550*2^128 + 3425245668*2^192,15626207577559882876 + 8334607907358360548*2^64 + 5096589581414752724*2^128 + 3602786070*2^192,9467962099044057996 + 5509997568720924173*2^64 + 2010681713507093523*2^128 + 3093169687*2^192,11062034667588285792 + 6860540172864073198*2^64 + 10442605482038267631*2^128 + 3303738155*2^192,12275443036641546128 + 10616732466390440488*2^64 + 9791591200903050847*2^128 + 3498663127*2^192,16423031905966936456 + 425138116912515054*2^64 + 435438376527238584*2^128 + 4133312429*2^192,4746104160409188388 + 13001961271928721257*2^64 + 895876093805843778*2^128 + 1889746500*2^192,549112804613365488 + 2833665631285862266*2^64 + 8801652490552428151*2^128 + 163920840*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4075 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 24
