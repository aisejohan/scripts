/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 49
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	6 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	2 
[0, 1, 0, 3, 0]  	18	2 
[3, 0, 0, 2, 0]  	19	3 
[2, 0, 2, 1, 0]  	19	3 
[2, 0, 1, 2, 0]  	20	3 
[0, 5, 0, 1, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	3 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	5 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 4, 2, 1, 0]  	25	3 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 2, 5, 0, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[2, 0, 0, 3, 1]  	21	7 
[0, 4, 0, 2, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[2, 0, 0, 2, 2]  	16	5 
[3, 0, 2, 0, 2]  	17	4 
[0, 0, 5, 1, 3]  	25	2 
[0, 5, 1, 0, 4]  	19	5 
[0, 4, 2, 0, 4]  	20	4 
[0, 1, 3, 1, 252]  	20	3 
[0, 3, 0, 2, 253]  	19	4 
[0, 0, 0, 5, 253]  	25	1 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 2, 1, 254]  	16	4 
[1, 0, 1, 2, 254]  	17	3 
[0, 7, 0, 0, 254]  	21	4 
[0, 6, 0, 0, 255]  	18	4 
[0, 2, 2, 1, 255]  	19	3 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12386809813361916580 + 13922774297893726328*2^64 + 3667800990752157449*2^128 + 1663310079*2^192,3077747596931708844 + 6383825852181313509*2^64 + 9302753968611453826*2^128 + 2574856266*2^192,2987595195592056110 + 383474661485059584*2^64 + 10288865554943938023*2^128 + 2539774789*2^192,455110635903645060 + 13380200693840815637*2^64 + 9658939095522106526*2^128 + 4241794440*2^192,11241484857157850800 + 5387737985437145864*2^64 + 12961722215953975558*2^128 + 2491643088*2^192,1213544987477725732 + 6562401993092033579*2^64 + 12073205771383546120*2^128 + 992884624*2^192,5158241982625842686 + 1809236055779195894*2^64 + 428904052380630146*2^128 + 563838164*2^192,7811639029743760420 + 12238685987574112268*2^64 + 14084623801912052675*2^128 + 2373867098*2^192;\
14641318173465126708 + 7449161735729828570*2^64 + 10425486018588898122*2^128 + 1414484327*2^192,9637174964368591928 + 13126144601451821458*2^64 + 2256911655221710216*2^128 + 876216172*2^192,9918969478335171296 + 4283241740618223690*2^64 + 18153151344557748995*2^128 + 4178653611*2^192,3143000014923655080 + 14223180595628916949*2^64 + 7520940556805381591*2^128 + 1308812719*2^192,5219239496315772520 + 11394258144136055456*2^64 + 3978409624276419251*2^128 + 3316863426*2^192,1917236252914227320 + 11996766494731176105*2^64 + 4885294530925990316*2^128 + 2711677782*2^192,7321965636291146592 + 16667039683317187206*2^64 + 13374277308263077469*2^128 + 1565177619*2^192,8264711398660696752 + 5406992311832007838*2^64 + 1250894657462417706*2^128 + 1496020186*2^192;\
5064982222531331244 + 3090897842299175710*2^64 + 16952810487337864527*2^128 + 1660755910*2^192,7531929512517506640 + 1668751357759352069*2^64 + 9332967667868415548*2^128 + 2278483278*2^192,14398271969416944584 + 8342163235526360020*2^64 + 6952489022379943281*2^128 + 1575901079*2^192,14445007204510575472 + 9316148733763239135*2^64 + 7565840033539701241*2^128 + 3415384218*2^192,11351867389151703440 + 12962748947811962346*2^64 + 2130772080689919397*2^128 + 1585259898*2^192,17102864299432781224 + 4400342266132632298*2^64 + 14223504614620106254*2^128 + 3923639910*2^192,11113072752178663824 + 4712132125753021393*2^64 + 6294685697823238516*2^128 + 2978620855*2^192,4054461924194881824 + 16924951034813589543*2^64 + 8370066180179327725*2^128 + 2689648511*2^192;\
13439197706618209268 + 1823365379223632483*2^64 + 14887982813820067253*2^128 + 3606060318*2^192,14734461009642083448 + 5081857406681733173*2^64 + 704133723245304938*2^128 + 295053196*2^192,14211733046934865984 + 11925450698420502699*2^64 + 11095843111128998454*2^128 + 3812029469*2^192,3458398670328456240 + 4231663068370003711*2^64 + 11253933628839146114*2^128 + 800232926*2^192,10720836341190818184 + 6153645413264479373*2^64 + 18114124742697540964*2^128 + 1021087570*2^192,4956571067353146744 + 9500867793502085365*2^64 + 10783306743856256956*2^128 + 2107554179*2^192,11788995110988907584 + 7529133019670031186*2^64 + 3882224021021854093*2^128 + 2478569629*2^192,14315082424592792976 + 6344236414252599681*2^64 + 10080692860852031796*2^128 + 1886862230*2^192;\
8712343930761068388 + 10111450847950469987*2^64 + 9023529250637646185*2^128 + 3472630376*2^192,1076696546138085008 + 9158499848270555429*2^64 + 9117874942540063742*2^128 + 404220040*2^192,6341896122457225932 + 15155296440188432300*2^64 + 5443402103665577856*2^128 + 2933203540*2^192,5923975628928834376 + 16002554526427702089*2^64 + 18234301704726026586*2^128 + 3982233398*2^192,17482594776509247400 + 7101315221228909814*2^64 + 8795806450518552976*2^128 + 3058632002*2^192,5409797687395222336 + 2904760669686082258*2^64 + 15388328397931856123*2^128 + 42024814*2^192,4995122757244824916 + 7643524370139708023*2^64 + 17150315504727611663*2^128 + 3019226160*2^192,7443151817540670808 + 14799368745421997684*2^64 + 15689798506362961135*2^128 + 2637426104*2^192;\
11737893991114932886 + 3653824959012440202*2^64 + 834230755211866884*2^128 + 2722233270*2^192,13202793085891720790 + 9230064855176892464*2^64 + 10625606022953365819*2^128 + 1196499578*2^192,14729900964818182211 + 5499669547690238411*2^64 + 9990719366033667217*2^128 + 2495517722*2^192,8152096142455431394 + 9066805461819756765*2^64 + 8278270605769147623*2^128 + 634408823*2^192,3304458758375081568 + 8010509909033009222*2^64 + 10274077649628464946*2^128 + 3676786886*2^192,4658309324331019378 + 16807600365608989874*2^64 + 1388137620286502618*2^128 + 310113254*2^192,11407440468124549155 + 15081130350672524827*2^64 + 5913427945689809374*2^128 + 3824416997*2^192,15315657243765690138 + 15197368816583547438*2^64 + 95572122229494733*2^128 + 1737085748*2^192;\
4468150724843915828 + 17493510123243449371*2^64 + 2153994211479823615*2^128 + 1704272959*2^192,1012550889072407132 + 15852946869742610469*2^64 + 3360520416855592292*2^128 + 3074319771*2^192,300040477904414106 + 15320604320493242517*2^64 + 7068618507675116057*2^128 + 3466084949*2^192,18137133270849096300 + 16465305050323394318*2^64 + 7107282717232397650*2^128 + 1481431370*2^192,5350247263498095104 + 3141607357954389140*2^64 + 2597191308241434167*2^128 + 3225312127*2^192,4737020542246632380 + 7585874319880097303*2^64 + 15351282420042684599*2^128 + 58338511*2^192,3878632905405693978 + 11873793698357961199*2^64 + 2245782815117064585*2^128 + 48259016*2^192,16410922453786160124 + 15206158441942098827*2^64 + 5181032986963852286*2^128 + 2799899138*2^192;\
9107575059044325548 + 17719329279624240139*2^64 + 9750957549837309508*2^128 + 473671360*2^192,10877756518124961708 + 10911173247804369957*2^64 + 4156572779991214709*2^128 + 881793623*2^192,7339214053394011726 + 216296714594733058*2^64 + 10373239414112828096*2^128 + 377399979*2^192,2692960068534539540 + 14976376457637929565*2^64 + 11076804867803007659*2^128 + 895971420*2^192,1341417671182236160 + 17526127162316724002*2^64 + 4937772893644475459*2^128 + 573528510*2^192,6407765327101406740 + 921339749906471637*2^64 + 12625949012078139732*2^128 + 914281554*2^192,15800677534749815566 + 7674259486592302502*2^64 + 1423124001130690977*2^128 + 1501480256*2^192,9928305304530541812 + 10882513925855428897*2^64 + 6788417079127609031*2^128 + 840887437*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4412 lists. */
The sign is: -1
The characteristic polynomial is: x^8 + x^7 + 4*x^5 - 16*x^3 - 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^2 + 4, 1; x^4 + x^3 + 4*x + 16, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*w^3
Total 493: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 
Look at the ideal generated by: 
1*x^2*y^2 + 1*x^1*z^1*w^1 + 1*y^4
1*x^3*z^1 + 1*x^2*y^1*z^1 + 1*x^1*y^2*z^1 + 1*y^3*z^1 + 1*y^1*w^2
