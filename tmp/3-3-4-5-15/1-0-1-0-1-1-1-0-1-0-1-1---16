/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 50
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[0, 1, 3, 0, 0]  	15	2 
[2, 4, 0, 0, 0]  	18	7 
[1, 5, 0, 0, 0]  	18	7 
[1, 4, 1, 0, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[1, 0, 4, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 4, 2, 0, 0]  	20	4 
[1, 3, 1, 1, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	4 
[0, 6, 0, 1, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 7, 1, 0, 0]  	25	3 
[0, 0, 5, 1, 0]  	25	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 3, 0, 0, 1]  	15	7 
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	6 
[0, 5, 0, 1, 1]  	20	4 
[0, 6, 1, 0, 1]  	22	4 
[0, 2, 1, 3, 2]  	25	2 
[0, 2, 0, 4, 2]  	26	2 
[0, 3, 1, 2, 5]  	23	3 
[0, 1, 0, 4, 253]  	23	2 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[1, 0, 1, 1, 255]  	12	3 
[1, 4, 0, 0, 255]  	15	3 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
------
The gap is between 6 and 252.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6804298641407993712 + 6762819741757476937*2^64 + 17069788902784069939*2^128 + 3272308849*2^192,17938201739962221996 + 140536218044446813*2^64 + 14706892084509052412*2^128 + 4198021055*2^192,1350918766400163372 + 17383194220795743820*2^64 + 6504277819030967687*2^128 + 1329544931*2^192,8951275970697403576 + 11843536085994364595*2^64 + 11328016314364658294*2^128 + 3254099444*2^192,5924368416054360484 + 12701537246385042918*2^64 + 11394743058911606421*2^128 + 2736116647*2^192,18336351349555047264 + 16507616991103682812*2^64 + 4741964067253192548*2^128 + 1366955185*2^192,3048047840236831544 + 3240359741054496830*2^64 + 2011699011411211805*2^128 + 489759730*2^192,8468243263216333488 + 6113318535935599077*2^64 + 244014463381721667*2^128 + 40559215*2^192;\
1497433493686954036 + 1481685989396014139*2^64 + 5421384268638933096*2^128 + 1095183786*2^192,5442002931213136258 + 6084916409480270072*2^64 + 16555392541936909963*2^128 + 3321329802*2^192,8285782214552421858 + 14444979430520993057*2^64 + 1787608297970644768*2^128 + 1723824220*2^192,9869489570165092948 + 6915232191891383912*2^64 + 9906530440512228988*2^128 + 3688278710*2^192,9204225675101616166 + 16139319663015711*2^64 + 13638324593166486335*2^128 + 2514172020*2^192,15274390961432495032 + 3744633050658117972*2^64 + 120301011227378730*2^128 + 2295749329*2^192,1225843173254654916 + 10645570332849815693*2^64 + 4186881476316126766*2^128 + 2011763417*2^192,15069281863564890760 + 735701844967818573*2^64 + 4232259495742467212*2^128 + 651869103*2^192;\
9523143917163106054 + 12813547608614171189*2^64 + 11245044352123628333*2^128 + 750523067*2^192,9192930507119979339 + 9066328668622491730*2^64 + 4044779371216880850*2^128 + 2002138667*2^192,17296771657778939183 + 17013770279415381331*2^64 + 11883568635745150732*2^128 + 2992621008*2^192,11364626188055165742 + 2909306493168131228*2^64 + 11310751256515127809*2^128 + 1397568248*2^192,1848827970350447969 + 13176227095088595866*2^64 + 5985114719619574146*2^128 + 1397350169*2^192,4611544520568854216 + 12339050994220284104*2^64 + 8192247133816960253*2^128 + 1948057107*2^192,5107056939006656602 + 14430105403403280837*2^64 + 7385817446981687861*2^128 + 291819518*2^192,1893596536811882972 + 2186223268897161484*2^64 + 17448611772706253222*2^128 + 3734655593*2^192;\
17435090210720246156 + 6476180571829277427*2^64 + 12788321460144165055*2^128 + 3931725814*2^192,12309326132827484412 + 13030352841486954781*2^64 + 10794976261370779706*2^128 + 1267228719*2^192,11013234824535689164 + 8135525526309601178*2^64 + 1250236095193232079*2^128 + 3205323901*2^192,5034375415686498240 + 2772883245397417953*2^64 + 9279938320544103682*2^128 + 2525226451*2^192,11729973894926272108 + 11587809525543984416*2^64 + 17541918483851582359*2^128 + 2036084824*2^192,708242281989982888 + 377157654482486650*2^64 + 14870255262499456106*2^128 + 3112155203*2^192,5700717314901510624 + 14754571231248939258*2^64 + 7853066099582079792*2^128 + 954931626*2^192,1512536710014873600 + 462617357749036846*2^64 + 7867445280884476414*2^128 + 3182952211*2^192;\
3053619277246833122 + 9314573589310382307*2^64 + 10353874837038920142*2^128 + 1624849239*2^192,442371742931523263 + 12724395154903363778*2^64 + 286845301632885799*2^128 + 3582159095*2^192,3634525663763269563 + 7951996056103452431*2^64 + 15228392765629593937*2^128 + 3240043031*2^192,6530450289091449174 + 17705644828675636039*2^64 + 2256300310808645080*2^128 + 1588692745*2^192,12733534152172246477 + 1659792945925748828*2^64 + 1488041146053998059*2^128 + 1549094683*2^192,16089539326239279616 + 3930321555315648725*2^64 + 10724979687640348255*2^128 + 433021307*2^192,1228240312331107882 + 9746370417917328833*2^64 + 8903032300468993679*2^128 + 1846575602*2^192,3532276980350809180 + 3178957473802579037*2^64 + 5897758190031933563*2^128 + 2498589710*2^192;\
14861711554404733708 + 14117631228768057514*2^64 + 7878705369282304841*2^128 + 1036776542*2^192,16447001338882526896 + 3745901084398000317*2^64 + 16086777840896042321*2^128 + 3851724888*2^192,5732917465531585776 + 7269870822913352561*2^64 + 12724373552789200980*2^128 + 634710623*2^192,7555233778764472304 + 10624120478021167384*2^64 + 428393338697368660*2^128 + 2643657407*2^192,3055959081884109952 + 5032097437818577348*2^64 + 1850034327803678643*2^128 + 2994151555*2^192,14778487650156658368 + 9840343594303258372*2^64 + 7486526310255304493*2^128 + 3616289620*2^192,14425329757020708288 + 10271976300788726195*2^64 + 7380655734103325732*2^128 + 1377219012*2^192,7223189147047626048 + 10439534876049697903*2^64 + 11464448421843316617*2^128 + 3234785395*2^192;\
5555082347866399778 + 10840638878541415362*2^64 + 15364373337768683363*2^128 + 887254059*2^192,9700232790878055603 + 5224409981361663034*2^64 + 4670714400123344208*2^128 + 3844274368*2^192,4787659498941807455 + 13168632055969356112*2^64 + 11849974777973819102*2^128 + 652331004*2^192,3482546481292274918 + 5895233020653638530*2^64 + 5619350089667042298*2^128 + 3374601060*2^192,17693794362191953025 + 4847502087944749995*2^64 + 15967017756337516147*2^128 + 273893232*2^192,4556937355841460768 + 8405185125068945035*2^64 + 8143217915234894102*2^128 + 190551845*2^192,11409195843548069034 + 15799945247380612843*2^64 + 12571787520976278722*2^128 + 4294634283*2^192,12333429764215292508 + 8476955720362610511*2^64 + 4778697733449515888*2^128 + 999722664*2^192;\
6918546559039313378 + 5462212149950582439*2^64 + 4187425864933633727*2^128 + 659510708*2^192,13492578107943680889 + 16193269408008801279*2^64 + 9975787908520664189*2^128 + 2753237860*2^192,13440638981286978085 + 3459119404427410455*2^64 + 10719130901242261594*2^128 + 3950579600*2^192,14459885647563605898 + 11778746901906630109*2^64 + 16073704959939499008*2^128 + 3064267675*2^192,18434107033949581563 + 16887056362415356410*2^64 + 7571471818918210589*2^128 + 2369915437*2^192,12634223580344318888 + 11146779096636105472*2^64 + 5303904016892504176*2^128 + 710499859*2^192,9576701017895656734 + 1526040849314559590*2^64 + 2946189580357173484*2^128 + 4057731617*2^192,375040200017529060 + 1262834644995782055*2^64 + 2162121291000958519*2^128 + 3208254799*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4656 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25
