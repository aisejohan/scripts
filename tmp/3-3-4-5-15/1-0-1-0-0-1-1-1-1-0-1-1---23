/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 42
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	3 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[2, 0, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	5 
[2, 3, 0, 0, 1]  	15	7 
[2, 0, 0, 2, 1]  	16	5 
[3, 0, 2, 0, 1]  	17	6 
[0, 4, 0, 2, 1]  	22	4 
[0, 0, 5, 1, 1]  	25	2 
[1, 0, 1, 1, 255]  	12	3 
[0, 5, 0, 0, 255]  	15	3 
[0, 3, 2, 1, 255]  	22	3 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 2 and 254.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[505316560826066032 + 5373972095221517741*2^64 + 2197680681468382252*2^128 + 796576604*2^192,16740808768160342108 + 17357838492228044422*2^64 + 13451438671666640983*2^128 + 760221717*2^192,5272029160342064164 + 5398064087006992815*2^64 + 17892010448945598308*2^128 + 1192190747*2^192,4055081591888234544 + 7681540393718090648*2^64 + 14226460525138849952*2^128 + 1115842024*2^192,12414446444943525584 + 3311247517287786392*2^64 + 7599533243041685615*2^128 + 279472107*2^192,5394267758215233156 + 3023634985226818254*2^64 + 13409114258270605742*2^128 + 945043584*2^192,10692868969345984732 + 13005512722285536704*2^64 + 15095658893298009353*2^128 + 1888878961*2^192,10613988655787100208 + 14994279205133951907*2^64 + 9359228892580936063*2^128 + 665063441*2^192;\
11051000580746930961 + 5642996845199679727*2^64 + 12924842357356542805*2^128 + 641419843*2^192,10722207763343071224 + 8213780875293480747*2^64 + 965392838421179854*2^128 + 954037711*2^192,7776620925804921834 + 2562394094746423064*2^64 + 3783536630729315819*2^128 + 301499190*2^192,8594655855627314626 + 16254475994245526703*2^64 + 8369670028530902596*2^128 + 2074019471*2^192,9625710137175263962 + 1183301431698900236*2^64 + 15429919135550329513*2^128 + 1677127237*2^192,15639045672579816930 + 10387434135533650402*2^64 + 11914942883079582093*2^128 + 538334351*2^192,800056433853917320 + 5706577249406015076*2^64 + 13748005171521784789*2^128 + 816425023*2^192,10954684355657856776 + 13232219768622689080*2^64 + 14003902441594453619*2^128 + 1132871720*2^192;\
5183757695584459291 + 815942389457874141*2^64 + 8285155036782172749*2^128 + 941629144*2^192,11217797022205639366 + 11227798524173691635*2^64 + 963724643952840664*2^128 + 2039295216*2^192,15830146699944653088 + 4706575167015221897*2^64 + 3427944788806468150*2^128 + 786558641*2^192,2887902834065996854 + 12044810213654499787*2^64 + 14606542635406099150*2^128 + 982369570*2^192,15655260867742996550 + 17062820038828765496*2^64 + 14623569418047909088*2^128 + 1402171807*2^192,13632865845610640644 + 6816298671357723234*2^64 + 8459114750497195054*2^128 + 1230324078*2^192,17446732788309026226 + 14120542305491760174*2^64 + 12351136427350019959*2^128 + 1001405435*2^192,9183587955864311328 + 15523082001384531496*2^64 + 1017802993728491838*2^128 + 681240908*2^192;\
839186495252785666 + 1497944607505282136*2^64 + 20739552166759542*2^128 + 1110466029*2^192,8732396411388125701 + 14668370243419459004*2^64 + 13464977212077429069*2^128 + 1458589414*2^192,12503854980916704729 + 14436313427655834178*2^64 + 11870747991114247445*2^128 + 882825659*2^192,16901253994409218266 + 10460039655261383502*2^64 + 3811430121653673896*2^128 + 1969359673*2^192,6416530389266338422 + 10555202162280250429*2^64 + 1730286394001438674*2^128 + 1296521269*2^192,1713725362964012087 + 1479604230977344808*2^64 + 2802156435676059302*2^128 + 1321524003*2^192,96177731583117803 + 15936057112158058948*2^64 + 14528015395116662439*2^128 + 664707775*2^192,12946566158887731272 + 7174878242650578032*2^64 + 8139786038103655902*2^128 + 2088477783*2^192;\
12532277463305109568 + 4963597911749548448*2^64 + 7143200877817106732*2^128 + 2144524552*2^192,5357637587252098006 + 13879718733188037483*2^64 + 13300048871527186367*2^128 + 856982315*2^192,4339062202051649802 + 12891341336280956768*2^64 + 8158843740057920960*2^128 + 1377431037*2^192,15454805150710497560 + 10222390021921360035*2^64 + 5813307881690780286*2^128 + 736083521*2^192,18384788397891971736 + 17353349194166147192*2^64 + 13566695667081584342*2^128 + 956864567*2^192,12669874743859821062 + 2246797662574725902*2^64 + 8200891453582264577*2^128 + 465637414*2^192,9365810613151500186 + 1801478737973372428*2^64 + 8586651924976111140*2^128 + 115511931*2^192,16640727424587424680 + 1081727239367936261*2^64 + 741566976971779932*2^128 + 3201071*2^192;\
4510839457868076765 + 5945949452674127393*2^64 + 11392386321675701994*2^128 + 245631495*2^192,1449488695246898253 + 13380271783837263567*2^64 + 2419494187545446941*2^128 + 1715691998*2^192,12151184457155784343 + 2929298122801613905*2^64 + 14025289535407203315*2^128 + 130194478*2^192,190315680544568080 + 9203076764806976630*2^64 + 10958737545633399848*2^128 + 1486893350*2^192,16549266487103786648 + 1911509897455016526*2^64 + 9491583778320307782*2^128 + 1788323284*2^192,2791409858920801781 + 3544538925213862504*2^64 + 14699709695381178755*2^128 + 1841291318*2^192,15120508618086569443 + 17123415147418187669*2^64 + 14437032432673309149*2^128 + 897008503*2^192,3557377447551968360 + 8623704656815085086*2^64 + 5975659069245825974*2^128 + 277748993*2^192;\
15693320953646215933 + 11731862719996652719*2^64 + 11422492830595775859*2^128 + 1675669590*2^192,18021810722407470513 + 12284398730892855409*2^64 + 17848761931551083507*2^128 + 1277014416*2^192,16379106545419875735 + 205842721066981742*2^64 + 1648207689310110885*2^128 + 2119596594*2^192,17206016429958007532 + 9203613065823993575*2^64 + 15664064785757315956*2^128 + 895123617*2^192,5818456364223489036 + 11514844453036744253*2^64 + 11074566795520575868*2^128 + 219504628*2^192,8856383536807513529 + 4202454319750520026*2^64 + 15153116301815824065*2^128 + 1724602429*2^192,8064285432339952955 + 5364407301729583409*2^64 + 817351482641275584*2^128 + 1685202315*2^192,11173444636781484632 + 6397143499194978325*2^64 + 11122560873602198076*2^128 + 1241115624*2^192;\
8278979024718701628 + 4783061980156613736*2^64 + 678481464305668620*2^128 + 833742885*2^192,6408595284162421140 + 17138351576383628156*2^64 + 3923190117017883491*2^128 + 115332825*2^192,17355229347617686436 + 13857939910159609886*2^64 + 3841229082267536557*2^128 + 347030893*2^192,4234364169401204312 + 3472926711878469914*2^64 + 1066130052286478232*2^128 + 223958939*2^192,14637473974578891304 + 417365387759801009*2^64 + 1327611101731808785*2^128 + 262178880*2^192,55183274740476324 + 1339444896411961729*2^64 + 13385216815670353341*2^128 + 871591603*2^192,3898007154202847572 + 9323109069238889564*2^64 + 17152518588634623935*2^128 + 547175537*2^192,2896052759056497624 + 11571246022112330440*2^64 + 3584320425623317380*2^128 + 574486066*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5175 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 6*x^6 + 4*x^5 + 16*x^4 + 16*x^3 - 96*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 2; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
