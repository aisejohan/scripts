/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 42
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 0, 2, 1, 0]  	16	4 
[1, 0, 1, 2, 0]  	17	4 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	7 
[2, 5, 0, 0, 0]  	21	7 
[1, 0, 0, 4, 0]  	23	4 
[1, 7, 0, 0, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 2, 1, 2, 1]  	20	4 
[0, 4, 0, 2, 1]  	22	4 
[0, 2, 0, 4, 1]  	26	2 
[1, 3, 0, 0, 2]  	12	4 
[2, 0, 0, 3, 2]  	21	7 
[0, 1, 5, 0, 2]  	23	3 
[0, 7, 0, 0, 252]  	21	4 
[1, 0, 1, 1, 254]  	12	3 
[0, 5, 0, 0, 254]  	15	3 
[1, 0, 0, 3, 254]  	18	4 
[0, 1, 0, 4, 254]  	23	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 251.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12723741983179649352 + 6967892421135259396*2^64 + 11190039846359685042*2^128 + 5485127576*2^192,16410559121603003232 + 16951783745109311972*2^64 + 17009040117879591376*2^128 + 7615961045*2^192,15822809126520045600 + 15789625127982026363*2^64 + 10287858854298036316*2^128 + 6261195346*2^192,8636668696861050112 + 5611890418949709057*2^64 + 3048760262804477899*2^128 + 7738011900*2^192,9412769485509552416 + 16270941064276129700*2^64 + 4610986289499644110*2^128 + 7316565508*2^192,12596367821385378400 + 4431193713220826079*2^64 + 13988085806308034924*2^128 + 3136916765*2^192,8919157879658212832 + 8830415917683902633*2^64 + 3929244284549033712*2^128 + 1403329760*2^192,7967969755853463776 + 11710325020682361753*2^64 + 13965842626113603960*2^128 + 2982622568*2^192;\
1543305164166115372 + 8154622693600207820*2^64 + 844063224194504097*2^128 + 600851889*2^192,11824479010333650544 + 10113497735347923897*2^64 + 8940609079419250624*2^128 + 4098019581*2^192,13274338837196453616 + 10144502685731922357*2^64 + 4729875604278140301*2^128 + 2942875439*2^192,17231413750678502592 + 11100322502823767307*2^64 + 4119583764830100779*2^128 + 1466603898*2^192,5511809638698227712 + 8025343538540863548*2^64 + 15600370148215666198*2^128 + 490323390*2^192,5321873828888380864 + 13835380325062282391*2^64 + 15647944518891620326*2^128 + 1631820478*2^192,7187433672767194112 + 7809640700520856445*2^64 + 10680666804751836651*2^128 + 2309823768*2^192,14231753283256968112 + 5390949373318908204*2^64 + 10947940699184133740*2^128 + 2243856076*2^192;\
646441394019811724 + 13116930812666495011*2^64 + 14638166019619981867*2^128 + 3089831726*2^192,6843066014629349964 + 8474510002996035801*2^64 + 12278526841769454961*2^128 + 1648520093*2^192,11256698588048527396 + 16048463287942378035*2^64 + 10459120105871212680*2^128 + 2252703029*2^192,16329139611734862984 + 16601660370407229769*2^64 + 12200173477863072675*2^128 + 1788446045*2^192,6064417832469773192 + 13063817345718390898*2^64 + 15100134382577926800*2^128 + 2965890190*2^192,2003694147239362916 + 18275439302820631129*2^64 + 7697896189842898057*2^128 + 3700405834*2^192,10000873596133052320 + 5319674554550975116*2^64 + 8074752969733587962*2^128 + 48047795*2^192,12918528786182426504 + 15337341926430141618*2^64 + 6902757861240369467*2^128 + 1838719622*2^192;\
7135765933533748655 + 8202520083574763270*2^64 + 7156042345874841305*2^128 + 7371012614*2^192,16176937570444102245 + 18131391592794874405*2^64 + 17762716910718146563*2^128 + 7228889931*2^192,3475620693159331371 + 11515777931078243452*2^64 + 5346051344592441204*2^128 + 5068618214*2^192,8236675165516624894 + 6343322977332276615*2^64 + 15337383686540466546*2^128 + 6472432872*2^192,4501202870237980046 + 15453173293306752485*2^64 + 9902769486226781127*2^128 + 985134856*2^192,12939144168610821283 + 11781972962192050190*2^64 + 11736049420372171152*2^128 + 1331379636*2^192,3927614972731898264 + 12918208432865746866*2^64 + 18419909419336079468*2^128 + 6896381586*2^192,3140426953195686430 + 15908881277800681283*2^64 + 13268443556554946505*2^128 + 4633437269*2^192;\
532674271715781479 + 8468890044247965311*2^64 + 11751653527087730769*2^128 + 2883789924*2^192,6217773229909310329 + 13412916061014768011*2^64 + 17377240436007372280*2^128 + 7137471368*2^192,10617411545335204183 + 3367946345998935605*2^64 + 2066824869922398364*2^128 + 6416140025*2^192,15064866830038040886 + 16445529758156516452*2^64 + 17513294746183796344*2^128 + 4474218958*2^192,4087059718305760582 + 5667258888895335461*2^64 + 3353497431615503130*2^128 + 6854857527*2^192,4166944681977341823 + 16995728437319214102*2^64 + 9992682680375704622*2^128 + 1827466948*2^192,8272577136563579448 + 813500791067450860*2^64 + 7832061698758021187*2^128 + 4837728199*2^192,12831587117998661158 + 2762232130820933470*2^64 + 6426464206421209206*2^128 + 95205287*2^192;\
5076260824455739316 + 2397471564280511831*2^64 + 11243544773533603288*2^128 + 6683538897*2^192,15637828896352846800 + 5366065085361628984*2^64 + 10370150717634110023*2^128 + 5145616152*2^192,16588372679689052752 + 12863728741591004651*2^64 + 13499047062127761922*2^128 + 6008462610*2^192,4289621826934626208 + 12275282091234813042*2^64 + 2718054212835714172*2^128 + 7978978288*2^192,12021076750565422112 + 5776903441555979964*2^64 + 4746269453523321205*2^128 + 1471602110*2^192,3201882829790909200 + 1240491672238257126*2^64 + 6830037171047743774*2^128 + 1630426837*2^192,17413522998101901312 + 12585915943085980083*2^64 + 16230775629340400206*2^128 + 6564230445*2^192,5311205903987724272 + 8290000968930444471*2^64 + 8148752432671487431*2^128 + 4196969565*2^192;\
18179119723185312275 + 8037044072367011897*2^64 + 1075193851744901221*2^128 + 3262993110*2^192,13155743179896355285 + 1250672409670342412*2^64 + 10039578824801804377*2^128 + 7908831236*2^192,10580633081508304203 + 14428089624397084594*2^64 + 10488983651288189881*2^128 + 1782349553*2^192,13164231811433218446 + 9289475158248225315*2^64 + 7271506227605187722*2^128 + 7252252911*2^192,15007480068094758846 + 7965731455788032146*2^64 + 12744160253302747208*2^128 + 676700116*2^192,604433192508593923 + 12662864419882255395*2^64 + 6810687551426584631*2^128 + 5736565326*2^192,7011979789224362904 + 6721450227969397820*2^64 + 11478318344145324035*2^128 + 2417615650*2^192,14294125297677517198 + 15138071728711458420*2^64 + 14365263434726925959*2^128 + 667071669*2^192;\
8711398030634683016 + 7048507709111821186*2^64 + 1948316640522922696*2^128 + 3013872146*2^192,5178558479695635064 + 4412247327231595269*2^64 + 3600518636467641569*2^128 + 7421502606*2^192,8666168337420620840 + 12897518533882455200*2^64 + 10693929866292989555*2^128 + 338728967*2^192,8653447213506185168 + 12934517221100963310*2^64 + 13864791896650952620*2^128 + 711784027*2^192,7590060463175027536 + 4672219300207128261*2^64 + 13248573748985424398*2^128 + 2193066240*2^192,16968068938088505192 + 2759790860873802986*2^64 + 4726371685635711759*2^128 + 2017275891*2^192,14178928549355254208 + 14881984928931963644*2^64 + 7159962860509929896*2^128 + 1958258068*2^192,14254093786882097200 + 10515363019075663604*2^64 + 12803553185646821695*2^128 + 1229275978*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 5060 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25
