/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 47
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[2, 0, 1, 1, 0]  	15	5 
[0, 1, 3, 0, 0]  	15	2 
[1, 0, 1, 2, 0]  	17	5 
[1, 5, 0, 0, 0]  	18	4 
[1, 0, 0, 3, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	6 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[3, 0, 4, 0, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 2, 2, 3, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 3, 0, 1]  	21	6 
[0, 4, 2, 0, 2]  	20	4 
[0, 3, 0, 3, 2]  	24	4 
[0, 2, 1, 3, 2]  	25	2 
[0, 2, 0, 4, 2]  	26	3 
[0, 1, 2, 3, 3]  	26	2 
[0, 3, 2, 1, 4]  	22	3 
[0, 3, 1, 2, 4]  	23	3 
[0, 0, 4, 2, 251]  	26	1 
[0, 0, 5, 0, 254]  	20	1 
[0, 1, 1, 3, 254]  	22	2 
[0, 0, 3, 2, 254]  	22	1 
[0, 1, 0, 4, 254]  	23	2 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[1, 0, 1, 1, 255]  	12	4 
[0, 5, 0, 0, 255]  	15	1 
------
The gap is between 5 and 250.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5604877088274065732 + 5010706243775706923*2^64 + 5245426548246648054*2^128 + 696115539*2^192,4415763398711055748 + 13585592585606990655*2^64 + 1752081527446410283*2^128 + 1274152627*2^192,2089614011411228592 + 12849061430423962286*2^64 + 1588232057235588329*2^128 + 911296316*2^192,2231929645917775472 + 2960940197074417166*2^64 + 3364729933386076536*2^128 + 3584928351*2^192,14034357798542001824 + 7902508785556004562*2^64 + 3448234048665667340*2^128 + 4001006446*2^192,12905818488718029076 + 10064285489576431782*2^64 + 5626305433546982617*2^128 + 1525213126*2^192,3689677434649968616 + 11202565893996203962*2^64 + 13133173398931016457*2^128 + 1530594675*2^192,13449392785755002696 + 9640445972434484259*2^64 + 13846338803410047684*2^128 + 1687948865*2^192;\
13297700462118489954 + 12357480222479487426*2^64 + 16184649690127492692*2^128 + 573518042*2^192,7637763574253952014 + 15934544640154982486*2^64 + 12799973175772563220*2^128 + 2482979220*2^192,10343681974587327760 + 4328401934044235628*2^64 + 809539599865874444*2^128 + 1313911200*2^192,13774969344043542104 + 5767881710995755645*2^64 + 5819757191247787649*2^128 + 2833105583*2^192,1011806794499021904 + 7942311871534704717*2^64 + 6991199916268771033*2^128 + 3194531401*2^192,14255207080535918590 + 7263771500430687078*2^64 + 14233438582549522652*2^128 + 2974526460*2^192,12316757589520085412 + 4468822941985373878*2^64 + 11275608751994084366*2^128 + 3408441376*2^192,9282008594557552812 + 18341114375509130901*2^64 + 17569963337118989989*2^128 + 734697629*2^192;\
11521389599726833674 + 2137410472010196981*2^64 + 5513200110946929667*2^128 + 2730382762*2^192,9386646785627481126 + 12822066675239240800*2^64 + 7808284929340714131*2^128 + 3523613470*2^192,279015248347877400 + 10912970615858661261*2^64 + 13915997086812664017*2^128 + 2241771743*2^192,13962631204348195520 + 897577146835110680*2^64 + 18064139638773084295*2^128 + 1363572134*2^192,6474713342944952016 + 2639811425207669937*2^64 + 8089565004798932426*2^128 + 4068232350*2^192,16553696850085579582 + 7798075284944952828*2^64 + 617785799053053838*2^128 + 300040468*2^192,12400743261278980884 + 16639501195204521014*2^64 + 16567220530863606755*2^128 + 3093052254*2^192,15836888399342470844 + 9393112002926407375*2^64 + 2459759917545796545*2^128 + 2887814138*2^192;\
4289648550822405104 + 15664794049611084498*2^64 + 6104938118220915187*2^128 + 1665732109*2^192,8506817063382694560 + 3044360026945734655*2^64 + 16908731450177355519*2^128 + 692335749*2^192,10348524349328093072 + 1975699675684403992*2^64 + 16540171572899560354*2^128 + 569419573*2^192,2694050115610430536 + 14101520161288194847*2^64 + 15455032086989392789*2^128 + 601164320*2^192,12619076579311125008 + 655047143619829413*2^64 + 9111203359689461702*2^128 + 2153130606*2^192,10308422157532613976 + 8098499673149330983*2^64 + 13302020902904961417*2^128 + 2064185950*2^192,7444578912885028560 + 11866765357360096157*2^64 + 1837699444893244200*2^128 + 369434238*2^192,2163019586697441136 + 12391308333089292227*2^64 + 11637184575106631812*2^128 + 3531386347*2^192;\
2157113199912281455 + 9275834731254032403*2^64 + 14903626094023916931*2^128 + 2282540415*2^192,11077181563371035479 + 4411033509344027286*2^64 + 8711891378078289570*2^128 + 1339041330*2^192,14630747716996470100 + 16185450307521837834*2^64 + 7528034423588964241*2^128 + 1814527097*2^192,1733685396129186856 + 3173921848282270840*2^64 + 17358415971148043862*2^128 + 1821650049*2^192,16474408332157953392 + 9799859396304330091*2^64 + 8805957460309244228*2^128 + 2703305229*2^192,3955554304445587411 + 11787567821347275922*2^64 + 7093377219136290280*2^128 + 3561167599*2^192,3358437579301497858 + 333750907574028064*2^64 + 6412101641561645472*2^128 + 1290693352*2^192,18061481010874747894 + 212549454796633276*2^64 + 8613555128936238321*2^128 + 3075848082*2^192;\
2608300373145083506 + 14742180599869320468*2^64 + 16255268174814787761*2^128 + 3284702847*2^192,14340949060429854822 + 13296338052153441111*2^64 + 9759679870813321887*2^128 + 279778345*2^192,5034136908902929448 + 13135406364168005340*2^64 + 14194792750807270705*2^128 + 1953478695*2^192,8657873756882579584 + 13708286608386266030*2^64 + 9348147072069074273*2^128 + 622988505*2^192,1441488845408355744 + 4647553395298094892*2^64 + 14815421075368466282*2^128 + 3853165386*2^192,7838098552903802134 + 2343273482405699391*2^64 + 14733813808243309818*2^128 + 134022651*2^192,3830029171976087652 + 17935106361472744043*2^64 + 262450124192525*2^128 + 2569455511*2^192,18302985341636931484 + 9630056738910894549*2^64 + 997039023879550677*2^128 + 4189433549*2^192;\
4857339146690749098 + 4186980255597357761*2^64 + 987104678764828057*2^128 + 2093521207*2^192,10562088523598833306 + 1129289414901716895*2^64 + 8387297663756286145*2^128 + 2318600365*2^192,14586171772039491960 + 10973345773918661848*2^64 + 17467503824420998695*2^128 + 321384102*2^192,703532464059818752 + 9384868882730477260*2^64 + 2721190303892929738*2^128 + 2109359996*2^192,10732866044489101072 + 16482311410005604419*2^64 + 2206416192039260963*2^128 + 2621151595*2^192,6499729042965114346 + 12615824794704479319*2^64 + 17578424903050497064*2^128 + 2879163592*2^192,10897205591459946092 + 7560011571863423566*2^64 + 9674452775230962176*2^128 + 4293125271*2^192,8448663748648581172 + 1180475503643384924*2^64 + 6461036386585736167*2^128 + 3930886405*2^192;\
13541322308616891604 + 15495989704697660530*2^64 + 9201323652416000654*2^128 + 480463512*2^192,15764260403561269444 + 6447207504260237018*2^64 + 17068104219077532328*2^128 + 1794277918*2^192,1164539980034879312 + 3265020204866038108*2^64 + 15533634383722349966*2^128 + 3076164226*2^192,3661007520420183248 + 12413935863485764244*2^64 + 10390447102097030971*2^128 + 1180560189*2^192,12906396952875446208 + 208772506997303120*2^64 + 8137500491467425298*2^128 + 255086437*2^192,11331095164002222804 + 12627445427945227438*2^64 + 2443149217060172651*2^128 + 2053564900*2^192,8054074807516521176 + 18104835844100069494*2^64 + 5223070373095091306*2^128 + 2322770450*2^192,18053790581681290584 + 15135523942292511244*2^64 + 13158899576392016051*2^128 + 3891186052*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 3815 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26
