/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 66
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	4 
[2, 3, 0, 0, 0]  	15	6 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 2, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	7 
[1, 3, 2, 0, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	7 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 5, 0, 0]  	23	5 
[0, 5, 2, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[1, 1, 1, 3, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	3 
[0, 4, 1, 2, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 4, 0, 3, 0]  	27	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	6 
[1, 5, 0, 0, 1]  	18	5 
[1, 1, 2, 1, 1]  	19	5 
[1, 0, 4, 0, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	5 
[1, 0, 3, 1, 1]  	20	5 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	5 
[1, 0, 0, 4, 1]  	23	4 
[0, 3, 1, 2, 1]  	23	3 
[3, 1, 0, 0, 2]  	12	4 
[1, 1, 0, 2, 3]  	16	5 
[1, 2, 2, 0, 3]  	17	5 
[0, 4, 2, 0, 5]  	20	4 
[0, 4, 0, 2, 5]  	22	4 
[0, 3, 0, 3, 5]  	24	4 
[0, 2, 1, 2, 251]  	20	3 
[0, 3, 2, 1, 251]  	22	3 
[0, 7, 0, 0, 253]  	21	4 
[2, 2, 0, 0, 254]  	12	3 
[1, 0, 2, 1, 254]  	16	4 
[1, 0, 1, 2, 254]  	17	4 
[0, 0, 5, 0, 254]  	20	2 
[0, 1, 1, 3, 254]  	22	2 
[0, 1, 0, 4, 254]  	23	2 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 0, 5, 255]  	25	1 
[0, 0, 4, 2, 255]  	26	1 
------
The gap is between 6 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11604244231254630110 + 757138905392281842*2^64 + 8964747298850210331*2^128 + 844057063*2^192,9801337380672093492 + 9591319704887662488*2^64 + 15589481591183973653*2^128 + 282018801*2^192,10399462835498449312 + 7822308656456785917*2^64 + 12399810669876255416*2^128 + 1647241183*2^192,10231819444920347512 + 7068206126370751605*2^64 + 6435381781539590453*2^128 + 1994745561*2^192,12434584500797587020 + 5868888100768607898*2^64 + 5386076099661209569*2^128 + 1989542220*2^192,13992864835174067872 + 16209738846608389669*2^64 + 2320703191040296926*2^128 + 2040323640*2^192,12024521795723456156 + 11626537187510627843*2^64 + 329115687399969208*2^128 + 520076348*2^192,13339617567291100592 + 12786487812096386461*2^64 + 6291721325378733430*2^128 + 1623775544*2^192;\
9999887408093949092 + 11739044325380163208*2^64 + 14546327952610992225*2^128 + 1534215130*2^192,10759466729438738984 + 13892759132030974737*2^64 + 3695055174427097057*2^128 + 1839599092*2^192,2816955306316147188 + 2878997115082022591*2^64 + 16089464909138409928*2^128 + 1615467622*2^192,1981332878804932500 + 16910720968723889336*2^64 + 13383842312070701207*2^128 + 1052901894*2^192,1398981182548263280 + 8603127250161039569*2^64 + 12040811736174942353*2^128 + 1181892348*2^192,5698247302901543172 + 7700852975683021623*2^64 + 7380329886505773800*2^128 + 1055750954*2^192,841520904340607168 + 3159934054669232802*2^64 + 9563695600183177839*2^128 + 1875016803*2^192,5092092251031361848 + 5380612812032433610*2^64 + 8985846992959803162*2^128 + 558291982*2^192;\
10555516051045052580 + 8876107127045796586*2^64 + 14105822887090659539*2^128 + 876137019*2^192,3397948933338096736 + 6146490168765036860*2^64 + 15290176329802700755*2^128 + 2067779573*2^192,13421158245011677296 + 9528379857776258781*2^64 + 1935066283975865448*2^128 + 464269804*2^192,1290612044345783144 + 16094119115817201064*2^64 + 1390792183384235900*2^128 + 1131884447*2^192,3145489997204111464 + 18128931861050634438*2^64 + 10330471173803246953*2^128 + 2132256519*2^192,9663941130570325072 + 4865641562989008542*2^64 + 15251738111085748637*2^128 + 1037649858*2^192,5528116554980362992 + 4263398247159826209*2^64 + 14156311752613351898*2^128 + 1466877769*2^192,6275718025281879608 + 2839243161049069170*2^64 + 10528019514677466922*2^128 + 538398545*2^192;\
0 + 0*2^64 + 0*2^128 + 444596224*2^192,0 + 0*2^64 + 0*2^128 + 461373440*2^192,0 + 0*2^64 + 0*2^128 + 796917760*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 626956911*2^192,0 + 0*2^64 + 0*2^128 + 847249408*2^192,0 + 0*2^64 + 0*2^128 + 528482304*2^192,0 + 0*2^64 + 0*2^128 + 545259520*2^192,0 + 0*2^64 + 0*2^128 + 629145600*2^192;\
16301435123334688921 + 7427490128878150043*2^64 + 11099619268003312048*2^128 + 1351290169*2^192,5004386909631662238 + 1555250306649687049*2^64 + 2227261455580385092*2^128 + 581784502*2^192,13087933721725844676 + 8511041801817228926*2^64 + 10184459858912481293*2^128 + 2121830423*2^192,11792074003398940036 + 5823637576984121920*2^64 + 15145915602222000279*2^128 + 2080464092*2^192,16594318058094770846 + 253024639115140840*2^64 + 13844329158653295561*2^128 + 785524595*2^192,8334655966178529168 + 2571721611231503241*2^64 + 2875554282577229203*2^128 + 1455106260*2^192,5885046992442036714 + 17217668308409798717*2^64 + 1726821533074515111*2^128 + 657205447*2^192,12649516988806041280 + 13225007026024932662*2^64 + 1598032209449566542*2^128 + 562749265*2^192;\
14219633007119240770 + 14810765172051628776*2^64 + 5490854275166219161*2^128 + 72418727*2^192,7534429985871406048 + 16442490421353081325*2^64 + 16017966517731844749*2^128 + 1413672000*2^192,13291943893948039468 + 18205842487125718616*2^64 + 4643189747594745371*2^128 + 770373164*2^192,10297117748021609132 + 9176259041397161882*2^64 + 781428608776148466*2^128 + 1962266365*2^192,1375633197014096276 + 7987793466699123605*2^64 + 6706889181298134396*2^128 + 1050817878*2^192,3692919751626325900 + 6320627159332476812*2^64 + 11937998880080923505*2^128 + 975260408*2^192,10341060816562522652 + 8827142350712572266*2^64 + 9933331317163243237*2^128 + 855801301*2^192,15975274153922668776 + 10609825258784375916*2^64 + 14555287928622139292*2^128 + 1739597712*2^192;\
9715399970894437780 + 7827401375842922270*2^64 + 17261437270465627306*2^128 + 350400994*2^192,8315320735988580088 + 1814418008334593728*2^64 + 18094174787701696281*2^128 + 1044057033*2^192,10001670621367772300 + 16699690378691795295*2^64 + 5172490100044028333*2^128 + 646204316*2^192,3068207623156270280 + 15776466039954823485*2^64 + 4103963328582600294*2^128 + 1305149418*2^192,1766107968050378640 + 6961542192823752440*2^64 + 13643804439975166749*2^128 + 2020408380*2^192,13053590798612647632 + 4107074665173322059*2^64 + 7192722746445742545*2^128 + 615041818*2^192,616385228596398348 + 2094551047856894463*2^64 + 14919433291889081515*2^128 + 404097200*2^192,13995061692873336168 + 6140381566313990974*2^64 + 16006230797789660672*2^128 + 1573325207*2^192;\
11100104484928699622 + 17881121738991253124*2^64 + 16905310778620828751*2^128 + 544689921*2^192,13216255712743777444 + 5753672768162709651*2^64 + 6314068939675449934*2^128 + 1944882481*2^192,10972698102877702344 + 3279387999451568653*2^64 + 14963116959450168402*2^128 + 264830349*2^192,14775048435984994056 + 5760470171616812963*2^64 + 5644606216413343479*2^128 + 1636375231*2^192,11171820799735238444 + 5551060065056451773*2^64 + 3544613295832759294*2^128 + 2040528632*2^192,16362876501010136528 + 5055187024610181655*2^64 + 6396030389081328481*2^128 + 1344148384*2^192,2890517078804403072 + 12086877898914265182*2^64 + 7991638202945210519*2^128 + 492787740*2^192,12061563074282046288 + 17687665896327663000*2^64 + 717953777240582880*2^128 + 1557312591*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4234 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 4*x^5 - 16*x^3 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + 2*x^3 + 2*x^2 + 8*x + 16, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 33

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*z^1*w^1 + 1*x^1*y^4 + 1*y^2*z^1*w^1 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
