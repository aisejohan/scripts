/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	3 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	7 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 1, 3, 2]  	22	4 
[1, 0, 2, 2, 4]  	21	6 
[0, 1, 5, 0, 4]  	23	3 
[0, 1, 0, 4, 252]  	23	2 
[2, 2, 0, 0, 254]  	12	5 
[0, 4, 1, 0, 254]  	16	3 
[0, 4, 0, 1, 254]  	17	2 
[0, 3, 0, 2, 254]  	19	2 
[0, 7, 0, 0, 254]  	21	5 
[0, 3, 2, 1, 254]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[9476030317267808824 + 2686986047610758870*2^64 + 1098840340734191126*2^128 + 117269934*2^192,6207223222471762792 + 10878995795498669004*2^64 + 13023138658375618615*2^128 + 866006005*2^192,16753235546239848742 + 7680047018929845359*2^64 + 15083303215128504696*2^128 + 719069168*2^192,9159525018678948256 + 6766840128503954758*2^64 + 18332188951982612378*2^128 + 537019710*2^192,8370404384080171054 + 17902291282968798019*2^64 + 15949091372688096299*2^128 + 883689482*2^192,4219367406108382508 + 11993742820331348181*2^64 + 134420845353392531*2^128 + 604397618*2^192,5346434484672992366 + 15726128397997544160*2^64 + 16771201483503780484*2^128 + 747569336*2^192,14530366364748325912 + 16720511639421751761*2^64 + 13902986483145243839*2^128 + 760350728*2^192;\
17579249419907115410 + 24754944379665827*2^64 + 12861219868739784255*2^128 + 44538168*2^192,16745353387175505768 + 5287022495679817374*2^64 + 477093668895825916*2^128 + 320008630*2^192,8721618796234389569 + 17654002892862903943*2^64 + 10159387601273634651*2^128 + 267176834*2^192,6326271951847498214 + 13291400270425045369*2^64 + 12185839033793729009*2^128 + 1003897015*2^192,13557236655175352891 + 6581806424344961880*2^64 + 7309133630991900919*2^128 + 968141563*2^192,144758920405143422 + 14737809310259696090*2^64 + 15365065787564176370*2^128 + 413213178*2^192,3170230685187564621 + 4429036011396201116*2^64 + 12774330542031601475*2^128 + 290976162*2^192,4380320434029091572 + 16374867961825591616*2^64 + 13967779880848025208*2^128 + 518037693*2^192;\
11925771298326634767 + 623717996621896420*2^64 + 14066923930699756495*2^128 + 688495735*2^192,7988613085093768034 + 15806333755652930648*2^64 + 10209912552734333434*2^128 + 497927067*2^192,5876235842944991556 + 736633353937652803*2^64 + 9605941579766153150*2^128 + 776519988*2^192,5735213659370343894 + 15872873914042680371*2^64 + 2434695956802602604*2^128 + 697293175*2^192,15016032423285624088 + 3358500720555688890*2^64 + 6918568201726464978*2^128 + 971337955*2^192,5481893426688642678 + 7756494035438659433*2^64 + 8575572261459542131*2^128 + 846155094*2^192,13152382898850902464 + 3125666211578526348*2^64 + 6625085936265471148*2^128 + 413683041*2^192,9268278618210766832 + 78782976367027350*2^64 + 15307685244275758022*2^128 + 576501829*2^192;\
1672887932684118434 + 5010200219408205653*2^64 + 6199992803943073773*2^128 + 871294919*2^192,7174149588575126074 + 7407547344394429867*2^64 + 14819336761946720337*2^128 + 572820429*2^192,294472847652423015 + 473648249253708282*2^64 + 13973358682191146405*2^128 + 111393403*2^192,15799826675625700026 + 13702577760001546445*2^64 + 1745482906608676142*2^128 + 446309337*2^192,4014162686925727287 + 4650754786307115094*2^64 + 4927731867511348180*2^128 + 1042615099*2^192,9216962864278618036 + 14595195859934851733*2^64 + 12448174727796828026*2^128 + 387164915*2^192,5172524187505432825 + 7664216798992362917*2^64 + 4347760160164734211*2^128 + 427599491*2^192,7837741225356013784 + 12947628975644608334*2^64 + 11777926274275975462*2^128 + 464432950*2^192;\
1652353292609932915 + 52595412793783257*2^64 + 8718578643159624044*2^128 + 1031209882*2^192,8371507714270267864 + 16968947847184055996*2^64 + 5527121163617807591*2^128 + 994458351*2^192,13108082496962786752 + 15571711096480061641*2^64 + 14244225875886140406*2^128 + 48526990*2^192,5826930255084599462 + 1039383683090596684*2^64 + 8713517894855349584*2^128 + 634849589*2^192,8731505531578027456 + 11292959171974614875*2^64 + 6905893550430440981*2^128 + 133458907*2^192,1005009855562909388 + 15768251667366097187*2^64 + 141788204469901125*2^128 + 842952128*2^192,10757906219822873572 + 14042124198178035073*2^64 + 2819092160316926917*2^128 + 626349524*2^192,6126531627313700012 + 13187350701414678542*2^64 + 12945104991021483041*2^128 + 880605335*2^192;\
11064882661954255067 + 17667010458765642535*2^64 + 18040457386348135065*2^128 + 519086243*2^192,541507045043561504 + 4068223882498017154*2^64 + 16005664289155591176*2^128 + 1033769262*2^192,6680117276522976995 + 2831017479617605196*2^64 + 10092499857732165564*2^128 + 702904828*2^192,3811074589673213142 + 17103728749048269307*2^64 + 11258021110829580299*2^128 + 525844404*2^192,2997692821051378281 + 3179363177811857126*2^64 + 16241578812829269746*2^128 + 158800956*2^192,12527363260277031080 + 409144801065436454*2^64 + 16715706606227610796*2^128 + 29641331*2^192,6896560408993532075 + 12154311793707376065*2^64 + 866192932467752764*2^128 + 882346709*2^192,15952786653506190912 + 2122570671231247948*2^64 + 13694035054086747349*2^128 + 516025591*2^192;\
2968446820302155359 + 15605234111695057468*2^64 + 11473686969112194007*2^128 + 834701795*2^192,9513448577038381934 + 3323525073842624168*2^64 + 13200193159130251378*2^128 + 46082174*2^192,18421816959282728191 + 6784601342232791813*2^64 + 1028017104331856184*2^128 + 771828136*2^192,155895649468739244 + 14381327870776787452*2^64 + 18440493370453595717*2^128 + 98441379*2^192,11390695533521712463 + 3250910278261226819*2^64 + 1569865217921797152*2^128 + 1044312861*2^192,9928501795694105708 + 4111183964391325983*2^64 + 6017561788873610731*2^128 + 549988233*2^192,10079722403825075727 + 5548835830128624633*2^64 + 6884824500346062464*2^128 + 142564582*2^192,3425367763902105728 + 4897684346437103575*2^64 + 3699362290076595652*2^128 + 122435867*2^192;\
4139489512359350814 + 2391530990078306868*2^64 + 9562612769007610118*2^128 + 10023954*2^192,16542109024144221460 + 9432054730734676312*2^64 + 663805550865904392*2^128 + 488260640*2^192,2465979434576043610 + 15929864558643176915*2^64 + 3161300210108672017*2^128 + 347422183*2^192,18425610703835631784 + 3846639884090513722*2^64 + 15009050381607938644*2^128 + 459443813*2^192,3204297642081210570 + 17792547825046589886*2^64 + 11184967095363717553*2^128 + 401861484*2^192,18283891121868185560 + 14849565446065717111*2^64 + 17284956062981406452*2^128 + 135180103*2^192,1949003577101423786 + 13884926571474220590*2^64 + 17799631331172087775*2^128 + 345153080*2^192,1448026379528248812 + 5785623011056165220*2^64 + 1792160212811658690*2^128 + 253688601*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 6*x^6 + 4*x^5 + 16*x^4 + 16*x^3 - 96*x^2 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x + 2, 2; x^2 - 3*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^2*y^3 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
