/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 58
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[3, 2, 0, 0, 0]  	15	4 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[1, 2, 2, 0, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	4 
[1, 4, 1, 0, 0]  	19	6 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	5 
[1, 6, 0, 0, 0]  	21	7 
[1, 0, 2, 2, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	5 
[0, 6, 0, 1, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 4, 0, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 1, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	6 
[1, 2, 0, 2, 1]  	19	4 
[0, 5, 0, 1, 1]  	20	5 
[0, 2, 1, 2, 1]  	20	4 
[1, 3, 1, 1, 1]  	21	7 
[0, 3, 2, 1, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	5 
[0, 1, 3, 2, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	5 
[1, 3, 1, 0, 2]  	16	5 
[1, 1, 0, 2, 2]  	16	5 
[1, 3, 0, 1, 2]  	17	6 
[0, 7, 0, 0, 2]  	21	6 
[0, 1, 2, 3, 3]  	26	2 
[0, 4, 1, 0, 253]  	16	4 
[0, 0, 4, 2, 253]  	26	1 
[2, 2, 0, 0, 254]  	12	4 
[1, 0, 1, 2, 254]  	17	5 
[0, 2, 4, 0, 254]  	22	2 
[1, 0, 2, 1, 255]  	16	3 
[0, 6, 0, 0, 255]  	18	2 
[0, 2, 2, 1, 255]  	19	1 
[0, 1, 3, 1, 255]  	20	3 
[0, 0, 5, 0, 255]  	20	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1611607800050292950 + 13027989449255353307*2^64 + 4281711817829572309*2^128 + 759687623*2^192,586990994120082376 + 7411709344791436366*2^64 + 13920516369177617243*2^128 + 1499853078*2^192,2934910595663785960 + 5389841011831742622*2^64 + 11381996377674757706*2^128 + 1299570453*2^192,4405628521633347244 + 8619200832027590777*2^64 + 1090756017845658216*2^128 + 1422626097*2^192,12025486178018508788 + 11437909370587880258*2^64 + 5513205480206690655*2^128 + 885246860*2^192,7176063754799714280 + 3237701629704232267*2^64 + 11842107922532206109*2^128 + 240275360*2^192,2663445166290437532 + 4119910353062625789*2^64 + 17376021019002048363*2^128 + 1052636257*2^192,3656540070717746336 + 3800341571118074929*2^64 + 14577057092122689812*2^128 + 461845165*2^192;\
11298048586978358167 + 455255675150757563*2^64 + 7514853353410001461*2^128 + 1967778787*2^192,11247250329966308688 + 9627998102253716124*2^64 + 8097445112398568611*2^128 + 2119951265*2^192,7034795901091103332 + 11023654630459413708*2^64 + 7328181495687200579*2^128 + 654926066*2^192,13519182232513534790 + 17979160950261075650*2^64 + 9594026090987411725*2^128 + 1683676671*2^192,5212964862019976478 + 9495552994726343298*2^64 + 1961285706691169763*2^128 + 1885092034*2^192,12111534422977014136 + 11587543749037028130*2^64 + 6981142643742425050*2^128 + 608047187*2^192,2369415697527110106 + 8035469206852162020*2^64 + 8419825311535288209*2^128 + 1967333012*2^192,16393587833594633584 + 6411826014909552457*2^64 + 6267676142459348288*2^128 + 84360270*2^192;\
3476545125541963640 + 12806446707049721119*2^64 + 12437302897728180994*2^128 + 1615156761*2^192,3233988941246032536 + 13217396721336793727*2^64 + 10417106042086247808*2^128 + 519671321*2^192,9273263679474076336 + 16587476938149895704*2^64 + 4551888150466491284*2^128 + 1436817284*2^192,7455958852348706200 + 14114893441506972621*2^64 + 4877521024226560776*2^128 + 767707698*2^192,2477891372839618264 + 1535985609098217464*2^64 + 1233390683173059208*2^128 + 176617430*2^192,2922409316233305240 + 17049088405746215260*2^64 + 7679497068371137268*2^128 + 721830277*2^192,13950471811234502640 + 283312241201080883*2^64 + 16384928165771941913*2^128 + 1890406298*2^192,5143114200022319384 + 902844772886539498*2^64 + 7726545632469672145*2^128 + 472353552*2^192;\
4612029425986990865 + 13788948762815588144*2^64 + 15082361123996054940*2^128 + 1442793255*2^192,7892033927257603768 + 3086163736776114082*2^64 + 1464825251042334378*2^128 + 414558694*2^192,3362011023031365360 + 12214157131372455633*2^64 + 6882483706141209843*2^128 + 996150799*2^192,15793981425186143798 + 5335981597968663469*2^64 + 4180481188828090558*2^128 + 1514975666*2^192,15065110723339664378 + 10886442780564569622*2^64 + 13523079306747939011*2^128 + 725385745*2^192,3032920349412965360 + 4932937578505051361*2^64 + 17079108372835889821*2^128 + 819299397*2^192,12850632480572057666 + 17216090761873054481*2^64 + 8056955278797445548*2^128 + 1622868302*2^192,13927805639156408504 + 15808442352672939410*2^64 + 12366112894396321442*2^128 + 534207018*2^192;\
18375840643223978479 + 17998037339245699979*2^64 + 16320257668669621012*2^128 + 623963423*2^192,3493002904685631584 + 7023145739512176639*2^64 + 13631966854334363348*2^128 + 552027730*2^192,8379778003553646016 + 1701863524702231359*2^64 + 13023705406225746552*2^128 + 199007662*2^192,8009740045209909786 + 10340602376112396483*2^64 + 5940174352743312054*2^128 + 789288723*2^192,8011959014612605354 + 15689694040714802736*2^64 + 9765531133255908612*2^128 + 1033415908*2^192,5398824781087513272 + 10059581976368413954*2^64 + 6260844646295444405*2^128 + 694005513*2^192,11632631894114737058 + 11072759311682158506*2^64 + 2811914229692457110*2^128 + 47894139*2^192,14491725631223427224 + 4307138083010111842*2^64 + 10672651032177218174*2^128 + 374413845*2^192;\
15700858938785194060 + 5685029920325380535*2^64 + 13424831533438169272*2^128 + 1735818532*2^192,11558286878021298628 + 8905208502329730571*2^64 + 14274800955801131737*2^128 + 2059915394*2^192,4004675773638233760 + 4460199587742413734*2^64 + 17491779507833213692*2^128 + 271757758*2^192,3052275928770110612 + 2711780089845010273*2^64 + 12984789608113006576*2^128 + 1938125426*2^192,5441710348066153596 + 1242392903139394672*2^64 + 17711234742920147528*2^128 + 165710982*2^192,15909952889443364524 + 17774893076188842967*2^64 + 11269900236313480020*2^128 + 1072293965*2^192,16032913899132844532 + 11110902066063272239*2^64 + 12762758810780478203*2^128 + 268557927*2^192,13362525563208658336 + 2726218024693945614*2^64 + 6091420531165722746*2^128 + 474278710*2^192;\
7515863873308302661 + 3752985528465771253*2^64 + 8029579284087054247*2^128 + 1893410532*2^192,4992544754873684392 + 16945532082967402106*2^64 + 8611885084427891769*2^128 + 220696222*2^192,1588841649904202704 + 1184768921626253136*2^64 + 7918206826901315794*2^128 + 152357304*2^192,2323254487102067218 + 15572872347056344022*2^64 + 10949229280914810111*2^128 + 1228345933*2^192,1429706032072079630 + 9733194913952043455*2^64 + 15414415612518710635*2^128 + 582886385*2^192,12275127858427837860 + 518853232466624847*2^64 + 17357773841650939493*2^128 + 1321052818*2^192,10794072617751752242 + 1072102293347171274*2^64 + 4056985906103346586*2^128 + 1798577107*2^192,15442629051372026136 + 325375891822755429*2^64 + 4505902062175656283*2^128 + 1069650257*2^192;\
5576894193014450413 + 6588655466854768884*2^64 + 16229321579041758251*2^128 + 1225608057*2^192,17241310984601118124 + 14759533183137316617*2^64 + 6672162423106820346*2^128 + 159418260*2^192,560383198304623492 + 12960251882816037406*2^64 + 12743283343727685344*2^128 + 1366817466*2^192,279172804289740894 + 2109367923834092871*2^64 + 13504184637591134879*2^128 + 1440125015*2^192,6141493936419421754 + 3365024248488125794*2^64 + 3467088485376094809*2^128 + 1857674168*2^192,7621625688672496640 + 8372062961321653670*2^64 + 10149040043630109604*2^128 + 1060541619*2^192,4763958631394483910 + 7482482700607141823*2^64 + 12318630904613906870*2^128 + 1099535101*2^192,1319844855789943400 + 16148739655656915488*2^64 + 12890389919377787263*2^128 + 552703186*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4736 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 34
The valuation of subst(g,x,A) is: 37
