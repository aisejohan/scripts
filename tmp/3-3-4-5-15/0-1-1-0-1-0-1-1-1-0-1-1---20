/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 51
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	4 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[1, 3, 1, 0, 0]  	16	6 
[1, 3, 0, 1, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	2 
[1, 2, 0, 2, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 1, 2, 0]  	23	4 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 3, 0, 3, 0]  	24	5 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 3, 3, 1, 0]  	26	3 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 1, 2, 1, 1]  	19	5 
[0, 7, 0, 0, 1]  	21	6 
[0, 3, 2, 1, 1]  	22	4 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 2]  	16	4 
[1, 5, 0, 0, 2]  	18	3 
[0, 2, 1, 2, 2]  	20	4 
[1, 0, 2, 2, 2]  	21	7 
[0, 2, 3, 1, 2]  	23	3 
[0, 2, 0, 4, 2]  	26	2 
[1, 0, 1, 2, 3]  	17	3 
[0, 4, 0, 1, 253]  	17	2 
[2, 2, 0, 0, 254]  	12	4 
[0, 4, 1, 0, 254]  	16	1 
[0, 6, 0, 0, 254]  	18	2 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[0, 3, 0, 2, 255]  	19	3 
------
The gap is between 4 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[444807910528742872 + 9927158356364730757*2^64 + 10128987107917744827*2^128 + 2046027341*2^192,8974479769822618200 + 11360326679316278577*2^64 + 9382064854984846569*2^128 + 70563104*2^192,17108329795092749170 + 4716278453227010490*2^64 + 12173816005713331211*2^128 + 4905360*2^192,13875088792456734172 + 2918036321602020869*2^64 + 5235355473893189022*2^128 + 951553526*2^192,14821294237175437404 + 4155070462398765395*2^64 + 7039972358072084505*2^128 + 1538765135*2^192,4736226413590695212 + 10086466529949315191*2^64 + 14783029986073952612*2^128 + 14320962*2^192,4801930075503132846 + 6244310828765814229*2^64 + 7698150625397528554*2^128 + 463136166*2^192,13257023092508606840 + 13501754023774291430*2^64 + 13637625378763199207*2^128 + 460756995*2^192;\
12191164625999401182 + 3999248859099118126*2^64 + 17841244991569748942*2^128 + 476810955*2^192,13131659355935737048 + 8393870372328419880*2^64 + 17875812728874731480*2^128 + 1014478089*2^192,17190843763055578713 + 5311054836658696152*2^64 + 1234806117481577590*2^128 + 821117337*2^192,2717890470492693990 + 2770284417932674452*2^64 + 14542653122992404855*2^128 + 71765062*2^192,13176121278918939462 + 15115203341835126699*2^64 + 9731251953972223673*2^128 + 565489036*2^192,13400186123532853782 + 15574999632443139546*2^64 + 16231784170801232935*2^128 + 340881217*2^192,1949737292954555279 + 15453775111551384201*2^64 + 2412447985056292183*2^128 + 218411586*2^192,7601211418520500748 + 3629838408043184227*2^64 + 2880537422296013974*2^128 + 760593449*2^192;\
14103440920163356502 + 16394130030756198706*2^64 + 11089095531799863804*2^128 + 1741821259*2^192,13370868982565559512 + 1512851387894353757*2^64 + 13801055356452788613*2^128 + 691420567*2^192,14173404752883167056 + 6303263859359194510*2^64 + 12731197110921646299*2^128 + 1442960361*2^192,11937516823300950744 + 13022743329747849568*2^64 + 8770284024946322844*2^128 + 749785255*2^192,3562232048690619128 + 12258475391684283236*2^64 + 11269305700245932792*2^128 + 1516448685*2^192,14313009498702898868 + 1815332324909594125*2^64 + 15887099610053770430*2^128 + 1678469497*2^192,18236822332842912368 + 3745853566969308668*2^64 + 9517863906987522525*2^128 + 1564417255*2^192,9207997475309696320 + 15587458906871885641*2^64 + 5401022172929617632*2^128 + 1655673057*2^192;\
13352881834956106622 + 5387931285155721901*2^64 + 10491667716195425545*2^128 + 1204017607*2^192,5884674740595353800 + 686488319053517107*2^64 + 11886276562313893953*2^128 + 1970367826*2^192,10797543600061099960 + 3838203802537729898*2^64 + 1395010642408859069*2^128 + 1202119947*2^192,12280863230057608564 + 10529077266947639962*2^64 + 10545965257068060600*2^128 + 1723095163*2^192,420883755121973144 + 17259358055916075931*2^64 + 5163155080645918955*2^128 + 1436839151*2^192,7054014394721536212 + 7632087441144511663*2^64 + 16027351531806763852*2^128 + 308583301*2^192,14091694459578029776 + 225547786729409403*2^64 + 8140145321986614539*2^128 + 1247188787*2^192,13694605845349792768 + 336884798658321381*2^64 + 15867442049619720044*2^128 + 2009530710*2^192;\
15387290474088008608 + 7295009377465928494*2^64 + 17949356600265580878*2^128 + 807486898*2^192,17414864157004509556 + 3848229873623899181*2^64 + 5116384469860495248*2^128 + 1481318676*2^192,13305746331678340175 + 2003663209995139993*2^64 + 16239439303212590276*2^128 + 1576505950*2^192,12286773355215652882 + 11650777380054067631*2^64 + 5280717729499417978*2^128 + 162206885*2^192,18242840221321026674 + 4707216244025902986*2^64 + 15347764594155429678*2^128 + 1943237577*2^192,13182902399630697610 + 8903791893359328735*2^64 + 13521558998526128705*2^128 + 1593934764*2^192,16783150845689392241 + 701141057092149147*2^64 + 16168816657171596129*2^128 + 1130576569*2^192,4426113652856750356 + 4512242715881073655*2^64 + 6290452677137696359*2^128 + 1473550276*2^192;\
7232522472531952722 + 5788893701802775039*2^64 + 5085929028936049322*2^128 + 2004982319*2^192,3109574169715497336 + 5943869795873513508*2^64 + 4497602832891547117*2^128 + 1859193569*2^192,17420265741041852633 + 4311537958282003448*2^64 + 11451400704409132010*2^128 + 342969114*2^192,16624926280974784862 + 8967663063842252181*2^64 + 9693246862097725559*2^128 + 1127921638*2^192,778616332705692958 + 6500862686703774988*2^64 + 8028888278030006860*2^128 + 1936622412*2^192,6960089828938186774 + 9843533278054509867*2^64 + 10096589650201396187*2^128 + 1015973556*2^192,16516337450705574227 + 15976328871624847158*2^64 + 14200372707971231469*2^128 + 648864858*2^192,14875067693658384700 + 12327065773267471718*2^64 + 18127698904013808020*2^128 + 653379701*2^192;\
4292899727848159768 + 8355799851831073260*2^64 + 9300815076409271482*2^128 + 1429711851*2^192,13834010531152713432 + 14818564120872711595*2^64 + 18154774973455128027*2^128 + 214471208*2^192,11202133221306070270 + 17371568921124283832*2^64 + 1143292845391332389*2^128 + 176587871*2^192,17076206029409534472 + 9856439154158734904*2^64 + 12033484381558088193*2^128 + 115052198*2^192,11546751354682069152 + 3891349632900698932*2^64 + 11144334523916783096*2^128 + 613997340*2^192,10517709278541721120 + 12265499922803973679*2^64 + 1225102836899914303*2^128 + 1821785149*2^192,12110411710692174266 + 8977407219734460664*2^64 + 17989108063150533354*2^128 + 1640277076*2^192,630994085760996880 + 4774998375226560031*2^64 + 11006982181571073872*2^128 + 1976656186*2^192;\
6212654579198754682 + 4699513820900348287*2^64 + 17685591116976802216*2^128 + 2047058788*2^192,12675780067080324880 + 12635537168820616725*2^64 + 9536899045582278973*2^128 + 750302802*2^192,6449620285826546056 + 3799679140047629511*2^64 + 12276616712306126286*2^128 + 1666377642*2^192,11772064136095063888 + 13869801431268649034*2^64 + 1287944008556967521*2^128 + 6937831*2^192,10808765847327298880 + 12617350381340133232*2^64 + 13042551474241668291*2^128 + 1965442357*2^192,7773594721919422300 + 4299490583545090197*2^64 + 5655768006635585847*2^128 + 1937153619*2^192,3302398909430918664 + 8538085884992872186*2^64 + 15431037730835242803*2^128 + 602144780*2^192,14767478721467931208 + 15878972869163286223*2^64 + 8789907021368253753*2^128 + 957635532*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4736 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 30
