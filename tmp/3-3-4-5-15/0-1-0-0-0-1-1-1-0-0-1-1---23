/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
The final length of G is 38
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[1, 4, 0, 0, 0]  	15	3 
[1, 0, 3, 0, 0]  	15	3 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	3 
[0, 3, 0, 2, 0]  	19	3 
[2, 0, 1, 2, 0]  	20	3 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	3 
[0, 2, 1, 2, 0]  	20	4 
[3, 0, 2, 1, 0]  	22	4 
[0, 6, 1, 0, 0]  	22	4 
[1, 0, 0, 4, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 1, 3, 1]  	22	4 
[0, 0, 5, 1, 1]  	25	2 
[3, 1, 0, 0, 2]  	12	4 
[2, 0, 0, 2, 2]  	16	4 
[3, 0, 2, 0, 2]  	17	5 
[2, 0, 2, 1, 2]  	19	5 
[1, 0, 2, 2, 2]  	21	6 
[0, 4, 0, 0, 254]  	12	3 
[0, 3, 2, 1, 255]  	22	3 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[11744091665123015752 + 15222715532206335079*2^64 + 8500637203414744417*2^128 + 5802043573*2^192,7696546929322088864 + 1788526909712653054*2^64 + 3460288490524280964*2^128 + 632363105*2^192,4063979502267712256 + 12853342114719696013*2^64 + 13761505853580250949*2^128 + 7644338039*2^192,3638987070697062896 + 16968557230662423867*2^64 + 10216341418317246911*2^128 + 1650922408*2^192,4063979502267712256 + 12853342114719696013*2^64 + 13761505853580250949*2^128 + 5372335991*2^192,17757853691517506704 + 6602236555318520594*2^64 + 7779479436490008762*2^128 + 6481085367*2^192,2856404652659124512 + 16654836517956195569*2^64 + 13325362764232694043*2^128 + 6223836326*2^192,7523888891256640 + 4670480025034931393*2^64 + 14149657095867152459*2^128 + 7638987939*2^192;\
8785476864344971964 + 2885614755050401687*2^64 + 11849951563775940711*2^128 + 1387523903*2^192,12100823730235581632 + 16136342404995966055*2^64 + 2004908386790909339*2^128 + 3663659374*2^192,17579380522259557760 + 7798067006521818230*2^64 + 5583498670859562871*2^128 + 1252774568*2^192,18066497724279011080 + 12905389204444580182*2^64 + 2553444622026378166*2^128 + 1523011430*2^192,4766914717767061488 + 9057159519110344263*2^64 + 16316908089845234606*2^128 + 3482166224*2^192,10763906999734123976 + 365728264492822397*2^64 + 7055863432346463067*2^128 + 3369400445*2^192,9518614605273762912 + 13994016101430363019*2^64 + 5116446388881443453*2^128 + 1940850318*2^192,18056716021574571968 + 4059673140132690918*2^64 + 8441170128861166212*2^128 + 181941440*2^192;\
13350134720204609932 + 7486137912416170873*2^64 + 13806686596657025683*2^128 + 102912506*2^192,4639143123299221984 + 2841406166195565863*2^64 + 7168252547685772376*2^128 + 1188642596*2^192,17433418129644730240 + 1418704640004938264*2^64 + 13080882227893628146*2^128 + 3559767450*2^192,12900425660407886008 + 9437298313131776044*2^64 + 15986813223163370680*2^128 + 3029881717*2^192,14831941909794506864 + 9921578650354384656*2^64 + 2252565354481562436*2^128 + 2875055528*2^192,4268037381003809496 + 10742467188356977482*2^64 + 4966052700830069443*2^128 + 2103860532*2^192,14823573275376618752 + 13770060861335349094*2^64 + 386657476310424511*2^128 + 1251213619*2^192,6038101998700324352 + 14249982288993119200*2^64 + 14805120918056269479*2^128 + 140862688*2^192;\
2415316802341144913 + 3890282329664787482*2^64 + 1649198127483402726*2^128 + 257098800*2^192,17215782199082230860 + 13978666647365601793*2^64 + 8579107839843948647*2^128 + 2660519664*2^192,3419957338985622532 + 6959082157077189742*2^64 + 14367517051248242964*2^128 + 8460441355*2^192,9681139037597369286 + 7083702245292335141*2^64 + 14719543130757326336*2^128 + 3266820977*2^192,4828526906289886368 + 2662169266796933346*2^64 + 17050869405994660898*2^128 + 1957268309*2^192,17442131968557026394 + 15668603599850742231*2^64 + 10731537843364818134*2^128 + 3390540814*2^192,2232032367108947176 + 10336554029924572957*2^64 + 7944260439634414944*2^128 + 2744401500*2^192,4709193031461132816 + 17431825788676378886*2^64 + 16336451541494260062*2^128 + 2177495759*2^192;\
15765451522545754845 + 11376420242080958355*2^64 + 15455884724140428409*2^128 + 6701798954*2^192,2154262489044820300 + 14723163581149183376*2^64 + 2672001514909046034*2^128 + 6443625145*2^192,18251899248780129396 + 16880660807431574398*2^64 + 16620082405729805400*2^128 + 8469607603*2^192,15016874490167642782 + 13005267645118880801*2^64 + 6251997971891786287*2^128 + 7565726049*2^192,3815200962225064992 + 4080873906801871611*2^64 + 11685007560178737428*2^128 + 4759046384*2^192,1239934601402353282 + 15946744681897819388*2^64 + 13845520968795924271*2^128 + 5770558528*2^192,17055605642485565928 + 5659870817550370435*2^64 + 8330917915944839456*2^128 + 1378369423*2^192,10747295030161457168 + 13235064003959946470*2^64 + 12694828385840977926*2^128 + 7519295408*2^192;\
2415316802341144913 + 3890282329664787482*2^64 + 1649198127483402726*2^128 + 5206377520*2^192,11737647993217410988 + 18287092736699786758*2^64 + 12266314167126479565*2^128 + 3448253300*2^192,7628775969001262292 + 5011393099326456610*2^64 + 7390000912727407123*2^128 + 1329003236*2^192,7902912128503813910 + 6041759157749271225*2^64 + 9107653989415204919*2^128 + 1987545843*2^192,619708276274246608 + 4609858324547666478*2^64 + 5581641470805945123*2^128 + 3166349181*2^192,18336160050488239962 + 4189077161097981097*2^64 + 17492332810940251101*2^128 + 1537356744*2^192,2232032367108947176 + 10336554029924572957*2^64 + 7944260439634414944*2^128 + 7324581468*2^192,4709193031461132816 + 17431825788676378886*2^64 + 16336451541494260062*2^128 + 768209615*2^192;\
6892053171086429280 + 16868382692399242845*2^64 + 14959739228923280240*2^128 + 2376114092*2^192,17547763976411850496 + 5982308056890342648*2^64 + 17472361765152922027*2^128 + 8412974875*2^192,10956462096732920048 + 5602421978299140893*2^64 + 4219862406348744647*2^128 + 4960458419*2^192,3802691577859518000 + 8432645258084044967*2^64 + 10563019109705928245*2^128 + 8313281444*2^192,15165280726748559808 + 3654732920548407761*2^64 + 15689090341537460422*2^128 + 7986838155*2^192,868282953546182288 + 10745884307907039461*2^64 + 12810195763683351721*2^128 + 2429650835*2^192,18082982332494985248 + 2365215750830239292*2^64 + 18238240181356770336*2^128 + 3191854508*2^192,15239182814463841248 + 16462495577816186297*2^64 + 446459119314100077*2^128 + 3179437980*2^192;\
736330624706585584 + 6586481147928847732*2^64 + 1568135801143680337*2^128 + 3115388728*2^192,5818304821343958048 + 10424477090724019049*2^64 + 6597844486243164726*2^128 + 3339066205*2^192,7847646107888834016 + 1644258305898749989*2^64 + 5159470700501860793*2^128 + 3126885084*2^192,14141284592567969248 + 11473884763314101733*2^64 + 11266358304538652201*2^128 + 30371258*2^192,7847646107888834016 + 1644258305898749989*2^64 + 5159470700501860793*2^128 + 3120069340*2^192,4969937030113817536 + 7290573281653482116*2^64 + 14686360052761385054*2^128 + 1791996366*2^192,5946329458846525312 + 5895066697218885733*2^64 + 5212031437232985550*2^128 + 1459612371*2^192,1886376995054270496 + 17595915681391925679*2^64 + 12442834893748796344*2^128 + 2085966716*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4252 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 - 8*x^5 + 16*x^4 - 32*x^3 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^2 - 2*x + 4, 1; x^2 + 2*x + 4, 1; x^2 + 3*x + 4, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
