/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 48
[1, 1, 1, 0, 0]  	10	2 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	6 
[1, 0, 3, 0, 0]  	15	3 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[2, 0, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	7 
[1, 6, 0, 0, 0]  	21	7 
[1, 0, 0, 4, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[0, 1, 3, 2, 0]  	25	3 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 5, 1, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[2, 0, 0, 2, 1]  	16	6 
[3, 0, 2, 0, 1]  	17	6 
[2, 0, 2, 1, 1]  	19	5 
[1, 0, 1, 3, 1]  	22	5 
[1, 0, 2, 2, 2]  	21	6 
[0, 1, 5, 0, 2]  	23	3 
[0, 0, 5, 1, 2]  	25	2 
[0, 4, 0, 2, 3]  	22	4 
[0, 3, 2, 1, 252]  	22	3 
[0, 1, 0, 4, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[2, 2, 0, 0, 255]  	12	4 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
[0, 3, 0, 2, 255]  	19	1 
[0, 7, 0, 0, 255]  	21	3 
------
The gap is between 4 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10355777456086743240 + 17303701044903043411*2^64 + 2587716791958458896*2^128 + 1100419171*2^192,9914583690495646430 + 3959139248703865564*2^64 + 7164003610285645853*2^128 + 1194826775*2^192,8153621564394669532 + 10115534676444050416*2^64 + 1862062064019094708*2^128 + 1370824385*2^192,17985217653855755908 + 11642494295090390227*2^64 + 9914509266360033000*2^128 + 820972489*2^192,18229449810521476940 + 11794564614525168544*2^64 + 13121500145397934912*2^128 + 1878650275*2^192,9188973939678393738 + 10182611810476949244*2^64 + 13050683897125752249*2^128 + 1720338774*2^192,10218690765529405202 + 5880250715426851236*2^64 + 15430276127378973337*2^128 + 1915314458*2^192,14788834874201097980 + 12920317295323805928*2^64 + 6971023264061540003*2^128 + 782299407*2^192;\
8337340068872903496 + 9098601754599967885*2^64 + 10722385817607427749*2^128 + 2125159778*2^192,7023762947475294703 + 12921209147796787603*2^64 + 7057543510463093699*2^128 + 1068528013*2^192,11697642301272487442 + 10058939613701318084*2^64 + 10876816773612607732*2^128 + 594000259*2^192,2040863029505020806 + 3552899559628566301*2^64 + 7902429468308188461*2^128 + 449396130*2^192,1359540275521973590 + 17929757640505069531*2^64 + 407587887203150763*2^128 + 1768593889*2^192,7108336161353398841 + 7993525776001889594*2^64 + 730737047539463300*2^128 + 1354397628*2^192,13858079420553705009 + 8458728015933878142*2^64 + 8942110449201440695*2^128 + 1652013527*2^192,7375966856184307654 + 7746741467626459503*2^64 + 2381959048048379460*2^128 + 1649624577*2^192;\
14691976975429209760 + 11837580210523002821*2^64 + 6923116137290356122*2^128 + 484545480*2^192,10736069373356834412 + 11967822112463703630*2^64 + 15957073005103480409*2^128 + 13511895*2^192,5119867534823428052 + 11430540327710616617*2^64 + 16851168163943551963*2^128 + 936450463*2^192,11847268957280469960 + 13717553469438449243*2^64 + 10744510636507449342*2^128 + 1099294777*2^192,5752414228071542784 + 3972847879639356458*2^64 + 7512855716868173156*2^128 + 613729860*2^192,18279252560346106468 + 1282573309613130174*2^64 + 17319811804504172748*2^128 + 1599139748*2^192,12769273560795765560 + 15992176799693519699*2^64 + 1854359592609099836*2^128 + 629637657*2^192,16996494201952108104 + 6459202975912070119*2^64 + 17434954448579487639*2^128 + 1936857637*2^192;\
11042124547709306986 + 17867837340037851181*2^64 + 15504053783217741248*2^128 + 1203429067*2^192,11044393762569975947 + 3337136653100431388*2^64 + 8202239084825273258*2^128 + 1024902830*2^192,7659633721845017378 + 4987205301222419915*2^64 + 7772222158479721549*2^128 + 1124165648*2^192,12104116174691961730 + 12994866615256216669*2^64 + 7607877024386946443*2^128 + 1864961216*2^192,14531186685513681630 + 14555974258548539366*2^64 + 5509672995520382336*2^128 + 1837051693*2^192,12137104993621109469 + 9809314516146762950*2^64 + 155598691528820415*2^128 + 327163435*2^192,46455529124566561 + 6007599015040590206*2^64 + 7267940279075251053*2^128 + 1624840003*2^192,15354094204339103950 + 15943679434125256883*2^64 + 14520557079602784181*2^128 + 331795175*2^192;\
9588439390181441164 + 7799739126646126584*2^64 + 13990011332202228862*2^128 + 893319406*2^192,6358044507652387775 + 10447034482422936230*2^64 + 9530048218035236264*2^128 + 1322592233*2^192,14399235972344146646 + 18392478642513157557*2^64 + 2176574735808505027*2^128 + 928465009*2^192,24731967669382798 + 11921343824007816121*2^64 + 8632447013138241310*2^128 + 1856202012*2^192,13403335601031466070 + 13382539438472819059*2^64 + 13506253728048803186*2^128 + 1091745974*2^192,8146456290279525017 + 1279532804789467181*2^64 + 17330090150942514233*2^128 + 2143995267*2^192,1227407505308914841 + 3507593841484516939*2^64 + 4231897575249738535*2^128 + 1122393893*2^192,13954616636062453910 + 10314133356521245038*2^64 + 556876069047807238*2^128 + 1745679788*2^192;\
18138971218226824222 + 1644333639128854991*2^64 + 4072316487447784261*2^128 + 1511713795*2^192,16128181528337662161 + 11003545564967478586*2^64 + 8776428738920018487*2^128 + 775393769*2^192,6504366119302146918 + 10345911320545353084*2^64 + 9633134334867988840*2^128 + 427916099*2^192,6315374522392255370 + 3285951986553457289*2^64 + 1376931792860674752*2^128 + 410499689*2^192,6788041276112218250 + 10468487512485680312*2^64 + 14735898088751203219*2^128 + 807425399*2^192,17207772587696486195 + 1883014823977629105*2^64 + 9662538693622894824*2^128 + 494643338*2^192,13673295307091227639 + 10343976187352938370*2^64 + 13068924548767032188*2^128 + 1042246295*2^192,16801997346335644506 + 4195176488130710496*2^64 + 10254913905912279474*2^128 + 694750184*2^192;\
8286600861681060480 + 5848371909195582547*2^64 + 4126450102398578804*2^128 + 2055090207*2^192,15638859111005423888 + 1949796331294399911*2^64 + 10330632599373575172*2^128 + 1470027487*2^192,15437092723143495628 + 2502445969146795539*2^64 + 8583847081013377514*2^128 + 109116110*2^192,9993657037138380576 + 17314979244453838560*2^64 + 16835568861325050069*2^128 + 790914206*2^192,9786598232827482892 + 16408497572290822150*2^64 + 17695357512808863833*2^128 + 1026470762*2^192,12941755316238950796 + 11393093578905320719*2^64 + 16768982942005248641*2^128 + 384583938*2^192,2467058716001703144 + 9279419069850771915*2^64 + 6051922284113493383*2^128 + 177687869*2^192,7102260769109174584 + 6552127356951652507*2^64 + 17262027574925444529*2^128 + 1257195884*2^192;\
9527530380498807276 + 15276320532556972890*2^64 + 1527625469445990808*2^128 + 97041970*2^192,14847562892987436550 + 13806056523061930261*2^64 + 13689874599699094189*2^128 + 617477253*2^192,14265479972111586540 + 5265146200861589091*2^64 + 11367845001576857436*2^128 + 39746360*2^192,6741702723840718428 + 3110543966579503401*2^64 + 6618304946078078389*2^128 + 991934066*2^192,3088082536629161348 + 3141917577318181674*2^64 + 17634371007866726257*2^128 + 697206639*2^192,12458898330791794298 + 14987833912539967059*2^64 + 13718801289165027562*2^128 + 129160480*2^192,8168019105899561978 + 13673841855572613444*2^64 + 12928407683001258826*2^128 + 59408356*2^192,4168015013293640068 + 5484767009713782702*2^64 + 4872504322208150790*2^128 + 871298735*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5219 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^7 - 2*x^6 + 32*x^2 + 64*x - 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - x^5 + 2*x^4 - 4*x^3 + 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^5 + 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*y^1*z^1*w^1 + 1*x^1*z^3 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 3 
Look at the ideal generated by: 
1*x^1 + 1*y^1
1*w^1
