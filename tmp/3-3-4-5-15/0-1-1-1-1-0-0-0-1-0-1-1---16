/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 56
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[3, 2, 0, 0, 0]  	15	5 
[2, 3, 0, 0, 0]  	15	5 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	6 
[1, 2, 0, 2, 0]  	19	4 
[0, 5, 1, 0, 0]  	19	4 
[1, 4, 0, 1, 0]  	20	6 
[1, 3, 2, 0, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	7 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 1, 1, 3, 0]  	25	3 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 1, 0, 4, 0]  	26	3 
[0, 2, 0, 4, 0]  	26	3 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 1, 0, 1]  	16	6 
[1, 1, 0, 2, 1]  	16	5 
[1, 3, 0, 1, 1]  	17	6 
[1, 2, 2, 0, 1]  	17	5 
[1, 5, 0, 0, 1]  	18	5 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	4 
[0, 3, 1, 2, 1]  	23	3 
[0, 1, 2, 3, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	4 
[1, 1, 2, 1, 3]  	19	5 
[2, 2, 0, 0, 254]  	12	3 
[1, 0, 4, 0, 254]  	19	4 
[0, 1, 0, 4, 254]  	23	2 
[0, 0, 4, 2, 254]  	26	1 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	1 
[0, 6, 0, 0, 255]  	18	2 
[0, 0, 5, 0, 255]  	20	2 
[0, 1, 1, 3, 255]  	22	2 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 4 and 253.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10031480558734813638 + 10244636197391258115*2^64 + 15189430828181944114*2^128 + 334117820*2^192,8308955526231350648 + 2826003429201373761*2^64 + 11879070196432903871*2^128 + 1491008024*2^192,18228925195269956520 + 3075898704206881610*2^64 + 18405002219791802038*2^128 + 2114997941*2^192,4126342571223497980 + 12891158913039777665*2^64 + 1663662842467621440*2^128 + 1632055970*2^192,11825413431415560444 + 18007341983959029073*2^64 + 615758923506347713*2^128 + 1667587379*2^192,11806156803859073136 + 10183223095187797320*2^64 + 1028089211004971494*2^128 + 757406378*2^192,17540159279630369260 + 9631097367354566081*2^64 + 16475079859964861034*2^128 + 1048090157*2^192,8382772241684819808 + 11739469257175705883*2^64 + 11315978406450546379*2^128 + 1775999581*2^192;\
5284331296324250716 + 16320561288851747975*2^64 + 16122704011783847230*2^128 + 564550495*2^192,1296085455417305192 + 3467596694554102207*2^64 + 6066866659036462112*2^128 + 2113032564*2^192,15599466222613534192 + 11327751131047662857*2^64 + 18371249046587641880*2^128 + 1299331657*2^192,22753078406307396 + 13067661943719490596*2^64 + 15511291271183182571*2^128 + 167619148*2^192,5699621863341840608 + 17705940426543778838*2^64 + 7913307963460555216*2^128 + 1276497188*2^192,4651416352823978732 + 15502137180553392614*2^64 + 9801318983211014135*2^128 + 2124585593*2^192,15451510447411629520 + 5602691180301207590*2^64 + 3023001938378708859*2^128 + 238315400*2^192,15380840308838244464 + 17867581144228551222*2^64 + 9591074641963143413*2^128 + 2002885105*2^192;\
9655413827906637952 + 15516468061491513376*2^64 + 418135677425863461*2^128 + 250771499*2^192,1656255279309115560 + 16171697595402282411*2^64 + 12503123479007342645*2^128 + 550106219*2^192,3520583335397006272 + 10596230687422388979*2^64 + 359251892653212933*2^128 + 1203693198*2^192,1917248930143537752 + 291336380703702309*2^64 + 223891048484966103*2^128 + 708536860*2^192,11157018917115147376 + 9781612090170037639*2^64 + 164301857483314772*2^128 + 1563681741*2^192,7144137114620118976 + 13870582957878654489*2^64 + 7396510271648775507*2^128 + 79857920*2^192,6982041534016403744 + 13781162041419595462*2^64 + 13324611442327577301*2^128 + 727353322*2^192,12236807417984236312 + 807778760525188637*2^64 + 17672625936397128043*2^128 + 2138578923*2^192;\
0 + 0*2^64 + 0*2^128 + 998244352*2^192,0 + 0*2^64 + 0*2^128 + 377487360*2^192,0 + 0*2^64 + 0*2^128 + 251658240*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 769563247*2^192,0 + 0*2^64 + 0*2^128 + 50331648*2^192,0 + 0*2^64 + 0*2^128 + 679477248*2^192,0 + 0*2^64 + 0*2^128 + 545259520*2^192,0 + 0*2^64 + 0*2^128 + 830472192*2^192;\
6882200629090173947 + 11826508876885310425*2^64 + 3451924789962008277*2^128 + 471875504*2^192,14185955637016745636 + 9407951011131504133*2^64 + 17922826426326170775*2^128 + 2005229902*2^192,10793442511487791440 + 12886277162807119270*2^64 + 6854850627494329305*2^128 + 1899644709*2^192,12931380467632472050 + 11055546905530184164*2^64 + 3225008027213761332*2^128 + 2026551988*2^192,7422401883745458482 + 12626843849084202993*2^64 + 14129881654943114290*2^128 + 1513583798*2^192,5921548945789116164 + 12345278209350253571*2^64 + 14715258751408626999*2^128 + 1758760674*2^192,7369382641859188262 + 8106366046882510669*2^64 + 16050703973723399873*2^128 + 1471581003*2^192,9851179314230116224 + 858755094915967408*2^64 + 17042229554121742739*2^128 + 251510166*2^192;\
17116394347705125426 + 6136554839511304433*2^64 + 15209798006291279508*2^128 + 759675057*2^192,6130353302244456644 + 15080214473136517433*2^64 + 5038183222735754215*2^128 + 32118378*2^192,8189613878835296032 + 11457786593019035622*2^64 + 14702265717329497180*2^128 + 994797668*2^192,11139520834116976392 + 11290021733783435841*2^64 + 11612613748366964892*2^128 + 451983474*2^192,10329898159392114836 + 260413643955785225*2^64 + 10094569775922852302*2^128 + 683539956*2^192,16230809126855619036 + 9433248612286382800*2^64 + 5058251428027004560*2^128 + 238860773*2^192,17571776313099739180 + 4223191554470710092*2^64 + 3925936448513005118*2^128 + 489840108*2^192,201935260301669480 + 13016935221885119495*2^64 + 5152226126822773191*2^128 + 994962507*2^192;\
4068338895547137914 + 15001508338983617864*2^64 + 6449205225816461261*2^128 + 1000575815*2^192,5743340963312552640 + 9475125818776278466*2^64 + 17929538963122907341*2^128 + 1536633189*2^192,11350094166950618812 + 3766333342773322660*2^64 + 1733047599814193967*2^128 + 1941312848*2^192,7666168061725009468 + 16200921438292392407*2^64 + 11827300703333478052*2^128 + 682480922*2^192,14215771953259045892 + 10433005985448116284*2^64 + 14995296628045796257*2^128 + 437314837*2^192,13593678061881675856 + 1547520389515178371*2^64 + 13419311806041871690*2^128 + 1818737434*2^192,15452345291743705616 + 5150721848927163663*2^64 + 5236849255583762403*2^128 + 1530038284*2^192,11791712593620729552 + 5080642798094274287*2^64 + 14691418507702099793*2^128 + 1699667531*2^192;\
585768428901743640 + 12832607464054116946*2^64 + 12666187844746227550*2^128 + 1715146340*2^192,17596873626306327952 + 10685965929523469026*2^64 + 3733344503610180414*2^128 + 373774635*2^192,1656730962633403856 + 17522357483897531483*2^64 + 9059268216086534139*2^128 + 1175951343*2^192,5835769804211962884 + 2241284177928513701*2^64 + 10716481808364620272*2^128 + 548272252*2^192,15826496209333240344 + 17992251076814773366*2^64 + 12412979043631506679*2^128 + 573991942*2^192,16896838127823973192 + 12348950984929872759*2^64 + 15022514038520101271*2^128 + 1389532639*2^192,14086464446610540748 + 1679134531035185902*2^64 + 15669659262849632824*2^128 + 1274401826*2^192,5075139410406722800 + 12942069472266128533*2^64 + 9182526792869865273*2^128 + 920903330*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4233 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - 2*x^6 - 4*x^5 - 16*x^3 - 32*x^2 + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^4 + 2*x^3 + 2*x^2 + 8*x + 16, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 34

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^2*y^3 + 1*x^2*z^1*w^1 + 1*y^5 + 1*y^1*z^3 + 1*w^3
Total 493: 1 2 
Look at the ideal generated by: 
1*y^1
1*w^1
