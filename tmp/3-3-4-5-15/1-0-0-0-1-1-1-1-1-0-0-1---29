/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 44
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 0, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	7 
[1, 3, 0, 1, 0]  	17	6 
[1, 0, 0, 3, 0]  	18	3 
[1, 2, 0, 2, 0]  	19	5 
[1, 1, 2, 1, 0]  	19	5 
[0, 5, 1, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[0, 2, 1, 2, 0]  	20	4 
[3, 4, 0, 0, 0]  	21	6 
[2, 5, 0, 0, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	5 
[0, 7, 0, 0, 0]  	21	6  <--- 2
[0, 4, 0, 2, 0]  	22	3 
[0, 3, 2, 1, 0]  	22	4 
[0, 2, 3, 1, 0]  	23	3 
[0, 1, 5, 0, 0]  	23	3 
[0, 3, 0, 3, 0]  	24	4 
[0, 3, 4, 0, 0]  	25	3 
[0, 1, 3, 2, 0]  	25	3 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 3, 0, 0, 2]  	12	3 
[1, 2, 2, 0, 2]  	17	5 
[0, 0, 5, 1, 2]  	25	2 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 1, 1, 250]  	18	4 
[1, 1, 1, 1, 252]  	15	3 
[1, 0, 2, 1, 253]  	16	5 
[1, 0, 1, 1, 254]  	12	2 
[0, 0, 0, 5, 254]  	25	1 
------
The gap is between 4 and 249.
Lengths: 1 1 6 8 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[15624678583527546720 + 10442243763437940247*2^64 + 12704611553222863969*2^128 + 9233875931*2^192,6823302319366977536 + 31065657632019464*2^64 + 101288515090896984*2^128 + 38358883892*2^192,11330463368824010368 + 11440079740089955189*2^64 + 14314750423443645244*2^128 + 43350557279*2^192,10200510847817700736 + 4085100811296773790*2^64 + 6106309384431832119*2^128 + 21765279975*2^192,3851681314446584448 + 4911996989854254369*2^64 + 5897991821048879144*2^128 + 55857140080*2^192,10832727993459310272 + 14557523080479789966*2^64 + 3546623298656490718*2^128 + 5927264204*2^192,12942117169325824896 + 3914097704788931524*2^64 + 2783578714352158943*2^128 + 25904987754*2^192,15095415234264416768 + 3387342315922222122*2^64 + 10523956557561439815*2^128 + 52491859921*2^192;\
16575903443017367760 + 16145371846192837934*2^64 + 3777449371009167645*2^128 + 31730745079*2^192,8747798828146695168 + 4304555668941553828*2^64 + 3686989748626611521*2^128 + 7425475240*2^192,7578091278910048320 + 1801904296491692363*2^64 + 16859152409600106297*2^128 + 26610371556*2^192,4627628738670286528 + 6961948148070019340*2^64 + 9042980804658057548*2^128 + 25755545078*2^192,5594060120156684352 + 8837451347289973544*2^64 + 16690786051599779655*2^128 + 14245275548*2^192,12931743754263298464 + 5197103020305730724*2^64 + 18428815316881333549*2^128 + 20701630837*2^192,10216331820284621248 + 4791586830687124728*2^64 + 2062203643238037358*2^128 + 27765221025*2^192,8802527214609440256 + 14296857927814852918*2^64 + 1936495037339181475*2^128 + 32252713391*2^192;\
1309951946327127439 + 11017373805945650657*2^64 + 17132848841183380517*2^128 + 67772361825*2^192,10610813056596613616 + 2495509698188864617*2^64 + 13368024291096343964*2^128 + 67218196227*2^192,13299839808716162172 + 3265557692747719860*2^64 + 800835735766054400*2^128 + 57061658373*2^192,14015842302239986644 + 15013834454979527974*2^64 + 18101882408833201245*2^128 + 11678756343*2^192,6113560399759617388 + 8586797591223568226*2^64 + 16147740598935838018*2^128 + 66927378638*2^192,14504032560186753958 + 12864468512346759434*2^64 + 15605777560843337660*2^128 + 3034489696*2^192,1496065964455615284 + 13679764842654150670*2^64 + 5642852156453700264*2^128 + 64211962186*2^192,15479653597483628192 + 18121583971329258349*2^64 + 14245061721547014606*2^128 + 51048103473*2^192;\
2152084229368714655 + 4591591487812732946*2^64 + 330837528509834362*2^128 + 19703458425*2^192,4643553262611317872 + 7332110231123335348*2^64 + 17287226401704532020*2^128 + 23303414139*2^192,2481809302430015420 + 15615690910134602585*2^64 + 11558759296300476597*2^128 + 14192905885*2^192,4701116693787793300 + 5721288075902236417*2^64 + 15947824049634998109*2^128 + 20518163050*2^192,3866566021614105772 + 9652839264350748808*2^64 + 5619813907033081390*2^128 + 35135133652*2^192,14321030637084799942 + 11332462402662975124*2^64 + 3029417424637939303*2^128 + 32832162828*2^192,6910534084882909172 + 73668659923690109*2^64 + 11649292983891669381*2^128 + 67685636625*2^192,4332209207468861600 + 9171828445290881779*2^64 + 7653305672576398912*2^128 + 15272188850*2^192;\
3138455438328178448 + 6307538610774691669*2^64 + 1106442335401926978*2^128 + 13951025557*2^192,15521232951583702272 + 11295178809830590927*2^64 + 1907025137390463263*2^128 + 18973077160*2^192,11949949616322755904 + 9428563215200914317*2^64 + 10088953325594909474*2^128 + 31395010235*2^192,6018567242901909952 + 11510770932294089080*2^64 + 17795568661985834864*2^128 + 28900833731*2^192,13360704125288645440 + 14960923998914701431*2^64 + 9842419322905425213*2^128 + 6495239866*2^192,7389917764586040608 + 6383782510650922250*2^64 + 10390338065703673196*2^128 + 23962221207*2^192,5706993500931844288 + 4627402721650196826*2^64 + 15508870025282435867*2^128 + 21226585383*2^192,16368449350784428544 + 3396416827215056564*2^64 + 16995855162403057770*2^128 + 26352219085*2^192;\
1744814488606215392 + 11528807105829802566*2^64 + 17769493259617680222*2^128 + 30700123687*2^192,14563809349178723072 + 5686062304366430856*2^64 + 18285529395875950187*2^128 + 30213040485*2^192,16773704046768676096 + 9154040202133154556*2^64 + 234716743274988534*2^128 + 18709007233*2^192,5419083350153134336 + 11695096674677994432*2^64 + 17664173071060988838*2^128 + 17889829422*2^192,7221097623609032576 + 6456459342104572471*2^64 + 2591808453215777084*2^128 + 30398857377*2^192,5366852545234090560 + 7658233818059420830*2^64 + 5960380676512583935*2^128 + 17429074047*2^192,9197322236363525248 + 3467208397714934705*2^64 + 15085572954341791187*2^128 + 6105479400*2^192,18113363656132569088 + 16415053695870677130*2^64 + 9747332343620043462*2^128 + 1273283877*2^192;\
3144895655473632404 + 16568560388813261074*2^64 + 1991328155922309137*2^128 + 51995505162*2^192,5939832841165586624 + 16160754366988226878*2^64 + 11952527566302902234*2^128 + 24357624767*2^192,2895106859212192976 + 4689165209825768317*2^64 + 5553549406208047419*2^128 + 35975738515*2^192,16798882870653756912 + 6603583634744108892*2^64 + 13328532746829699125*2^128 + 55058353149*2^192,869799109906680336 + 17845783293789553355*2^64 + 7259955375380319655*2^128 + 34205099686*2^192,13787844881583172232 + 12642684057504753467*2^64 + 16048599182953350744*2^128 + 57274312124*2^192,14865345530365700336 + 5665631035824311689*2^64 + 5818036737873429386*2^128 + 18859792622*2^192,13026638553627394176 + 8454243489514362601*2^64 + 1569893083675841407*2^128 + 7822279998*2^192;\
3207332354699147121 + 18126543716782574813*2^64 + 7534460585270859643*2^128 + 23229516651*2^192,5467802705272228368 + 1935188050969002963*2^64 + 16635977743421829261*2^128 + 5808712134*2^192,4189858920995313284 + 8700534182932164667*2^64 + 511751514018582281*2^128 + 16813546988*2^192,13426722659831183916 + 1984064700239606252*2^64 + 3235341396000296196*2^128 + 13275578989*2^192,6925636052672864916 + 7630860269704073672*2^64 + 12847003408897017565*2^128 + 28439820854*2^192,6018653130096886618 + 453516762545749518*2^64 + 7583539960681315523*2^128 + 1783406767*2^192,15516291725123727564 + 18088056913382975340*2^64 + 8405850919601115651*2^128 + 28369833980*2^192,16071956940796101216 + 15783640527489468224*2^64 + 5744682397566451000*2^128 + 18096422493*2^192]
/* 
This matrix times 2^(-6) should be the matrix of frobenius.
*/ 
B = 2^(-6) * A; 
/* Freed 5182 lists. */
The sign is: 1
The characteristic polynomial is: x^8 - x^7 + 4*x^5 - 8*x^4 + 16*x^3 - 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 - 2*x + 4, 1; x^6 + x^5 - 2*x^4 - 4*x^3 - 8*x^2 + 16*x + 64, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 20
