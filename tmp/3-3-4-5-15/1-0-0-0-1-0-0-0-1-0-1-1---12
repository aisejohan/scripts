/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
The final length of G is 26
[2, 0, 1, 0, 0]  	10	2 
[2, 0, 0, 1, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	2  <--- 1
[0, 4, 0, 0, 0]  	12	2  <--- 2
[0, 1, 3, 0, 0]  	15	2 
[1, 1, 2, 1, 0]  	19	2 
[0, 2, 2, 1, 0]  	19	2 
[1, 1, 1, 2, 0]  	20	2 
[0, 2, 1, 2, 0]  	20	2 
[1, 0, 0, 4, 0]  	23	2 
[0, 1, 0, 4, 0]  	23	2 
[0, 3, 0, 3, 0]  	24	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[1, 0, 4, 2, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 0, 2, 1, 1]  	16	2 
[1, 0, 1, 2, 1]  	17	2 
[0, 1, 2, 3, 4]  	26	2 
[0, 0, 4, 2, 251]  	26	1 
[0, 1, 2, 1, 255]  	16	1 
[0, 1, 1, 2, 255]  	17	1 
[0, 0, 0, 4, 255]  	20	1 
------
The gap is between 5 and 250.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[17490548291074997534 + 17793164826176741992*2^64 + 2726042130349956438*2^128 + 397703344*2^192,230250826808892100 + 11930136279545348159*2^64 + 14041885656738502567*2^128 + 931738847*2^192,6894701579719652536 + 16640016397230431156*2^64 + 8345106641277787830*2^128 + 186025238*2^192,7957399829173254816 + 11996347006247785321*2^64 + 7992158200926878492*2^128 + 910931143*2^192,7952417675448239994 + 1361575823372561857*2^64 + 3283287354806860997*2^128 + 358610598*2^192,15420070144721753386 + 7710907017183568398*2^64 + 5845794297773957158*2^128 + 594564976*2^192,3188913009573036636 + 9788256314909546079*2^64 + 10811228921314772983*2^128 + 910836501*2^192,15620952825831193640 + 13100563282508005660*2^64 + 1537157874695040210*2^128 + 182043221*2^192;\
12318071288276628226 + 7132859953524470890*2^64 + 12700766050841730712*2^128 + 188410969*2^192,8715651453057744496 + 6719998652745597365*2^64 + 6647140016049755367*2^128 + 394282991*2^192,10216603409480688992 + 13491525914063379330*2^64 + 13998124786115957090*2^128 + 318177837*2^192,1714826885165918998 + 115977074972190384*2^64 + 1482217083989776638*2^128 + 316269160*2^192,10631953246820251564 + 14176063530246518158*2^64 + 9608025407220838588*2^128 + 155160728*2^192,11756677174039098708 + 1863877296793499206*2^64 + 17619113495715931444*2^128 + 355571871*2^192,12875661685948140584 + 3513230940784970916*2^64 + 11076834248438049522*2^128 + 116692224*2^192,5590373182830634032 + 15973353322434781467*2^64 + 1636649024940526883*2^128 + 308876978*2^192;\
9096260445714879087 + 12034827008240532413*2^64 + 1821795953932833216*2^128 + 501585585*2^192,6273378502241159208 + 12809704268927708622*2^64 + 846482719457147014*2^128 + 253243806*2^192,17365915222978704336 + 9367650220959533451*2^64 + 10737723474755099797*2^128 + 160384745*2^192,2923356126396695880 + 15467491667967789461*2^64 + 3770239718486890373*2^128 + 455226284*2^192,12015407164578675954 + 13383767192930172496*2^64 + 18184173695120167832*2^128 + 388141081*2^192,5156612630994255414 + 2634887379954678450*2^64 + 18096670404500178406*2^128 + 141110810*2^192,4680786586049253148 + 14944140374468333068*2^64 + 8990346704794605559*2^128 + 490687595*2^192,16560480175283067368 + 5002208740365457053*2^64 + 6981037828646577428*2^128 + 105091934*2^192;\
16546353195366234064 + 4293801862407168560*2^64 + 6457412096625026911*2^128 + 220853344*2^192,5064860264316635968 + 17199460804659321888*2^64 + 17941846625545675827*2^128 + 502094810*2^192,9142479644126640232 + 16799919490801209341*2^64 + 7413963875084376892*2^128 + 529140627*2^192,3264785550498560472 + 17344760271674609363*2^64 + 17576936280890620897*2^128 + 18579664*2^192,17339306365757027648 + 18294506129129260604*2^64 + 2651332831389425585*2^128 + 17370405*2^192,16717783055986043120 + 3588068059324179949*2^64 + 13644990817264379231*2^128 + 453268687*2^192,3067550873612493892 + 1734625771516424541*2^64 + 1546820517796540130*2^128 + 301228152*2^192,2077220945895232844 + 1787711204778603007*2^64 + 14357288566714724810*2^128 + 85692211*2^192;\
6692164634295014494 + 10301409752223932752*2^64 + 12783125446036005519*2^128 + 366376122*2^192,6934437431231533616 + 6206221281494825012*2^64 + 4549245200205535788*2^128 + 398784654*2^192,9689415192334253536 + 5268596382495877433*2^64 + 18143873349934937946*2^128 + 269097598*2^192,18247731245054313392 + 12273081019748449232*2^64 + 9923895055404053519*2^128 + 331763165*2^192,4062429668223285718 + 13349765676328383417*2^64 + 1210971742324475715*2^128 + 358887584*2^192,12157231537540161932 + 4837500485528441706*2^64 + 10334340562881985911*2^128 + 83554360*2^192,4244552982429324632 + 5577898301214866901*2^64 + 10939262467345618524*2^128 + 352533068*2^192,11398941229332343920 + 12597370741761458392*2^64 + 11017319698963670052*2^128 + 225394521*2^192;\
3961551679195141346 + 4081066573224909108*2^64 + 13461401310571516780*2^128 + 414856744*2^192,8019692877948359040 + 15291113695507882070*2^64 + 4379110443466550496*2^128 + 444529014*2^192,17035503347085648694 + 8755563633064879450*2^64 + 1845374355794974642*2^128 + 219250987*2^192,12840359579096526 + 14295587072580529553*2^64 + 12620956919647040894*2^128 + 343458108*2^192,12137812708038900948 + 15140586939154430398*2^64 + 17051197660620662995*2^128 + 256206300*2^192,2719930651505250116 + 11591915606236410417*2^64 + 14365542858168508006*2^128 + 421613801*2^192,16839802931174278744 + 4478168760448999697*2^64 + 5832692496355792749*2^128 + 310103500*2^192,6980609959176893920 + 10632512598264380832*2^64 + 11771312444891094747*2^128 + 69648272*2^192;\
4770267715411566560 + 16119684102911102727*2^64 + 8958016575470568962*2^128 + 973035047*2^192,13149849529455423926 + 9247227011059469580*2^64 + 11161339713694133826*2^128 + 790544664*2^192,17716561963477145996 + 361540821442126311*2^64 + 10732324605447041094*2^128 + 215284594*2^192,12249049553625973908 + 2441581881798181153*2^64 + 17077510917771864805*2^128 + 305136768*2^192,5588870561256033734 + 5912503764803568928*2^64 + 10271144598199592928*2^128 + 62626431*2^192,12193769011675575774 + 11782752734380524068*2^64 + 9545150183766181097*2^128 + 601846357*2^192,534689953003982942 + 168448528385559570*2^64 + 11894552554980235652*2^128 + 645198666*2^192,6565690055643242584 + 5106446825470881688*2^64 + 4544262331371243311*2^128 + 234647522*2^192;\
12708316097976516722 + 9067189883244228833*2^64 + 11131379451972438702*2^128 + 235901719*2^192,8986422174797875238 + 9430281088832125195*2^64 + 643075548956874802*2^128 + 96369624*2^192,15313564156090337920 + 16587347641792805327*2^64 + 8936185551886148702*2^128 + 63489246*2^192,4069197790263607600 + 13093624462949457303*2^64 + 5705162497331668132*2^128 + 11854431*2^192,4420253755512636074 + 11368353287932561934*2^64 + 12116299707850978435*2^128 + 431628208*2^192,11932091244743581338 + 17964618273846256169*2^64 + 2578695674213742251*2^128 + 374218724*2^192,9578304417178129496 + 10270429596674149857*2^64 + 1946490890525067115*2^128 + 324254545*2^192,8191560763453095248 + 17524519339440776971*2^64 + 365817667111569958*2^128 + 25632397*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 3945 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 4*x^5 + 16*x^4 + 16*x^3 + 128*x + 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x + 2, 2; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 34
The valuation of subst(g,x,A) is: 38
