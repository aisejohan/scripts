/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 52
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	6  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[0, 1, 3, 0, 0]  	15	2 
[1, 1, 2, 1, 0]  	19	5 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	4 
[1, 0, 3, 1, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	5 
[1, 3, 1, 1, 0]  	21	6 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[0, 6, 1, 0, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	3 
[0, 5, 2, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 4, 2, 1, 0]  	25	2 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 3, 0, 3, 0]  	27	3 
[0, 4, 0, 3, 0]  	27	3 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 0, 6, 1, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[1, 3, 1, 0, 1]  	16	5 
[1, 1, 0, 2, 1]  	16	6 
[1, 3, 0, 1, 1]  	17	5 
[1, 2, 2, 0, 1]  	17	6 
[0, 3, 1, 2, 1]  	23	3 
[0, 2, 1, 3, 1]  	25	3 
[0, 0, 5, 1, 1]  	25	2 
[0, 2, 0, 4, 1]  	26	2 
[0, 4, 2, 0, 2]  	20	4 
[0, 4, 0, 2, 2]  	22	4 
[0, 3, 0, 3, 2]  	24	4 
[0, 2, 1, 2, 254]  	20	3 
[0, 3, 2, 1, 254]  	22	3 
[0, 0, 0, 5, 254]  	25	1 
[1, 0, 1, 1, 255]  	12	4 
[0, 4, 1, 0, 255]  	16	1 
[0, 4, 0, 1, 255]  	17	1 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 7 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5604877088274065732 + 5010706243775706923*2^64 + 5245426548246648054*2^128 + 32629075*2^192,15816266947182184576 + 9174651868852435002*2^64 + 6965388997159175453*2^128 + 2346080693*2^192,11417596115271935612 + 2096326773548542761*2^64 + 272016695204354404*2^128 + 1964355242*2^192,15791879371747311564 + 3223147383285726240*2^64 + 16407044726363012838*2^128 + 1147106778*2^192,9349612296161857080 + 17365432970474228318*2^64 + 8570501793969572253*2^128 + 3489588434*2^192,16915527107495429220 + 13343219714644599997*2^64 + 18155961496397186436*2^128 + 4146324720*2^192,3689677434649968616 + 11202565893996203962*2^64 + 13133173398931016457*2^128 + 1648559475*2^192,13449392785755002696 + 9640445972434484259*2^64 + 13846338803410047684*2^128 + 693636673*2^192;\
13297700462118489954 + 12357480222479487426*2^64 + 16184649690127492692*2^128 + 3044880602*2^192,4409460045637918008 + 12727016043397294712*2^64 + 427582883545839906*2^128 + 2170542548*2^192,4075327676849384386 + 6223479229363395657*2^64 + 7392625610969877727*2^128 + 1900469272*2^192,6770632864680314234 + 8197340925683184389*2^64 + 2448720467683289668*2^128 + 3146641340*2^192,1152467034933492164 + 16488274077865385865*2^64 + 4473328501909028252*2^128 + 2476802693*2^192,9711967351295086214 + 9492528637765803108*2^64 + 4575025774221493646*2^128 + 3749842598*2^192,12316757589520085412 + 4468822941985373878*2^64 + 11275608751994084366*2^128 + 217362464*2^192,9282008594557552812 + 18341114375509130901*2^64 + 17569963337118989989*2^128 + 1069848733*2^192;\
2419285353244112365 + 5480646503006046426*2^64 + 14345901630852447914*2^128 + 3247792338*2^192,11292543051379347868 + 11310538529356520539*2^64 + 7751841632772859611*2^128 + 4178300156*2^192,9241526328407479577 + 2901856689042176195*2^64 + 8530788069806671589*2^128 + 1024533884*2^192,13098524920831695249 + 1841017515769284750*2^64 + 15625220877274041641*2^128 + 638190233*2^192,11611854168192798694 + 12942963579364101850*2^64 + 12358732460250844193*2^128 + 2824752622*2^192,12764348257279959887 + 9636867725025766290*2^64 + 7382726332148150821*2^128 + 3776730820*2^192,11432039194706638138 + 4723470136653975157*2^64 + 3157868064124883716*2^128 + 1738936111*2^192,14466586746850655518 + 9161747553729853062*2^64 + 4582972036634671792*2^128 + 2406959489*2^192;\
15286313654225954374 + 5005947322270902884*2^64 + 13290164744653966425*2^128 + 1499374525*2^192,14928267062261887136 + 14636910217637075944*2^64 + 855332468991262915*2^128 + 3161424204*2^192,15171138355507669002 + 14847090875832721824*2^64 + 3538865461587249026*2^128 + 1857733805*2^192,15608234470505530906 + 5554025580719004316*2^64 + 14136747714585934829*2^128 + 1758494744*2^192,8791771236976997396 + 4058357685066356494*2^64 + 9947526531392078337*2^128 + 1616009543*2^192,9241271036458438318 + 3488206636353914087*2^64 + 17412788023626474739*2^128 + 3559057222*2^192,1578130501486010948 + 13256076710108714198*2^64 + 8515416655929697989*2^128 + 3333473981*2^192,14318534206646987628 + 3902156281217701969*2^64 + 17364251489571081981*2^128 + 2362880750*2^192;\
16434658633024939561 + 15439984737087624641*2^64 + 15983718615057379716*2^128 + 3639249331*2^192,13983172281309931068 + 13010329540165149488*2^64 + 17528727998351899661*2^128 + 3153153713*2^192,17293167072755646081 + 12313589653366459244*2^64 + 14683817664291653196*2^128 + 3392952843*2^192,13320836258275872841 + 18030159063416207607*2^64 + 11234733921005298014*2^128 + 1513926613*2^192,4552753605306418406 + 14903984236383976023*2^64 + 6682204267148523122*2^128 + 2890287767*2^192,16297781329097018103 + 13014793671746399919*2^64 + 3113779678065210769*2^128 + 3600796360*2^192,13388392477965434618 + 8098156337387450404*2^64 + 12831912757696644248*2^128 + 3485034648*2^192,7496909548522279022 + 15001276189747210259*2^64 + 13474331389994938412*2^128 + 4244643854*2^192;\
12145010082202534457 + 18221934761186091759*2^64 + 9878780496836464528*2^128 + 492927910*2^192,1509984132500121380 + 15595742035651901572*2^64 + 15603856620858541483*2^128 + 2257730553*2^192,6808234942496293081 + 1142462290778237948*2^64 + 15171056049792132152*2^128 + 2447658003*2^192,15662512838601010025 + 6278261181863779522*2^64 + 4912942325167110184*2^128 + 1201643132*2^192,14343270766924890078 + 17266598574190296016*2^64 + 1835048890866186055*2^128 + 2204403699*2^192,8373145847159536599 + 9851613297060448212*2^64 + 17694263615763272514*2^128 + 3388540804*2^192,5943813565080406058 + 14678135053736905863*2^64 + 10994213312803400047*2^128 + 3593751066*2^192,5333889961824837886 + 2609967856657918032*2^64 + 1837146814888306600*2^128 + 4106449443*2^192;\
10898567682159608069 + 14657835481070080292*2^64 + 10628176553736389479*2^128 + 3876423593*2^192,12145035041944100092 + 13139074538401758505*2^64 + 15727393990722338043*2^128 + 3676814627*2^192,7904966989710459377 + 12536334524844007253*2^64 + 13930608352635737977*2^128 + 84520536*2^192,15330117791366395753 + 13387817214041036832*2^64 + 6648797214175582369*2^128 + 732216796*2^192,8181142859632087390 + 16564464772018555690*2^64 + 16787838580359713511*2^128 + 481709076*2^192,9725011588068732447 + 10784475502610689385*2^64 + 2219688770664859805*2^128 + 817901430*2^192,13604172071846566746 + 5780655584322560575*2^64 + 17341917262144121127*2^128 + 2674345220*2^192,14053342228690284398 + 9799873661653869844*2^64 + 8917889247368959584*2^128 + 2498195889*2^192;\
16965313046068296537 + 9565724576644694391*2^64 + 14612983015236481798*2^128 + 3701793042*2^192,1388034642944053580 + 1884244896813497036*2^64 + 1234362547148306045*2^128 + 955053245*2^192,2875383160474320533 + 12626330611652378468*2^64 + 658706836438705952*2^128 + 2970773972*2^192,2339682759253787917 + 17431550240950561740*2^64 + 12780916733687054394*2^128 + 1684050523*2^192,13436944033570732318 + 12144904732455551022*2^64 + 4768076628143829473*2^128 + 2055427924*2^192,5129134724204870259 + 8419804733905435405*2^64 + 1444159431246742918*2^128 + 479135545*2^192,8509662742970695154 + 5844147667500802831*2^64 + 5606884860867456070*2^128 + 1207775000*2^192,14254983758480310838 + 11193712101878494246*2^64 + 12250221169533957459*2^128 + 148530249*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4316 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 24
