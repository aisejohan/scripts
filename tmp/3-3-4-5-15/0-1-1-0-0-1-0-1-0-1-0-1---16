/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 39
[0, 2, 1, 0, 0]  	10	2 
[1, 0, 2, 0, 0]  	11	2 
[4, 0, 0, 0, 0]  	12	4  <--- 1
[3, 2, 0, 0, 0]  	15	3 
[2, 3, 0, 0, 0]  	15	5 
[1, 0, 1, 2, 0]  	17	2 
[3, 0, 0, 2, 0]  	19	3 
[2, 1, 0, 2, 0]  	19	5 
[1, 4, 0, 1, 0]  	20	4 
[2, 0, 0, 3, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	2 
[0, 1, 5, 0, 0]  	23	3 
[1, 7, 0, 0, 0]  	24	4 
[1, 2, 0, 3, 0]  	24	4 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 6, 0, 2, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[1, 5, 0, 0, 1]  	18	5 
[0, 5, 0, 1, 1]  	20	4 
[1, 3, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	4 
[1, 1, 0, 3, 253]  	21	5 
[2, 2, 0, 0, 254]  	12	3 
[2, 0, 0, 2, 254]  	16	3 
[1, 0, 0, 3, 255]  	18	3 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 252.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[14368739075837417394 + 15649583931930809864*2^64 + 3911764362735014917*2^128 + 879632378*2^192,2382890545944031624 + 7238453989282614247*2^64 + 816507409474784317*2^128 + 1022840536*2^192,13769823800698517694 + 4031148795922091157*2^64 + 12978928468675584665*2^128 + 179554568*2^192,15718201384351570470 + 7129998239643551205*2^64 + 10636978250357278984*2^128 + 830512003*2^192,3641395002024518096 + 13724658557296112495*2^64 + 11782664304583626544*2^128 + 559238533*2^192,5880418223097218744 + 5841188419267235772*2^64 + 5484102127653315919*2^128 + 675149872*2^192,8075341320512392482 + 1620683859008402057*2^64 + 13377798509246151554*2^128 + 60083593*2^192,9208610940604001968 + 8710169840284162923*2^64 + 2298911314384200663*2^128 + 477505703*2^192;\
6649640547804347171 + 1240194737619572849*2^64 + 5261983848196050882*2^128 + 375476418*2^192,8979142624912384662 + 11781024468589312437*2^64 + 6925956997838826814*2^128 + 24462094*2^192,13815475446748098247 + 2007650338067681552*2^64 + 8978346152910089910*2^128 + 59245404*2^192,11075285681745905667 + 11875254319635779555*2^64 + 2912904655569167225*2^128 + 148501798*2^192,2491209004108497936 + 6312757282104404432*2^64 + 17324049342723061894*2^128 + 4322252*2^192,1462083617984489294 + 1909322135381684560*2^64 + 2549178128585094074*2^128 + 508661345*2^192,323877518628338829 + 15655193932250364343*2^64 + 602166630335069824*2^128 + 412976808*2^192,2202674648984532868 + 3155686431170557422*2^64 + 15610996812320127997*2^128 + 477514880*2^192;\
13055158223510392374 + 10984108170689020158*2^64 + 1505727623637690646*2^128 + 981926360*2^192,8112765737072855870 + 15002864858647888057*2^64 + 8224459928927647830*2^128 + 780334020*2^192,18010414531176264251 + 2236039042549001026*2^64 + 8728171926561004070*2^128 + 25915214*2^192,9123089311621686237 + 13210537199489961190*2^64 + 301447211053053957*2^128 + 568769052*2^192,9715340851246253382 + 16040568702220704893*2^64 + 7267262971618307660*2^128 + 922240875*2^192,1203410184373453414 + 18159320519629033391*2^64 + 13010551113950305508*2^128 + 38524241*2^192,8476923709024923355 + 17676068737553286577*2^64 + 13177423157842173895*2^128 + 892939119*2^192,17351905054195405480 + 891133660910800316*2^64 + 5545677553259031694*2^128 + 282991730*2^192;\
11731606778399062954 + 5291620743691045288*2^64 + 8656844620489150321*2^128 + 133619125*2^192,8921176265680674716 + 5801701221519873785*2^64 + 12297888916229890517*2^128 + 353187903*2^192,13628465733554859150 + 8210864501497064383*2^64 + 7352355087073383374*2^128 + 177778906*2^192,852238176084294038 + 13686265609866788144*2^64 + 7565966652878345538*2^128 + 106426070*2^192,13080961774395647768 + 4061397661338662151*2^64 + 7588892826837631429*2^128 + 411917840*2^192,17183989255814829268 + 12549459877072746767*2^64 + 17785295593738394770*2^128 + 337302999*2^192,2425519369939399974 + 17107924092635809569*2^64 + 1540063155921606441*2^128 + 240228057*2^192,13293593851923712308 + 8164422497277811108*2^64 + 3888917535896409013*2^128 + 428170067*2^192;\
15819786099895236750 + 10534527534148819126*2^64 + 13709725059708104386*2^128 + 189440836*2^192,7493532005337503544 + 3023631003861473892*2^64 + 907576656598035734*2^128 + 961646129*2^192,3474055159136588264 + 9256115119280730652*2^64 + 2562031438462666710*2^128 + 1067592034*2^192,9277951238708474358 + 7323105004706577723*2^64 + 3718857428607548807*2^128 + 821606941*2^192,12115296784072226354 + 14999797061001216017*2^64 + 12678897235625296152*2^128 + 223880709*2^192,1249756942799103934 + 11445634092896823343*2^64 + 17866062967996832271*2^128 + 245654901*2^192,15658301664698393952 + 10896727801835804598*2^64 + 3251096683843662362*2^128 + 262258490*2^192,4366171687239677888 + 4671867617051343138*2^64 + 12529734184817017617*2^128 + 49649078*2^192;\
15819786099895236750 + 10534527534148819126*2^64 + 13709725059708104386*2^128 + 101360452*2^192,7493532005337503544 + 3023631003861473892*2^64 + 907576656598035734*2^128 + 705793585*2^192,3474055159136588264 + 9256115119280730652*2^64 + 2562031438462666710*2^128 + 891431266*2^192,9277951238708474358 + 7323105004706577723*2^64 + 3718857428607548807*2^128 + 1018739229*2^192,9552621499426190896 + 4467034539749420602*2^64 + 18134907519347127229*2^128 + 443078861*2^192,3812432227445139392 + 3531652540439067142*2^64 + 12410052684275001195*2^128 + 231977645*2^192,15658301664698393952 + 10896727801835804598*2^64 + 3251096683843662362*2^128 + 77709114*2^192,4366171687239677888 + 4671867617051343138*2^64 + 12529734184817017617*2^128 + 804623798*2^192;\
14465272856696974391 + 7740781662504035828*2^64 + 1824399960262114054*2^128 + 983586304*2^192,13176525474731620832 + 13946938475733299284*2^64 + 7262913063265996268*2^128 + 661448420*2^192,15451935413983018911 + 6643707030253972460*2^64 + 9045451262744225619*2^128 + 366735500*2^192,8649982801165525607 + 18387862300227219473*2^64 + 6631937503059091204*2^128 + 1051695294*2^192,9879484842401093810 + 12545918608102756658*2^64 + 4197749344305804308*2^128 + 620912897*2^192,1831298696676174676 + 11266087590222161114*2^64 + 1172300668510079283*2^128 + 484623473*2^192,7030009185932271323 + 17836799593195237569*2^64 + 9188399957411569103*2^128 + 581164561*2^192,16257343298482919244 + 8439425208034702998*2^64 + 14690086629467646873*2^128 + 1014872008*2^192;\
8456731991042687596 + 13241417797086162020*2^64 + 11446751417766094153*2^128 + 442815038*2^192,15407153006046407822 + 13973749396397534371*2^64 + 7590897213088086589*2^128 + 49417643*2^192,8641324974379539571 + 7492558625465611114*2^64 + 15676169924942321126*2^128 + 145241144*2^192,10804783457212164851 + 15643188846931176301*2^64 + 5993418369265524369*2^128 + 599532569*2^192,11475885208279652930 + 6020171824134997051*2^64 + 537029047885417762*2^128 + 1033874378*2^192,13316407426972992804 + 18221419982493694089*2^64 + 6614035627034330584*2^128 + 217920001*2^192,11496460437865386107 + 9338563160961527798*2^64 + 15000508939089159485*2^128 + 775584494*2^192,13446574747756043548 + 2174251589743160610*2^64 + 7275490796900092310*2^128 + 835852445*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 4373 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - 2*x^7 + 4*x^5 - 16*x^3 + 128*x - 256
Its Newton polygon is: [4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 - 2*x^5 + 4*x^4 - 4*x^3 + 16*x^2 - 32*x + 64, 1]
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 36

Please input coefficients below.
The polynomial is: 1*x^4*y^1 + 1*x^3*y^2 + 1*x^1*y^4 + 1*x^1*z^3 + 1*y^2*z^1*w^1 + 1*w^3
Total 493: 1 
Look at the ideal generated by: 
1*x^1
1*w^1
