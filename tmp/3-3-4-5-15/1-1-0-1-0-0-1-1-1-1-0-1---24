/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 58
[1, 1, 1, 0, 0]  	10	3 
[1, 1, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[1, 0, 3, 0, 0]  	15	2 
[3, 0, 1, 1, 0]  	18	7 
[0, 2, 3, 0, 0]  	18	3 
[3, 0, 0, 2, 0]  	19	7 
[2, 0, 1, 2, 0]  	20	6 
[2, 0, 0, 3, 0]  	21	6 
[1, 6, 0, 0, 0]  	21	6 
[1, 0, 0, 4, 0]  	23	5 
[0, 1, 5, 0, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 7, 1, 0, 0]  	25	3 
[0, 4, 2, 1, 0]  	25	2 
[0, 1, 3, 2, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 7, 0, 1, 0]  	26	3 
[0, 4, 1, 2, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 6, 0, 2, 0]  	28	1 
[0, 3, 1, 3, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 3, 0, 4, 0]  	29	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 5, 0, 1, 1]  	20	5 
[0, 4, 2, 0, 1]  	20	4 
[0, 2, 1, 2, 1]  	20	4 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[0, 2, 0, 4, 1]  	26	2 
[3, 1, 0, 0, 2]  	12	7 
[2, 0, 0, 2, 2]  	16	6 
[3, 0, 2, 0, 2]  	17	6 
[2, 0, 2, 1, 2]  	19	6 
[1, 0, 2, 2, 2]  	21	6 
[1, 0, 1, 3, 2]  	22	5 
[0, 5, 1, 0, 4]  	19	5 
[0, 3, 0, 2, 252]  	19	3 
[0, 3, 2, 1, 252]  	22	3 
[2, 2, 0, 0, 254]  	12	6 
[0, 0, 5, 0, 254]  	20	1 
[0, 0, 3, 2, 254]  	22	1 
[0, 0, 2, 3, 254]  	23	1 
[0, 0, 0, 5, 254]  	25	1 
[0, 4, 1, 0, 255]  	16	3 
[0, 1, 2, 1, 255]  	16	2 
[0, 4, 0, 1, 255]  	17	3 
[0, 1, 1, 2, 255]  	17	2 
[0, 1, 4, 0, 255]  	19	1 
[0, 1, 0, 4, 255]  	23	1 
------
The gap is between 5 and 251.
Lengths: 1 1 6 6 1 3.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[12625521357558772664 + 12604781907733514276*2^64 + 17758266488246810777*2^128 + 1463139384*2^192,9168175674777523632 + 8253808495551841406*2^64 + 11594354070481372082*2^128 + 701434456*2^192,14095108064897511336 + 10653616384638837186*2^64 + 3089040903044496778*2^128 + 688343679*2^192,7855382262475814746 + 11556519460566072054*2^64 + 2972310371319320335*2^128 + 378874731*2^192,14498424597694852462 + 9535421586413084784*2^64 + 3920395151085528375*2^128 + 2049060815*2^192,13699010022203477596 + 5921768042997182297*2^64 + 5664008157182329147*2^128 + 1487458042*2^192,1524023920118415772 + 10843551907382024223*2^64 + 1005849505705605902*2^128 + 1264357881*2^192,13457493668462942552 + 12280031304822575346*2^64 + 9345379268545636641*2^128 + 1401516343*2^192;\
5629655842949284470 + 16443042551739816996*2^64 + 14561274808201039554*2^128 + 1272737484*2^192,6163856430646066800 + 16359147164665714855*2^64 + 8168226332909655144*2^128 + 2112351305*2^192,292147896369658092 + 3170075514994836021*2^64 + 16427047679325780199*2^128 + 1646361397*2^192,11264091660659039876 + 985177696188518685*2^64 + 15350990475482364798*2^128 + 450758884*2^192,17425213938310672088 + 10022771223047497318*2^64 + 4440729588664892012*2^128 + 1931252748*2^192,7882571172433562136 + 1626175657373976046*2^64 + 15957604302037264279*2^128 + 2099607343*2^192,6040560982891864848 + 16047125179389007009*2^64 + 13237837182521252132*2^128 + 504579980*2^192,11837973681020461408 + 10805987407662663988*2^64 + 17425968563442357330*2^128 + 489395208*2^192;\
2919172266968987464 + 562992151753543508*2^64 + 9506611321895277545*2^128 + 631150631*2^192,4934516156341857464 + 7754611657307584513*2^64 + 6263999085382234335*2^128 + 1133928749*2^192,16338768728566522272 + 9129378969589029515*2^64 + 14294662075978856892*2^128 + 144982102*2^192,9899173410439308408 + 15911294832738343091*2^64 + 1236417947400050311*2^128 + 1289967449*2^192,5006660484097665944 + 3571744747210751643*2^64 + 5052063652096339952*2^128 + 1859732768*2^192,14367339990679640944 + 14769520074836200663*2^64 + 4373380511708762876*2^128 + 1596054617*2^192,509322383762675368 + 1295491454062150458*2^64 + 14969538530434010817*2^128 + 2048639828*2^192,5733896784101329824 + 5716711838450188917*2^64 + 17869675141685507056*2^128 + 1110339412*2^192;\
12114902518719923862 + 9361009154673986261*2^64 + 4383658336816380931*2^128 + 647979398*2^192,16844084228264619360 + 2787176072211422815*2^64 + 6524968681068118017*2^128 + 815880083*2^192,13124275249060209320 + 15311995841080153005*2^64 + 10881630608857193403*2^128 + 793324374*2^192,9162299842716088107 + 10489515303429434597*2^64 + 39176308616469377*2^128 + 2036680597*2^192,400686521084520513 + 18430856383580550963*2^64 + 5450341052408555533*2^128 + 1887363120*2^192,17211282334204401458 + 3444625221800806915*2^64 + 17396619883298452198*2^128 + 1979546509*2^192,11925840222837744174 + 10522881491968872218*2^64 + 3183768952566206865*2^128 + 397462125*2^192,6661678398448035316 + 4783799137692736370*2^64 + 15910663656260961074*2^128 + 1188030094*2^192;\
1637493101546997556 + 7054751833506899159*2^64 + 18087567355257953624*2^128 + 700442291*2^192,4874399170109216224 + 16801269490246794662*2^64 + 832770090007234623*2^128 + 1644210570*2^192,913704839297125136 + 7165994830140756795*2^64 + 14341802936952473132*2^128 + 773510187*2^192,5080381701448577795 + 3966149836769344308*2^64 + 9324397778069310396*2^128 + 1461937299*2^192,14752884599455594805 + 7217168328741893513*2^64 + 9991625709491701351*2^128 + 1224930659*2^192,10081447868393023018 + 5792155945389620965*2^64 + 12782952535413028231*2^128 + 1078968397*2^192,4326834345652695398 + 14157621398821403974*2^64 + 8536813282669992250*2^128 + 205466850*2^192,9737457504980314492 + 2077584082389653755*2^64 + 15495932165833004608*2^128 + 1250587288*2^192;\
14680131074477322770 + 3117449110538879390*2^64 + 3039405155829555081*2^128 + 903075973*2^192,5884847705246576136 + 7750248366101536737*2^64 + 8728091266340613783*2^128 + 2106490410*2^192,5973837681768439308 + 9282360417099358493*2^64 + 17011562412955805461*2^128 + 1765356286*2^192,11550247393504685054 + 11229120027258255809*2^64 + 4820286207307861756*2^128 + 1401013311*2^192,17513321491258372814 + 18174747766959107105*2^64 + 3257456593092300762*2^128 + 298253538*2^192,17885216069264306248 + 8762541077353552614*2^64 + 8973314500251474543*2^128 + 1842674317*2^192,10646965606805704140 + 8417304880733262503*2^64 + 5989273100043623754*2^128 + 1067424213*2^192,6115699070453420272 + 12182544766142014809*2^64 + 6692629422120183700*2^128 + 830007214*2^192;\
8523396940561810920 + 3681612697052927927*2^64 + 870063694177782841*2^128 + 450387531*2^192,11936848300515799172 + 70512197812514619*2^64 + 2126947337619092514*2^128 + 2109365946*2^192,8119266317674968664 + 2228551740051217919*2^64 + 3312290230156775978*2^128 + 1007803342*2^192,1963470931485024711 + 42289035060407108*2^64 + 4272910497319631970*2^128 + 2053670778*2^192,9203112473761632049 + 13507241524424985439*2^64 + 12811279591239540043*2^128 + 1183348055*2^192,15404840481384087790 + 11475592223539492488*2^64 + 2063566806186659438*2^128 + 269720155*2^192,5076635886974985390 + 3798340676310503969*2^64 + 2485715955181502625*2^128 + 304915865*2^192,84905616183810532 + 4335311286427776040*2^64 + 7511057497943717868*2^128 + 1935215834*2^192;\
4618445369595044948 + 9459589680284401676*2^64 + 1289963245084077874*2^128 + 209886579*2^192,6172109261592061784 + 6950749669892038702*2^64 + 15598001930918738011*2^128 + 927257425*2^192,9337826412850680712 + 8928247054738772584*2^64 + 8921633659749856702*2^128 + 863766414*2^192,1395410417422473350 + 9925519556745453868*2^64 + 3140608466052652730*2^128 + 472138751*2^192,4441889226509717538 + 2231235519890373971*2^64 + 4975664161094614331*2^128 + 1133048807*2^192,11898792447057261980 + 9195629571118941185*2^64 + 17508927263040145882*2^128 + 1865090794*2^192,14221043224068953884 + 2130231073783880612*2^64 + 15037650107753833398*2^128 + 1847348836*2^192,8363704546553226976 + 3673596859367326035*2^64 + 14746111163185452298*2^128 + 940471162*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 5219 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 4*x^5 - 8*x^4 - 16*x^3 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 2*x^4 + 4*x^3 - 8*x^2 - 16*x + 64, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 31
