/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 60
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	7  <--- 1
[3, 2, 0, 0, 0]  	15	7 
[2, 3, 0, 0, 0]  	15	7 
[0, 1, 3, 0, 0]  	15	2 
[1, 4, 1, 0, 0]  	19	7 
[1, 2, 0, 2, 0]  	19	6 
[1, 4, 0, 1, 0]  	20	6 
[1, 3, 2, 0, 0]  	20	5 
[0, 5, 0, 1, 0]  	20	4 
[0, 4, 2, 0, 0]  	20	4 
[1, 6, 0, 0, 0]  	21	8 
[0, 6, 1, 0, 0]  	22	4 
[0, 4, 0, 2, 0]  	22	4 
[1, 0, 5, 0, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	4  <--- 2
[0, 3, 0, 3, 0]  	24	4 
[1, 0, 3, 2, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[1, 0, 2, 3, 0]  	26	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[1, 0, 0, 5, 0]  	28	1 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[3, 1, 0, 0, 1]  	12	7 
[1, 3, 1, 0, 1]  	16	7 
[1, 3, 0, 1, 1]  	17	7 
[1, 1, 2, 1, 1]  	19	5 
[1, 1, 1, 2, 1]  	20	4 
[1, 0, 3, 1, 1]  	20	4 
[1, 0, 2, 2, 1]  	21	6 
[1, 0, 1, 3, 1]  	22	4 
[1, 0, 0, 4, 1]  	23	3 
[1, 0, 4, 0, 2]  	19	5 
[1, 1, 0, 3, 2]  	21	6 
[1, 1, 0, 2, 3]  	16	6 
[1, 2, 2, 0, 3]  	17	6 
[1, 5, 0, 0, 6]  	18	6 
[1, 2, 1, 1, 252]  	18	5 
[1, 0, 2, 1, 254]  	16	5 
[1, 0, 1, 2, 254]  	17	5 
[0, 6, 0, 0, 254]  	18	4 
[0, 3, 0, 2, 254]  	19	2 
[2, 2, 0, 0, 255]  	12	3 
[0, 4, 1, 0, 255]  	16	3 
[0, 2, 0, 2, 255]  	16	2 
[0, 4, 0, 1, 255]  	17	3 
[0, 3, 2, 0, 255]  	17	2 
[0, 0, 5, 0, 255]  	20	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 7 and 251.
Lengths: 1 1 6 6 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4546360951496741294 + 6579047119648837344*2^64 + 7265192569851560400*2^128 + 1463272958*2^192,14243664322932290260 + 14593719898797131116*2^64 + 7087041002057226602*2^128 + 1738135649*2^192,15776082316046045228 + 13626946669707676174*2^64 + 3516323334509655724*2^128 + 1051298095*2^192,9673954199223022028 + 7444016157568305590*2^64 + 15304709430325283475*2^128 + 1185325608*2^192,1608590493853272176 + 11446340285754255939*2^64 + 1377685362615449542*2^128 + 1692669394*2^192,5425469412677598684 + 17479712045081504662*2^64 + 15593185620704974008*2^128 + 1501190084*2^192,16478633398439269484 + 12301794340521200046*2^64 + 16435276546651688478*2^128 + 1465284510*2^192,2254193676395539872 + 6465464839695757847*2^64 + 16645750203624659988*2^128 + 520765282*2^192;\
9694240945955755216 + 6732866836988830207*2^64 + 6777142809489960453*2^128 + 148287573*2^192,3919199001365865528 + 13951104653664967035*2^64 + 16147299773096633434*2^128 + 395716186*2^192,4427145444594686960 + 12092658187809649707*2^64 + 2185176970459015851*2^128 + 1432324096*2^192,2187439711782635772 + 10353531507250626450*2^64 + 6410786453268856791*2^128 + 872331900*2^192,4364344336477119564 + 7399892095950229978*2^64 + 1346762822000833590*2^128 + 140020371*2^192,13657768500699013500 + 1489525220764387648*2^64 + 846942433921749766*2^128 + 1501489725*2^192,4053551396896623864 + 7452219586918102983*2^64 + 10532987061609986974*2^128 + 1143830640*2^192,6298391746651856064 + 9088659505753788570*2^64 + 15577463339363417590*2^128 + 564739040*2^192;\
11938396443461428876 + 9098658068785645501*2^64 + 611854965875749081*2^128 + 2072800110*2^192,3936257113411270408 + 2924633124575864508*2^64 + 10011861536416271112*2^128 + 745521200*2^192,15896237963843852080 + 15191847761575942017*2^64 + 6250060865406203574*2^128 + 1513227553*2^192,13851007519848753192 + 15052999550634974242*2^64 + 15879187087971299551*2^128 + 1243524494*2^192,7283641585317216680 + 13613912485361394280*2^64 + 15118614044808679889*2^128 + 177690283*2^192,1352295162209884160 + 17531692109298659172*2^64 + 6761473191127169722*2^128 + 526936131*2^192,9877025155410052632 + 15110137697433354450*2^64 + 13425361887993764602*2^128 + 1922459195*2^192,11054311763530349064 + 15550546218473076880*2^64 + 15046788462566032136*2^128 + 24371862*2^192;\
5719734010467885876 + 18130929343570912491*2^64 + 14073051743767763345*2^128 + 599611135*2^192,5173309574150829252 + 16433136797465530232*2^64 + 14919738331837241389*2^128 + 415287726*2^192,12671628991678430852 + 9915678930268390133*2^64 + 4622426373298230420*2^128 + 2072048628*2^192,1552657999175274960 + 18267449829860590216*2^64 + 584048779322178854*2^128 + 2050608368*2^192,2717397245357801516 + 16884798511030440863*2^64 + 1067968530517977665*2^128 + 485418266*2^192,6924696402100361996 + 7906782980354705604*2^64 + 12962083051879535817*2^128 + 486437858*2^192,6654499854198941412 + 16211771181182010046*2^64 + 15486638110124676710*2^128 + 888097024*2^192,16434983725358290760 + 3797279731087646710*2^64 + 15887751998336304773*2^128 + 713464985*2^192;\
18396530310341596855 + 6788846516886923904*2^64 + 10153847795904927669*2^128 + 21112015*2^192,2281827772784419902 + 15153603589369027409*2^64 + 14624426204519514133*2^128 + 1471702426*2^192,15536289493517238102 + 18415694170133648620*2^64 + 7692890531639743853*2^128 + 722244491*2^192,12237518710280069614 + 4626783775672441726*2^64 + 10093677323699040453*2^128 + 148654684*2^192,8586617173746318864 + 15276086847766845201*2^64 + 10818460845485530167*2^128 + 1093753264*2^192,15688743288868998826 + 10594428698663306772*2^64 + 9340672785090240495*2^128 + 497812725*2^192,11816392227945831434 + 3899281937126572445*2^64 + 15827999351678987036*2^128 + 1243783890*2^192,3887557161377240552 + 17701153445343151171*2^64 + 11021937185379857066*2^128 + 91931692*2^192;\
13349141089025934849 + 7870148388638391909*2^64 + 523778528829015873*2^128 + 2141983219*2^192,8524255176089654430 + 5387017979224234119*2^64 + 6758539507634301156*2^128 + 582034761*2^192,54983043813499626 + 5859718789200811705*2^64 + 11150850996383671661*2^128 + 31736035*2^192,15377224159411836214 + 1126199712444668955*2^64 + 2689073015630523517*2^128 + 95079406*2^192,12079466946350857324 + 4667307558212997541*2^64 + 15419741018323785677*2^128 + 1460674765*2^192,3374004705703794522 + 2548069905994076053*2^64 + 9631355936033539595*2^128 + 1401922916*2^192,7480045491591988038 + 675535586999583788*2^64 + 16713488251029197647*2^128 + 1422855969*2^192,11909329019145503104 + 148794130736739440*2^64 + 14595532305149492268*2^128 + 1048370831*2^192;\
4633997739437744956 + 11745884137627935085*2^64 + 5801010513435352396*2^128 + 820972093*2^192,16683813734008111080 + 4747094215573355851*2^64 + 12466837285161878131*2^128 + 780280344*2^192,12394532518893968552 + 6213726355531873740*2^64 + 16080389069445434271*2^128 + 2123494930*2^192,4220169815425051220 + 11424973155219816597*2^64 + 12378577605580873042*2^128 + 413385918*2^192,3809043242594415332 + 1197532635889682107*2^64 + 3442747182328517449*2^128 + 261794303*2^192,9351168730920589188 + 12309179888160783490*2^64 + 2652625279312990400*2^128 + 587866091*2^192,8494230457419744916 + 13720278338197351839*2^64 + 3825374227608460329*2^128 + 635611335*2^192,16556308057445243744 + 11655001042125463308*2^64 + 5519179597809300615*2^128 + 1478540682*2^192;\
15686330236330332830 + 10704147061304002976*2^64 + 11637257487205020469*2^128 + 1860044286*2^192,3483651024914087468 + 5390239792883614974*2^64 + 5264206768186414094*2^128 + 1564221456*2^192,7742125440289645160 + 16618100943325855862*2^64 + 7722082959210138978*2^128 + 175980395*2^192,1777363798915019608 + 9646890930141056354*2^64 + 4155205691383678941*2^128 + 949323766*2^192,14688162768564522188 + 851342740116352848*2^64 + 17230174733985498341*2^128 + 2057728675*2^192,14521348836547800344 + 7819144828146208813*2^64 + 8178875622126418287*2^128 + 899648190*2^192,12024554663493478416 + 3622953963762722667*2^64 + 11687679179454400733*2^128 + 761366669*2^192,17743005267247170840 + 5352461153780063461*2^64 + 7711995952421220560*2^128 + 1266961380*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4687 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + 2*x^7 + 2*x^6 - 8*x^4 + 32*x^2 + 128*x + 256
Its Newton polygon is: [3/2, 3/2, 1, 1, 1, 1, 1/2, 1/2]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - 2*x^4 + 4*x^3 - 8*x^2 + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 33
