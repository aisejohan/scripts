/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^5                     = Coefficient of   x^4 * y^1               = Coefficient of   x^3 * y^2               = Coefficient of   x^2 * y^3               = Coefficient of   x^2 * z^1 * w^1         = Coefficient of   x^1 * y^4               = Coefficient of   x^1 * y^1 * z^1 * w^1   = Coefficient of   x^1 * z^3               = Coefficient of   y^5                     = Coefficient of   y^2 * z^1 * w^1         = Coefficient of   y^1 * z^3               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 47
[2, 0, 1, 0, 0]  	10	3 
[2, 0, 0, 1, 0]  	11	3 
[4, 0, 0, 0, 0]  	12	5  <--- 1
[1, 4, 0, 0, 0]  	15	4 
[0, 1, 3, 0, 0]  	15	2 
[1, 3, 1, 0, 0]  	16	5 
[1, 3, 0, 1, 0]  	17	7 
[1, 2, 0, 2, 0]  	19	4 
[1, 1, 2, 1, 0]  	19	4 
[1, 0, 4, 0, 0]  	19	5 
[1, 1, 1, 2, 0]  	20	5 
[1, 0, 3, 1, 0]  	20	5 
[1, 0, 2, 2, 0]  	21	6 
[1, 0, 1, 3, 0]  	22	5 
[1, 0, 0, 4, 0]  	23	4 
[0, 6, 0, 1, 0]  	23	3 
[0, 3, 1, 2, 0]  	23	3 
[0, 8, 0, 0, 0]  	24	5  <--- 2
[0, 7, 1, 0, 0]  	25	2 
[0, 4, 2, 1, 0]  	25	2 
[0, 2, 1, 3, 0]  	25	2 
[0, 0, 5, 1, 0]  	25	2 
[0, 2, 0, 4, 0]  	26	2 
[0, 1, 2, 3, 0]  	26	2 
[0, 1, 0, 5, 0]  	28	1 
[0, 0, 7, 0, 0]  	28	1  <--- 3
[0, 0, 2, 4, 0]  	28	1 
[0, 0, 1, 5, 0]  	29	1 
[0, 0, 4, 3, 0]  	31	1 
[0, 0, 0, 7, 0]  	35	1  <--- 4
[0, 5, 0, 1, 1]  	20	4 
[0, 4, 2, 0, 1]  	20	4 
[1, 1, 0, 3, 1]  	21	6 
[0, 6, 1, 0, 1]  	22	4 
[0, 4, 0, 2, 1]  	22	4 
[0, 3, 0, 3, 1]  	24	4 
[3, 1, 0, 0, 2]  	12	5 
[1, 1, 0, 2, 2]  	16	5 
[1, 2, 2, 0, 2]  	17	5 
[1, 0, 1, 1, 254]  	12	4 
[0, 2, 1, 2, 255]  	20	1 
[0, 0, 5, 0, 255]  	20	1 
[0, 7, 0, 0, 255]  	21	2 
[0, 3, 2, 1, 255]  	22	1 
[0, 0, 3, 2, 255]  	22	1 
[0, 0, 2, 3, 255]  	23	1 
[0, 0, 0, 5, 255]  	25	1 
------
The gap is between 3 and 253.
Lengths: 1 1 6 7 1 2.
For 30 = 3*d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*w^6

For 15 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^3

For 0 = d-d1-d2-d3-d4 you get 1 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[3180935495794912338 + 10965345142138590657*2^64 + 2797509961589921260*2^128 + 610802150*2^192,4102639780400750808 + 4237945936277327993*2^64 + 8863946047897285748*2^128 + 396662261*2^192,364403934071331720 + 9086860755499150490*2^64 + 6000821529266630461*2^128 + 1485530859*2^192,16984150010628508312 + 1107798428305206519*2^64 + 8108707470004396635*2^128 + 826696519*2^192,10432073926858481088 + 15172552065241851265*2^64 + 8763648245622474928*2^128 + 1599812234*2^192,17790760336912175112 + 3947406281995506590*2^64 + 11795336750429284887*2^128 + 164663444*2^192,6841475488341941112 + 2207603979420975658*2^64 + 982311071137258428*2^128 + 2058438456*2^192,6603678457390753848 + 2927581255170590438*2^64 + 3491460656528400990*2^128 + 2040647002*2^192;\
385826291041528843 + 6650341691827439859*2^64 + 4822701824476013928*2^128 + 1049760108*2^192,7567805771010800540 + 2528374433836980974*2^64 + 6846838288282200560*2^128 + 395621439*2^192,11977122475253964780 + 4996693359930026251*2^64 + 16986918548596628821*2^128 + 921082453*2^192,15165526512504258928 + 12682217118120346405*2^64 + 13135358166577680889*2^128 + 272950959*2^192,8527257626708410764 + 4648570465049964956*2^64 + 14263502646547257*2^128 + 121638767*2^192,7930270727726501308 + 7147811689860368493*2^64 + 15017526956351698787*2^128 + 116665803*2^192,6408544436619186432 + 15787468230412377823*2^64 + 2670166701187959162*2^128 + 1023362886*2^192,3557938320814242028 + 1347737343329727051*2^64 + 2736985174796033435*2^128 + 824680883*2^192;\
15485830970736655506 + 18380151583541251105*2^64 + 8074469241551553441*2^128 + 1178821992*2^192,11713163121988473787 + 15014676938227190310*2^64 + 13931427173959857282*2^128 + 812694512*2^192,3613882913883514724 + 1013988822264961457*2^64 + 5266715220440234100*2^128 + 1935348496*2^192,2193049871658369865 + 7919933168072984830*2^64 + 435841684999116632*2^128 + 683643836*2^192,17297713788435613223 + 16578205625897601400*2^64 + 4727735117288467584*2^128 + 279791197*2^192,12049610342238195509 + 2036957896269826961*2^64 + 5431492637094898614*2^128 + 276667579*2^192,8137131495896855512 + 7637862928876961905*2^64 + 16482019985426678282*2^128 + 1603347378*2^192,2188895977226644222 + 17121720342027100665*2^64 + 10933866874388210132*2^128 + 1423440683*2^192;\
15104123261396098541 + 599367891070127957*2^64 + 7422572211810788726*2^128 + 536718708*2^192,3909457224088211700 + 15176574326622570958*2^64 + 2592537679408527505*2^128 + 1159788486*2^192,14933538529773815540 + 826584885947752904*2^64 + 8011736779620527775*2^128 + 719377383*2^192,10023842744302503108 + 9533494954914340089*2^64 + 6319195311189323847*2^128 + 502240693*2^192,1541703575972157628 + 14849637844915925864*2^64 + 11705989662017943677*2^128 + 518981665*2^192,17982151225204426900 + 12439304222252526970*2^64 + 12598133802386716288*2^128 + 1685747524*2^192,18188438804807639040 + 12369851022626270828*2^64 + 8669379925762487955*2^128 + 127176011*2^192,15162859531279094780 + 15907558297514774829*2^64 + 6648874126595259761*2^128 + 2070031127*2^192;\
7135765933533748655 + 8202520083574763270*2^64 + 7156042345874841305*2^128 + 659864070*2^192,16176937570444102245 + 18131391592794874405*2^64 + 17762716910718146563*2^128 + 541596491*2^192,6442691675796502472 + 5477020205023919560*2^64 + 7268617227060095701*2^128 + 1491874316*2^192,12939144168610821283 + 11781972962192050190*2^64 + 11736049420372171152*2^128 + 767770036*2^192,6555018223138768073 + 12433578660497025287*2^64 + 10108735736590637088*2^128 + 1998460533*2^192,3475620693159331371 + 11515777931078243452*2^64 + 5346051344592441204*2^128 + 1072757222*2^192,3927614972731898264 + 12918208432865746866*2^64 + 18419909419336079468*2^128 + 362180242*2^192,3140426953195686430 + 15908881277800681283*2^64 + 13268443556554946505*2^128 + 1245488213*2^192;\
13996668403787116643 + 17114290758448787464*2^64 + 12882913541759771274*2^128 + 647415243*2^192,6322452522084725395 + 6730313519176396854*2^64 + 7681317728869751644*2^128 + 169384679*2^192,11012823511549344072 + 15273744631111023819*2^64 + 9858677685813457561*2^128 + 704727780*2^192,5112609555237228633 + 9180545844132545686*2^64 + 11147846084315500322*2^128 + 711716242*2^192,9796246135768314747 + 2968064595308850819*2^64 + 12556686625354546817*2^128 + 866690404*2^192,16649232702294295561 + 4012115821985594508*2^64 + 7226466044895191074*2^128 + 349528397*2^192,2500218399033263080 + 10553290675492519587*2^64 + 15853746297715560702*2^128 + 434063788*2^192,12453004233400382434 + 17669393536889699116*2^64 + 10949061502164868174*2^128 + 360065185*2^192;\
7713157193776366287 + 18205597600402712242*2^64 + 4256451527412623688*2^128 + 1864455789*2^192,11325760676191545101 + 13153734908336110509*2^64 + 7581694871408770973*2^128 + 479721728*2^192,12229794884092908028 + 12850386701918715471*2^64 + 7249400570982111882*2^128 + 1607597138*2^192,8107157889376940659 + 921592276504566271*2^64 + 9299556624615729075*2^128 + 158805594*2^192,13320358933438823057 + 5503655180331909182*2^64 + 6441679622011769120*2^128 + 984345090*2^192,10254968013237502311 + 11450637630566579074*2^64 + 12968524969531245107*2^128 + 342538100*2^192,15959113654958906888 + 16752713216979410550*2^64 + 10817174040063242756*2^128 + 1965705276*2^192,13966798536227778262 + 5055598454535117239*2^64 + 14629061518998073646*2^128 + 1550153114*2^192;\
14362134647486342672 + 1828719417446255806*2^64 + 1635981955433953040*2^128 + 1498783004*2^192,12639906590072374499 + 9146814985717648026*2^64 + 14638818595721380533*2^128 + 1275465010*2^192,4985055869480771716 + 15291709557718132165*2^64 + 8940718961082944413*2^128 + 63371967*2^192,11272339399718532241 + 6605072602427629628*2^64 + 14580809291691975019*2^128 + 208648256*2^192,2798049925585783335 + 3148331121248264527*2^64 + 10688455381020952492*2^128 + 2059518398*2^192,8563675815826511317 + 15022479792482950550*2^64 + 11077047884760512486*2^128 + 1574865222*2^192,13854344715151509656 + 14529377377065580621*2^64 + 3754714803410355807*2^128 + 872220082*2^192,1374627469493880078 + 17788922541733530564*2^64 + 1490393458878271098*2^128 + 536434087*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4687 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: Mat([x^8 + x^7 - 2*x^6 - 4*x^5 + 8*x^4 - 16*x^3 - 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 33
The valuation of subst(g,x,A) is: 33
