/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^14                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^7               = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^14 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 214
[4, 2, 1, 0, 0]  	71	3 
[6, 3, 0, 0, 0]  	81	5 
[14, 0, 0, 0, 0]  	98	2  <--- 1
[1, 7, 0, 0, 0]  	98	2 
[0, 1, 5, 0, 0]  	98	2 
[12, 2, 0, 1, 0]  	137	5 
[1, 6, 0, 2, 0]  	139	2 
[5, 0, 5, 1, 0]  	147	9 
[11, 0, 1, 2, 0]  	148	4 
[9, 0, 5, 0, 0]  	148	7 
[6, 1, 4, 1, 0]  	150	4 
[12, 1, 0, 2, 0]  	151	5 
[1, 6, 4, 0, 0]  	153	3 
[10, 1, 1, 2, 0]  	154	3 
[6, 1, 0, 4, 0]  	163	4 
[12, 1, 4, 0, 0]  	165	4 
[6, 0, 1, 4, 0]  	167	3 
[3, 5, 0, 3, 0]  	167	5 
[10, 0, 1, 3, 0]  	168	3 
[3, 4, 4, 1, 0]  	168	5 
[3, 0, 9, 0, 0]  	174	6 
[2, 5, 4, 1, 0]  	174	6 
[4, 3, 0, 4, 0]  	175	5 
[2, 0, 5, 3, 0]  	180	4 
[3, 4, 0, 4, 0]  	181	5 
[2, 0, 10, 0, 0]  	184	3 
[3, 3, 1, 4, 0]  	185	4 
[2, 5, 0, 4, 0]  	187	7 
[2, 4, 4, 2, 0]  	188	5 
[2, 3, 0, 5, 0]  	188	5 
[4, 2, 0, 5, 0]  	189	6 
[2, 5, 2, 3, 0]  	194	5 
[2, 0, 9, 1, 0]  	194	4 
[1, 5, 4, 2, 0]  	194	4 
[2, 3, 2, 4, 0]  	195	5 
[3, 0, 1, 6, 0]  	200	5 
[0, 6, 4, 2, 0]  	200	2 
[0, 10, 1, 2, 0]  	201	3 
[2, 3, 4, 3, 0]  	202	4 
[2, 2, 0, 6, 0]  	202	4 
[4, 1, 0, 6, 0]  	203	6 
[10, 0, 0, 5, 0]  	205	4 
[2, 1, 1, 6, 0]  	206	3 
[1, 5, 0, 5, 0]  	207	4 
[1, 0, 7, 3, 0]  	207	4 
[1, 4, 4, 3, 0]  	208	3 
[0, 16, 0, 0, 0]  	208	3  <--- 2
[1, 4, 1, 5, 0]  	211	3 
[1, 0, 12, 0, 0]  	211	3 
[0, 11, 4, 0, 0]  	211	3 
[1, 2, 1, 6, 0]  	212	3 
[0, 15, 1, 0, 0]  	212	3 
[0, 9, 4, 1, 0]  	212	3 
[1, 0, 9, 2, 0]  	214	2 
[0, 5, 4, 3, 0]  	214	2 
[0, 4, 0, 6, 0]  	214	2 
[1, 3, 2, 5, 0]  	215	2 
[0, 9, 1, 3, 0]  	215	2 
[0, 3, 4, 4, 0]  	215	2 
[2, 1, 0, 7, 0]  	216	4 
[0, 14, 2, 0, 0]  	216	4 
[4, 0, 0, 7, 0]  	217	4 
[2, 0, 1, 7, 0]  	220	4 
[1, 0, 11, 1, 0]  	221	3 
[0, 15, 0, 1, 0]  	222	2 
[0, 13, 0, 2, 0]  	223	3 
[1, 1, 1, 7, 0]  	226	2 
[0, 14, 1, 1, 0]  	226	2 
[0, 7, 0, 5, 0]  	226	2 
[1, 0, 5, 5, 0]  	227	2 
[0, 3, 0, 7, 0]  	228	1 
[0, 8, 1, 4, 0]  	229	2 
[0, 2, 1, 7, 0]  	232	1 
[0, 3, 2, 6, 0]  	235	1 
[0, 2, 3, 6, 0]  	239	1 
[1, 0, 1, 8, 0]  	240	2 
[0, 0, 11, 2, 0]  	241	1 
[0, 2, 0, 8, 0]  	242	1 
[0, 1, 4, 6, 0]  	243	2 
[0, 1, 1, 8, 0]  	246	1 
[0, 0, 13, 1, 0]  	248	1 
[0, 1, 3, 7, 0]  	253	1 
[0, 0, 7, 5, 0]  	254	1 
[0, 0, 15, 0, 0]  	255	1  <--- 3
[0, 1, 0, 9, 0]  	256	1 
[2, 0, 0, 9, 0]  	257	2 
[0, 0, 1, 9, 0]  	260	1 
[0, 0, 9, 4, 0]  	261	1 
[0, 0, 3, 8, 0]  	267	1 
[0, 0, 0, 10, 0]  	270	1  <--- 4
[0, 0, 5, 7, 0]  	274	1 
[13, 0, 0, 0, 1]  	91	4 
[11, 2, 0, 1, 1]  	130	7 
[9, 0, 1, 2, 1]  	134	8 
[12, 1, 1, 1, 1]  	141	7 
[5, 1, 4, 1, 1]  	143	6 
[11, 1, 0, 2, 1]  	144	6 
[5, 1, 0, 4, 1]  	156	6 
[11, 1, 4, 0, 1]  	158	5 
[5, 0, 1, 4, 1]  	160	8 
[3, 0, 5, 2, 1]  	160	5 
[1, 5, 1, 3, 1]  	170	2 
[12, 0, 0, 4, 1]  	192	5 
[2, 2, 1, 5, 1]  	192	4 
[4, 1, 1, 5, 1]  	193	4 
[2, 0, 1, 6, 1]  	193	3 
[9, 0, 0, 5, 1]  	198	7 
[3, 0, 0, 7, 1]  	210	5 
[2, 2, 4, 4, 1]  	216	4 
[0, 2, 4, 5, 1]  	229	2 
[2, 1, 4, 5, 1]  	230	4 
[1, 0, 3, 7, 1]  	247	3 
[4, 1, 1, 1, 2]  	85	4 
[5, 0, 0, 4, 2]  	143	7 
[3, 1, 1, 5, 2]  	186	5 
[3, 2, 4, 3, 2]  	196	7 
[3, 1, 0, 6, 2]  	196	7 
[1, 1, 1, 6, 2]  	199	4 
[1, 0, 10, 1, 2]  	204	3 
[0, 8, 2, 3, 2]  	219	2 
[1, 0, 3, 6, 2]  	220	4 
[0, 6, 2, 5, 2]  	247	2 
[1, 0, 0, 9, 2]  	250	3 
[5, 0, 1, 3, 3]  	133	5 
[3, 0, 2, 3, 3]  	136	3 
[3, 0, 1, 4, 3]  	146	4 
[1, 0, 9, 1, 3]  	187	4 
[2, 4, 1, 4, 3]  	191	4 
[1, 2, 0, 7, 3]  	222	3 
[1, 1, 4, 5, 3]  	223	4 
[1, 1, 0, 8, 3]  	236	3 
[1, 0, 5, 4, 4]  	200	3 
[1, 2, 2, 5, 4]  	202	4 
[0, 7, 2, 4, 4]  	233	2 
[0, 5, 2, 5, 4]  	234	2 
[3, 6, 2, 1, 5]  	160	7 
[3, 4, 2, 2, 5]  	161	6 
[0, 11, 3, 1, 5]  	221	3 
[0, 9, 3, 2, 5]  	222	2 
[0, 9, 0, 4, 5]  	225	2 
[2, 0, 0, 8, 5]  	230	4 
[2, 2, 2, 4, 6]  	182	3 
[1, 4, 0, 5, 6]  	194	4 
[2, 4, 3, 3, 6]  	198	3 
[1, 3, 1, 5, 6]  	198	4 
[1, 4, 2, 4, 6]  	201	3 
[1, 3, 3, 4, 6]  	205	3 
[1, 3, 0, 6, 6]  	208	3 
[1, 2, 4, 4, 6]  	209	5 
[2, 1, 3, 5, 6]  	213	4 
[1, 0, 1, 7, 6]  	213	3 
[0, 4, 2, 5, 6]  	221	2 
[2, 0, 3, 4, 7]  	173	6 
[2, 0, 7, 2, 7]  	187	6 
[0, 13, 3, 0, 7]  	220	3 
[0, 12, 0, 3, 7]  	237	3 
[1, 1, 0, 7, 8]  	209	4 
[0, 12, 3, 0, 9]  	207	3 
[0, 11, 0, 3, 9]  	224	3 
[2, 3, 3, 3, 10]  	185	5 
[1, 3, 4, 3, 11]  	195	5 
[0, 10, 4, 0, 243]  	198	3 
[0, 0, 13, 0, 244]  	221	1 
[0, 15, 0, 0, 245]  	195	3 
[0, 14, 0, 1, 245]  	209	2 
[0, 0, 9, 2, 246]  	207	1 
[0, 4, 4, 3, 247]  	201	2 
[0, 3, 1, 6, 247]  	218	1 
[2, 4, 0, 4, 248]  	174	5 
[0, 2, 1, 6, 248]  	205	1 
[0, 0, 5, 5, 248]  	220	1 
[2, 5, 0, 3, 249]  	160	6 
[1, 0, 5, 3, 249]  	173	4 
[0, 5, 4, 2, 249]  	187	2 
[0, 0, 1, 8, 249]  	233	1 
[1, 0, 10, 0, 250]  	177	3 
[0, 14, 0, 0, 250]  	182	1 
[1, 2, 1, 5, 250]  	185	4 
[0, 11, 1, 1, 250]  	187	4 
[0, 3, 1, 5, 250]  	191	1 
[0, 5, 0, 5, 250]  	200	1 
[0, 1, 1, 7, 250]  	219	1 
[2, 4, 4, 1, 251]  	161	4 
[2, 3, 1, 4, 251]  	178	3 
[1, 0, 1, 6, 251]  	186	4 
[1, 4, 3, 3, 251]  	191	3 
[0, 0, 10, 0, 252]  	170	1 
[0, 9, 4, 0, 252]  	185	2 
[0, 8, 1, 3, 252]  	202	1 
[0, 9, 2, 2, 252]  	205	2 
[4, 6, 0, 1, 253]  	133	4 
[0, 6, 4, 0, 253]  	146	2 
[2, 5, 4, 0, 253]  	147	3 
[0, 6, 1, 2, 253]  	149	1 
[2, 5, 1, 2, 253]  	150	2 
[1, 5, 0, 3, 253]  	153	2 
[1, 0, 9, 0, 253]  	160	3 
[0, 5, 1, 3, 253]  	163	1 
[1, 5, 3, 2, 253]  	177	4 
[0, 4, 1, 4, 253]  	177	1 
[1, 3, 2, 4, 253]  	188	2 
[1, 6, 0, 0, 254]  	85	2 
[5, 0, 5, 0, 254]  	120	5 
[3, 0, 6, 0, 254]  	123	3 
[3, 0, 5, 1, 254]  	133	4 
[1, 0, 6, 1, 254]  	136	2 
[0, 0, 5, 2, 254]  	139	1 
[0, 3, 1, 4, 254]  	164	1 
[0, 7, 0, 0, 255]  	91	1 
[0, 5, 1, 2, 255]  	136	1 
[0, 6, 0, 3, 255]  	159	1 
[2, 4, 1, 3, 255]  	164	2 
[0, 1, 1, 6, 255]  	192	1 
[0, 0, 0, 8, 255]  	216	1 
------
The gap is between 12 and 242.
Lengths: 3 3 5 5 3 6.
For 230 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^13*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^1*w^5
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 132 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^3*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 34 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 12.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[5188527120809808640 + 6359040355291505884*2^64 + 9111383964753472210*2^128 + 885228330124*2^192,7085106645125967360 + 8537882326271763539*2^64 + 12711739936290939631*2^128 + 3702957190754*2^192,3438058148418379840 + 16282291912176464227*2^64 + 8737289203644974221*2^128 + 140400656850*2^192,6755424976842205696 + 17766923666371845201*2^64 + 11817310836605439510*2^128 + 1811840518672*2^192,2874445456913399296 + 4106930062841727211*2^64 + 10871987682149300188*2^128 + 3944371072723*2^192,9267861534248974848 + 4618815016975431030*2^64 + 8208875483523015278*2^128 + 1484218919180*2^192,8611685566691864576 + 8372089318401922277*2^64 + 7513146071922019114*2^128 + 3749823296227*2^192,8267144563706777344 + 17523674857990030841*2^64 + 10251809035070904757*2^128 + 202431086622*2^192,11607892564262731776 + 3705419428795706237*2^64 + 3797526724797392941*2^128 + 3060321760823*2^192,13642229393794426880 + 405019065665070024*2^64 + 17361134996069737869*2^128 + 540638021837*2^192,16124336672937218560 + 9862827558638804140*2^64 + 15328592035359588665*2^128 + 765276360644*2^192;\
11896768602458112168 + 10252620348755094451*2^64 + 1635368673991058431*2^128 + 1672391815680*2^192,8729202353714934544 + 15890745306010441523*2^64 + 1551123535329158301*2^128 + 723081761929*2^192,3523791898129892974 + 15612994915262686161*2^64 + 5654670776047686192*2^128 + 1257875664517*2^192,15445883349898292272 + 6789615194352798392*2^64 + 797826009864996361*2^128 + 2308055016334*2^192,1611402275114617232 + 14799236855633974821*2^64 + 9212932742136728983*2^128 + 2631411402995*2^192,3556327612000476080 + 5404869276581165831*2^64 + 17003172671233068665*2^128 + 2980766055960*2^192,13149272795538885760 + 5147394157455881706*2^64 + 16717418842007388383*2^128 + 1522221024636*2^192,7206384204409686728 + 777739360766313903*2^64 + 4204997429101802735*2^128 + 1423169430468*2^192,115913377979823616 + 9002658724814902216*2^64 + 8440120812343595427*2^128 + 2256451795407*2^192,14931980338875716288 + 11996040270080154987*2^64 + 13804890017735123731*2^128 + 4222885794408*2^192,1687023886478616304 + 10970094972335719010*2^64 + 14880814602675131238*2^128 + 1646575965488*2^192;\
14740393866247974912 + 10194722040972509271*2^64 + 16072397759017645397*2^128 + 2083756875699*2^192,8167952845955457024 + 9205025154592767970*2^64 + 18278161671311944708*2^128 + 4297097112221*2^192,15403405574569442304 + 17586920662941929991*2^64 + 12432084591692781041*2^128 + 1423297794218*2^192,16328547225650044928 + 7043893356638675512*2^64 + 12943568243806753251*2^128 + 3260498796506*2^192,2156158520539947008 + 3549374973560613597*2^64 + 8175909879226868166*2^128 + 610625906100*2^192,4928506896803078144 + 6231897411451609351*2^64 + 17858771052997121833*2^128 + 1285375266993*2^192,9740825578658529280 + 16872628109743558080*2^64 + 1312421528281710034*2^128 + 2902095474319*2^192,7533965924484321280 + 10473504164124370452*2^64 + 2487282420555740743*2^128 + 3684608129961*2^192,15066141960337948672 + 12080085239561598952*2^64 + 6685505451538197899*2^128 + 2594560657172*2^192,4451079737349603328 + 10638850704343296230*2^64 + 12986888349867111912*2^128 + 2271888343420*2^192,10930775067991007232 + 2357629008969254211*2^64 + 13405713373538074811*2^128 + 883229453266*2^192;\
12564542169251420320 + 11321091668725453250*2^64 + 16406008471090183736*2^128 + 58591984684*2^192,10031451771423950912 + 6643159447771330027*2^64 + 18261640312876977921*2^128 + 4382699477786*2^192,11208702178628341304 + 5373529459639529732*2^64 + 3762983291201502345*2^128 + 1633547416879*2^192,5260463601956414656 + 17045440632445371869*2^64 + 15659432820744897433*2^128 + 2372900718271*2^192,10675354183781335616 + 10657907225564328201*2^64 + 10790689255704569081*2^128 + 3776419953130*2^192,9701015876948198080 + 17623369336608229031*2^64 + 15754288244652486482*2^128 + 3885721864267*2^192,17105823351795814912 + 16298833068916939250*2^64 + 2406824268170133531*2^128 + 532010474561*2^192,7299283912970778912 + 5693802594278162859*2^64 + 5023694778423269074*2^128 + 2948181018704*2^192,5541133853154252800 + 13823802577527590332*2^64 + 10237155034227816418*2^128 + 2029134226117*2^192,9859237558466534144 + 13158421717826627068*2^64 + 15848597799803544827*2^128 + 3201783763843*2^192,910733448582619072 + 18117956588738356976*2^64 + 3059090935292621293*2^128 + 1575644666276*2^192;\
11215692910080342528 + 4528835510665637678*2^64 + 12619290772233023847*2^128 + 2940091233251*2^192,9167911309479379968 + 7505678938912370264*2^64 + 9701431510238825098*2^128 + 405618224980*2^192,16166142097097023360 + 5646898267613067341*2^64 + 4226081994987539405*2^128 + 2380105816889*2^192,12600621734897273856 + 16239158526080501135*2^64 + 1590960698781481347*2^128 + 3597213351151*2^192,1784102479037178880 + 142692378285863138*2^64 + 577016814944378028*2^128 + 4264411021136*2^192,4334073572475218944 + 7091147805130383962*2^64 + 12303014201318974250*2^128 + 3632731045711*2^192,4509266880484220928 + 5444722049258891765*2^64 + 7228544595527325685*2^128 + 988287116332*2^192,11124477387134108160 + 5054798630764409749*2^64 + 17556739924897563510*2^128 + 499296668549*2^192,15628576995644506112 + 17501577346740756105*2^64 + 18218726001595696710*2^128 + 4103417151198*2^192,3239525910789255168 + 7605757802964958692*2^64 + 7864179828501160814*2^128 + 353906585552*2^192,13063631200042408960 + 15123678576788435114*2^64 + 4363613071871109604*2^128 + 1094497187985*2^192;\
17462374860887440488 + 4564973113415152705*2^64 + 32335258095860191*2^128 + 3899428886151*2^192,12862243430203159696 + 15353209797229212596*2^64 + 10059805397918690625*2^128 + 4376657476900*2^192,17168111933740652990 + 6144071149496351325*2^64 + 11655308888678304702*2^128 + 1096744239535*2^192,16242506363257338032 + 11373385624640821414*2^64 + 7235174709372934117*2^128 + 2555825789672*2^192,8728684067686737680 + 3427755459166244609*2^64 + 8931041536926607348*2^128 + 4307086769433*2^192,16806522584493579312 + 3722899979193158290*2^64 + 18081610660833620136*2^128 + 4012730911442*2^192,13919239316130723968 + 9357289868292315792*2^64 + 16040525834314325970*2^128 + 409428863438*2^192,622745429196376456 + 779285510743827672*2^64 + 15500635853026553485*2^128 + 3568099924863*2^192,11836353685463942656 + 10468090956651241363*2^64 + 8465556857563043004*2^128 + 1762655544736*2^192,2068005269083878592 + 4274819492345577553*2^64 + 4630920417840815502*2^128 + 2127236967674*2^192,1310620608079762800 + 1233827142925142738*2^64 + 5027063135401371678*2^128 + 2704180292872*2^192;\
3274987735625719724 + 4097061862477228582*2^64 + 17629059736714022400*2^128 + 3089404200703*2^192,7799410310437713528 + 11439912883122124477*2^64 + 14727437888181760558*2^128 + 1272455283249*2^192,7461476087789829321 + 10640246616078208535*2^64 + 6396036648830932711*2^128 + 2016762022077*2^192,10723802398760405480 + 5828564439678376611*2^64 + 18047831068777053435*2^128 + 598319148600*2^192,8417670899297467192 + 1823753609037788397*2^64 + 4616905665786411316*2^128 + 1982829181830*2^192,7445208230854537768 + 6520937398564192892*2^64 + 9945157738093017283*2^128 + 2598425837811*2^192,12392695645366475200 + 1910573598839625539*2^64 + 1276985790352775347*2^128 + 3168597096582*2^192,5620179934649932444 + 8834502356471618856*2^64 + 16344245359158650248*2^128 + 387926912541*2^192,18388787384719639808 + 4722042674447324699*2^64 + 5003311630682978094*2^128 + 3957015380760*2^192,1757381867416917664 + 3225351901814698314*2^64 + 11544299064841989750*2^128 + 2071855249099*2^192,17603232130470243464 + 12961696587541692110*2^64 + 11006336772371985996*2^128 + 4098744538471*2^192;\
16077805937577071104 + 6578852566365091949*2^64 + 1640857939654657466*2^128 + 3920495209354*2^192,13748425432893191168 + 13252085064104542472*2^64 + 6765984446678599240*2^128 + 1481660159162*2^192,11360373652336714112 + 15476790102801724561*2^64 + 3413963191931353638*2^128 + 2808221594681*2^192,16722331382180781056 + 10101674720763052391*2^64 + 11206704561499549116*2^128 + 3476733608538*2^192,11149918520637715456 + 6893353033359283224*2^64 + 3670492159876108702*2^128 + 3533012090072*2^192,4815995264468581376 + 12262475709092457487*2^64 + 14173436294489209705*2^128 + 2350988804016*2^192,12792781384908382208 + 15771360586555000809*2^64 + 11577071419656048906*2^128 + 4215551468078*2^192,17033028811649636864 + 16612875885315395920*2^64 + 3494697854196563381*2^128 + 841919888733*2^192,17975724646803406848 + 9299138224502833080*2^64 + 5629983525398311472*2^128 + 2825323325699*2^192,10431123604148301824 + 11357947491462677447*2^64 + 9009690660597447404*2^128 + 1035147069832*2^192,5111991348636118016 + 2694484888955388919*2^64 + 2424244766326390568*2^128 + 2195522629009*2^192;\
12052608184908528448 + 12470604185988389049*2^64 + 15307383279781828289*2^128 + 490214247781*2^192,3494271081025901696 + 7190467791803340642*2^64 + 2152284364159426094*2^128 + 4154400541368*2^192,15431391032974344176 + 11564061733290577548*2^64 + 18255177646909672235*2^128 + 1495850657238*2^192,9892217777393390976 + 6358084892057223487*2^64 + 8735745503813376561*2^128 + 2267803722106*2^192,14597235876645447808 + 7028344412904440829*2^64 + 8548420238830601360*2^128 + 3136364817163*2^192,1245128806891434368 + 729164114959383127*2^64 + 1641118670114224343*2^128 + 4294036288851*2^192,17880283298506818560 + 8383635092079711841*2^64 + 11645165240680100372*2^128 + 332676435544*2^192,7671969554841568320 + 5652127018227544956*2^64 + 7801396173467004165*2^128 + 2147926939647*2^192,11404105938943209472 + 15891317408804224278*2^64 + 5869053296307652804*2^128 + 3765759159346*2^192,4700453391134025216 + 11197867503203405312*2^64 + 2564469299703703446*2^128 + 2895913957258*2^192,14621454806509878144 + 16637303536701613288*2^64 + 15795784012985857721*2^128 + 1165597848733*2^192;\
11502120874186005872 + 15074481273125747646*2^64 + 17856878891005533984*2^128 + 2221264876870*2^192,15271015183753308512 + 6895051714526536265*2^64 + 17296808838348110797*2^128 + 737138605567*2^192,17831136218386227892 + 8243398729646166828*2^64 + 3610464046498079455*2^128 + 1487550340940*2^192,1215046354206899744 + 7203098853267242482*2^64 + 4939446285612623015*2^128 + 2006009773892*2^192,8705645016625088608 + 15361315945041477790*2^64 + 17412541475045545*2^128 + 968789937426*2^192,6531766778327835424 + 308475283361928043*2^64 + 15649594047833280599*2^128 + 3831173894424*2^192,2968163413402075904 + 14578983927807693674*2^64 + 11459678108148076109*2^128 + 3580011685304*2^192,6187408728964089904 + 9110795173294739413*2^64 + 13248025717795054632*2^128 + 1832716343602*2^192,6671471160263304192 + 12388552897230403538*2^64 + 16023737710564835516*2^128 + 1682930439370*2^192,15414080098034001024 + 10902394208934813354*2^64 + 10155709960825664568*2^128 + 3741314704732*2^192,15850136798010282656 + 1251746524437078194*2^64 + 18042603394934167843*2^128 + 1180049204179*2^192;\
14878597796353936928 + 14483221174904553104*2^64 + 15191889683800151451*2^128 + 131203368004*2^192,6530271798974183232 + 7732450210902546678*2^64 + 9073521743794593834*2^128 + 821917316733*2^192,12571122581010104152 + 391184283496310021*2^64 + 7414472803823555030*2^128 + 433877168410*2^192,4492784563428204992 + 4363250996463405645*2^64 + 7207198297103273188*2^128 + 3684046310496*2^192,17967047719189915968 + 3854209149242909934*2^64 + 8082695619261936212*2^128 + 1858674538117*2^192,18064514480588203968 + 8939155670524501142*2^64 + 1025378769902668744*2^128 + 51196870876*2^192,14933213520306653696 + 14884276787717610063*2^64 + 3643242331402039520*2^128 + 2101971381031*2^192,16651642957141208224 + 5360036428543788095*2^64 + 3926130050585004558*2^128 + 2862364678953*2^192,13520290888591783936 + 14941561694597674747*2^64 + 7045256553661315842*2^128 + 2642959483312*2^192,6861315843646418688 + 8858034060909806665*2^64 + 12658311440956927033*2^128 + 3317418163184*2^192,4684054474035081408 + 3015494973944783231*2^64 + 12442989927153316601*2^128 + 812959955998*2^192]
/* 
This matrix times 2^(-12) should be the matrix of frobenius.
*/ 
B = 2^(-12) * A; 
/* Freed 4307 lists. */
