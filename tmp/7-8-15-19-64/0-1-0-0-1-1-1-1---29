/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1               = Coefficient of   x^7 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   x^1 * w^3               = Coefficient of   y^8                     = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 68
[1, 1, 2, 0, 0]  	45	3 
[7, 0, 0, 0, 0]  	49	3  <--- 1
[1, 0, 2, 1, 0]  	56	2 
[6, 0, 1, 0, 0]  	57	3 
[1, 0, 0, 3, 0]  	64	2 
[0, 8, 0, 0, 0]  	64	2  <--- 2
[6, 0, 0, 2, 0]  	80	4 
[5, 0, 4, 0, 0]  	95	4 
[1, 7, 0, 2, 0]  	101	2 
[0, 1, 5, 1, 0]  	102	2 
[0, 1, 4, 2, 0]  	106	2 
[0, 1, 2, 4, 0]  	114	2 
[2, 0, 7, 0, 0]  	119	4 
[0, 3, 3, 3, 0]  	126	2 
[1, 0, 8, 0, 0]  	127	4 
[0, 7, 5, 0, 0]  	131	2 
[0, 6, 3, 2, 0]  	131	2 
[0, 0, 0, 7, 0]  	133	1  <--- 4
[0, 7, 4, 1, 0]  	135	4 
[0, 6, 6, 0, 0]  	138	1 
[0, 3, 0, 6, 0]  	138	1 
[0, 0, 3, 5, 0]  	140	1 
[0, 5, 7, 0, 0]  	145	1 
[0, 2, 1, 6, 0]  	145	1 
[0, 7, 1, 4, 0]  	147	1 
[0, 0, 6, 3, 0]  	147	1 
[0, 5, 1, 5, 0]  	150	2 
[0, 7, 0, 5, 0]  	151	3 
[0, 4, 8, 0, 0]  	152	1 
[0, 0, 9, 1, 0]  	154	1 
[0, 3, 9, 0, 0]  	159	1 
[0, 0, 11, 0, 0]  	165	1  <--- 3
[0, 2, 10, 0, 0]  	166	1 
[0, 6, 0, 5, 1]  	143	3 
[0, 7, 2, 3, 2]  	143	4 
[0, 1, 4, 1, 3]  	87	2 
[5, 7, 0, 0, 3]  	91	3 
[0, 7, 0, 2, 3]  	94	2 
[4, 7, 0, 1, 3]  	103	5 
[3, 7, 1, 1, 3]  	111	5 
[4, 6, 0, 2, 3]  	114	4 
[4, 0, 6, 0, 3]  	118	3 
[0, 6, 1, 4, 3]  	139	2 
[0, 3, 8, 0, 3]  	144	2 
[0, 2, 9, 0, 3]  	151	2 
[0, 1, 10, 0, 3]  	158	2 
[0, 6, 2, 3, 5]  	135	3 
[4, 7, 1, 0, 6]  	99	3 
[3, 6, 1, 2, 6]  	122	3 
[0, 4, 7, 0, 6]  	137	2 
[3, 6, 0, 2, 9]  	107	5 
[0, 5, 6, 0, 9]  	130	2 
[2, 6, 1, 2, 12]  	115	4 
[0, 6, 5, 0, 15]  	123	3 
[0, 5, 3, 2, 241]  	123	2 
[0, 4, 3, 2, 244]  	115	2 
[0, 3, 3, 2, 247]  	107	2 
[0, 2, 0, 6, 247]  	130	1 
[0, 2, 3, 2, 250]  	99	2 
[0, 1, 0, 6, 250]  	122	1 
[0, 1, 3, 2, 253]  	91	2 
[0, 0, 5, 1, 253]  	94	1 
[0, 0, 4, 2, 253]  	98	1 
[4, 0, 5, 0, 253]  	103	3 
[0, 0, 2, 4, 253]  	106	1 
[3, 0, 6, 0, 253]  	111	3 
[0, 0, 0, 6, 253]  	114	1 
[0, 5, 0, 5, 254]  	135	2 
------
The gap is between 16 and 240.
Lengths: 2 2 3 3 2 4.
For 143 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^9
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 79 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 15 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[6712485244451389220 + 14676716240858527868*2^64 + 239846207262947150*2^128 + 794208423*2^192,4266278834395852960 + 16924092562524919644*2^64 + 7237961595297197941*2^128 + 3720716900*2^192,9960048101205787520 + 6056643275485472990*2^64 + 8280971327010648402*2^128 + 1843575899*2^192,1352215274632682736 + 15815687255958494288*2^64 + 11897733670491213484*2^128 + 2226442667*2^192,4361486261933507200 + 8123780839774766521*2^64 + 1817044568989074296*2^128 + 281894885*2^192,684484618262658560 + 11950814324909433661*2^64 + 2390047340742595465*2^128 + 743239360*2^192,6446889885677091584 + 11515516231396676623*2^64 + 10433566716046925961*2^128 + 2115581985*2^192;\
11534295034053905676 + 17139934657752309387*2^64 + 1931077874546344467*2^128 + 2218922739*2^192,10760056536762787080 + 13286024325709447793*2^64 + 6129767804314336036*2^128 + 2536908279*2^192,12740620332333930464 + 3662702520627426570*2^64 + 949486572264375598*2^128 + 2915582400*2^192,14934822314510170886 + 9637001236696480412*2^64 + 1806684804161889412*2^128 + 4007255192*2^192,12538546547956186128 + 5976029781332336591*2^64 + 14418389364676068756*2^128 + 3376078399*2^192,8164837073777832896 + 16377977832608872660*2^64 + 9960409666832286541*2^128 + 2168665016*2^192,5509400914445281248 + 6893221307125433217*2^64 + 3820610238600609037*2^128 + 950912114*2^192;\
16730665566421253968 + 7781539080994066419*2^64 + 10238431513107445881*2^128 + 274148644*2^192,15585102574031302352 + 9003019307154583715*2^64 + 482776296552936332*2^128 + 352372888*2^192,4771386068658161216 + 13878703321744189044*2^64 + 17283365290058133020*2^128 + 6372877*2^192,2050419947418083384 + 2035563471798832877*2^64 + 2582991881830046631*2^128 + 81568643*2^192,17861488270070640448 + 9732275180665089964*2^64 + 646138441204265435*2^128 + 903819528*2^192,1038002573953726208 + 1252529771428088542*2^64 + 7474789333118415157*2^128 + 754227659*2^192,1766533040239228288 + 4906473149740667481*2^64 + 2081537172094168104*2^128 + 1931291221*2^192;\
18102410524064925776 + 4093897610601977912*2^64 + 8809734045790108402*2^128 + 523929432*2^192,17977125999869846848 + 9330863220101885763*2^64 + 2893026893144366323*2^128 + 1073747862*2^192,4227195607217333504 + 10504886466384526042*2^64 + 12924964875992966150*2^128 + 1002615081*2^192,2212968797213600288 + 6757776244305180922*2^64 + 14241281176646820373*2^128 + 1934615227*2^192,14523549866338598656 + 13871924860071779897*2^64 + 8967985035781712800*2^128 + 754929640*2^192,6065672464351358128 + 8618138009062272289*2^64 + 3381347897817243487*2^128 + 727477911*2^192,2110295534410812928 + 7335757486193930675*2^64 + 17802768646060400359*2^128 + 1259726199*2^192;\
10292562352091694848 + 15110103224827676439*2^64 + 10879914454161284105*2^128 + 3142681852*2^192,13071367257483978480 + 9224009114443351922*2^64 + 13435310314146411437*2^128 + 3958861798*2^192,9695192520996663400 + 14014073033433319316*2^64 + 3891557742100509876*2^128 + 501552455*2^192,4895557248539553445 + 7818729401656044058*2^64 + 1905188378804383536*2^128 + 3374423578*2^192,15231791864587241408 + 4303859673885535111*2^64 + 13210399974223015454*2^128 + 1944580764*2^192,860609619264981536 + 2307803253835308571*2^64 + 9544255168092090369*2^128 + 2526236282*2^192,15316800862739568784 + 14655491988623799110*2^64 + 18422050959817050928*2^128 + 2216926103*2^192;\
8080412410407570560 + 12857645106015420688*2^64 + 16817660536631874915*2^128 + 1888599533*2^192,13960988532880761888 + 6632152103971454895*2^64 + 5584447477233523912*2^128 + 1597192737*2^192,13839349889777533528 + 4989538175327839902*2^64 + 16786223215592118060*2^128 + 3941466944*2^192,16434497034117084592 + 47879514701630213*2^64 + 778540537439237134*2^128 + 1043508064*2^192,1672150489048722560 + 4010872476775361677*2^64 + 1725529931674798335*2^128 + 3096259607*2^192,3564861952593461408 + 3983249379401522859*2^64 + 3855315417424676787*2^128 + 23814390*2^192,10570992560549953280 + 6855083398794262626*2^64 + 2961950633954301461*2^128 + 2561454940*2^192;\
18127296986971655056 + 8854074514070078526*2^64 + 16429221914516280377*2^128 + 297778106*2^192,14107508437616608928 + 8321938434114915160*2^64 + 4293703061749014945*2^128 + 1305049777*2^192,13906376904385041496 + 10856059190889481008*2^64 + 5655301433387389874*2^128 + 1088201673*2^192,1812696437392814576 + 1522002910512884558*2^64 + 3931950008734647420*2^128 + 318709367*2^192,1778604458829306496 + 15397474810943870537*2^64 + 14744049725898814694*2^128 + 2099803146*2^192,7566969371778580096 + 18031027395815387934*2^64 + 15277879301209570111*2^128 + 1969342589*2^192,8546054650983637776 + 727566737659323246*2^64 + 3512697953344118634*2^128 + 2238900512*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2335 lists. */
