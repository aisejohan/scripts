/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1               = Coefficient of   x^7 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   x^1 * w^3               = Coefficient of   y^8                     = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 144
[3, 3, 0, 0, 0]  	45	5 
[7, 0, 0, 0, 0]  	49	4  <--- 1
[3, 2, 0, 1, 0]  	56	4 
[6, 0, 1, 0, 0]  	57	5 
[2, 2, 1, 1, 0]  	64	4 
[1, 0, 0, 3, 0]  	64	2 
[5, 1, 2, 0, 0]  	73	7 
[1, 9, 0, 0, 0]  	79	3 
[6, 0, 0, 2, 0]  	80	6 
[5, 1, 0, 2, 0]  	81	6 
[5, 0, 2, 1, 0]  	84	6 
[4, 1, 1, 2, 0]  	89	7 
[3, 1, 4, 0, 0]  	89	7 
[4, 0, 3, 1, 0]  	92	6 
[2, 8, 1, 0, 0]  	93	5 
[5, 0, 4, 0, 0]  	95	5 
[3, 1, 2, 2, 0]  	97	6 
[2, 8, 0, 1, 0]  	97	6 
[1, 4, 4, 0, 0]  	99	5 
[3, 0, 4, 1, 0]  	100	6 
[2, 7, 2, 0, 0]  	100	6 
[2, 6, 0, 2, 0]  	100	6 
[4, 0, 5, 0, 0]  	103	5 
[2, 2, 5, 0, 0]  	105	7 
[1, 8, 1, 1, 0]  	105	6 
[2, 0, 5, 1, 0]  	108	5 
[1, 7, 3, 0, 0]  	108	5 
[1, 8, 0, 2, 0]  	109	4 
[3, 0, 6, 0, 0]  	111	4 
[2, 1, 6, 0, 0]  	112	6 
[1, 2, 6, 0, 0]  	113	6 
[1, 5, 2, 2, 0]  	115	4 
[0, 12, 0, 1, 0]  	115	4 
[1, 7, 1, 2, 0]  	116	4 
[1, 0, 6, 1, 0]  	116	4 
[0, 8, 1, 2, 0]  	117	3 
[0, 11, 2, 0, 0]  	118	3 
[0, 10, 0, 2, 0]  	118	3 
[2, 0, 7, 0, 0]  	119	4 
[1, 6, 3, 1, 0]  	119	3 
[0, 13, 1, 0, 0]  	119	4 
[1, 1, 7, 0, 0]  	120	6 
[0, 8, 0, 3, 0]  	121	4 
[1, 4, 3, 2, 0]  	122	4 
[0, 11, 1, 1, 0]  	122	4 
[0, 6, 5, 0, 0]  	123	3 
[0, 8, 4, 0, 0]  	124	3 
[0, 7, 2, 2, 0]  	124	3 
[0, 10, 3, 0, 0]  	125	3 
[0, 1, 4, 3, 0]  	125	2 
[0, 4, 5, 1, 0]  	126	2 
[0, 3, 3, 3, 0]  	126	2 
[1, 0, 8, 0, 0]  	127	3 
[0, 16, 0, 0, 0]  	128	4  <--- 2
[0, 8, 3, 1, 0]  	128	4 
[0, 10, 2, 1, 0]  	129	5 
[0, 6, 3, 2, 0]  	131	2 
[0, 7, 0, 4, 0]  	132	3 
[0, 3, 6, 1, 0]  	133	1 
[0, 1, 2, 5, 0]  	133	1 
[0, 0, 0, 7, 0]  	133	1  <--- 4
[0, 4, 7, 0, 0]  	137	4 
[0, 5, 4, 2, 0]  	138	1 
[0, 4, 2, 4, 0]  	138	1 
[0, 3, 0, 6, 0]  	138	1 
[0, 2, 7, 1, 0]  	140	1 
[0, 0, 3, 5, 0]  	140	1 
[0, 3, 8, 0, 0]  	144	3 
[0, 2, 1, 6, 0]  	145	1 
[0, 1, 8, 1, 0]  	147	1 
[0, 0, 6, 3, 0]  	147	1 
[0, 2, 9, 0, 0]  	151	3 
[0, 0, 9, 1, 0]  	154	1 
[0, 0, 11, 0, 0]  	165	1  <--- 3
[1, 8, 2, 0, 1]  	101	4 
[0, 9, 2, 0, 1]  	102	4 
[2, 1, 3, 2, 1]  	105	6 
[0, 9, 0, 2, 1]  	110	4 
[1, 7, 2, 1, 1]  	112	5 
[0, 10, 1, 1, 1]  	114	4 
[1, 3, 5, 1, 1]  	125	3 
[1, 1, 5, 2, 1]  	128	4 
[0, 3, 7, 0, 1]  	129	4 
[0, 4, 4, 2, 1]  	130	3 
[0, 6, 0, 5, 1]  	143	3 
[0, 5, 1, 5, 1]  	150	2 
[2, 1, 2, 1, 2]  	71	4 
[1, 1, 4, 1, 2]  	94	4 
[1, 3, 2, 2, 2]  	99	5 
[3, 0, 3, 2, 2]  	104	6 
[1, 2, 3, 2, 2]  	106	4 
[0, 12, 1, 0, 2]  	111	3 
[2, 0, 4, 2, 2]  	112	4 
[0, 3, 5, 1, 2]  	118	3 
[1, 0, 5, 2, 2]  	120	4 
[0, 2, 6, 1, 2]  	125	2 
[0, 2, 5, 2, 2]  	129	3 
[0, 5, 6, 0, 2]  	130	3 
[0, 1, 7, 1, 2]  	132	2 
[0, 6, 2, 3, 2]  	135	3 
[0, 2, 8, 0, 2]  	136	3 
[0, 2, 3, 4, 2]  	137	2 
[0, 1, 10, 0, 2]  	158	2 
[1, 3, 4, 0, 3]  	91	5 
[2, 6, 2, 0, 3]  	92	6 
[1, 5, 3, 1, 3]  	111	4 
[0, 3, 6, 0, 3]  	114	4 
[0, 5, 4, 1, 3]  	119	3 
[0, 6, 1, 4, 3]  	139	2 
[0, 3, 4, 2, 4]  	122	3 
[0, 3, 2, 4, 4]  	130	2 
[1, 2, 3, 1, 5]  	87	4 
[0, 2, 0, 6, 249]  	130	1 
[0, 11, 0, 1, 251]  	107	4 
[0, 1, 0, 6, 252]  	122	1 
[2, 5, 0, 2, 253]  	92	4 
[1, 7, 0, 2, 253]  	101	3 
[0, 8, 0, 2, 253]  	102	3 
[0, 0, 0, 6, 253]  	114	1 
[0, 2, 2, 4, 253]  	122	2 
[0, 0, 2, 5, 253]  	125	1 
[0, 0, 8, 1, 253]  	139	1 
[1, 8, 0, 0, 254]  	71	1 
[2, 7, 1, 0, 254]  	85	4 
[0, 9, 1, 0, 254]  	87	1 
[0, 9, 0, 1, 254]  	91	2 
[1, 7, 2, 0, 254]  	93	3 
[0, 8, 2, 0, 254]  	94	1 
[0, 8, 1, 1, 254]  	98	1 
[1, 6, 2, 1, 254]  	104	3 
[0, 0, 2, 4, 254]  	106	1 
[0, 2, 5, 1, 254]  	110	3 
[0, 1, 3, 3, 254]  	110	2 
[0, 4, 4, 1, 254]  	111	1 
[0, 14, 0, 0, 254]  	112	2 
[0, 0, 4, 3, 254]  	117	1 
[1, 2, 2, 2, 255]  	91	4 
[1, 1, 3, 2, 255]  	98	2 
[1, 1, 6, 0, 255]  	105	4 
[0, 1, 4, 2, 255]  	106	2 
[1, 0, 7, 0, 255]  	112	4 
[0, 1, 6, 1, 255]  	117	2 
[0, 0, 8, 0, 255]  	120	1 
[0, 5, 0, 5, 255]  	135	2 
------
The gap is between 6 and 248.
Lengths: 2 2 3 3 2 3.
For 143 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^9
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 79 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^8*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 15 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[17300309998833449888 + 5996876819531628013*2^64 + 12289783724969368821*2^128 + 2353292350*2^192,18067685184206183654 + 15319347891779804316*2^64 + 15794610163196496951*2^128 + 383084123*2^192,9376202939836548808 + 7335280964136486759*2^64 + 15663957557945763959*2^128 + 211282035*2^192,15934009436352240704 + 11424249282825426627*2^64 + 14554200680030889971*2^128 + 1298638613*2^192,12681742288631415872 + 907397912333278499*2^64 + 7175460092997676805*2^128 + 2274348072*2^192,241671412044948976 + 3723430033030780388*2^64 + 17773108995135337389*2^128 + 1890437339*2^192,17605453318957175760 + 2648276527932330197*2^64 + 5011580882375447084*2^128 + 1349172877*2^192;\
201594648198146912 + 3473291405055717430*2^64 + 14547485505708366856*2^128 + 2088158908*2^192,14310884824112276504 + 12590249882755549741*2^64 + 13654473369316420553*2^128 + 3308819698*2^192,14608196767973009968 + 12553978394456320660*2^64 + 7367482005019077045*2^128 + 4190122369*2^192,17219556738675472000 + 11644130949928131884*2^64 + 6094588408401264918*2^128 + 2246938914*2^192,2201147329104619648 + 8540075837884538399*2^64 + 11868303425750501324*2^128 + 2841613506*2^192,14615646534516072416 + 4072866130330179219*2^64 + 7162503906838187345*2^128 + 234679601*2^192,5615718768745133600 + 13786475657802488245*2^64 + 13802874034943095698*2^128 + 2379875572*2^192;\
5404474720792394080 + 11679779800509520844*2^64 + 7507052129284276883*2^128 + 1528086889*2^192,15834042732358769220 + 2860685761633972614*2^64 + 97714757965649515*2^128 + 672941228*2^192,13014017175062166896 + 4945541926220969074*2^64 + 10538215192371131775*2^128 + 2912740998*2^192,8549240784632763136 + 14710639467339132683*2^64 + 5540315326771951320*2^128 + 3440847212*2^192,7736540713834117312 + 10856604919346596216*2^64 + 13858309801034424049*2^128 + 3274419001*2^192,2361870828652356496 + 13824688267844033948*2^64 + 12393050847359356509*2^128 + 1790066045*2^192,16586833159019530416 + 13860551350513944843*2^64 + 3872261723387300030*2^128 + 2494494472*2^192;\
8768645712051126756 + 1565198574432759611*2^64 + 1088737306279697658*2^128 + 1193659599*2^192,12585280110843687220 + 6607470183902836719*2^64 + 5154972054138936762*2^128 + 3135497775*2^192,6808784741086704344 + 14503601062450455543*2^64 + 11683813106433270606*2^128 + 1169011930*2^192,4131242542078386408 + 15670633403885944024*2^64 + 13302780892153463397*2^128 + 2229351406*2^192,2442494277042501784 + 2494704486507033500*2^64 + 9868482020150893251*2^128 + 872551487*2^192,16309915189606675088 + 17155856646527993453*2^64 + 3591269449394375034*2^128 + 1278157342*2^192,540574160001273344 + 6643433778299561281*2^64 + 8376671671218266666*2^128 + 2891995318*2^192;\
1589766657529475996 + 3589332926133212213*2^64 + 16075143937363501238*2^128 + 3867031593*2^192,16803331437095888506 + 10006448749476533794*2^64 + 7534643272557504340*2^128 + 3840650110*2^192,13467091878539565712 + 1907702737518404416*2^64 + 8172251250654989152*2^128 + 1084536064*2^192,15996434149763101632 + 4274400865688457610*2^64 + 10567893309262525499*2^128 + 1215077685*2^192,14849885883525984840 + 5933288276778599776*2^64 + 17956904398364186879*2^128 + 3619186529*2^192,17569798833341812896 + 3224643545697256549*2^64 + 9304815596997423284*2^128 + 978424570*2^192,1150919685741368768 + 2362698090375089686*2^64 + 17750889557125995400*2^128 + 808118973*2^192;\
16498486381236207760 + 14739203225346835418*2^64 + 1909532112219293864*2^128 + 2945563647*2^192,889831302442522469 + 16581529486654634055*2^64 + 10447084420478952633*2^128 + 22880118*2^192,2363964425087797156 + 16044825360405559180*2^64 + 16867396033755414484*2^128 + 173530769*2^192,15180388463915788160 + 308635394244525671*2^64 + 11468901373748351853*2^128 + 431752230*2^192,7755720143872929464 + 17875575077312932631*2^64 + 9227322529406383674*2^128 + 1315998143*2^192,18400801006789506072 + 9300411233652441156*2^64 + 298350168942346112*2^128 + 2836462077*2^192,7388639001908242392 + 18302689045076161812*2^64 + 6288830255602299020*2^128 + 296489603*2^192;\
10963380405403868784 + 203058928358730937*2^64 + 11366974781355213883*2^128 + 4222977587*2^192,13905712943164063999 + 13151147723407450124*2^64 + 8136823012112539376*2^128 + 1755390423*2^192,515862485027584444 + 16154376819399693025*2^64 + 3069170784062646976*2^128 + 3682861215*2^192,10619393010426716336 + 4653256082579556226*2^64 + 9505851717214567089*2^128 + 901208090*2^192,6715960266923859032 + 17383403098573590717*2^64 + 3084236175627651659*2^128 + 2817568149*2^192,8359882038065098488 + 11527952535205406200*2^64 + 14131096186350984780*2^128 + 3235457356*2^192,8974243509165808520 + 7236740891827034766*2^64 + 16047266372817584010*2^128 + 1660585840*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2846 lists. */
