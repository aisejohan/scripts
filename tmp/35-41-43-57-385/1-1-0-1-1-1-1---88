/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^11                     = Coefficient of   x^3 * y^3 * z^1 * w^2   = Coefficient of   x^2 * z^6 * w^1         = Coefficient of   x^1 * y^4 * z^3 * w^1   = Coefficient of   y^8 * w^1               = Coefficient of   y^1 * z^8               = Coefficient of   z^1 * w^6               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^11 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^6


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
Allocate M_len = 102400 elements.
The final length of G is 326
[3, 3, 0, 2, 0]  	342	4 
[3, 2, 1, 2, 0]  	344	4 
[10, 0, 0, 0, 0]  	350	3  <--- 1
[1, 4, 3, 1, 0]  	385	3 
[0, 8, 0, 1, 0]  	385	3 
[2, 1, 8, 1, 0]  	512	4 
[1, 1, 11, 0, 0]  	549	4 
[8, 4, 3, 0, 0]  	573	5 
[8, 4, 2, 1, 0]  	587	5 
[2, 7, 6, 0, 0]  	615	6 
[1, 4, 10, 0, 0]  	629	3 
[1, 3, 3, 6, 0]  	629	3 
[7, 1, 8, 0, 0]  	630	6 
[7, 0, 9, 0, 0]  	632	8 
[2, 3, 1, 7, 0]  	635	4 
[9, 8, 0, 0, 0]  	643	5 
[3, 1, 1, 8, 0]  	645	5 
[7, 0, 8, 1, 0]  	646	10 
[1, 8, 7, 0, 0]  	664	5 
[6, 5, 6, 0, 0]  	673	7 
[2, 2, 3, 7, 0]  	680	5 
[7, 0, 1, 7, 0]  	687	9 
[5, 1, 3, 6, 0]  	687	8 
[4, 6, 7, 0, 0]  	687	8 
[1, 2, 4, 7, 0]  	688	4 
[2, 7, 0, 6, 0]  	699	4 
[9, 0, 1, 6, 0]  	700	4 
[6, 7, 5, 0, 0]  	712	7 
[2, 6, 0, 7, 0]  	715	5 
[1, 7, 0, 7, 0]  	721	4 
[1, 6, 1, 7, 0]  	723	4 
[7, 2, 0, 7, 0]  	726	8 
[3, 10, 5, 0, 0]  	730	6 
[2, 12, 4, 0, 0]  	734	6 
[2, 11, 5, 0, 0]  	736	6 
[7, 1, 0, 8, 0]  	742	7 
[7, 9, 3, 0, 0]  	743	5 
[2, 6, 2, 6, 0]  	744	6 
[1, 11, 6, 0, 0]  	744	6 
[7, 8, 4, 0, 0]  	745	8 
[8, 0, 3, 6, 0]  	751	8 
[6, 9, 4, 0, 0]  	751	8 
[5, 11, 3, 0, 0]  	755	6 
[5, 10, 4, 0, 0]  	757	7 
[7, 0, 4, 6, 0]  	759	8 
[5, 9, 5, 0, 0]  	759	8 
[1, 1, 8, 6, 0]  	762	4 
[5, 5, 9, 0, 0]  	767	8 
[4, 0, 8, 5, 0]  	769	6 
[2, 14, 3, 0, 0]  	773	6 
[6, 0, 8, 4, 0]  	782	6 
[4, 0, 15, 0, 0]  	785	5 
[2, 0, 10, 5, 0]  	785	5 
[1, 3, 8, 5, 0]  	787	4 
[1, 2, 1, 11, 0]  	787	4 
[4, 14, 2, 0, 0]  	800	5 
[2, 0, 17, 0, 0]  	801	5 
[4, 1, 0, 11, 0]  	808	6 
[4, 0, 1, 11, 0]  	810	6 
[3, 2, 0, 11, 0]  	814	5 
[2, 0, 12, 4, 0]  	814	5 
[1, 16, 3, 0, 0]  	820	5 
[1, 15, 4, 0, 0]  	822	4 
[1, 0, 13, 4, 0]  	822	4 
[6, 0, 1, 10, 0]  	823	4 
[1, 0, 17, 1, 0]  	823	4 
[4, 0, 0, 12, 0]  	824	6 
[2, 0, 3, 11, 0]  	826	4 
[1, 4, 0, 11, 0]  	826	4 
[2, 0, 15, 2, 0]  	829	4 
[6, 0, 0, 11, 0]  	837	5 
[4, 16, 1, 0, 0]  	839	4 
[4, 0, 3, 10, 0]  	839	4 
[2, 1, 5, 9, 0]  	839	4 
[1, 5, 2, 9, 0]  	839	4 
[4, 0, 11, 4, 0]  	841	4 
[3, 18, 0, 0, 0]  	843	5 
[3, 17, 1, 0, 0]  	845	4 
[2, 5, 0, 10, 0]  	845	4 
[2, 18, 1, 0, 0]  	851	4 
[1, 6, 0, 10, 0]  	851	4 
[8, 14, 0, 0, 0]  	854	5 
[2, 0, 5, 10, 0]  	855	4 
[1, 20, 0, 0, 0]  	855	4 
[1, 4, 2, 10, 0]  	855	4 
[1, 19, 1, 0, 0]  	857	4 
[1, 1, 1, 13, 0]  	860	4 
[1, 1, 5, 10, 0]  	861	4 
[1, 0, 6, 10, 0]  	863	3 
[1, 0, 10, 7, 0]  	864	4 
[2, 0, 8, 8, 0]  	870	4 
[0, 7, 3, 8, 0]  	872	3 
[0, 4, 14, 2, 0]  	880	3 
[0, 7, 10, 3, 0]  	888	3 
[1, 1, 7, 9, 0]  	890	4 
[1, 0, 8, 9, 0]  	892	3 
[1, 0, 16, 3, 0]  	894	3 
[0, 7, 5, 7, 0]  	901	3 
[0, 22, 0, 0, 0]  	902	3  <--- 2
[0, 7, 9, 4, 0]  	902	3 
[1, 0, 3, 13, 0]  	905	3 
[0, 19, 3, 0, 0]  	908	3 
[2, 1, 0, 14, 0]  	909	4 
[2, 0, 1, 14, 0]  	911	4 
[0, 17, 5, 0, 0]  	912	3 
[0, 16, 6, 0, 0]  	914	2 
[0, 7, 0, 11, 0]  	914	2 
[1, 2, 0, 14, 0]  	915	3 
[0, 7, 8, 5, 0]  	916	3 
[0, 7, 12, 2, 0]  	917	3 
[2, 0, 0, 15, 0]  	925	4 
[0, 2, 17, 2, 0]  	927	2 
[0, 1, 18, 2, 0]  	929	2 
[0, 7, 7, 6, 0]  	930	3 
[1, 1, 0, 15, 0]  	931	3 
[1, 0, 1, 15, 0]  	933	2 
[0, 3, 7, 9, 0]  	937	2 
[0, 6, 3, 10, 0]  	945	2 
[1, 0, 0, 16, 0]  	947	4 
[0, 4, 17, 1, 0]  	952	3 
[0, 1, 20, 1, 0]  	958	2 
[0, 15, 8, 0, 0]  	959	2 
[0, 6, 2, 11, 0]  	959	2 
[0, 12, 11, 0, 0]  	965	3 
[0, 2, 10, 8, 0]  	968	1 
[0, 1, 3, 14, 0]  	968	1 
[0, 10, 13, 0, 0]  	969	4 
[0, 9, 14, 0, 0]  	971	3 
[0, 6, 5, 9, 0]  	974	2 
[0, 2, 1, 15, 0]  	980	1 
[1, 0, 22, 0, 0]  	981	3 
[0, 1, 10, 9, 0]  	984	1 
[0, 0, 3, 15, 0]  	984	1 
[0, 0, 11, 9, 0]  	986	1 
[0, 6, 0, 13, 0]  	987	2 
[0, 1, 22, 0, 0]  	987	2 
[0, 2, 0, 16, 0]  	994	1 
[0, 3, 19, 1, 0]  	997	3 
[0, 1, 17, 4, 0]  	1000	1 
[0, 0, 10, 10, 0]  	1000	1 
[0, 6, 7, 8, 0]  	1003	1 
[0, 5, 0, 14, 0]  	1003	1 
[0, 0, 22, 1, 0]  	1003	1 
[0, 0, 13, 8, 0]  	1015	1 
[0, 8, 16, 0, 0]  	1016	2 
[0, 4, 0, 15, 0]  	1019	1 
[0, 5, 19, 0, 0]  	1022	2 
[0, 3, 21, 0, 0]  	1026	3 
[0, 7, 16, 1, 0]  	1032	3 
[0, 5, 2, 13, 0]  	1032	2 
[0, 3, 12, 7, 0]  	1038	1 
[0, 2, 5, 13, 0]  	1038	1 
[0, 0, 15, 7, 0]  	1044	1 
[0, 0, 6, 14, 0]  	1056	1 
[0, 0, 17, 6, 0]  	1073	1 
[0, 2, 14, 7, 0]  	1083	2 
[0, 1, 7, 13, 0]  	1083	2 
[0, 0, 8, 13, 0]  	1085	1 
[0, 1, 0, 19, 0]  	1124	1 
[0, 0, 1, 19, 0]  	1126	1 
[0, 0, 0, 20, 0]  	1140	1  <--- 4
[0, 0, 27, 0, 0]  	1161	1  <--- 3
[3, 3, 1, 1, 1]  	328	4 
[2, 1, 8, 0, 1]  	455	5 
[7, 0, 1, 6, 1]  	630	6 
[2, 6, 1, 6, 1]  	701	6 
[3, 11, 4, 0, 1]  	728	7 
[9, 0, 4, 5, 1]  	772	6 
[7, 0, 6, 5, 1]  	788	7 
[1, 1, 10, 5, 1]  	791	5 
[6, 1, 6, 5, 1]  	794	6 
[5, 1, 7, 5, 1]  	802	7 
[5, 0, 0, 11, 1]  	802	6 
[0, 7, 2, 9, 1]  	886	3 
[0, 3, 14, 3, 1]  	896	3 
[0, 2, 15, 3, 1]  	898	3 
[0, 2, 14, 4, 1]  	912	3 
[0, 1, 15, 4, 1]  	914	2 
[0, 3, 8, 8, 1]  	923	2 
[0, 1, 10, 8, 1]  	927	2 
[0, 6, 12, 3, 1]  	933	2 
[0, 1, 17, 3, 1]  	943	2 
[0, 6, 7, 7, 1]  	946	3 
[0, 5, 12, 4, 1]  	949	2 
[0, 4, 13, 4, 1]  	951	2 
[0, 3, 10, 7, 1]  	952	2 
[0, 5, 7, 8, 1]  	962	2 
[0, 4, 12, 5, 1]  	965	2 
[0, 2, 12, 7, 1]  	997	2 
[0, 1, 13, 7, 1]  	999	2 
[3, 0, 1, 7, 2]  	547	5 
[2, 0, 4, 7, 2]  	641	4 
[1, 3, 10, 1, 2]  	645	5 
[2, 0, 6, 6, 2]  	670	4 
[3, 0, 8, 5, 2]  	734	5 
[3, 0, 15, 0, 2]  	750	5 
[2, 0, 16, 0, 2]  	758	4 
[2, 16, 1, 0, 2]  	769	5 
[2, 15, 2, 0, 2]  	771	5 
[2, 3, 7, 5, 2]  	779	6 
[2, 2, 0, 11, 2]  	779	6 
[2, 0, 1, 12, 2]  	797	4 
[1, 2, 0, 12, 2]  	801	4 
[1, 18, 1, 0, 2]  	816	6 
[0, 16, 4, 0, 2]  	828	3 
[0, 8, 12, 0, 2]  	844	3 
[0, 20, 1, 0, 2]  	863	3 
[0, 4, 15, 1, 2]  	866	3 
[0, 15, 6, 0, 2]  	873	4 
[1, 1, 0, 14, 2]  	874	4 
[0, 12, 9, 0, 2]  	879	3 
[0, 3, 15, 2, 2]  	882	3 
[0, 10, 11, 0, 2]  	883	3 
[0, 6, 14, 1, 2]  	905	3 
[0, 14, 8, 0, 2]  	918	3 
[0, 5, 17, 0, 2]  	936	3 
[0, 3, 19, 0, 2]  	940	3 
[0, 2, 20, 0, 2]  	942	3 
[0, 7, 16, 0, 2]  	975	3 
[3, 0, 2, 6, 3]  	533	6 
[2, 0, 4, 6, 3]  	584	5 
[7, 7, 0, 1, 3]  	589	7 
[7, 1, 7, 1, 3]  	644	8 
[9, 1, 7, 0, 3]  	657	5 
[2, 0, 8, 5, 3]  	699	5 
[2, 0, 1, 11, 3]  	740	5 
[4, 15, 1, 0, 3]  	798	6 
[6, 14, 1, 0, 3]  	827	6 
[0, 7, 0, 10, 3]  	857	3 
[0, 2, 17, 1, 3]  	870	3 
[0, 1, 8, 9, 3]  	898	2 
[0, 2, 7, 10, 3]  	953	2 
[7, 1, 7, 0, 4]  	587	7 
[8, 0, 5, 5, 4]  	780	7 
[7, 1, 5, 5, 4]  	786	7 
[1, 0, 11, 5, 4]  	793	4 
[1, 0, 18, 0, 4]  	809	4 
[1, 0, 4, 11, 4]  	834	4 
[1, 0, 3, 12, 4]  	848	4 
[4, 1, 7, 5, 6]  	767	7 
[1, 7, 9, 0, 249]  	709	5 
[4, 0, 0, 11, 249]  	767	6 
[1, 14, 4, 0, 249]  	781	4 
[2, 10, 5, 0, 250]  	695	5 
[1, 5, 1, 10, 250]  	853	3 
[0, 14, 7, 0, 250]  	875	3 
[0, 7, 14, 0, 250]  	889	3 
[2, 6, 7, 0, 251]  	617	6 
[1, 6, 8, 0, 251]  	625	4 
[2, 5, 1, 6, 251]  	660	5 
[6, 8, 4, 0, 251]  	710	6 
[1, 13, 4, 0, 251]  	740	4 
[2, 9, 5, 0, 252]  	654	5 
[1, 5, 1, 7, 252]  	682	3 
[1, 2, 6, 6, 252]  	717	2 
[2, 2, 7, 5, 252]  	738	5 
[0, 11, 7, 0, 252]  	752	3 
[1, 1, 3, 10, 252]  	775	3 
[1, 1, 1, 12, 252]  	803	3 
[0, 4, 15, 0, 252]  	809	3 
[1, 4, 1, 10, 252]  	812	3 
[1, 1, 6, 9, 252]  	847	2 
[0, 6, 14, 0, 252]  	848	3 
[0, 0, 1, 15, 252]  	898	1 
[0, 2, 10, 7, 252]  	911	2 
[0, 5, 0, 13, 252]  	946	2 
[0, 1, 0, 16, 252]  	953	1 
[2, 5, 6, 0, 253]  	533	4 
[1, 5, 8, 0, 253]  	584	4 
[7, 0, 0, 6, 253]  	587	6 
[7, 0, 8, 0, 253]  	589	6 
[2, 4, 1, 6, 253]  	619	5 
[1, 12, 4, 0, 253]  	699	3 
[1, 11, 5, 0, 253]  	701	5 
[1, 2, 8, 5, 253]  	746	4 
[6, 0, 0, 10, 253]  	780	4 
[5, 1, 0, 10, 253]  	786	4 
[4, 0, 10, 4, 253]  	798	4 
[2, 0, 0, 14, 253]  	868	4 
[0, 3, 13, 4, 253]  	910	2 
[0, 3, 12, 5, 253]  	924	2 
[1, 1, 3, 6, 254]  	547	2 
[2, 8, 5, 0, 254]  	613	3 
[1, 4, 1, 7, 254]  	641	2 
[1, 12, 3, 0, 254]  	656	3 
[2, 6, 0, 6, 254]  	658	2 
[2, 5, 0, 7, 254]  	674	3 
[1, 7, 2, 5, 254]  	693	3 
[2, 1, 7, 5, 254]  	697	5 
[0, 10, 7, 0, 254]  	711	3 
[1, 0, 3, 10, 254]  	734	2 
[1, 0, 11, 4, 254]  	736	2 
[0, 7, 3, 6, 254]  	758	2 
[1, 0, 1, 12, 254]  	762	2 
[3, 0, 10, 4, 254]  	763	3 
[1, 0, 17, 0, 254]  	766	4 
[0, 3, 15, 0, 254]  	768	3 
[0, 7, 10, 1, 254]  	774	3 
[2, 4, 0, 10, 254]  	804	3 
[1, 0, 10, 6, 254]  	807	3 
[0, 1, 15, 3, 254]  	857	2 
[0, 7, 8, 4, 254]  	859	2 
[0, 18, 3, 0, 254]  	867	2 
[0, 1, 10, 7, 254]  	870	2 
[0, 6, 0, 11, 254]  	873	2 
[0, 0, 10, 9, 254]  	943	1 
[1, 4, 3, 0, 255]  	328	2 
[2, 3, 1, 6, 255]  	578	4 
[0, 1, 8, 5, 255]  	670	2 
[0, 0, 1, 11, 255]  	670	1 
[5, 12, 2, 0, 255]  	753	2 
[8, 12, 0, 0, 255]  	772	2 
[7, 12, 1, 0, 255]  	780	6 
[6, 13, 1, 0, 255]  	786	6 
[0, 4, 0, 11, 255]  	791	1 
[4, 16, 0, 0, 255]  	796	2 
[0, 1, 13, 4, 255]  	828	2 
[0, 0, 6, 10, 255]  	828	1 
[0, 5, 7, 6, 255]  	848	2 
[0, 0, 8, 9, 255]  	857	1 
[0, 5, 10, 4, 255]  	863	2 
[0, 4, 3, 10, 255]  	863	1 
[0, 1, 17, 2, 255]  	886	1 
[0, 2, 7, 9, 255]  	896	2 
[0, 5, 5, 9, 255]  	933	1 
[0, 0, 22, 0, 255]  	946	1 
------
The gap is between 7 and 248.
Lengths: 2 2 6 6 2 3.
For 979 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^11*w^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^12

For 594 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^1*z^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^13
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^3*w^6

For 209 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[11251611346390743920 + 5814280652322363349*2^64 + 8058092009309199260*2^128 + 3568040145*2^192,629025255003886560 + 3666424595188586823*2^64 + 14799229167761699835*2^128 + 2670157734*2^192,7713361558775937152 + 6121841515070509338*2^64 + 1975387870620823772*2^128 + 2578305416*2^192,18012196910312894064 + 6904763666247754941*2^64 + 14351289454406457358*2^128 + 4196496755*2^192,17971329033757101216 + 9993313282770045841*2^64 + 5725987942605688959*2^128 + 1321164847*2^192,2607045348533781688 + 14405682739094699676*2^64 + 4944020940089306705*2^128 + 1070855310*2^192,1867948216030660528 + 13842092231667331372*2^64 + 6801133544643923324*2^128 + 4243375591*2^192,10272735242301567664 + 14636948519066655300*2^64 + 4440597162786030256*2^128 + 2538731563*2^192,14633622330230680416 + 3583897620298806229*2^64 + 10433322461771289731*2^128 + 908028145*2^192,10082182426208791904 + 641933369381212438*2^64 + 11076952725774397348*2^128 + 3076246866*2^192;\
18100359245652451014 + 14958395773577317136*2^64 + 12476221326174532997*2^128 + 1688705614*2^192,16725486547842882116 + 5151345445950185905*2^64 + 6031875873185634595*2^128 + 4258938629*2^192,8279483901203720536 + 15047922284560718928*2^64 + 2023080908100941206*2^128 + 263488905*2^192,3704752875899685672 + 10138076926352520433*2^64 + 10708295421655760712*2^128 + 432589298*2^192,2774898277642675280 + 6242208661113500196*2^64 + 9604124166869282225*2^128 + 1323345722*2^192,2489689561832001148 + 8379718364559318304*2^64 + 3974575045963846439*2^128 + 2358946209*2^192,3936071339100846424 + 5811847712966400516*2^64 + 6044710666189790764*2^128 + 4174018370*2^192,13502717443470527480 + 1810590937761188746*2^64 + 17511853547447001893*2^128 + 2478831243*2^192,3859506292906150480 + 9986815100047938349*2^64 + 334030122139705806*2^128 + 1460405055*2^192,8968163154076439088 + 7025526351007134043*2^64 + 14616147771760940426*2^128 + 1395144498*2^192;\
828139908227215788 + 3045130653672218756*2^64 + 10364958535563553433*2^128 + 1104735120*2^192,10535183319465105312 + 13018462101510073515*2^64 + 4482969808317144060*2^128 + 1350782298*2^192,17468212547238717192 + 12612980353408138511*2^64 + 11646122680264766100*2^128 + 1249090364*2^192,3888447785494615904 + 6975956515712931180*2^64 + 8125982005452350232*2^128 + 1953673684*2^192,11256158235279666832 + 5995324469564774043*2^64 + 950600999610641739*2^128 + 292250744*2^192,15793801186293739640 + 15663750802260413839*2^64 + 5714225343597831545*2^128 + 2049845155*2^192,11166652676472587568 + 7361877633835644696*2^64 + 5493806047863683932*2^128 + 406933705*2^192,9645846044146131888 + 2544584346826623042*2^64 + 13340929727465069597*2^128 + 197511853*2^192,9408911674451711680 + 2618258465551898302*2^64 + 6740296024455437383*2^128 + 1408636738*2^192,9745350386430638048 + 10734507118334661052*2^64 + 15750651935922132459*2^128 + 544173552*2^192;\
8639705199311656104 + 14337347003615110887*2^64 + 7860887519539937537*2^128 + 1239598106*2^192,5167879691596390200 + 10665199439279448973*2^64 + 2711491282610958017*2^128 + 1472794885*2^192,4470326707365423400 + 17301912445894100426*2^64 + 11834947750808498516*2^128 + 249161389*2^192,9818456090422327312 + 13604353416164909121*2^64 + 195530341541055107*2^128 + 474621195*2^192,17903013159622594064 + 7166767025305041066*2^64 + 14502909967243107785*2^128 + 959936887*2^192,15680327185996401440 + 12172977333683799299*2^64 + 16640884803994938805*2^128 + 741757179*2^192,2811538191234406320 + 8321739932051621767*2^64 + 12951680606177034082*2^128 + 464970546*2^192,13776848600283013632 + 6284570666823593907*2^64 + 16195450004001162146*2^128 + 525296344*2^192,12359157821279151200 + 8027197256247942200*2^64 + 4252374952499739342*2^128 + 599533688*2^192,6510764981543507808 + 2961355628198926487*2^64 + 6953963165701362559*2^128 + 230606096*2^192;\
10647566512954293580 + 9989758437497812784*2^64 + 11587925781020761359*2^128 + 499238598*2^192,14731502387484476176 + 9909283905787764956*2^64 + 7405261241282338128*2^128 + 3886746378*2^192,478461471854572256 + 5861469527408628212*2^64 + 16117331686181661586*2^128 + 2668719581*2^192,10412759736277046376 + 3911171580802395733*2^64 + 18065980022164384179*2^128 + 417616846*2^192,6063396597664548960 + 12804073329244184090*2^64 + 15302734345369115061*2^128 + 2736803965*2^192,14992240824647742552 + 15856125084581270219*2^64 + 9595754880903162929*2^128 + 2110667730*2^192,11708203870456063232 + 8235103101806529567*2^64 + 3975384325503835049*2^128 + 3352324626*2^192,1829033595285234832 + 6917983470219695318*2^64 + 16548741157818059550*2^128 + 518091850*2^192,8942428015761469744 + 14107648757960618823*2^64 + 16648805131299611922*2^128 + 4125353407*2^192,17436305496155202944 + 9209784096713631890*2^64 + 13477768217571329023*2^128 + 800181944*2^192;\
9059661335044278612 + 4488171539248265034*2^64 + 10010018613175196442*2^128 + 865438270*2^192,15906677582199190700 + 15928861570792123579*2^64 + 11742408108338449256*2^128 + 3945193469*2^192,13463410962956417112 + 1694746248193231401*2^64 + 11751053173386469947*2^128 + 1824679592*2^192,8123764873249781448 + 7012650392033778490*2^64 + 9068469599611135849*2^128 + 3875860385*2^192,4230537135421784472 + 18047264069259766310*2^64 + 13538548477971983662*2^128 + 1574191742*2^192,4155610090302430352 + 15706492856845639546*2^64 + 5473364706050829548*2^128 + 1725530834*2^192,8496546765393959688 + 15586363648125059719*2^64 + 16807050612035222109*2^128 + 1599175560*2^192,12617949909282415392 + 17000502521043478274*2^64 + 15897840410661129490*2^128 + 2806433530*2^192,5895844322347185376 + 14967876855144478706*2^64 + 8096347744439513992*2^128 + 209374940*2^192,1805667842635447984 + 10218458027762093259*2^64 + 13722863162881855607*2^128 + 2891888799*2^192;\
6931680720484222493 + 8494786186143391997*2^64 + 7431238527830237778*2^128 + 2643421704*2^192,14678402820812583682 + 14197743345830216720*2^64 + 9079410755603014526*2^128 + 3211065866*2^192,17997977016802699236 + 103553493638911387*2^64 + 9149742068577695668*2^128 + 1674583836*2^192,10900465022244041308 + 4220464773459354367*2^64 + 169374039336911247*2^128 + 1855355436*2^192,16561310645810140104 + 1308869048189911886*2^64 + 1056531935824210007*2^128 + 851002137*2^192,2786802865360073898 + 13768016069883481999*2^64 + 13836829191692507530*2^128 + 1296897680*2^192,9165447280346813004 + 12926522496936530586*2^64 + 14902634825448654653*2^128 + 3533204734*2^192,5020304707019933708 + 9206360658964010190*2^64 + 15086947911077213335*2^128 + 3527303843*2^192,10946793243200579832 + 12867278919439875806*2^64 + 18162567294548788411*2^128 + 3533242571*2^192,11346079683433603512 + 12989181641071405514*2^64 + 10076020028182196235*2^128 + 173172012*2^192;\
13113734292573265218 + 390039713279395466*2^64 + 6105019782637375744*2^128 + 1162815985*2^192,9879405514989453656 + 6889456448925534911*2^64 + 8493576529654411656*2^128 + 3022563867*2^192,7690926132330943944 + 17934464830346630531*2^64 + 4568286528288685878*2^128 + 3983196598*2^192,10749310802161679464 + 1509458189607730603*2^64 + 16555095493202102655*2^128 + 3888075203*2^192,7877360152670959200 + 9357980488566413127*2^64 + 624708102399714136*2^128 + 3526366061*2^192,2681000401699355212 + 12429227051522091226*2^64 + 6964582904923625930*2^128 + 4193602108*2^192,17716858978328825280 + 9533474411407328834*2^64 + 10321299971058959812*2^128 + 1838695415*2^192,3883365499215356872 + 1222709063112572354*2^64 + 5418973288041580917*2^128 + 871184628*2^192,7405560419075592288 + 10239917586672057304*2^64 + 10233885132307495562*2^128 + 2962255476*2^192,11329752474484173008 + 1335772888651954320*2^64 + 18170680278039557221*2^128 + 577347092*2^192;\
14221646753225633568 + 487192246713286215*2^64 + 13556802488273657800*2^128 + 1773351787*2^192,11441620151590757720 + 16830254228326923131*2^64 + 10224421228558104107*2^128 + 1068911878*2^192,3914753870741323376 + 17811623430141776019*2^64 + 583695588943605757*2^128 + 1755422572*2^192,18178475188916752320 + 3584832106720215639*2^64 + 16390234513725894871*2^128 + 1226178492*2^192,17603537003236800704 + 6527843768717272681*2^64 + 5548492194339786813*2^128 + 2031658226*2^192,13116328771291322320 + 11940194909568697368*2^64 + 5860532515692837263*2^128 + 1647065031*2^192,5843752122595566224 + 2482019354197994007*2^64 + 5332385739554945327*2^128 + 1201299150*2^192,2669578555956265440 + 3272292683447818851*2^64 + 3811219692816703871*2^128 + 1728621073*2^192,11648862226069348720 + 8732544317126518420*2^64 + 9697170733087615124*2^128 + 15649555*2^192,15534674982419936608 + 4421828832203389245*2^64 + 12007942552417299453*2^128 + 1905477420*2^192;\
12340656823201362030 + 1265224645384071052*2^64 + 5686025889605997093*2^128 + 3507708900*2^192,17972072955684594028 + 10402463071127103563*2^64 + 14054141344846646097*2^128 + 3311942800*2^192,4077630433297024824 + 2260506019700501619*2^64 + 11957573366067773680*2^128 + 1093917781*2^192,13112463821160408872 + 8133641217735819073*2^64 + 13229469620095456100*2^128 + 3097956244*2^192,6040459023938293040 + 4871686184607322904*2^64 + 1415530459456845754*2^128 + 2043652135*2^192,11696928666748932924 + 12692120006631957394*2^64 + 5204320406623837604*2^128 + 1911184581*2^192,4422205904528622824 + 16268678435618863049*2^64 + 1510531079201938686*2^128 + 3571247511*2^192,6765416862252087752 + 2130497833305742903*2^64 + 13695274731931948096*2^128 + 3388979758*2^192,17807950327361365808 + 13389257671112360764*2^64 + 18409858341381308774*2^128 + 3375072556*2^192,10259252313947983552 + 14282463968803364406*2^64 + 397529477745048127*2^128 + 2714748444*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2902 lists. */
The sign is: 1
The characteristic polynomial is: x^10 + 3*x^8 - 8*x^6 + 8*x^5 - 32*x^4 + 192*x^2 + 1024
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: Mat([x^10 + 3*x^8 - 8*x^6 + 8*x^5 - 32*x^4 + 192*x^2 + 1024, 1])
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 27
