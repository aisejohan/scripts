/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^11                     = Coefficient of   x^3 * y^3 * z^1 * w^2   = Coefficient of   x^2 * z^6 * w^1         = Coefficient of   x^1 * y^4 * z^3 * w^1   = Coefficient of   y^8 * w^1               = Coefficient of   y^1 * z^8               = Coefficient of   z^1 * w^6               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^11 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*z^6*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^4*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^6


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 263
[2, 0, 6, 0, 0]  	328	4 
[10, 0, 0, 0, 0]  	350	3  <--- 1
[1, 4, 3, 1, 0]  	385	3 
[0, 1, 8, 0, 0]  	385	2 
[1, 8, 2, 1, 0]  	506	4 
[1, 0, 11, 0, 0]  	508	3 
[1, 0, 4, 6, 0]  	549	3 
[9, 4, 3, 0, 0]  	608	5 
[9, 4, 2, 1, 0]  	622	7 
[0, 8, 7, 0, 0]  	629	2 
[9, 8, 0, 0, 0]  	643	4 
[9, 0, 0, 6, 0]  	657	6 
[1, 9, 6, 0, 0]  	662	5 
[8, 8, 0, 1, 0]  	665	7 
[0, 1, 7, 6, 0]  	684	2 
[8, 5, 5, 0, 0]  	700	5 
[0, 16, 0, 1, 0]  	713	3 
[1, 0, 10, 5, 0]  	750	4 
[8, 0, 3, 6, 0]  	751	9 
[7, 1, 3, 6, 0]  	757	8 
[7, 12, 1, 0, 0]  	780	7 
[8, 4, 0, 6, 0]  	786	7 
[6, 13, 1, 0, 0]  	786	7 
[7, 12, 0, 1, 0]  	794	7 
[6, 9, 5, 0, 0]  	794	7 
[6, 13, 0, 1, 0]  	800	6 
[5, 10, 5, 0, 0]  	800	6 
[1, 16, 3, 0, 0]  	820	3 
[0, 16, 4, 0, 0]  	828	3 
[6, 12, 3, 0, 0]  	831	6 
[7, 4, 2, 6, 0]  	837	7 
[5, 13, 3, 0, 0]  	837	6 
[5, 12, 4, 0, 0]  	839	5 
[4, 16, 1, 0, 0]  	839	5 
[6, 5, 2, 6, 0]  	843	7 
[4, 14, 3, 0, 0]  	843	6 
[5, 8, 0, 6, 0]  	845	6 
[4, 13, 4, 0, 0]  	845	6 
[3, 17, 1, 0, 0]  	845	5 
[2, 18, 1, 0, 0]  	851	4 
[1, 19, 1, 0, 0]  	857	3 
[0, 20, 1, 0, 0]  	863	3 
[6, 16, 0, 0, 0]  	866	5 
[7, 0, 0, 11, 0]  	872	6 
[5, 17, 0, 0, 0]  	872	5 
[6, 0, 1, 11, 0]  	880	3 
[4, 1, 3, 10, 0]  	880	4 
[5, 1, 1, 11, 0]  	886	3 
[3, 2, 3, 10, 0]  	886	5 
[1, 21, 0, 0, 0]  	896	4 
[0, 8, 0, 10, 0]  	898	2 
[3, 1, 3, 11, 0]  	902	4 
[2, 2, 3, 11, 0]  	908	4 
[0, 19, 3, 0, 0]  	908	3 
[6, 0, 3, 10, 0]  	909	4 
[1, 3, 3, 11, 0]  	914	3 
[3, 13, 0, 5, 0]  	923	3 
[3, 20, 0, 0, 0]  	925	5 
[0, 8, 2, 9, 0]  	927	2 
[2, 14, 0, 5, 0]  	929	3 
[0, 7, 3, 9, 0]  	929	2 
[0, 13, 4, 4, 0]  	933	2 
[3, 5, 0, 11, 0]  	937	2 
[1, 14, 1, 5, 0]  	937	2 
[1, 6, 2, 10, 0]  	937	2 
[0, 11, 6, 4, 0]  	937	2 
[2, 6, 0, 11, 0]  	943	2 
[0, 23, 0, 0, 0]  	943	3  <--- 2
[0, 15, 1, 5, 0]  	943	2 
[2, 13, 0, 6, 0]  	945	4 
[0, 14, 2, 5, 0]  	945	3 
[0, 12, 4, 5, 0]  	949	2 
[1, 14, 0, 6, 0]  	951	3 
[0, 11, 5, 5, 0]  	951	2 
[5, 12, 0, 5, 0]  	952	4 
[0, 10, 2, 8, 0]  	952	2 
[1, 13, 1, 6, 0]  	953	2 
[1, 5, 2, 11, 0]  	953	2 
[0, 10, 6, 5, 0]  	953	2 
[0, 15, 0, 6, 0]  	957	3 
[0, 15, 4, 3, 0]  	958	2 
[0, 14, 1, 6, 0]  	959	3 
[0, 13, 6, 3, 0]  	962	2 
[0, 11, 4, 6, 0]  	965	2 
[5, 4, 0, 11, 0]  	966	2 
[3, 5, 2, 10, 0]  	966	3 
[2, 0, 1, 15, 0]  	968	1 
[0, 1, 3, 14, 0]  	968	1 
[0, 2, 1, 15, 0]  	980	1 
[2, 0, 0, 16, 0]  	982	2 
[0, 0, 3, 15, 0]  	984	1 
[0, 0, 11, 9, 0]  	986	1 
[1, 2, 3, 13, 0]  	987	2 
[0, 15, 6, 2, 0]  	987	2 
[0, 2, 0, 16, 0]  	994	1 
[5, 4, 2, 10, 0]  	995	4 
[0, 7, 2, 11, 0]  	1000	1 
[0, 0, 10, 10, 0]  	1000	1 
[0, 5, 0, 14, 0]  	1003	1 
[0, 0, 22, 1, 0]  	1003	1 
[0, 0, 13, 8, 0]  	1015	1 
[0, 4, 0, 15, 0]  	1019	1 
[0, 14, 0, 8, 0]  	1030	2 
[0, 13, 1, 8, 0]  	1032	2 
[0, 2, 5, 13, 0]  	1038	1 
[0, 0, 15, 7, 0]  	1044	1 
[0, 13, 0, 9, 0]  	1046	1 
[0, 0, 6, 14, 0]  	1056	1 
[0, 6, 2, 13, 0]  	1073	1 
[0, 0, 17, 6, 0]  	1073	1 
[0, 9, 6, 8, 0]  	1083	2 
[0, 0, 8, 13, 0]  	1085	1 
[1, 0, 0, 19, 0]  	1118	2 
[0, 1, 0, 19, 0]  	1124	1 
[0, 0, 1, 19, 0]  	1126	1 
[0, 0, 0, 20, 0]  	1140	1  <--- 4
[0, 0, 27, 0, 0]  	1161	1  <--- 3
[2, 0, 5, 1, 1]  	342	4 
[1, 7, 2, 1, 1]  	465	4 
[1, 12, 1, 1, 1]  	627	4 
[1, 4, 2, 6, 1]  	627	4 
[1, 12, 4, 0, 1]  	699	4 
[8, 0, 4, 5, 1]  	737	5 
[7, 1, 4, 5, 1]  	743	5 
[7, 8, 5, 0, 1]  	788	7 
[6, 15, 0, 0, 1]  	825	5 
[4, 9, 0, 6, 1]  	851	6 
[4, 1, 1, 11, 1]  	851	6 
[3, 10, 0, 6, 1]  	857	5 
[3, 2, 1, 11, 1]  	857	5 
[4, 0, 3, 11, 1]  	896	6 
[3, 4, 0, 11, 1]  	896	5 
[0, 10, 0, 9, 1]  	923	2 
[2, 9, 0, 9, 1]  	952	3 
[2, 1, 1, 14, 1]  	952	2 
[1, 2, 1, 14, 1]  	958	2 
[1, 0, 3, 14, 1]  	962	2 
[1, 4, 0, 14, 1]  	997	3 
[1, 3, 3, 1, 2]  	344	3 
[2, 0, 1, 6, 2]  	455	4 
[1, 11, 0, 1, 2]  	543	4 
[1, 3, 1, 7, 2]  	600	3 
[1, 7, 0, 6, 2]  	664	4 
[0, 15, 0, 1, 2]  	672	3 
[2, 0, 0, 11, 2]  	697	5 
[1, 0, 0, 12, 2]  	719	3 
[7, 4, 0, 6, 2]  	751	8 
[6, 5, 0, 6, 2]  	757	7 
[1, 0, 3, 11, 2]  	791	4 
[0, 15, 6, 0, 2]  	873	4 
[3, 5, 0, 10, 2]  	880	5 
[2, 6, 0, 10, 2]  	886	4 
[0, 22, 0, 0, 2]  	902	4 
[1, 6, 0, 11, 2]  	908	3 
[5, 4, 0, 10, 2]  	909	6 
[0, 7, 0, 11, 2]  	914	2 
[0, 7, 2, 10, 2]  	943	2 
[0, 9, 4, 8, 2]  	997	2 
[0, 8, 5, 8, 2]  	999	2 
[9, 7, 0, 1, 3]  	659	6 
[8, 3, 0, 6, 3]  	745	8 
[1, 3, 0, 11, 3]  	785	4 
[1, 2, 1, 7, 4]  	559	3 
[0, 14, 0, 2, 4]  	688	3 
[0, 6, 3, 10, 4]  	945	2 
[0, 7, 5, 8, 4]  	958	2 
[0, 6, 2, 11, 4]  	959	2 
[0, 6, 5, 9, 4]  	974	2 
[0, 6, 0, 13, 4]  	987	2 
[0, 13, 0, 8, 6]  	989	3 
[0, 5, 2, 13, 7]  	1032	2 
[0, 0, 24, 0, 245]  	1032	1 
[0, 0, 20, 0, 246]  	860	1 
[0, 0, 18, 3, 246]  	945	1 
[0, 0, 17, 4, 246]  	959	1 
[0, 0, 13, 5, 248]  	844	1 
[0, 7, 7, 5, 248]  	873	3 
[0, 6, 2, 10, 248]  	902	2 
[0, 0, 16, 4, 248]  	916	1 
[1, 18, 1, 0, 249]  	816	3 
[0, 17, 3, 0, 249]  	826	3 
[0, 12, 4, 4, 249]  	892	2 
[0, 11, 5, 4, 249]  	894	2 
[0, 6, 1, 11, 249]  	916	2 
[0, 6, 0, 12, 249]  	930	2 
[0, 0, 18, 0, 250]  	774	1 
[0, 18, 1, 0, 250]  	781	2 
[0, 14, 4, 1, 250]  	803	2 
[0, 7, 7, 4, 250]  	816	3 
[0, 0, 6, 10, 250]  	828	1 
[0, 14, 6, 0, 250]  	832	3 
[0, 10, 2, 6, 250]  	838	2 
[0, 10, 5, 4, 250]  	853	2 
[0, 21, 0, 0, 250]  	861	3 
[0, 12, 2, 5, 250]  	863	2 
[0, 10, 4, 5, 250]  	867	2 
[0, 1, 5, 11, 250]  	883	1 
[0, 6, 3, 9, 250]  	888	2 
[0, 13, 1, 6, 250]  	918	2 
[0, 5, 5, 9, 250]  	933	1 
[0, 4, 5, 10, 250]  	949	1 
[0, 16, 1, 0, 251]  	699	3 
[5, 9, 5, 0, 251]  	759	6 
[0, 10, 2, 5, 251]  	781	2 
[0, 15, 4, 0, 251]  	787	3 
[0, 13, 6, 0, 251]  	791	3 
[4, 13, 3, 0, 251]  	802	5 
[1, 6, 0, 10, 251]  	851	3 
[0, 7, 0, 10, 251]  	857	2 
[0, 6, 1, 10, 251]  	859	2 
[1, 5, 7, 0, 252]  	541	4 
[0, 9, 5, 0, 252]  	584	2 
[0, 12, 4, 0, 252]  	664	2 
[0, 5, 3, 6, 252]  	676	1 
[0, 0, 16, 0, 252]  	688	1 
[1, 13, 3, 0, 252]  	697	3 
[0, 9, 2, 5, 252]  	740	2 
[1, 1, 1, 11, 252]  	746	3 
[0, 8, 2, 6, 252]  	756	1 
[0, 0, 11, 5, 252]  	758	1 
[1, 1, 3, 10, 252]  	775	3 
[0, 7, 5, 5, 252]  	787	2 
[0, 1, 3, 11, 252]  	797	1 
[1, 5, 0, 10, 252]  	810	3 
[0, 13, 0, 5, 252]  	818	2 
[0, 20, 0, 0, 252]  	820	3 
[0, 4, 3, 10, 252]  	863	1 
[0, 6, 0, 11, 252]  	873	2 
[0, 5, 1, 11, 252]  	875	1 
[0, 5, 0, 12, 252]  	889	1 
[0, 0, 1, 15, 252]  	898	1 
[0, 0, 0, 16, 252]  	912	1 
[0, 0, 13, 0, 253]  	559	1 
[0, 7, 7, 1, 253]  	645	3 
[8, 4, 5, 0, 253]  	659	4 
[1, 1, 7, 5, 253]  	662	4 
[0, 9, 0, 6, 253]  	711	2 
[0, 1, 1, 11, 253]  	711	1 
[6, 4, 0, 6, 253]  	716	7 
[6, 12, 1, 0, 253]  	745	3 
[0, 4, 0, 11, 253]  	791	1 
[0, 0, 8, 0, 254]  	344	1 
[1, 4, 5, 0, 254]  	414	3 
[0, 8, 2, 1, 254]  	471	2 
[1, 0, 3, 6, 254]  	506	2 
[0, 8, 5, 0, 254]  	543	2 
[0, 12, 0, 1, 254]  	549	1 
[1, 12, 1, 0, 254]  	570	3 
[2, 4, 0, 6, 254]  	576	4 
[1, 4, 0, 7, 254]  	598	3 
[0, 0, 6, 6, 254]  	600	1 
[0, 15, 0, 0, 254]  	615	3 
[0, 7, 0, 6, 254]  	629	2 
[0, 4, 3, 6, 254]  	635	1 
[0, 0, 1, 11, 254]  	670	1 
[0, 6, 1, 7, 254]  	688	2 
[7, 0, 4, 5, 254]  	702	4 
[1, 2, 0, 11, 254]  	744	4 
[1, 4, 2, 1, 255]  	342	2 
[1, 0, 4, 5, 255]  	492	3 
[0, 12, 0, 0, 255]  	492	1 
[0, 7, 5, 1, 255]  	559	2 
[0, 6, 7, 5, 255]  	832	2 
------
The gap is between 8 and 244.
Lengths: 2 2 6 7 2 8.
For 979 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^11*z^3*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4*w^12

For 594 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^1*z^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^5*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^10*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^11*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^3*w^6

For 209 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^2

Extra powers of p used 9.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[12107587721242306040 + 156648579068642405*2^64 + 10658138096288863302*2^128 + 272483348429*2^192,5475982001435458424 + 16086293494784794378*2^64 + 8854665956165022378*2^128 + 159841955785*2^192,4875804139489414704 + 11996136057572827686*2^64 + 16448697306415669905*2^128 + 237491464572*2^192,13636849257054013104 + 2733357859348723949*2^64 + 3466258175876994619*2^128 + 152901026436*2^192,11755186179325398432 + 7635448160869383917*2^64 + 17387527612630325615*2^128 + 225448018448*2^192,4793403822319562960 + 1235233167692644848*2^64 + 16131759726886884656*2^128 + 11221268649*2^192,18083501173782861920 + 4626690528139567221*2^64 + 16642307423426229929*2^128 + 169115174106*2^192,2324593010200394848 + 3059984656098412775*2^64 + 9640632936734494939*2^128 + 139083598330*2^192,4261239438011521536 + 4480626593259456585*2^64 + 2582383623813295083*2^128 + 59476018287*2^192,4587644722137278560 + 7187731429811308064*2^64 + 7803232945945661417*2^128 + 42223734090*2^192;\
15353389162150421240 + 1286295102830013898*2^64 + 8323902936691178727*2^128 + 31908183325*2^192,15750240595734061016 + 9296184885059203805*2^64 + 12687680353393721447*2^128 + 206107506038*2^192,18347589690901511664 + 5157010838154476225*2^64 + 8824461217532776775*2^128 + 191734826539*2^192,16957127760892039600 + 2657428458343251200*2^64 + 15001293767610434592*2^128 + 113877768522*2^192,5456799327730561184 + 11860623493140632566*2^64 + 4385025546045210210*2^128 + 37221724183*2^192,3592803108767574032 + 18353680074908810182*2^64 + 14964832705430353636*2^128 + 155323245443*2^192,4566790547950827360 + 11841699992393142200*2^64 + 5903097978278452880*2^128 + 76941616406*2^192,680339995771006176 + 185070851144291481*2^64 + 15042419230948103378*2^128 + 16703619206*2^192,16299941799543301760 + 12094580365239164480*2^64 + 3437597155168419794*2^128 + 208397129618*2^192,5609702073232684768 + 10992886773263707889*2^64 + 5473546884866465807*2^128 + 170814056457*2^192;\
9091078343744768064 + 14582359569955480005*2^64 + 15774152647106469578*2^128 + 120899725894*2^192,814073670743241024 + 5394461482401893234*2^64 + 9527709829008344572*2^128 + 50662977559*2^192,5750788330765844608 + 17204131202974802678*2^64 + 15707613327798081299*2^128 + 4920918856*2^192,6463309504543814784 + 12476058740060118830*2^64 + 2985333890075063573*2^128 + 130041764746*2^192,8192505747071063808 + 13882233252838073843*2^64 + 12235443004005463387*2^128 + 37532815745*2^192,5675585720276133760 + 4683656401920052508*2^64 + 7750028433892147495*2^128 + 67821214081*2^192,3181443786806137088 + 4157987466374382610*2^64 + 14329859372350790659*2^128 + 89771904228*2^192,18257148231632679168 + 5966304062744562227*2^64 + 7458437816646918763*2^128 + 98359523479*2^192,11616717251347372032 + 10829395064850585416*2^64 + 7304140420539625854*2^128 + 39977673984*2^192,5200825305323503872 + 18407118026625160956*2^64 + 8328778718503318951*2^128 + 26418075476*2^192;\
13856487084045483808 + 11692923107584037369*2^64 + 9886168024652693623*2^128 + 25954107708*2^192,5553075602010735008 + 17742398975760311028*2^64 + 7470131560675566009*2^128 + 126676267946*2^192,2065477288822140992 + 386191704494973149*2^64 + 9720550620181424817*2^128 + 115690911301*2^192,247310074555076416 + 15825719691345634907*2^64 + 7602270058799536960*2^128 + 134789041780*2^192,15154412292079073664 + 3699060125453362713*2^64 + 1646651815064858609*2^128 + 25343091803*2^192,12515913134698827200 + 5045636992889392171*2^64 + 17755472874404141759*2^128 + 87889140063*2^192,9790247200959543936 + 10482340965077511412*2^64 + 7349326680376399679*2^128 + 99281927947*2^192,6598504862396789888 + 11054819189947977186*2^64 + 18032372485684847867*2^128 + 123231340122*2^192,8520326295592723968 + 15973808489318616937*2^64 + 16980016200777797434*2^128 + 116019871378*2^192,5527127219102791808 + 13216905761479419796*2^64 + 8116413494906631314*2^128 + 13620552881*2^192;\
2445121829508064352 + 1808646204240695350*2^64 + 2174915422700639006*2^128 + 34515854300*2^192,10695248620680376672 + 5761849203569771239*2^64 + 3136381930760457808*2^128 + 95958443561*2^192,1239625646328034240 + 15413083881793520247*2^64 + 3740455507326994588*2^128 + 119135896096*2^192,4682716786103290816 + 6590814075951167076*2^64 + 10229172280208709277*2^128 + 84014818455*2^192,2733433296980244608 + 15049774417175094282*2^64 + 2856455022776668345*2^128 + 133319807282*2^192,8738568699947677760 + 14716431075415803511*2^64 + 1733955271788219060*2^128 + 17469232808*2^192,9749519408041656192 + 3111767045148709751*2^64 + 14547577102406002053*2^128 + 107352011274*2^192,7779810316783525760 + 9409355632481178649*2^64 + 7014406935403195173*2^128 + 135186226329*2^192,1711781693016100864 + 3145221316477236519*2^64 + 7165387687642289448*2^128 + 66829344791*2^192,10734413187401258880 + 13964337553284527767*2^64 + 3000656439820374006*2^128 + 35505593575*2^192;\
3679238223751196600 + 14409304416409066085*2^64 + 15506606613554579345*2^128 + 146131077821*2^192,2456071556031669032 + 5480491659320334433*2^64 + 17467724917496933339*2^128 + 192793903944*2^192,17924895331681773840 + 6525813199297138856*2^64 + 11544774956450886938*2^128 + 259022238055*2^192,14317323589512788144 + 8774599468158146614*2^64 + 9341287142835940904*2^128 + 26399969361*2^192,16448756190938125344 + 6900376655696106087*2^64 + 1217525143652725094*2^128 + 22298024789*2^192,10253762168589086576 + 8586303213293737407*2^64 + 10626284578149961488*2^128 + 171851705330*2^192,1075253026386464992 + 4740872663863024828*2^64 + 987904715499249129*2^128 + 137043472649*2^192,13882311808778492576 + 17102825140766615585*2^64 + 18100339464022264042*2^128 + 214255638641*2^192,13682784555679997760 + 4618307854909412045*2^64 + 12987055037442512296*2^128 + 6341673991*2^192,16907276192075279264 + 17932081422870000051*2^64 + 2484570724481343675*2^128 + 55936571775*2^192;\
15135056618555321111 + 16195682823484710785*2^64 + 4405873922926555186*2^128 + 189950669686*2^192,13727515501289775591 + 925903217064349561*2^64 + 14665726967255793706*2^128 + 146185891667*2^192,8842305595506882806 + 4135580747939954660*2^64 + 8246340902507766657*2^128 + 80034784817*2^192,7103493414320625350 + 17420723518092827031*2^64 + 18098007903788282287*2^128 + 167339907209*2^192,16139701149712976596 + 10770610616280307837*2^64 + 4406024138382047665*2^128 + 68105835363*2^192,3660705655501395946 + 13482624589741428312*2^64 + 17633750821717526237*2^128 + 8962743892*2^192,11811259605006308076 + 6677503917605654478*2^64 + 10046481490985646899*2^128 + 185123969675*2^192,4001261678535720940 + 13323433490649392080*2^64 + 10352122456108621082*2^128 + 18934066602*2^192,218779386180935360 + 9651351882659439140*2^64 + 4582378820709400456*2^128 + 205763531826*2^192,11328727176676839276 + 2764235565542091623*2^64 + 12638370284906179772*2^128 + 242476106350*2^192;\
14779780483718281833 + 10890880210535771144*2^64 + 8741278168556059491*2^128 + 187177519140*2^192,16243974762973744185 + 3544014038327632005*2^64 + 8794359770045677170*2^128 + 114437580156*2^192,1767089903869731914 + 13807376238998207194*2^64 + 4551520705382068618*2^128 + 10412563286*2^192,9086916653538117946 + 16261538690425077010*2^64 + 7878467681374830703*2^128 + 90144402928*2^192,12845119860878971436 + 14579029491045335766*2^64 + 13123366007369133508*2^128 + 173264570055*2^192,15170824884052410326 + 14118077030089382337*2^64 + 11198297440728225562*2^128 + 204807125804*2^192,5210679804787828756 + 4233003995801442640*2^64 + 3902680042413419604*2^128 + 238482945038*2^192,1968126417503818132 + 13043690266063253246*2^64 + 7153224189337271417*2^128 + 125341796340*2^192,3729473326815747264 + 7290601616398744713*2^64 + 451907878457491384*2^128 + 61745503948*2^192,11430743245907930132 + 1270293459180386965*2^64 + 7378854742651834776*2^128 + 103838260408*2^192;\
15008885199043051383 + 692518871437819431*2^64 + 13589743737321180241*2^128 + 151231008419*2^192,10768384344099880679 + 14776750643680058500*2^64 + 2783892208636945338*2^128 + 261355910698*2^192,12562443281049164022 + 4750975443921229474*2^64 + 11462540661674559927*2^128 + 11151071147*2^192,10532831810285382022 + 1207435504843801465*2^64 + 1266976856799041314*2^128 + 130092057613*2^192,9040893422368229972 + 17898123412243303860*2^64 + 15543149363450135313*2^128 + 92965309942*2^192,9909476302808058090 + 10422248411981286108*2^64 + 14752909892086345482*2^128 + 127125878282*2^192,15422557015705403244 + 18196730356797330557*2^64 + 6755580760096262497*2^128 + 211168712793*2^192,13984685348787202796 + 13914470654967337053*2^64 + 8905841416120522012*2^128 + 147003559754*2^192,2814877623044401728 + 508285658712970692*2^64 + 3847954412612908033*2^128 + 144934613936*2^192,15841137757761256556 + 11717716189192404897*2^64 + 9337043095048088497*2^128 + 238243528881*2^192;\
14670652661937926480 + 5446712346537362433*2^64 + 10386601750127445811*2^128 + 263812571005*2^192,2849846862903236272 + 8847795200446400617*2^64 + 17755513819818902791*2^128 + 43651356355*2^192,5493719910999221216 + 8531879150647148361*2^64 + 12082072728756427799*2^128 + 188284192414*2^192,6850568017923003424 + 8370898271751208725*2^64 + 450382553320951482*2^128 + 216043575271*2^192,6177424354161794752 + 10897567977234122356*2^64 + 969040126464181802*2^128 + 76516171024*2^192,3222219680730088736 + 1190972439511630203*2^64 + 16916185968362107858*2^128 + 212101771665*2^192,15612148704298876736 + 5758958406730919668*2^64 + 4078216239749396885*2^128 + 153436756333*2^192,9071545832613147840 + 5306672809170362926*2^64 + 11184178612875277214*2^128 + 242598377495*2^192,2402944835611720832 + 2530846414523922446*2^64 + 13882784975289001594*2^128 + 178186738067*2^192,11249138930266206912 + 83739957004829975*2^64 + 10695726980585281222*2^128 + 121357447236*2^192]
/* 
This matrix times 2^(-8) should be the matrix of frobenius.
*/ 
B = 2^(-8) * A; 
/* Freed 3114 lists. */
The sign is: -1
The characteristic polynomial is: x^10 + x^9 + 4*x^8 + 4*x^7 + 12*x^6 - 48*x^4 - 64*x^3 - 256*x^2 - 256*x - 1024
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + x^7 + 8*x^6 + 8*x^5 + 44*x^4 + 32*x^3 + 128*x^2 + 64*x + 256, 1]
The valuation of f-g is: 24
The valuation of subst(g,x,A) is: 17

Please input coefficients below.
The polynomial is: 1*x^11 + 1*x^2*z^6*w^1 + 1*x^1*y^4*z^3*w^1 + 1*y^8*w^1 + 1*y^1*z^8 + 1*z^1*w^6
Total 218: 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 102 104 106 108 110 112 114 116 118 120 122 124 126 128 130 132 134 136 138 140 142 144 146 148 150 152 154 156 158 160 162 164 166 168 170 172 174 176 178 180 182 184 186 188 190 192 194 196 198 200 202 204 206 208 210 212 214 216 218 
