/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^2 * y^1 * z^3 * w^1   = Coefficient of   y^9                     = Coefficient of   z^5 * w^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 77
[4, 2, 1, 0, 0]  	135	3 
[9, 0, 0, 0, 0]  	153	3  <--- 1
[8, 0, 1, 0, 0]  	163	2 
[0, 9, 0, 0, 0]  	180	2  <--- 2
[4, 0, 5, 0, 0]  	203	3 
[4, 8, 0, 0, 0]  	228	2 
[4, 0, 0, 4, 0]  	248	2 
[1, 6, 5, 0, 0]  	272	3 
[1, 8, 4, 0, 0]  	285	2 
[1, 0, 10, 0, 0]  	287	3 
[1, 0, 9, 1, 0]  	305	2 
[1, 0, 4, 4, 0]  	305	2 
[1, 8, 0, 3, 0]  	312	2 
[1, 6, 0, 4, 0]  	317	2 
[1, 0, 0, 7, 0]  	332	2 
[0, 6, 7, 2, 0]  	399	1 
[0, 6, 2, 5, 0]  	399	1 
[0, 2, 12, 1, 0]  	409	1 
[0, 2, 7, 4, 0]  	409	1 
[0, 2, 2, 7, 0]  	409	1 
[0, 1, 13, 1, 0]  	416	1 
[0, 1, 8, 4, 0]  	416	1 
[0, 1, 3, 7, 0]  	416	1 
[0, 5, 12, 0, 0]  	424	2 
[0, 2, 11, 2, 0]  	427	1 
[0, 2, 6, 5, 0]  	427	1 
[0, 2, 1, 8, 0]  	427	1 
[0, 0, 16, 0, 0]  	432	1  <--- 3
[0, 0, 11, 3, 0]  	432	1 
[0, 0, 6, 6, 0]  	432	1 
[0, 0, 1, 9, 0]  	432	1 
[0, 5, 9, 2, 0]  	433	1 
[0, 5, 4, 5, 0]  	433	1 
[0, 0, 15, 1, 0]  	450	1 
[0, 0, 10, 4, 0]  	450	1 
[0, 0, 5, 7, 0]  	450	1 
[0, 0, 0, 10, 0]  	450	1  <--- 4
[0, 5, 0, 8, 0]  	460	1 
[4, 1, 1, 1, 1]  	160	2 
[0, 0, 5, 1, 1]  	180	2 
[0, 8, 5, 0, 1]  	295	2 
[0, 0, 14, 0, 1]  	378	3 
[0, 6, 10, 0, 1]  	390	3 
[4, 2, 0, 3, 2]  	243	4 
[3, 6, 2, 1, 2]  	270	3 
[8, 0, 0, 3, 2]  	271	2 
[3, 6, 1, 2, 2]  	288	3 
[3, 0, 2, 5, 2]  	330	3 
[3, 3, 0, 5, 2]  	336	3 
[3, 0, 1, 6, 2]  	348	3 
[3, 3, 2, 2, 3]  	255	3 
[3, 5, 1, 2, 3]  	268	2 
[2, 1, 1, 6, 4]  	351	3 
[2, 3, 0, 6, 4]  	364	3 
[2, 3, 2, 5, 5]  	373	3 
[1, 5, 2, 5, 7]  	396	3 
[0, 0, 3, 7, 246]  	396	1 
[0, 2, 0, 8, 248]  	400	1 
[0, 0, 0, 9, 248]  	405	1 
[0, 2, 4, 5, 249]  	373	1 
[0, 0, 4, 6, 249]  	378	1 
[0, 6, 0, 5, 251]  	345	1 
[0, 0, 13, 0, 251]  	351	2 
[0, 2, 0, 7, 251]  	355	1 
[0, 2, 12, 0, 251]  	364	2 
[0, 8, 0, 3, 252]  	295	1 
[0, 6, 0, 4, 252]  	300	1 
[0, 0, 0, 7, 252]  	315	1 
[0, 2, 4, 4, 252]  	328	1 
[0, 8, 4, 2, 252]  	358	1 
[0, 6, 5, 0, 253]  	255	2 
[0, 8, 4, 0, 253]  	268	1 
[0, 0, 4, 4, 253]  	288	1 
[0, 2, 10, 0, 253]  	310	1 
[0, 0, 9, 0, 254]  	243	1 
[0, 8, 0, 0, 255]  	160	1 
[0, 0, 0, 4, 255]  	180	1 
------
The gap is between 8 and 245.
Lengths: 2 2 4 6 2 5.
For 431 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^13
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^3*w^6

For 251 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^5*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^3*w^2

For 71 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8488382851723031138 + 5005446258544285520*2^64 + 5900490932104226938*2^128 + 1969112399*2^192,6929119014988255724 + 4355383817790985362*2^64 + 1915909392740744331*2^128 + 3529667745*2^192,870504258702271401 + 16946433847696398024*2^64 + 3195824246575321370*2^128 + 2925943131*2^192,9004299012642872712 + 9007597510231494176*2^64 + 11344572584707922172*2^128 + 1804884061*2^192,5391937915482129392 + 142607475165740285*2^64 + 18375783491552418444*2^128 + 3378815942*2^192,7160977501407803320 + 7043681825904258496*2^64 + 5374184273575651750*2^128 + 1573642579*2^192,17073135780795505089 + 13405972007291443935*2^64 + 6579298569472727839*2^128 + 1432094426*2^192,6236558926739494545 + 11522979014679007891*2^64 + 11341483646200233014*2^128 + 3947611597*2^192;\
5337678805181942632 + 11296278917197575687*2^64 + 11156101982145517673*2^128 + 1982166573*2^192,7307381970494347512 + 13946331186355319121*2^64 + 3343652366708767304*2^128 + 327831041*2^192,8446641245412661860 + 8490337476261317834*2^64 + 7513826841999200084*2^128 + 3764202021*2^192,3612400369791770680 + 14666425131552780223*2^64 + 2018866221281458320*2^128 + 684915449*2^192,15119162675346198560 + 13440182490994559554*2^64 + 10753613291756216212*2^128 + 1107721481*2^192,151815627539818200 + 506173299985448151*2^64 + 11738605205205629808*2^128 + 3135838780*2^192,10838196432778217636 + 11699281621494893832*2^64 + 9204895170843047491*2^128 + 4058314374*2^192,11425154474729533636 + 63011459723663463*2^64 + 2542536927311475721*2^128 + 3220600879*2^192;\
9104132967172848684 + 5446696294501176667*2^64 + 2527992533074599637*2^128 + 2942869015*2^192,11380462545507635560 + 14644683511861403737*2^64 + 7640166681242651377*2^128 + 2958507487*2^192,7513752086389251782 + 11861585273723736479*2^64 + 11852841930806048152*2^128 + 4206247504*2^192,13352039420624763216 + 13985846661656836996*2^64 + 9297309874289913989*2^128 + 749143565*2^192,13897360870593323016 + 15135631347986250133*2^64 + 15075247435857173147*2^128 + 1467704913*2^192,8452491311873449808 + 2050337112214374396*2^64 + 5156308557622551581*2^128 + 1864844890*2^192,11963961925683134334 + 4464537700251977624*2^64 + 17897766683935430585*2^128 + 4090454170*2^192,7976082058243475374 + 1769401432944854460*2^64 + 2594080874621076069*2^128 + 3806730778*2^192;\
1564443675595395416 + 9473221549933141530*2^64 + 11722750114463791238*2^128 + 524649871*2^192,5337255291193018256 + 17236477075076038251*2^64 + 16540708314638375497*2^128 + 1756835386*2^192,4644047086858472332 + 13216564870765539929*2^64 + 2709097514055164481*2^128 + 543757575*2^192,17876094332744572320 + 12245244531172981224*2^64 + 12452055901764054301*2^128 + 43689668*2^192,6039285153023806896 + 7942849029672162538*2^64 + 499027198848080171*2^128 + 1614652920*2^192,3487524982036959008 + 13896388894226044469*2^64 + 13829392983686360660*2^128 + 1593056459*2^192,14230665264935945852 + 3394773186459032366*2^64 + 10104557844940040062*2^128 + 1086794582*2^192,2137749965722460748 + 6486935512359345404*2^64 + 8467196135185663266*2^128 + 1300065324*2^192;\
4395992217757425976 + 17409667823980050350*2^64 + 16994273226371589349*2^128 + 2603050180*2^192,11479412463901397762 + 1276194196334323211*2^64 + 339255450221386442*2^128 + 399307567*2^192,7111477537223297840 + 12578942195696388249*2^64 + 7070830420471149977*2^128 + 2537685740*2^192,11903735564223968780 + 15283778392256779969*2^64 + 16225230589109919167*2^128 + 3886803666*2^192,13349039916533234872 + 11229086698992006735*2^64 + 279928513774746442*2^128 + 437453379*2^192,6375257226917308756 + 12038871583060315805*2^64 + 13762018038753678723*2^128 + 1318104996*2^192,11321772454632437624 + 10576009656743511436*2^64 + 15615393934064280441*2^128 + 594162440*2^192,3252282482158657560 + 4549335854561737717*2^64 + 10934549342776392934*2^128 + 2389731745*2^192;\
17555920625335717064 + 5434254601630923279*2^64 + 12222188123336351083*2^128 + 1053059890*2^192,4011087804379739448 + 12184648691547677666*2^64 + 8473727089431851899*2^128 + 617033625*2^192,13462718442424007908 + 9377173273284742105*2^64 + 6349033290557435305*2^128 + 1264717116*2^192,9166671285412245612 + 13512176113449201365*2^64 + 9734866280599348953*2^128 + 688694931*2^192,177035457936445152 + 2065385748329253963*2^64 + 7071152836732829820*2^128 + 1221491809*2^192,5036569036929566468 + 17710770700985086758*2^64 + 2495550185289164283*2^128 + 667692987*2^192,603968619159001924 + 16870096081874567906*2^64 + 270753370708256402*2^128 + 20714848*2^192,15364764633277683588 + 12934220132881263068*2^64 + 17988881061330024676*2^128 + 840567325*2^192;\
5195039374890944048 + 9758048463148878042*2^64 + 7462060317791388633*2^128 + 1016396833*2^192,17397747413478685984 + 9128882137470103757*2^64 + 13411681218870397602*2^128 + 1515554009*2^192,11784235756117454744 + 3995385450521652303*2^64 + 11855358330370178136*2^128 + 1941073929*2^192,5625450666127362368 + 7744064989157843787*2^64 + 5127154301965927021*2^128 + 1428290136*2^192,14059768265043648992 + 6043883828854734372*2^64 + 14922455647762736455*2^128 + 2073387801*2^192,4377741379668545088 + 4553547185823863798*2^64 + 5813591875112788188*2^128 + 1868794804*2^192,16587395334916744008 + 6797027212229882132*2^64 + 9762606402450665642*2^128 + 1853320772*2^192,16657237039261503128 + 8104654599762328664*2^64 + 17319423172563809533*2^128 + 611908289*2^192;\
9140941595918919160 + 3215199373945654757*2^64 + 5012391663571648122*2^128 + 3368003028*2^192,9256571941027169834 + 15187819316413551235*2^64 + 11338947893891641715*2^128 + 2792473918*2^192,1759877923211417648 + 12079254116587367037*2^64 + 8592956202837271437*2^128 + 915044832*2^192,8955507471335161716 + 11605744266762083932*2^64 + 27814918844422099*2^128 + 605506070*2^192,3076117329807566648 + 10969830875502114722*2^64 + 17860939617110359200*2^128 + 3427678678*2^192,6058583734294939364 + 18355489307868849047*2^64 + 10345125226998230546*2^128 + 1180813017*2^192,1314529387938914952 + 17815993406191449944*2^64 + 10672832915948837252*2^128 + 3436956162*2^192,1266852312892690744 + 8300379425153120341*2^64 + 7284205188810216202*2^128 + 3489054137*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2352 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 + 2*x^6 - 4*x^5 - 12*x^4 - 16*x^3 + 32*x^2 + 64*x + 256
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 2/3, 2/3, 2/3, 0]
Its factorization is: Mat([x^8 + x^7 + 2*x^6 - 4*x^5 - 12*x^4 - 16*x^3 + 32*x^2 + 64*x + 256, 1])
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30
