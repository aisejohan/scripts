/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^2 * y^1 * z^3 * w^1   = Coefficient of   y^9                     = Coefficient of   z^5 * w^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 121
[4, 2, 1, 0, 0]  	135	4 
[9, 0, 0, 0, 0]  	153	4  <--- 1
[8, 0, 1, 0, 0]  	163	3 
[2, 1, 3, 1, 0]  	180	3 
[0, 9, 0, 0, 0]  	180	2  <--- 2
[6, 1, 3, 0, 0]  	203	5 
[2, 0, 5, 1, 0]  	214	3 
[6, 0, 3, 1, 0]  	228	4 
[2, 1, 0, 4, 0]  	234	3 
[6, 0, 5, 0, 0]  	237	4 
[4, 0, 0, 4, 0]  	248	4 
[6, 8, 0, 0, 0]  	262	3 
[3, 0, 8, 0, 0]  	267	4 
[2, 0, 9, 0, 0]  	277	5 
[2, 7, 4, 0, 0]  	282	5 
[2, 0, 3, 4, 0]  	295	3 
[1, 8, 5, 0, 0]  	312	3 
[0, 0, 10, 1, 0]  	315	3 
[1, 7, 6, 0, 0]  	319	4 
[2, 8, 0, 3, 0]  	329	4 
[2, 4, 8, 0, 0]  	330	4 
[1, 0, 5, 4, 0]  	332	3 
[1, 5, 8, 0, 0]  	333	4 
[1, 7, 5, 1, 0]  	337	3 
[1, 8, 1, 3, 0]  	339	3 
[1, 0, 12, 0, 0]  	341	5 
[1, 6, 6, 1, 0]  	344	4 
[2, 0, 0, 7, 0]  	349	3 
[1, 5, 7, 1, 0]  	351	4 
[1, 0, 1, 7, 0]  	359	3 
[1, 7, 1, 4, 0]  	364	3 
[0, 2, 12, 0, 0]  	364	3 
[1, 1, 4, 5, 0]  	370	4 
[1, 6, 2, 4, 0]  	371	3 
[0, 1, 13, 0, 0]  	371	3 
[0, 0, 14, 0, 0]  	378	3  <--- 3
[0, 5, 7, 2, 0]  	379	2 
[0, 2, 6, 4, 0]  	382	2 
[0, 1, 7, 4, 0]  	389	2 
[0, 6, 10, 0, 0]  	390	3 
[0, 7, 6, 2, 0]  	392	2 
[0, 0, 8, 4, 0]  	396	2 
[0, 6, 2, 5, 0]  	399	1 
[1, 5, 4, 4, 0]  	405	2 
[0, 0, 5, 6, 0]  	405	2 
[1, 6, 5, 3, 0]  	407	3 
[0, 1, 6, 5, 0]  	407	2 
[0, 2, 2, 7, 0]  	409	1 
[0, 7, 5, 3, 0]  	410	2 
[0, 5, 5, 4, 0]  	415	2 
[0, 1, 3, 7, 0]  	416	1 
[0, 3, 5, 5, 0]  	420	2 
[1, 7, 0, 6, 0]  	427	1 
[0, 2, 1, 8, 0]  	427	1 
[1, 5, 0, 7, 0]  	432	1 
[0, 0, 1, 9, 0]  	432	1 
[0, 5, 4, 5, 0]  	433	1 
[0, 0, 0, 10, 0]  	450	1  <--- 4
[0, 5, 0, 8, 0]  	460	1 
[4, 1, 1, 1, 1]  	160	3 
[3, 0, 2, 4, 1]  	285	3 
[3, 8, 3, 0, 1]  	292	4 
[1, 3, 5, 2, 1]  	302	4 
[1, 0, 9, 1, 1]  	305	3 
[1, 4, 0, 5, 1]  	322	3 
[1, 5, 6, 1, 1]  	324	5 
[1, 2, 5, 3, 1]  	327	4 
[1, 1, 6, 3, 1]  	334	4 
[1, 3, 0, 6, 1]  	347	3 
[1, 5, 2, 4, 1]  	351	4 
[1, 2, 1, 6, 1]  	354	3 
[2, 0, 2, 6, 1]  	358	4 
[1, 2, 0, 7, 1]  	372	3 
[1, 7, 3, 3, 1]  	373	3 
[1, 1, 3, 6, 1]  	388	3 
[0, 3, 9, 2, 1]  	393	2 
[1, 1, 0, 8, 1]  	397	4 
[0, 1, 9, 3, 1]  	398	2 
[1, 0, 0, 9, 1]  	422	2 
[4, 1, 0, 3, 2]  	223	5 
[3, 5, 2, 1, 2]  	250	5 
[3, 5, 1, 2, 2]  	268	4 
[8, 0, 0, 3, 2]  	271	3 
[3, 4, 2, 2, 2]  	275	5 
[2, 6, 0, 3, 2]  	289	5 
[1, 6, 1, 4, 2]  	344	4 
[3, 0, 1, 6, 2]  	348	4 
[1, 0, 8, 3, 2]  	368	4 
[1, 3, 4, 4, 5]  	365	3 
[1, 8, 4, 2, 5]  	375	3 
[1, 0, 4, 6, 5]  	395	3 
[0, 7, 5, 2, 250]  	365	2 
[0, 3, 5, 4, 250]  	375	2 
[2, 0, 7, 0, 254]  	223	2 
[1, 5, 7, 0, 254]  	306	2 
[1, 0, 11, 0, 254]  	314	2 
[0, 1, 12, 0, 254]  	344	1 
[2, 0, 3, 1, 255]  	160	2 
[2, 0, 2, 4, 255]  	268	3 
[0, 8, 4, 0, 255]  	268	1 
[2, 8, 3, 0, 255]  	275	3 
[0, 7, 5, 0, 255]  	275	1 
[1, 5, 3, 2, 255]  	288	3 
[0, 0, 4, 4, 255]  	288	1 
[1, 1, 6, 2, 255]  	289	2 
[0, 5, 7, 0, 255]  	289	1 
[1, 4, 4, 2, 255]  	295	3 
[1, 5, 5, 1, 255]  	297	3 
[0, 0, 11, 0, 255]  	297	1 
[1, 3, 4, 3, 255]  	320	3 
[0, 8, 1, 3, 255]  	322	1 
[0, 6, 6, 1, 255]  	327	2 
[1, 7, 0, 4, 255]  	337	2 
[0, 0, 1, 7, 255]  	342	1 
[0, 7, 1, 4, 255]  	347	1 
[0, 6, 2, 4, 255]  	354	1 
[1, 0, 3, 6, 255]  	368	3 
[1, 0, 0, 8, 255]  	377	2 
[0, 6, 5, 3, 255]  	390	2 
[0, 7, 0, 6, 255]  	410	1 
[0, 5, 0, 7, 255]  	415	1 
------
The gap is between 6 and 249.
Lengths: 2 2 4 4 2 2.
For 431 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^3*w^6

For 251 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^5*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^3*w^2

For 71 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6464738960580189121 + 8500318657276401209*2^64 + 9087935483075945843*2^128 + 911239473*2^192,571299271660666028 + 15117644299690735439*2^64 + 5187430744033283366*2^128 + 992291396*2^192,2625941717253580180 + 15207294178202521987*2^64 + 16173612129249743259*2^128 + 888178925*2^192,17191449389252717660 + 9556787608611277011*2^64 + 12205854617048229973*2^128 + 496695836*2^192,10852165858037548992 + 2416276374236720768*2^64 + 10265481998614688469*2^128 + 390533872*2^192,14186556954736560048 + 2394870727671521553*2^64 + 18054319536934207184*2^128 + 599294992*2^192,9750843501344191880 + 14813903510399347580*2^64 + 2142915292811090566*2^128 + 801383832*2^192,18413654037611284792 + 12545451306392628369*2^64 + 4208131118145380753*2^128 + 912825502*2^192;\
12658189060197948939 + 17684016181238234458*2^64 + 1061005263891657767*2^128 + 557817163*2^192,17869432231547727643 + 6362279869382333143*2^64 + 11048322734423839178*2^128 + 802881650*2^192,14790492999359171160 + 6528098941978823632*2^64 + 13483885786348884218*2^128 + 655914714*2^192,8810514513414750452 + 13125448624762886566*2^64 + 17258604162524222547*2^128 + 361541880*2^192,188581864263845828 + 7326307845531408836*2^64 + 6501021146443923259*2^128 + 13849306*2^192,16517922323512876804 + 11321627984494677703*2^64 + 1726887361899825658*2^128 + 898697111*2^192,7735990969366758360 + 17861873595792875676*2^64 + 6912092168066261759*2^128 + 755038370*2^192,2934244114904649472 + 8223944292656093204*2^64 + 7647099503335228154*2^128 + 784457682*2^192;\
2588788835578390944 + 8593057678646590559*2^64 + 13721744793082441203*2^128 + 365450109*2^192,6210250013325781568 + 16367970301818013049*2^64 + 7376103474158368155*2^128 + 277041336*2^192,14168496051017096946 + 13215588633601508958*2^64 + 5986602287973159606*2^128 + 287062551*2^192,14421487429642149654 + 14613135193860062053*2^64 + 9547007018778912578*2^128 + 130435707*2^192,5577581998186873322 + 3850993831177444938*2^64 + 15774287919446191281*2^128 + 34967796*2^192,11663679075410984044 + 17022355903404710087*2^64 + 14703622301707823702*2^128 + 472908987*2^192,1512627599135150876 + 13950832641143264535*2^64 + 8966973201933533834*2^128 + 251772583*2^192,7901108045706309388 + 9441677107418196919*2^64 + 4768842739043451417*2^128 + 281092582*2^192;\
13303255527556932293 + 2499405431304771075*2^64 + 6097925976080192765*2^128 + 494934802*2^192,13488715568150989298 + 14911952282122293670*2^64 + 14698312492958099920*2^128 + 356749482*2^192,13316767521219194198 + 6990019711118552771*2^64 + 9576163578020273513*2^128 + 565557441*2^192,15907923226353438976 + 1580685508654458602*2^64 + 2655145926438560402*2^128 + 103067865*2^192,2658570075143999948 + 3218090816583634227*2^64 + 9461734402077751460*2^128 + 377584288*2^192,16040841524884827222 + 12669122351544079357*2^64 + 15614220313313943653*2^128 + 562113880*2^192,16433392584106551108 + 12885226793704487300*2^64 + 1407094781413067165*2^128 + 137513306*2^192,6877953427726920764 + 10730641703824935532*2^64 + 2745886139850253590*2^128 + 206122501*2^192;\
3196140624693869378 + 8219272867464046136*2^64 + 14888740415647430413*2^128 + 339796149*2^192,206621701693720438 + 18091243111821268090*2^64 + 10752113609713492634*2^128 + 52727082*2^192,9513928759992097638 + 2331392435156411817*2^64 + 8833906204423418039*2^128 + 1047612546*2^192,17640708500033624524 + 3710208660803250179*2^64 + 17392925885900665962*2^128 + 322030268*2^192,14346225625945089504 + 5994542287982552973*2^64 + 727780055151236960*2^128 + 560655048*2^192,812499581096981620 + 7049851712863246606*2^64 + 6332655075202059511*2^128 + 780671076*2^192,18028764986875134676 + 11531278419986288730*2^64 + 13308358045685624075*2^128 + 1014460993*2^192,2568009967214503264 + 12020437476557670358*2^64 + 4084514551278302710*2^128 + 2244049*2^192;\
15559614671804142988 + 13570938409685707656*2^64 + 1260808413574836073*2^128 + 147564629*2^192,4830138672557278747 + 3783928015470990430*2^64 + 13054032881552063109*2^128 + 400708965*2^192,17966111688650939738 + 1345926821236515884*2^64 + 17581187204402771626*2^128 + 126314535*2^192,4566331677454309698 + 12819853560155631489*2^64 + 3671814066906820532*2^128 + 224933005*2^192,16332633884750255140 + 5078700353166051337*2^64 + 17720797480033593917*2^128 + 87903054*2^192,15644086517986549282 + 5515642596886959322*2^64 + 4553253258110738385*2^128 + 490369745*2^192,12897769373830820280 + 11473205909194675180*2^64 + 5735447548928123558*2^128 + 422647437*2^192,12717597232071166036 + 11854448045108919105*2^64 + 18360120996710739126*2^128 + 71523644*2^192;\
4134733539871941964 + 13700016344422626125*2^64 + 14839333223608243443*2^128 + 410082732*2^192,16569998355780907484 + 13827499842701591235*2^64 + 4507492696297119334*2^128 + 93611786*2^192,10449762199200313220 + 17549480313049397698*2^64 + 1385726662667462058*2^128 + 387086112*2^192,8658236160006207740 + 3897263456581701288*2^64 + 18273680958610802986*2^128 + 56121862*2^192,12172696177412378980 + 1708984409161939200*2^64 + 11106296751150253029*2^128 + 166261366*2^192,7402624586063310104 + 16771132187516759764*2^64 + 2155711060517821903*2^128 + 453556867*2^192,18091621255715999020 + 4159931097539238201*2^64 + 16738516248316560562*2^128 + 438756136*2^192,5858119607442341768 + 15874678521313750979*2^64 + 2871093268247493654*2^128 + 407402018*2^192;\
6236944732442807550 + 3669062426778317625*2^64 + 10737300045556182028*2^128 + 773761467*2^192,12742152190663632068 + 11360623963186765181*2^64 + 15304119043288077501*2^128 + 987350317*2^192,1712432686189467452 + 9217469805660739322*2^64 + 475115371580587453*2^128 + 788858816*2^192,1159319430531837640 + 17194146788369043985*2^64 + 7127083232330137270*2^128 + 400546237*2^192,11473346881366550528 + 9891788823448814066*2^64 + 7228330865286911602*2^128 + 437484726*2^192,291982810688809060 + 8018453616046110423*2^64 + 12361718243415958520*2^128 + 198937271*2^192,1873967249025199340 + 1496984589005630940*2^64 + 17406579355626091779*2^128 + 442985658*2^192,6923072780674888708 + 7496057638813912690*2^64 + 9340955910133549982*2^128 + 139004623*2^192]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 2441 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^6 + 4*x^5 - 16*x^3 + 16*x^2 - 256
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 + 3*x^4 + 4*x^3 + 12*x^2 + 64, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^9*z^1 + 1*x^4*y^2*z^1*w^1 + 1*x^2*y^1*z^3*w^1 + 1*y^9 + 1*z^5*w^1 + 1*w^4
Total
