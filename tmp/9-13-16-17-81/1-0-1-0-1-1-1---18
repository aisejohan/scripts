/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9                     = Coefficient of   x^4 * y^1 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * z^1               = Coefficient of   y^1 * w^4               = Coefficient of   z^4 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 90
[2, 1, 0, 2, 0]  	65	3 
[2, 0, 1, 2, 0]  	68	3 
[8, 0, 0, 0, 0]  	72	2  <--- 1
[0, 1, 0, 4, 0]  	81	2 
[0, 6, 0, 2, 0]  	112	2 
[0, 5, 0, 3, 0]  	116	3 
[6, 0, 4, 0, 0]  	118	6 
[6, 5, 0, 0, 0]  	119	3 
[6, 4, 1, 0, 0]  	122	3 
[0, 1, 4, 3, 0]  	128	2 
[2, 0, 7, 0, 0]  	130	3 
[2, 9, 0, 0, 0]  	135	5 
[2, 4, 4, 1, 0]  	151	4 
[0, 4, 3, 3, 0]  	151	3 
[4, 4, 4, 0, 0]  	152	5 
[4, 3, 5, 0, 0]  	155	5 
[6, 0, 0, 6, 0]  	156	5 
[1, 3, 7, 0, 0]  	160	3 
[1, 8, 3, 0, 0]  	161	3 
[1, 3, 6, 1, 0]  	161	3 
[4, 8, 2, 0, 0]  	172	5 
[1, 0, 6, 4, 0]  	173	2 
[1, 0, 5, 5, 0]  	174	2 
[1, 0, 3, 7, 0]  	176	2 
[1, 0, 2, 8, 0]  	177	1 
[0, 5, 7, 0, 0]  	177	1 
[0, 0, 10, 1, 0]  	177	1 
[1, 13, 0, 0, 0]  	178	3 
[1, 2, 9, 0, 0]  	179	3 
[0, 13, 0, 1, 0]  	186	1 
[0, 2, 10, 0, 0]  	186	1 
[0, 0, 1, 10, 0]  	186	1 
[1, 0, 9, 2, 0]  	187	2 
[0, 7, 6, 0, 0]  	187	2 
[0, 2, 9, 1, 0]  	187	2 
[0, 11, 3, 0, 0]  	191	1 
[0, 6, 6, 1, 0]  	191	1 
[0, 1, 9, 2, 0]  	191	1 
[0, 10, 4, 0, 0]  	194	1 
[0, 15, 0, 0, 0]  	195	1  <--- 2
[0, 10, 3, 1, 0]  	195	1 
[0, 5, 6, 2, 0]  	195	1 
[0, 0, 9, 3, 0]  	195	1 
[0, 0, 5, 7, 0]  	199	1 
[0, 0, 4, 8, 0]  	200	1 
[0, 0, 0, 12, 0]  	204	1  <--- 4
[4, 0, 0, 10, 0]  	206	1 
[0, 0, 13, 0, 0]  	208	1  <--- 3
[0, 0, 8, 5, 0]  	213	1 
[2, 1, 1, 1, 1]  	64	3 
[0, 5, 1, 0, 1]  	81	2 
[2, 0, 4, 1, 1]  	99	3 
[2, 4, 4, 0, 1]  	134	4 
[0, 9, 0, 1, 1]  	134	3 
[6, 0, 0, 5, 1]  	139	5 
[0, 13, 0, 0, 1]  	169	4 
[4, 0, 0, 9, 1]  	189	3 
[0, 4, 4, 0, 2]  	116	2 
[4, 0, 0, 8, 2]  	172	4 
[2, 0, 0, 10, 2]  	188	4 
[0, 3, 8, 0, 3]  	167	2 
[0, 3, 7, 1, 3]  	168	2 
[1, 1, 6, 2, 5]  	152	4 
[1, 0, 10, 0, 5]  	169	4 
[1, 1, 7, 1, 6]  	151	3 
[1, 0, 9, 1, 6]  	170	3 
[1, 0, 1, 9, 6]  	178	3 
[1, 0, 0, 11, 8]  	196	3 
[0, 0, 2, 8, 243]  	168	1 
[0, 0, 6, 5, 244]  	181	1 
[0, 0, 5, 6, 244]  	182	1 
[0, 0, 3, 7, 245]  	167	1 
[0, 0, 6, 4, 246]  	164	1 
[0, 3, 6, 2, 246]  	169	2 
[0, 0, 5, 5, 247]  	165	1 
[0, 3, 7, 0, 248]  	151	2 
[0, 2, 9, 0, 248]  	170	2 
[0, 0, 9, 2, 248]  	178	1 
[0, 3, 6, 1, 249]  	152	2 
[0, 0, 3, 5, 251]  	133	1 
[0, 0, 7, 2, 252]  	146	1 
[0, 0, 6, 3, 252]  	147	1 
[0, 0, 4, 3, 253]  	115	1 
[0, 0, 3, 4, 253]  	116	1 
[0, 4, 3, 2, 253]  	134	2 
[0, 0, 10, 0, 253]  	160	1 
[0, 5, 0, 2, 254]  	99	1 
[0, 0, 7, 0, 254]  	112	1 
[0, 9, 0, 0, 254]  	117	1 
[0, 0, 4, 0, 255]  	64	1 
------
The gap is between 9 and 242.
Lengths: 2 2 4 7 2 9.
For 188 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^8*w^2

For 107 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^3*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^4*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^4*w^1

For 26 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[1902151958595245730 + 14708760690535377938*2^64 + 10507826176485650743*2^128 + 3775880087*2^192,7488703209965398198 + 16898715300372162206*2^64 + 7704758463538653477*2^128 + 1390380736*2^192,5015896254356332576 + 7117665896103413788*2^64 + 3760388347425116427*2^128 + 3058728809*2^192,9332015079503010952 + 15611342476989516556*2^64 + 14809897524318911558*2^128 + 2605130249*2^192,18059853292064097660 + 17063910388192114143*2^64 + 2678910129013090860*2^128 + 6260483714*2^192,7851774300735471168 + 14284086512811544463*2^64 + 31538036514281409*2^128 + 7741676228*2^192,10858683726689327132 + 6339619601454614883*2^64 + 17572249606578289422*2^128 + 1911203742*2^192,3377110723796741852 + 9226143606361203305*2^64 + 7257169984161819737*2^128 + 1408477206*2^192;\
10966778130839761142 + 3261409927911384817*2^64 + 17458457962322245378*2^128 + 3815407637*2^192,15263462521667506662 + 5013417229895289597*2^64 + 11737965039063217690*2^128 + 205883638*2^192,12852256015202741374 + 16804201258461134500*2^64 + 16516996420487516003*2^128 + 276552326*2^192,2175027610068561340 + 1473933626821038371*2^64 + 1116435157028003033*2^128 + 4571358109*2^192,12181073219136777228 + 4791724333817723016*2^64 + 6155992275898234584*2^128 + 6826506296*2^192,13219455960727157720 + 11493483189709947665*2^64 + 11303717991905529860*2^128 + 5265836592*2^192,1021585298146582692 + 4861932649902973868*2^64 + 2870284487051628968*2^128 + 7973480625*2^192,6784335979044329500 + 6107417781349935898*2^64 + 9919596254794873675*2^128 + 1226773360*2^192;\
12910547393808226260 + 16257288356662031469*2^64 + 15551157836002044400*2^128 + 3425834144*2^192,14550648686438924100 + 16648857079938433789*2^64 + 766770029795093479*2^128 + 2002423216*2^192,5050462921668211204 + 3140520326444828983*2^64 + 112034426029839971*2^128 + 2083465710*2^192,8848349132708835496 + 2659591540911752348*2^64 + 11322037394844460800*2^128 + 50860484*2^192,10961004916440252328 + 7553391663016898696*2^64 + 839959472109052103*2^128 + 136051925*2^192,15576520496291282416 + 10565647791824307132*2^64 + 10437661446803258282*2^128 + 3131240377*2^192,9374252040535205720 + 3554516923058919048*2^64 + 10432101261602132488*2^128 + 114989134*2^192,14745616613586369096 + 12077360003121117894*2^64 + 5342691257060545376*2^128 + 4246193336*2^192;\
12134838622489542822 + 3852642511659887255*2^64 + 9138690393674259930*2^128 + 683163555*2^192,4505964520081324122 + 9070862304398225994*2^64 + 16354933190384710428*2^128 + 8523852462*2^192,14959219091672592608 + 4550355179483507146*2^64 + 4617351090023190955*2^128 + 8393319220*2^192,17205512337751049560 + 3900802623377206106*2^64 + 16259201450437521405*2^128 + 2770278961*2^192,13802696986851079284 + 5230179202944011686*2^64 + 15737646559654387134*2^128 + 2254105336*2^192,12407458920685744720 + 10503895044037389077*2^64 + 17947716874861471444*2^128 + 8140773895*2^192,4216078808773605764 + 15051970887250519249*2^64 + 8342186228769511553*2^128 + 8967337*2^192,16308994107987090868 + 11959808561350206211*2^64 + 9979547938523888349*2^128 + 1472369619*2^192;\
4326358755566113885 + 5356362814866815818*2^64 + 16217604847933737899*2^128 + 705012172*2^192,9955359126738342863 + 8775585607282980041*2^64 + 12853840565557751189*2^128 + 5437728373*2^192,3385507878395789008 + 1645796377366895528*2^64 + 8330451652808090026*2^128 + 7602983763*2^192,3005486951339738164 + 3094082189419809561*2^64 + 14836239954013308214*2^128 + 5377176578*2^192,6580076758505974438 + 13281710068906963605*2^64 + 15789751828969856697*2^128 + 5777671136*2^192,12672130866135349072 + 9303177347134464989*2^64 + 2223727285303545444*2^128 + 6254504626*2^192,7172767688080132006 + 11524950734910575561*2^64 + 5977264962697369802*2^128 + 7708768636*2^192,6626247953318994246 + 14233477879774790654*2^64 + 6395154600826768135*2^128 + 5098437449*2^192;\
2441399791568905369 + 7956697799941946170*2^64 + 7409176316726417100*2^128 + 2315146137*2^192,6557012712307683137 + 1659378346459361313*2^64 + 11288069253787884212*2^128 + 1693786090*2^192,13716520706026832973 + 10916556475359281603*2^64 + 7396541296617684059*2^128 + 1590801213*2^192,593910215504443962 + 18208706023962835915*2^64 + 1035459428530777212*2^128 + 4203246231*2^192,11574427996306551554 + 15548279903510126003*2^64 + 15844581110696758849*2^128 + 2575308321*2^192,3828046474862179668 + 5958771505989250550*2^64 + 4693890082535200174*2^128 + 4865867960*2^192,15756818613811381654 + 1243517667481940309*2^64 + 17884794360213213974*2^128 + 5149533471*2^192,5704043218054088618 + 9811854443067841623*2^64 + 2407116452394564914*2^128 + 8206137088*2^192;\
6830017369798902016 + 18318627967020696244*2^64 + 7548088512779534875*2^128 + 2235090549*2^192,6609432388314083968 + 17699217197238222963*2^64 + 15966222307111235237*2^128 + 1157317485*2^192,13252126904898805760 + 8861771015872204567*2^64 + 11649844036608788581*2^128 + 5368095801*2^192,2958575120616687488 + 8196023693271284760*2^64 + 10029143898507343723*2^128 + 4182527408*2^192,4992283164801020160 + 10464743639109799738*2^64 + 12874326604519698345*2^128 + 7931464694*2^192,3962395917992070400 + 17209859686439921824*2^64 + 9402058426423600608*2^128 + 7452503635*2^192,13145617757508807840 + 14961678623634798*2^64 + 16000469572560274268*2^128 + 8016506670*2^192,6316730141923611648 + 8708311223796827329*2^64 + 770061804384966001*2^128 + 5955667154*2^192;\
13416207855471383585 + 1560878184731129432*2^64 + 14993496730897745833*2^128 + 3905444414*2^192,14208004176659527689 + 16038065800884624977*2^64 + 4611082761057794662*2^128 + 5661444013*2^192,6889470261846358645 + 2519923982659854044*2^64 + 3232589427840735760*2^128 + 6580100505*2^192,18195340536455189290 + 17839265639800843431*2^64 + 7640952265931296009*2^128 + 6554010380*2^192,13993522428467711698 + 1701223334452276969*2^64 + 2952444649750414481*2^128 + 1399965027*2^192,12887560462600478452 + 16686802084529361329*2^64 + 1087357428175001086*2^128 + 4855371325*2^192,16995444635025010470 + 6343874632954780163*2^64 + 16957936415764849653*2^128 + 2801089809*2^192,17690020833605096314 + 10906550860089343615*2^64 + 6553553682912388606*2^128 + 4057046270*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 2246 lists. */
