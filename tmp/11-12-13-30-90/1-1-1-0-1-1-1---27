/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^7 * z^1               = Coefficient of   x^6 * y^2               = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^6               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^6 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 131
[2, 1, 2, 0, 0]  	60	3 
[7, 0, 0, 0, 0]  	77	3  <--- 1
[6, 0, 1, 0, 0]  	79	3 
[3, 0, 2, 1, 0]  	89	5 
[6, 2, 0, 0, 0]  	90	3 
[0, 1, 6, 0, 0]  	90	2 
[2, 0, 0, 3, 0]  	112	3 
[5, 5, 0, 0, 0]  	115	3 
[4, 6, 0, 0, 0]  	116	4 
[4, 5, 1, 0, 0]  	117	5 
[6, 0, 0, 2, 0]  	126	4 
[5, 4, 0, 1, 0]  	133	5 
[4, 5, 0, 1, 0]  	134	6 
[2, 0, 4, 2, 0]  	134	6 
[4, 4, 1, 1, 0]  	135	5 
[1, 2, 1, 3, 0]  	138	4 
[2, 10, 0, 0, 0]  	142	4 
[2, 9, 1, 0, 0]  	143	6 
[2, 0, 7, 1, 0]  	143	6 
[1, 9, 2, 0, 0]  	145	5 
[1, 7, 4, 0, 0]  	147	5 
[4, 0, 8, 0, 0]  	148	6 
[4, 4, 0, 2, 0]  	152	5 
[1, 1, 1, 4, 0]  	156	5 
[1, 0, 2, 4, 0]  	157	4 
[2, 9, 0, 1, 0]  	160	4 
[1, 0, 7, 2, 0]  	162	4 
[0, 9, 2, 1, 0]  	164	3 
[1, 5, 5, 1, 0]  	166	3 
[1, 0, 5, 3, 0]  	166	3 
[1, 13, 0, 0, 0]  	167	5 
[1, 3, 0, 4, 0]  	167	4 
[0, 14, 0, 0, 0]  	168	4  <--- 2
[0, 13, 1, 0, 0]  	169	4 
[0, 12, 2, 0, 0]  	170	3 
[1, 4, 4, 2, 0]  	171	4 
[0, 11, 3, 0, 0]  	171	3 
[0, 10, 4, 0, 0]  	172	3 
[1, 6, 0, 3, 0]  	173	4 
[1, 1, 0, 5, 0]  	173	3 
[1, 0, 1, 5, 0]  	174	3 
[0, 4, 3, 3, 0]  	177	2 
[2, 8, 0, 2, 0]  	178	4 
[0, 8, 2, 2, 0]  	182	3 
[0, 6, 4, 2, 0]  	184	2 
[0, 5, 5, 2, 0]  	185	2 
[0, 13, 0, 1, 0]  	186	2 
[0, 8, 0, 3, 0]  	186	2 
[0, 3, 0, 5, 0]  	186	2 
[0, 6, 2, 3, 0]  	188	1 
[0, 1, 2, 5, 0]  	188	1 
[1, 0, 0, 6, 0]  	191	3 
[0, 3, 3, 4, 0]  	195	2 
[0, 2, 4, 4, 0]  	196	1 
[1, 0, 12, 1, 0]  	197	1 
[0, 1, 5, 4, 0]  	197	1 
[0, 0, 13, 1, 0]  	199	1 
[2, 0, 14, 0, 0]  	204	4 
[0, 0, 9, 3, 0]  	207	1 
[0, 0, 16, 0, 0]  	208	1  <--- 3
[0, 0, 0, 7, 0]  	210	1  <--- 4
[0, 0, 7, 4, 0]  	211	1 
[0, 0, 3, 6, 0]  	219	1 
[6, 1, 0, 0, 1]  	78	4 
[2, 3, 1, 1, 1]  	101	4 
[5, 4, 0, 0, 1]  	103	4 
[5, 3, 1, 0, 1]  	104	4 
[4, 5, 0, 0, 1]  	104	5 
[1, 5, 1, 1, 1]  	114	3 
[5, 0, 0, 2, 1]  	115	4 
[5, 2, 1, 1, 1]  	122	5 
[3, 8, 0, 0, 1]  	129	5 
[3, 7, 1, 0, 1]  	130	6 
[5, 0, 6, 0, 1]  	133	5 
[4, 0, 7, 0, 1]  	135	6 
[1, 10, 1, 0, 1]  	144	4 
[1, 4, 2, 2, 1]  	145	4 
[1, 8, 3, 0, 1]  	146	5 
[3, 7, 0, 1, 1]  	147	5 
[1, 4, 0, 3, 1]  	149	4 
[3, 5, 0, 2, 1]  	153	4 
[2, 6, 0, 2, 1]  	154	5 
[1, 12, 0, 0, 1]  	155	4 
[1, 0, 9, 1, 1]  	158	4 
[1, 3, 4, 2, 1]  	159	4 
[1, 2, 5, 2, 1]  	160	4 
[3, 0, 10, 0, 1]  	163	4 
[2, 0, 11, 0, 1]  	165	5 
[1, 8, 0, 2, 1]  	167	4 
[1, 11, 0, 1, 1]  	173	4 
[0, 9, 5, 0, 1]  	173	3 
[0, 12, 0, 1, 1]  	174	3 
[0, 11, 1, 1, 1]  	175	3 
[0, 6, 1, 3, 1]  	175	2 
[1, 0, 13, 0, 1]  	180	4 
[0, 7, 3, 2, 1]  	183	2 
[0, 11, 0, 2, 1]  	192	3 
[5, 3, 0, 0, 2]  	91	5 
[3, 7, 0, 0, 2]  	117	6 
[1, 7, 0, 1, 2]  	125	4 
[4, 2, 1, 2, 2]  	141	7 
[0, 9, 1, 2, 2]  	181	3 
[0, 4, 2, 4, 2]  	194	2 
[3, 2, 1, 2, 3]  	130	7 
[1, 0, 6, 2, 253]  	149	2 
[1, 0, 0, 5, 253]  	161	2 
[0, 0, 8, 3, 253]  	194	1 
[0, 0, 2, 6, 253]  	206	1 
[2, 0, 3, 1, 254]  	91	3 
[1, 2, 0, 3, 254]  	125	3 
[2, 9, 0, 0, 254]  	130	5 
[1, 5, 5, 0, 254]  	136	4 
[3, 4, 0, 2, 254]  	141	4 
[1, 0, 4, 3, 254]  	153	2 
[0, 4, 5, 2, 254]  	173	2 
[0, 1, 1, 5, 254]  	175	1 
[0, 0, 7, 3, 254]  	181	1 
[0, 0, 1, 6, 254]  	193	1 
[2, 0, 2, 1, 255]  	78	3 
[1, 0, 0, 3, 255]  	101	1 
[0, 0, 1, 3, 255]  	103	1 
[0, 5, 4, 0, 255]  	112	2 
[4, 4, 0, 1, 255]  	122	2 
[0, 9, 2, 0, 255]  	134	2 
[0, 4, 0, 3, 255]  	138	2 
[0, 2, 0, 4, 255]  	144	1 
[0, 0, 7, 2, 255]  	151	1 
[0, 13, 0, 0, 255]  	156	3 
[0, 4, 4, 2, 255]  	160	2 
[0, 0, 0, 6, 255]  	180	1 
[0, 0, 12, 1, 255]  	186	1 
------
The gap is between 4 and 252.
Lengths: 2 2 3 4 2 4.
For 204 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^6

For 114 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[16708097387667005138 + 3965363565855800938*2^64 + 2564847281764374401*2^128 + 1334059624*2^192,614007403271098834 + 4968895492187305788*2^64 + 9231280415616030567*2^128 + 1542955940*2^192,12101344868823212716 + 1483293068163108231*2^64 + 5728940617205379754*2^128 + 1094717288*2^192,7213424861588073112 + 8840582930822502561*2^64 + 16246181831828514689*2^128 + 1583114159*2^192,9801488849524023212 + 18012974655630930267*2^64 + 11094394062030606553*2^128 + 345780822*2^192,1798663621299636436 + 3286622698682597945*2^64 + 12556577075096281454*2^128 + 1073648100*2^192,12827033761291055412 + 8904228119434895996*2^64 + 14426834946706708440*2^128 + 2037773841*2^192;\
10771241708412705418 + 1028571857877096332*2^64 + 4218609708701662001*2^128 + 1449363993*2^192,2399390679289034224 + 8151361883413767934*2^64 + 9378241769978218414*2^128 + 1899331680*2^192,17607238109841075096 + 8256058441946995367*2^64 + 13064236603333241137*2^128 + 918149203*2^192,12004597029661945196 + 15950404714026381075*2^64 + 5194817618380303190*2^128 + 1570991720*2^192,5193128778971356816 + 3504385066651295262*2^64 + 15444717798903777468*2^128 + 1355837973*2^192,10256200257420596104 + 25959160062444979*2^64 + 18017400110111407225*2^128 + 1824592569*2^192,4791069423353679488 + 11084162836689093915*2^64 + 7742196112110113003*2^128 + 1145516382*2^192;\
16896579403675443393 + 8387015941704744148*2^64 + 2446656752413014100*2^128 + 233909503*2^192,10926050177771833251 + 755118827176434754*2^64 + 14217429936500624075*2^128 + 504683015*2^192,2427401562284232074 + 8367152223294051014*2^64 + 1052700424522743476*2^128 + 1379488080*2^192,4484199298475215648 + 72223977484052047*2^64 + 12457872835815994824*2^128 + 368570916*2^192,16894201183401105286 + 395938227959414117*2^64 + 2394397471075460553*2^128 + 1306101303*2^192,408671734346621546 + 6126364553272763702*2^64 + 4045527500495291801*2^128 + 1469822386*2^192,8973249161707109374 + 2953007200946921226*2^64 + 8728381034084369799*2^128 + 1021014051*2^192;\
2463313502975857667 + 5652773782577766741*2^64 + 5615478966310335173*2^128 + 1743350136*2^192,4090668569839144373 + 3099223146712732263*2^64 + 14311904930513656711*2^128 + 822229862*2^192,9597745357589678098 + 2158506673166934692*2^64 + 4117819760314946016*2^128 + 137313854*2^192,17363040951946919500 + 16432864282898850297*2^64 + 2290587706161470947*2^128 + 1687567848*2^192,2953862887622245962 + 17023893847354249569*2^64 + 215789586954523048*2^128 + 1062530137*2^192,13176717409152099218 + 1605178620198406005*2^64 + 4375058086674381541*2^128 + 1678681556*2^192,13720509151892561198 + 4569264872096711479*2^64 + 16702826857641252181*2^128 + 699535539*2^192;\
11628005870823201987 + 18085562076542635842*2^64 + 9833143577165338578*2^128 + 1339604110*2^192,1195539158292701267 + 6086539417069113532*2^64 + 15008382080123969975*2^128 + 156967925*2^192,1055013986252422950 + 17193888688145986716*2^64 + 10850335098767772084*2^128 + 1699313889*2^192,15433872021273432708 + 14599073794772828172*2^64 + 7191398764944474900*2^128 + 1002895160*2^192,4997828540294678898 + 2499454864410791488*2^64 + 13935645172328117448*2^128 + 386935775*2^192,17275084213634689854 + 4019459637966872587*2^64 + 16510406579084029671*2^128 + 282008199*2^192,16026757627497225586 + 16277154998226962516*2^64 + 16984543909068346904*2^128 + 1640294116*2^192;\
16833397062690530580 + 4060108611703414161*2^64 + 16690777388443067797*2^128 + 838572963*2^192,7933617060579283572 + 10238521093587647685*2^64 + 4668631310248582243*2^128 + 291090762*2^192,12843694600087648232 + 17838773103239863888*2^64 + 18018766696193314514*2^128 + 1014465338*2^192,14147661861641921344 + 8589460258149914863*2^64 + 7873878767388779665*2^128 + 801880169*2^192,4399764022828481896 + 10241214817715116257*2^64 + 6600996423280682480*2^128 + 525513802*2^192,9012835199756451248 + 7252692721728083671*2^64 + 2957694662269728477*2^128 + 253301649*2^192,1724038010941014088 + 7686151692715267140*2^64 + 13333714940893757601*2^128 + 889724654*2^192;\
3711240442194769094 + 994546269849340330*2^64 + 12736342735992620699*2^128 + 828774719*2^192,8686744231667900832 + 758778466647237591*2^64 + 10176040739946295384*2^128 + 1630912719*2^192,6632780621520578100 + 5508208570868995374*2^64 + 16443921101664181827*2^128 + 2142742212*2^192,12726451840081863988 + 18225168665956473291*2^64 + 17231528608482455348*2^128 + 59288281*2^192,2216744515848312796 + 16227819075886187024*2^64 + 15498438547036064706*2^128 + 1399607227*2^192,834522762853121060 + 5777459096062368417*2^64 + 5716541012426338257*2^128 + 1530482300*2^192,3312181384341559364 + 7938101670507407642*2^64 + 17024164598521385815*2^128 + 881095870*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3486 lists. */
