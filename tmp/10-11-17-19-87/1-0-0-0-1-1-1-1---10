/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^7 * z^1               = Coefficient of   x^4 * y^1 * z^1 * w^1   = Coefficient of   x^3 * w^3               = Coefficient of   x^2 * y^3 * z^2         = Coefficient of   x^1 * y^7               = Coefficient of   x^1 * y^2 * z^1 * w^2   = Coefficient of   y^1 * w^4               = Coefficient of   z^4 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 109
[7, 0, 0, 0, 0]  	70	3  <--- 1
[1, 6, 0, 0, 0]  	76	3 
[6, 0, 1, 0, 0]  	77	3 
[0, 1, 0, 4, 0]  	87	2 
[1, 5, 4, 0, 0]  	133	3 
[6, 0, 0, 4, 0]  	136	3 
[0, 1, 4, 3, 0]  	136	2 
[5, 0, 4, 1, 0]  	137	3 
[0, 5, 4, 1, 0]  	142	2 
[5, 0, 1, 4, 0]  	143	4 
[5, 1, 5, 0, 0]  	146	4 
[0, 7, 3, 1, 0]  	147	2 
[5, 0, 6, 0, 0]  	152	6 
[0, 14, 0, 0, 0]  	154	3  <--- 2
[4, 0, 7, 0, 0]  	159	6 
[4, 0, 4, 3, 0]  	165	3 
[4, 4, 4, 1, 0]  	171	4 
[1, 4, 7, 0, 0]  	173	3 
[3, 4, 6, 0, 0]  	176	5 
[3, 4, 5, 1, 0]  	178	4 
[0, 4, 8, 0, 0]  	180	2 
[1, 0, 0, 9, 0]  	181	2 
[3, 3, 7, 0, 0]  	182	4 
[3, 0, 0, 8, 0]  	182	3 
[0, 4, 7, 1, 0]  	182	2 
[0, 6, 7, 0, 0]  	185	2 
[3, 0, 7, 2, 0]  	187	3 
[2, 4, 5, 2, 0]  	187	4 
[3, 0, 6, 3, 0]  	189	3 
[2, 3, 8, 0, 0]  	189	3 
[2, 0, 1, 8, 0]  	189	3 
[1, 2, 7, 2, 0]  	189	3 
[3, 0, 4, 5, 0]  	193	3 
[0, 13, 3, 0, 0]  	194	2 
[2, 0, 6, 4, 0]  	198	3 
[1, 3, 8, 1, 0]  	198	3 
[1, 0, 10, 1, 0]  	199	1 
[0, 0, 5, 6, 0]  	199	1 
[3, 0, 10, 0, 0]  	200	3 
[2, 0, 5, 5, 0]  	200	3 
[2, 1, 10, 0, 0]  	201	3 
[1, 0, 9, 2, 0]  	201	3 
[1, 1, 11, 0, 0]  	208	1 
[0, 0, 10, 2, 0]  	208	1 
[0, 2, 11, 0, 0]  	209	1 
[0, 0, 0, 11, 0]  	209	1  <--- 4
[0, 0, 9, 3, 0]  	210	1 
[1, 0, 4, 7, 0]  	211	1 
[0, 2, 10, 1, 0]  	211	1 
[0, 0, 4, 8, 0]  	220	1 
[0, 0, 13, 0, 0]  	221	1  <--- 3
[1, 0, 8, 4, 0]  	222	1 
[0, 0, 3, 9, 0]  	222	1 
[0, 0, 8, 5, 0]  	231	1 
[1, 2, 1, 1, 1]  	68	3 
[1, 3, 7, 0, 1]  	162	3 
[0, 3, 8, 0, 1]  	169	2 
[0, 3, 7, 1, 1]  	171	2 
[1, 0, 1, 8, 1]  	179	2 
[1, 0, 4, 6, 1]  	192	2 
[1, 1, 2, 3, 2]  	112	4 
[5, 1, 0, 3, 2]  	118	4 
[0, 6, 0, 3, 2]  	123	3 
[1, 1, 5, 1, 2]  	125	2 
[1, 0, 5, 3, 2]  	152	4 
[1, 1, 8, 0, 2]  	157	2 
[0, 5, 3, 3, 2]  	163	3 
[4, 0, 1, 6, 2]  	171	6 
[3, 0, 2, 6, 2]  	178	5 
[5, 0, 0, 7, 2]  	183	3 
[2, 0, 2, 7, 2]  	187	4 
[1, 0, 6, 1, 3]  	131	3 
[1, 0, 8, 0, 3]  	146	4 
[0, 4, 3, 3, 3]  	152	3 
[0, 11, 4, 0, 7]  	189	2 
[0, 10, 6, 0, 8]  	212	2 
[0, 13, 1, 2, 9]  	198	2 
[0, 9, 6, 0, 9]  	201	2 
[0, 0, 4, 7, 245]  	201	1 
[0, 0, 8, 4, 246]  	212	1 
[0, 0, 1, 9, 247]  	188	1 
[0, 0, 10, 1, 247]  	189	1 
[0, 0, 0, 10, 247]  	190	1 
[0, 1, 11, 0, 247]  	198	1 
[0, 2, 7, 2, 248]  	179	1 
[0, 0, 9, 2, 248]  	191	1 
[0, 4, 5, 2, 249]  	167	2 
[0, 0, 1, 8, 249]  	169	1 
[0, 0, 0, 8, 250]  	152	1 
[1, 0, 2, 7, 250]  	177	2 
[0, 0, 6, 4, 250]  	178	1 
[0, 0, 5, 5, 250]  	180	1 
[0, 1, 10, 0, 250]  	181	1 
[0, 4, 5, 1, 251]  	148	2 
[1, 4, 6, 0, 251]  	156	3 
[0, 0, 4, 5, 251]  	163	1 
[0, 4, 4, 1, 252]  	131	2 
[0, 0, 7, 2, 252]  	157	1 
[1, 0, 2, 6, 252]  	158	2 
[0, 0, 6, 3, 252]  	159	1 
[0, 0, 4, 3, 253]  	125	1 
[1, 0, 1, 6, 253]  	141	3 
[0, 5, 2, 3, 253]  	146	3 
[0, 0, 10, 0, 253]  	170	1 
[0, 4, 4, 0, 254]  	112	2 
[5, 0, 4, 0, 254]  	118	3 
[0, 0, 7, 0, 254]  	119	1 
[0, 7, 3, 0, 254]  	128	1 
[0, 0, 4, 0, 255]  	68	1 
------
The gap is between 10 and 244.
Lengths: 2 2 6 9 2 4.
For 204 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^12*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*z^12

For 117 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^3*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*z^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^2

For 30 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^1

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[6434211557247079902 + 12269521492700119047*2^64 + 1710922363077246372*2^128 + 1263280049*2^192,5777243789061326080 + 17052479330305126764*2^64 + 11932145900040594696*2^128 + 456193964*2^192,757163464940666720 + 10680018162110550022*2^64 + 2217970815761302387*2^128 + 1357632590*2^192,3585192810691663240 + 3335248796545742205*2^64 + 12534898972567477339*2^128 + 484678768*2^192,5262786000968623776 + 17443586243437195225*2^64 + 9562994211009595735*2^128 + 1440753507*2^192,17479660534357428240 + 261426868080417767*2^64 + 7313781893345587876*2^128 + 363176259*2^192,12053979393990672224 + 13038865506591587366*2^64 + 1443071279370606589*2^128 + 160334586*2^192,6006637803480441552 + 17886578449926792619*2^64 + 15794631017649797059*2^128 + 17898800*2^192,17233846678270801552 + 8055130065309929686*2^64 + 9030521574171706903*2^128 + 873724928*2^192,2950544680646596208 + 14669388288779005056*2^64 + 16211381846847312553*2^128 + 235160256*2^192;\
2595022399589994008 + 11232105589492906070*2^64 + 3994775677267403070*2^128 + 677708437*2^192,12728917011648530616 + 682749797399256052*2^64 + 16368882796923382092*2^128 + 244410001*2^192,18159038913153916004 + 7067804649578966394*2^64 + 15164825141542935475*2^128 + 846856282*2^192,15718215916527400400 + 13916815848801278878*2^64 + 8159986712156043771*2^128 + 1772379984*2^192,8471227186361512480 + 4959281759918497087*2^64 + 18160626714940185718*2^128 + 1542495269*2^192,13724190274157638084 + 15771844721849743202*2^64 + 10127181338262597919*2^128 + 1408303532*2^192,11007614062586027108 + 10834131050848245628*2^64 + 5210204533337179082*2^128 + 1368809736*2^192,12914065079793098814 + 2880965501777547863*2^64 + 1647250661703043745*2^128 + 998232626*2^192,18138973108157441774 + 8725966456838723473*2^64 + 1750369395164798715*2^128 + 1785088352*2^192,1781816365341602958 + 16775650539393099726*2^64 + 6673836988564567962*2^128 + 1896945785*2^192;\
0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 811506287*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192;\
10737912364199440375 + 616033564845422289*2^64 + 13643752643905348078*2^128 + 746993329*2^192,10942230075516070232 + 11748885927134811088*2^64 + 4504360639908244202*2^128 + 65524805*2^192,15988256128465037632 + 15646150884272859449*2^64 + 2032581029496683447*2^128 + 132931837*2^192,6705502448985952088 + 10621001806229813531*2^64 + 1772673170649226856*2^128 + 62878558*2^192,6193224865706672456 + 10987020883322540749*2^64 + 8671192287120516887*2^128 + 184147557*2^192,1365889186244100920 + 10117018431653079442*2^64 + 2312539477747422735*2^128 + 456814988*2^192,6578782394170403136 + 15573531621725694959*2^64 + 11750100771681538887*2^128 + 944787129*2^192,1078530279514367584 + 6009889013371698456*2^64 + 195233953188671741*2^128 + 265386176*2^192,14154333978456155728 + 12373421817140161901*2^64 + 9237379191665379884*2^128 + 164326830*2^192,4925289605699573112 + 11418500974232665234*2^64 + 7569612394537155798*2^128 + 989421692*2^192;\
14189919722249397888 + 17435789476290244427*2^64 + 17225606586571246994*2^128 + 95486752*2^192,10550296711366765412 + 7526459920589763301*2^64 + 11874162117864799679*2^128 + 188589730*2^192,13094929051841569360 + 9901349508126965247*2^64 + 4390041658102274911*2^128 + 941408076*2^192,12411000650313430186 + 15242807828384933710*2^64 + 6881009019376839361*2^128 + 557602770*2^192,15897891995121393244 + 5614543349496003367*2^64 + 9363336293742149029*2^128 + 1723433249*2^192,7971129457604837300 + 16347518456901866222*2^64 + 2253876878762290146*2^128 + 1111215778*2^192,10447424323398771280 + 12179289060506707343*2^64 + 6284693795290853193*2^128 + 793577008*2^192,12779110805466424728 + 15512843134702969932*2^64 + 3535415210235574988*2^128 + 418185590*2^192,10849513277934104588 + 2274667927280868858*2^64 + 14690646708242972275*2^128 + 997733584*2^192,5660886227316218812 + 14511376865226531526*2^64 + 7807696967032140220*2^128 + 2053183876*2^192;\
12613359632181618872 + 13413277312992824747*2^64 + 2481710337148457497*2^128 + 720353288*2^192,18355018615042659096 + 781787123168831453*2^64 + 4332775145437445424*2^128 + 292991494*2^192,2561128787204499372 + 735661013478389261*2^64 + 16233636415750820652*2^128 + 749101145*2^192,18093756610854472944 + 8177754512790631392*2^64 + 13394317840739863396*2^128 + 781944773*2^192,11197019491286316996 + 10064896400887092900*2^64 + 17892811235843482726*2^128 + 2130280634*2^192,15664291458819443708 + 1574537646481976810*2^64 + 5420514314721113519*2^128 + 2083408143*2^192,11813743405246834604 + 13588548401661262809*2^64 + 16711289107678218424*2^128 + 377059698*2^192,4375027792692866426 + 5628993053402324717*2^64 + 6405287632468162401*2^128 + 693859849*2^192,17450650133950771666 + 11467215807168248859*2^64 + 508755058950782256*2^128 + 194122501*2^192,8338430268633193782 + 15091410475620115689*2^64 + 7484616021611841928*2^128 + 621664736*2^192;\
0 + 0*2^64 + 0*2^128 + 562036736*2^192,0 + 0*2^64 + 0*2^128 + 75497472*2^192,0 + 0*2^64 + 0*2^128 + 822083584*2^192,0 + 0*2^64 + 0*2^128 + 184549376*2^192,0 + 0*2^64 + 0*2^128 + 771751936*2^192,0 + 0*2^64 + 0*2^128 + 394264576*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 996055663*2^192,0 + 0*2^64 + 0*2^128 + 520093696*2^192,0 + 0*2^64 + 0*2^128 + 905969664*2^192,0 + 0*2^64 + 0*2^128 + 973078528*2^192;\
3421640535892154608 + 3541678056858099161*2^64 + 17671970921087723012*2^128 + 1475786427*2^192,6582952984312453536 + 437231747836299980*2^64 + 16877134728893904517*2^128 + 472585148*2^192,1167675191795785504 + 11819828227874929964*2^64 + 7561391532338272382*2^128 + 1193061846*2^192,13098787682147662400 + 6117237833579826426*2^64 + 2200041154097025921*2^128 + 1883968267*2^192,18410043442388470508 + 368608486185444359*2^64 + 18291324752676308409*2^128 + 130851939*2^192,13169919216029966600 + 649375995756508830*2^64 + 5513977423349052326*2^128 + 576238961*2^192,7409523615152348960 + 11290509830831945091*2^64 + 10534655703343530609*2^128 + 2018660257*2^192,10823390449266619380 + 17267516088622012732*2^64 + 13012114396054097798*2^128 + 125406021*2^192,12838488460992536448 + 14997338516767187001*2^64 + 6881858386138916289*2^128 + 146746181*2^192,687539273569124432 + 13331014353400504738*2^64 + 6540381857625884823*2^128 + 1657319554*2^192;\
5710009585522576704 + 4606309721668892314*2^64 + 1480273114766259767*2^128 + 1190126167*2^192,18325127404906959772 + 8068292414013713397*2^64 + 17020647943800615979*2^128 + 1122677693*2^192,7614991437538164048 + 6451606757496041725*2^64 + 8936508617683464082*2^128 + 17050981*2^192,12252663904002245490 + 9177744653934424523*2^64 + 14395934650353891081*2^128 + 1190454124*2^192,1538058664903783324 + 5484915437751057361*2^64 + 8930469808555179600*2^128 + 1310137579*2^192,1037300251557500204 + 14444979016418713176*2^64 + 794848677060360233*2^128 + 1589915725*2^192,4125855809808268624 + 14538163250775808687*2^64 + 4275296823778150794*2^128 + 353075614*2^192,10103310998460484632 + 15262999095148459326*2^64 + 4296478101418635718*2^128 + 96550128*2^192,9856798193301121180 + 4150189712576560170*2^64 + 12865474631259883909*2^128 + 448487132*2^192,657264693969457476 + 8907996703095724972*2^64 + 5336416457974418626*2^128 + 101311745*2^192;\
13222239354699513600 + 14896575145155669376*2^64 + 4769215344547282111*2^128 + 34399116*2^192,13750593906714420128 + 1878236899207334561*2^64 + 16773337861168676807*2^128 + 2081787633*2^192,11168893443764472704 + 3360064029806453255*2^64 + 16740860905842642195*2^128 + 1381278366*2^192,17148089781506865152 + 6827128772395439045*2^64 + 7524147027579585049*2^128 + 4040974*2^192,990598979498017600 + 4302464921609980456*2^64 + 16185572661888063864*2^128 + 328010644*2^192,739643780154171872 + 15884063978599984902*2^64 + 2507285974626835930*2^128 + 1142100844*2^192,7824246279718128512 + 1314901530279238870*2^64 + 4885273612532912855*2^128 + 885500928*2^192,10471442828055030848 + 7227871928204837838*2^64 + 12441953687984700394*2^128 + 703603453*2^192,6190868553908290816 + 6788763824376594736*2^64 + 9415887487951017308*2^128 + 1354699060*2^192,12509776476231977768 + 3740419655908699*2^64 + 13223489429994844375*2^128 + 1358203851*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 2579 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - 3*x^9 + 2*x^8 - 8*x^7 + 12*x^6 + 16*x^5 + 48*x^4 - 128*x^3 + 128*x^2 - 768*x + 1024
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3, 0]
Its factorization is: [x - 2, 2; x^8 + x^7 + 2*x^6 - 4*x^5 - 12*x^4 - 16*x^3 + 32*x^2 + 64*x + 256, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29
