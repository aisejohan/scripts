/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1 * z^1         = Coefficient of   x^7 * w^1               = Coefficient of   x^3 * y^3 * z^3         = Coefficient of   x^2 * y^2 * z^2 * w^1   = Coefficient of   x^1 * y^8               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   z^8                     = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
The final length of G is 86
[7, 0, 0, 0, 0]  	112	2  <--- 1
[3, 3, 2, 0, 0]  	147	2 
[3, 2, 3, 0, 0]  	149	2 
[6, 0, 0, 1, 0]  	152	3 
[1, 8, 0, 0, 0]  	168	2 
[0, 0, 8, 0, 0]  	168	2  <--- 3
[2, 0, 2, 3, 0]  	242	2 
[2, 2, 3, 2, 0]  	245	2 
[3, 2, 0, 3, 0]  	254	2 
[1, 5, 2, 2, 0]  	265	2 
[1, 2, 5, 2, 0]  	271	2 
[1, 2, 3, 3, 0]  	285	2 
[2, 5, 0, 3, 0]  	295	3 
[5, 0, 0, 4, 0]  	304	2 
[1, 1, 5, 3, 0]  	308	3 
[0, 11, 0, 2, 0]  	321	2 
[0, 15, 2, 0, 0]  	327	2 
[0, 8, 3, 2, 0]  	327	2 
[1, 2, 0, 5, 0]  	334	2 
[0, 18, 0, 0, 0]  	342	2  <--- 2
[1, 0, 5, 4, 0]  	345	3 
[1, 1, 2, 5, 0]  	357	2 
[1, 0, 3, 5, 0]  	359	2 
[0, 5, 2, 4, 0]  	361	1 
[0, 2, 5, 4, 0]  	367	1 
[2, 0, 0, 6, 0]  	368	2 
[1, 1, 0, 6, 0]  	371	3 
[0, 4, 1, 5, 0]  	377	1 
[0, 1, 4, 5, 0]  	383	1 
[0, 10, 7, 1, 0]  	393	1 
[0, 3, 0, 6, 0]  	393	1 
[1, 0, 2, 6, 0]  	394	2 
[0, 0, 3, 6, 0]  	399	1 
[1, 0, 0, 7, 0]  	408	3 
[0, 14, 7, 0, 0]  	413	2 
[0, 7, 0, 5, 0]  	413	2 
[0, 10, 0, 4, 0]  	414	1 
[0, 2, 0, 7, 0]  	430	1 
[0, 0, 2, 7, 0]  	434	1 
[0, 1, 0, 8, 0]  	467	1 
[0, 0, 1, 8, 0]  	469	1 
[0, 0, 0, 9, 0]  	504	1  <--- 4
[4, 0, 7, 0, 3]  	211	2 
[5, 7, 0, 0, 3]  	213	2 
[4, 0, 0, 3, 3]  	232	2 
[3, 0, 7, 1, 3]  	251	3 
[4, 7, 0, 1, 3]  	253	3 
[3, 0, 0, 4, 3]  	272	3 
[2, 7, 4, 0, 6]  	249	2 
[2, 4, 7, 0, 6]  	255	2 
[1, 0, 4, 3, 6]  	268	2 
[2, 4, 0, 3, 6]  	276	2 
[1, 7, 4, 1, 6]  	289	3 
[1, 4, 2, 3, 6]  	302	2 
[0, 14, 2, 0, 6]  	308	3 
[1, 4, 1, 4, 6]  	337	2 
[0, 13, 2, 1, 6]  	345	2 
[0, 10, 5, 1, 6]  	351	2 
[1, 0, 0, 6, 6]  	352	2 
[1, 7, 0, 4, 6]  	373	3 
[0, 15, 1, 0, 9]  	306	2 
[0, 9, 7, 0, 9]  	318	2 
[0, 7, 1, 3, 9]  	322	2 
[0, 17, 0, 0, 9]  	323	2 
[0, 9, 0, 3, 9]  	339	2 
[1, 4, 7, 1, 12]  	295	3 
[1, 4, 0, 4, 12]  	316	3 
[0, 3, 1, 5, 238]  	358	1 
[0, 1, 3, 5, 238]  	362	1 
[0, 3, 0, 5, 241]  	337	1 
[0, 0, 3, 5, 241]  	343	1 
[0, 0, 0, 8, 241]  	448	1 
[0, 10, 0, 2, 247]  	302	1 
[0, 8, 2, 2, 247]  	306	1 
[0, 2, 0, 5, 247]  	318	1 
[0, 0, 2, 5, 247]  	322	1 
[0, 5, 2, 2, 250]  	249	1 
[0, 2, 5, 2, 250]  	255	1 
[0, 13, 2, 0, 250]  	289	2 
[0, 10, 5, 0, 250]  	295	2 
[0, 3, 2, 2, 253]  	211	1 
[0, 2, 3, 2, 253]  	213	1 
[2, 6, 5, 0, 253]  	251	2 
[2, 5, 6, 0, 253]  	253	2 
[0, 12, 2, 0, 253]  	270	2 
[0, 10, 4, 0, 253]  	274	2 
------
The gap is between 13 and 237.
Lengths: 2 2 3 3 2 3.
For 392 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^7*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*w^7

For 224 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*w^4

For 56 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[12049555942430521600 + 13757416958623803151*2^64 + 11150914957466890298*2^128 + 48054804312*2^192,9626074248355896189 + 15736370064082446036*2^64 + 12985210942439380583*2^128 + 41550009218*2^192,8434990965276049216 + 8307587909468282869*2^64 + 16248621468611373701*2^128 + 27547652597*2^192,15287349599829684352 + 9811004684232960865*2^64 + 2327161145932390658*2^128 + 59864239293*2^192,4687558516415893988 + 3257488126332353702*2^64 + 11568402654601658638*2^128 + 67717180513*2^192,11247843111178738432 + 270367651667171007*2^64 + 10082731071422136331*2^128 + 1773429940*2^192,13894727894600906504 + 15055665996801573103*2^64 + 2205777243055255215*2^128 + 42814833920*2^192;\
9694459762072389632 + 6549439786593509873*2^64 + 12979637268491331902*2^128 + 56762805041*2^192,4731357292910356736 + 10307379064132853109*2^64 + 11196427374377899377*2^128 + 46298762398*2^192,4647076531121750016 + 16762429580484253240*2^64 + 1571067177614760616*2^128 + 22603066557*2^192,8323120418708106496 + 11206451886736601101*2^64 + 16704149240277527163*2^128 + 48876347964*2^192,18360583899355834368 + 14112376266885667615*2^64 + 2445946157043602806*2^128 + 67278494987*2^192,17124902279813092352 + 3224315241682089144*2^64 + 7953461734013463561*2^128 + 56125035171*2^192,7092183902643666944 + 5431988199230606209*2^64 + 9093087954908920035*2^128 + 12021039472*2^192;\
7638202082898120704 + 4037018297732419173*2^64 + 17483386389957027535*2^128 + 33938968573*2^192,12764785525605061120 + 15029832097965452123*2^64 + 7489075770669665779*2^128 + 6918691607*2^192,4264216229333762176 + 5384197197587975449*2^64 + 16400717943709914991*2^128 + 30015817340*2^192,14949356190124447232 + 8634998991983841011*2^64 + 1627276275137453528*2^128 + 18402553111*2^192,17669666095069118464 + 5170300166307669750*2^64 + 16295082725173340419*2^128 + 29922761230*2^192,12674639370675251200 + 14171518768253741163*2^64 + 10678513544931972799*2^128 + 28937738151*2^192,10300956746615513088 + 3536051268479741833*2^64 + 12159011460742051401*2^128 + 11234581943*2^192;\
16275251453085416448 + 4164723346866062626*2^64 + 8323357928414434994*2^128 + 16742855284*2^192,3078461825799604492 + 11620505117567631775*2^64 + 12889884353213143427*2^128 + 21884503688*2^192,10583232874551769856 + 6407841416318592036*2^64 + 4390445174313263758*2^128 + 55413253516*2^192,3686431127995129344 + 9255465087206144817*2^64 + 704553848903220604*2^128 + 3414492316*2^192,15248562046806859504 + 8509343405966923977*2^64 + 17858242681229153562*2^128 + 46986772134*2^192,14793177947314353152 + 2016217570771738596*2^64 + 4873497504300669729*2^128 + 16720081656*2^192,6041620075830437600 + 2466937886779696342*2^64 + 14130069075165265280*2^128 + 19358662527*2^192;\
5039733951681583872 + 18228200035774529067*2^64 + 15967027106159568483*2^128 + 39330301105*2^192,10601515949301251328 + 17764168827118230538*2^64 + 784345175332647916*2^128 + 59560729115*2^192,13507459910118604800 + 13383971723319138230*2^64 + 15643878171204464035*2^128 + 60394564657*2^192,7741102014126548480 + 16686821808828482993*2^64 + 2812955445160122255*2^128 + 34397556513*2^192,9648334222198610432 + 1764834867681495343*2^64 + 3313630712736357596*2^128 + 1567512319*2^192,5115671204014665472 + 7002124956784301123*2^64 + 5769281362822634722*2^128 + 961896779*2^192,17641338592314648576 + 17557191916709231764*2^64 + 2611266787893423959*2^128 + 33077739866*2^192;\
12429323851874194176 + 2872568253100263773*2^64 + 18203477360925872408*2^128 + 41733545852*2^192,11323313940521409887 + 15053355179035340621*2^64 + 9784111748355990679*2^128 + 23321234329*2^192,4903908182519429056 + 15628607565484513286*2^64 + 8831096414585448845*2^128 + 12353314483*2^192,10890935726386083200 + 15212191972525392815*2^64 + 10228075568701223343*2^128 + 61807362608*2^192,5181296487680133964 + 10520935699589767132*2^64 + 9222432599370117112*2^128 + 8098293617*2^192,7492553653480687872 + 8181988121563180394*2^64 + 17706062638399902006*2^128 + 34948308230*2^192,3683605819498447704 + 17994940961953484477*2^64 + 18361413212070448578*2^128 + 59537546140*2^192;\
9859292175772017920 + 3185043808046531991*2^64 + 1353979577863756526*2^128 + 33346479846*2^192,7469185060834920576 + 9572905062523989051*2^64 + 14531776226689299061*2^128 + 302248799*2^192,2701124588767682560 + 1126837835873235424*2^64 + 12845018647126274971*2^128 + 53934109291*2^192,11827834010332919808 + 1639346625167690906*2^64 + 16007833354765612257*2^128 + 67338514859*2^192,3842676042302009344 + 17699392498111425174*2^64 + 18148885327016835078*2^128 + 60727737372*2^192,13056862931014004992 + 8950312362491584059*2^64 + 7234660387934763456*2^128 + 51404516105*2^192,8219330371288062976 + 4499117379746924156*2^64 + 17051499715671451003*2^128 + 60784118167*2^192]
/* 
This matrix times 2^(-6) should be the matrix of frobenius.
*/ 
B = 2^(-6) * A; 
/* Freed 2644 lists. */
The sign is: -1
The characteristic polynomial is: x^7 + 2*x^6 + 3*x^5 + 10*x^4 + 20*x^3 + 24*x^2 + 64*x + 128
Its Newton polygon is: [2, 2, 1, 1, 1, 0, 0]
Its factorization is: [x + 2, 1; x^6 + 3*x^4 + 4*x^3 + 12*x^2 + 64, 1]
The valuation of f-g is: 24
The valuation of subst(g,x,A) is: 18
