/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1 * z^1         = Coefficient of   x^7 * w^1               = Coefficient of   x^3 * y^3 * z^3         = Coefficient of   x^2 * y^2 * z^2 * w^1   = Coefficient of   x^1 * y^8               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   z^8                     = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 191
[7, 0, 0, 0, 0]  	112	4  <--- 1
[3, 3, 2, 0, 0]  	147	4 
[3, 2, 3, 0, 0]  	149	4 
[6, 0, 0, 1, 0]  	152	5 
[2, 2, 2, 1, 0]  	168	4 
[1, 8, 0, 0, 0]  	168	2 
[5, 1, 0, 2, 0]  	211	6 
[1, 1, 9, 0, 0]  	224	3 
[4, 0, 8, 0, 0]  	232	6 
[4, 1, 0, 3, 0]  	251	6 
[5, 0, 3, 2, 0]  	255	7 
[1, 7, 0, 2, 0]  	261	4 
[2, 0, 11, 0, 0]  	263	4 
[3, 0, 8, 1, 0]  	272	5 
[4, 0, 2, 3, 0]  	274	6 
[1, 0, 10, 1, 0]  	282	4 
[2, 1, 6, 2, 0]  	289	4 
[3, 1, 0, 4, 0]  	291	6 
[3, 0, 1, 4, 0]  	293	5 
[3, 6, 1, 2, 0]  	295	4 
[2, 5, 8, 0, 0]  	295	4 
[0, 7, 8, 0, 0]  	301	4 
[5, 0, 0, 4, 0]  	304	5 
[3, 0, 7, 2, 0]  	307	4 
[2, 7, 7, 0, 0]  	312	5 
[2, 0, 8, 2, 0]  	312	5 
[2, 6, 0, 3, 0]  	314	4 
[1, 4, 8, 1, 0]  	316	3 
[0, 14, 0, 1, 0]  	322	4 
[0, 17, 0, 0, 0]  	323	3  <--- 2
[0, 10, 1, 2, 0]  	323	3 
[1, 0, 4, 4, 0]  	324	3 
[0, 13, 1, 1, 0]  	324	3 
[0, 16, 1, 0, 0]  	325	3 
[0, 9, 2, 2, 0]  	325	3 
[2, 0, 6, 3, 0]  	326	3 
[1, 6, 4, 2, 0]  	326	3 
[0, 12, 2, 1, 0]  	326	3 
[3, 0, 0, 5, 0]  	328	4 
[1, 1, 6, 3, 0]  	329	4 
[1, 4, 6, 2, 0]  	330	3 
[0, 10, 4, 1, 0]  	330	3 
[2, 1, 0, 5, 0]  	331	5 
[2, 4, 0, 4, 0]  	332	3 
[1, 3, 7, 2, 0]  	332	3 
[0, 9, 5, 1, 0]  	332	3 
[2, 0, 1, 5, 0]  	333	4 
[1, 5, 0, 4, 0]  	335	3 
[1, 4, 1, 4, 0]  	337	3 
[0, 9, 0, 3, 0]  	339	3 
[0, 5, 9, 1, 0]  	340	2 
[0, 8, 1, 3, 0]  	341	3 
[0, 4, 10, 1, 0]  	342	2 
[0, 6, 11, 0, 0]  	345	2 
[0, 2, 12, 1, 0]  	346	2 
[0, 1, 13, 1, 0]  	348	2 
[0, 3, 14, 0, 0]  	351	2 
[1, 0, 16, 0, 0]  	352	4 
[1, 0, 8, 3, 0]  	352	4 
[0, 8, 7, 1, 0]  	355	3 
[0, 1, 16, 0, 0]  	355	3 
[0, 4, 8, 2, 0]  	356	2 
[0, 7, 0, 4, 0]  	357	3 
[0, 0, 17, 0, 0]  	357	3  <--- 3
[0, 3, 9, 2, 0]  	358	2 
[1, 6, 3, 3, 0]  	361	1 
[0, 5, 2, 4, 0]  	361	1 
[0, 1, 11, 2, 0]  	362	2 
[0, 0, 12, 2, 0]  	364	2 
[0, 2, 5, 4, 0]  	367	1 
[2, 0, 0, 6, 0]  	368	3 
[1, 1, 0, 6, 0]  	371	4 
[1, 4, 0, 5, 0]  	372	2 
[1, 0, 1, 6, 0]  	373	3 
[0, 2, 8, 3, 0]  	374	2 
[0, 4, 1, 5, 0]  	377	1 
[0, 0, 10, 3, 0]  	378	2 
[0, 1, 4, 5, 0]  	383	1 
[0, 14, 6, 0, 0]  	392	4 
[0, 0, 16, 1, 0]  	392	3 
[0, 3, 0, 6, 0]  	393	1 
[0, 0, 3, 6, 0]  	399	1 
[1, 0, 0, 7, 0]  	408	2 
[0, 1, 8, 4, 0]  	411	2 
[0, 0, 9, 4, 0]  	413	2 
[0, 2, 0, 7, 0]  	430	1 
[0, 0, 2, 7, 0]  	434	1 
[0, 1, 0, 8, 0]  	467	1 
[0, 0, 1, 8, 0]  	469	1 
[0, 0, 0, 9, 0]  	504	1  <--- 4
[2, 7, 1, 1, 1]  	242	4 
[3, 1, 7, 1, 1]  	270	5 
[2, 1, 8, 1, 1]  	275	4 
[1, 6, 2, 2, 1]  	284	4 
[1, 2, 6, 2, 1]  	292	4 
[1, 0, 14, 0, 1]  	310	4 
[1, 1, 8, 2, 1]  	315	4 
[0, 12, 0, 2, 1]  	340	2 
[0, 8, 4, 2, 1]  	348	2 
[1, 7, 7, 1, 1]  	352	4 
[1, 3, 1, 5, 1]  	374	2 
[1, 1, 3, 5, 1]  	378	2 
[0, 0, 8, 5, 1]  	448	2 
[2, 2, 1, 2, 2]  	203	4 
[2, 1, 2, 2, 2]  	205	4 
[1, 1, 2, 3, 2]  	245	4 
[1, 1, 1, 4, 2]  	280	4 
[2, 7, 6, 0, 2]  	291	5 
[2, 2, 0, 4, 2]  	294	4 
[1, 5, 1, 3, 2]  	300	3 
[4, 0, 6, 2, 2]  	302	4 
[1, 5, 4, 2, 2]  	307	4 
[0, 7, 3, 2, 2]  	308	3 
[1, 4, 5, 2, 2]  	309	4 
[2, 0, 3, 4, 2]  	319	3 
[0, 11, 0, 2, 2]  	321	3 
[1, 2, 0, 5, 2]  	334	4 
[0, 11, 7, 0, 2]  	356	2 
[5, 7, 0, 0, 3]  	213	6 
[5, 0, 7, 0, 3]  	227	5 
[5, 0, 0, 3, 3]  	248	5 
[4, 7, 0, 1, 3]  	253	6 
[0, 15, 0, 0, 3]  	285	4 
[1, 7, 4, 1, 3]  	289	4 
[1, 0, 3, 4, 3]  	303	4 
[3, 0, 5, 3, 3]  	321	4 
[0, 7, 7, 1, 3]  	336	4 
[0, 10, 7, 0, 3]  	337	3 
[0, 7, 2, 3, 3]  	343	3 
[4, 1, 6, 1, 4]  	265	6 
[5, 6, 1, 1, 4]  	271	6 
[2, 0, 2, 4, 4]  	298	4 
[0, 14, 3, 0, 4]  	329	3 
[1, 0, 2, 5, 4]  	338	3 
[3, 0, 6, 2, 5]  	286	5 
[4, 6, 0, 2, 5]  	290	5 
[2, 0, 5, 3, 5]  	305	4 
[3, 5, 0, 3, 5]  	311	4 
[4, 0, 7, 1, 6]  	267	5 
[4, 0, 0, 4, 6]  	288	5 
[0, 12, 1, 1, 250]  	305	3 
[0, 9, 4, 1, 250]  	311	3 
[0, 4, 9, 1, 251]  	321	2 
[0, 1, 12, 1, 251]  	327	2 
[1, 4, 3, 2, 252]  	267	4 
[1, 3, 4, 2, 252]  	269	4 
[1, 5, 8, 0, 252]  	279	2 
[1, 0, 6, 3, 252]  	310	3 
[0, 5, 8, 1, 252]  	319	2 
[0, 0, 13, 1, 252]  	329	2 
[0, 5, 1, 4, 252]  	340	1 
[0, 1, 5, 4, 252]  	348	1 
[5, 0, 1, 2, 253]  	213	5 
[4, 0, 1, 3, 253]  	253	5 
[0, 9, 0, 2, 253]  	283	2 
[0, 12, 0, 1, 253]  	284	3 
[0, 8, 1, 2, 253]  	285	2 
[1, 0, 13, 0, 253]  	289	1 
[0, 8, 4, 1, 253]  	292	3 
[0, 0, 16, 0, 253]  	336	1 
[0, 3, 8, 2, 253]  	337	1 
[0, 0, 11, 2, 253]  	343	1 
[0, 0, 0, 8, 253]  	448	1 
[1, 1, 8, 0, 254]  	203	1 
[1, 0, 9, 0, 254]  	205	1 
[0, 9, 0, 1, 254]  	227	2 
[0, 8, 1, 1, 254]  	229	2 
[0, 1, 8, 1, 254]  	243	1 
[0, 0, 9, 1, 254]  	245	1 
[1, 6, 1, 2, 254]  	263	3 
[1, 1, 6, 2, 254]  	273	3 
[1, 0, 7, 2, 254]  	275	1 
[0, 0, 8, 2, 254]  	280	1 
[0, 6, 8, 0, 254]  	282	2 
[0, 0, 14, 0, 254]  	294	2 
[1, 6, 0, 3, 254]  	298	1 
[0, 4, 0, 4, 254]  	300	1 
[0, 0, 4, 4, 254]  	308	1 
[1, 3, 2, 2, 255]  	227	4 
[1, 2, 3, 2, 255]  	229	4 
[1, 6, 0, 2, 255]  	242	1 
[1, 2, 1, 3, 255]  	243	2 
[2, 1, 7, 1, 255]  	254	2 
[1, 0, 6, 2, 255]  	254	1 
[3, 0, 5, 2, 255]  	265	5 
[4, 5, 0, 2, 255]  	271	5 
[2, 1, 0, 4, 255]  	275	2 
[1, 1, 0, 5, 255]  	315	3 
[1, 0, 0, 6, 255]  	352	2 
[0, 2, 0, 6, 255]  	374	1 
[0, 0, 2, 6, 255]  	378	1 
------
The gap is between 7 and 249.
Lengths: 2 2 3 3 2 3.
For 392 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*z^8*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*w^7

For 224 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^8*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^4

For 56 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[13618706287705383016 + 7662737934134487999*2^64 + 8752343292684298019*2^128 + 4832459338*2^192,10229960469521833110 + 3783127415129300222*2^64 + 2477572729753046663*2^128 + 3318458061*2^192,17174674846625604360 + 4430707293920668080*2^64 + 18235122971621073260*2^128 + 540161146*2^192,5315973757354110528 + 14786829946146244520*2^64 + 11380030039592217785*2^128 + 8340711916*2^192,17419293357625742912 + 1629362610523590700*2^64 + 18261782702993228835*2^128 + 6105473760*2^192,1075624341210589552 + 4737633836903865164*2^64 + 4197790850078340188*2^128 + 5509815332*2^192,997470908541054544 + 17316363213740713240*2^64 + 17843683792484484889*2^128 + 3381872391*2^192;\
6198188780132458464 + 18280392294777854791*2^64 + 10323395575037784273*2^128 + 2015997161*2^192,12233669780699811944 + 9055719270918597646*2^64 + 8463517609963843669*2^128 + 3871121839*2^192,6686770433543710464 + 12513334454285010879*2^64 + 4037900217676319005*2^128 + 1112888980*2^192,2436691390340971008 + 6669725439067830107*2^64 + 10864248224299327597*2^128 + 4894364360*2^192,472374708241972736 + 1284850052539898897*2^64 + 14647112746401421799*2^128 + 2995653182*2^192,10274157676215758976 + 10929912223932537866*2^64 + 17607863884073505239*2^128 + 5596155952*2^192,6411750988196865664 + 12846070601805359182*2^64 + 13914476416325703063*2^128 + 3238557039*2^192;\
4940614525673062192 + 10011143592690821141*2^64 + 17070663013584650319*2^128 + 6788846416*2^192,3753612436984796812 + 12546373875721274213*2^64 + 14656158898177129639*2^128 + 1867334440*2^192,14851186356948359952 + 8518966801526515426*2^64 + 16120148165842537548*2^128 + 7966841652*2^192,5749269545884658560 + 3874071514902372889*2^64 + 16510635091446075290*2^128 + 7094278554*2^192,4263948986065643264 + 10824781749621812671*2^64 + 10304714993055845246*2^128 + 2947401785*2^192,12193915875944973248 + 3995720969866848102*2^64 + 2067635313476759732*2^128 + 6431049933*2^192,14790329118154797888 + 14837065403592734642*2^64 + 5694555292250219977*2^128 + 1307414935*2^192;\
3519168330645156220 + 5468195394001248164*2^64 + 8608123165351397139*2^128 + 1504418646*2^192,3833505010779071981 + 17562735587958729893*2^64 + 12738578939459982601*2^128 + 4344090229*2^192,14092790170245761516 + 8413443655237748169*2^64 + 1533875753616890708*2^128 + 4931885735*2^192,627088337805658288 + 6766158734680927817*2^64 + 1809272366053428986*2^128 + 2654434531*2^192,16627791888434127888 + 12363534343499771187*2^64 + 6512085913291683382*2^128 + 262569522*2^192,12833071865030977768 + 9629294015567441877*2^64 + 1509023168125587356*2^128 + 4242052611*2^192,4909324033635982936 + 9341334084472320993*2^64 + 13137659695804161448*2^128 + 7484307812*2^192;\
13635323311954901972 + 5234654458833647174*2^64 + 142854698044040097*2^128 + 323665751*2^192,13312148562062035121 + 1308294040024347732*2^64 + 11495175660425355992*2^128 + 1306269602*2^192,10864597953460169724 + 9453605385179833849*2^64 + 14460126268612599235*2^128 + 2152974500*2^192,17382331924924644192 + 16298540301578952498*2^64 + 547298897222190153*2^128 + 707017200*2^192,5563195033649857648 + 2850776480861392526*2^64 + 6108332780054181636*2^128 + 6002736385*2^192,1307397269931627976 + 12640768714584967212*2^64 + 9418129364062980638*2^128 + 6182645149*2^192,193277404630919192 + 10365099312634999101*2^64 + 5642738915245715978*2^128 + 7146413961*2^192;\
16515650392060019928 + 17762135084250266964*2^64 + 7394027112779904992*2^128 + 7233565147*2^192,5221640776164135416 + 13043601102695108529*2^64 + 11155307348687293274*2^128 + 6383905669*2^192,4616869079081824624 + 15425977298897651816*2^64 + 11328512446193915074*2^128 + 6578727034*2^192,4668673193247133248 + 17638477455185625870*2^64 + 767853151356720755*2^128 + 2452276194*2^192,9808839791960270000 + 17960763788765188771*2^64 + 8891345600071426589*2^128 + 4934851435*2^192,4643791754188153184 + 14451140811014608951*2^64 + 17662516287503378835*2^128 + 5144716309*2^192,6516236803648140608 + 9698585255416813955*2^64 + 12425610413667228684*2^128 + 6020045384*2^192;\
7054671344739975024 + 2585704629371757881*2^64 + 13159659449040817013*2^128 + 201070562*2^192,5907479558465096494 + 15214532850291347618*2^64 + 15146424749375415307*2^128 + 6301242412*2^192,5122261581705232824 + 15072127396200619640*2^64 + 15376812173618606018*2^128 + 3008686642*2^192,15744015269709341536 + 6152556687238037301*2^64 + 14442840879064431155*2^128 + 1773151987*2^192,1811469126103833264 + 2028862919309788075*2^64 + 15893967231442096261*2^128 + 1284905105*2^192,17752097926740335984 + 12524992406207710698*2^64 + 14918198338712679473*2^128 + 5978849937*2^192,6455741104405497232 + 6022938512642744914*2^64 + 547121884396934370*2^128 + 1541211523*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 2812 lists. */
The sign is: -1
The characteristic polynomial is: x^7 + 2*x^6 - 8*x^4 - 16*x^3 + 64*x + 128
Its Newton polygon is: [1, 1, 1, 1, 1, 1, 1]
Its factorization is: [x + 2, 1; x^6 - 8*x^3 + 64, 1]
The valuation of f-g is: 34
The valuation of subst(g,x,A) is: 36
