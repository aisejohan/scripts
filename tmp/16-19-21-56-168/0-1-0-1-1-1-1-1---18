/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1 * z^1         = Coefficient of   x^7 * w^1               = Coefficient of   x^3 * y^3 * z^3         = Coefficient of   x^2 * y^2 * z^2 * w^1   = Coefficient of   x^1 * y^8               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   z^8                     = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 161
[7, 0, 0, 0, 0]  	112	4  <--- 1
[6, 0, 0, 1, 0]  	152	4 
[2, 2, 2, 1, 0]  	168	3 
[1, 8, 0, 0, 0]  	168	2 
[1, 1, 1, 2, 0]  	168	3 
[5, 1, 0, 2, 0]  	211	5 
[4, 0, 8, 0, 0]  	232	5 
[4, 1, 0, 3, 0]  	251	5 
[1, 7, 0, 2, 0]  	261	3 
[3, 0, 8, 1, 0]  	272	5 
[4, 0, 2, 3, 0]  	274	6 
[2, 1, 0, 4, 0]  	275	3 
[1, 0, 10, 1, 0]  	282	3 
[1, 0, 2, 4, 0]  	282	3 
[3, 0, 1, 4, 0]  	293	5 
[5, 0, 0, 4, 0]  	304	4 
[2, 0, 8, 2, 0]  	312	5 
[2, 6, 8, 0, 0]  	314	4 
[2, 6, 0, 3, 0]  	314	4 
[1, 1, 0, 5, 0]  	315	2 
[0, 13, 1, 1, 0]  	324	3 
[2, 0, 14, 0, 0]  	326	3 
[2, 0, 6, 3, 0]  	326	3 
[0, 12, 2, 1, 0]  	326	3 
[1, 1, 14, 0, 0]  	329	5 
[0, 10, 4, 1, 0]  	330	3 
[0, 9, 5, 1, 0]  	332	3 
[2, 0, 1, 5, 0]  	333	4 
[1, 5, 8, 1, 0]  	335	3 
[1, 5, 0, 4, 0]  	335	3 
[0, 12, 0, 2, 0]  	340	2 
[0, 18, 0, 0, 0]  	342	3  <--- 2
[0, 11, 1, 2, 0]  	342	3 
[0, 6, 11, 0, 0]  	345	2 
[0, 16, 2, 0, 0]  	346	3 
[0, 9, 3, 2, 0]  	346	3 
[0, 8, 4, 2, 0]  	348	2 
[0, 3, 14, 0, 0]  	351	2 
[1, 0, 8, 3, 0]  	352	4 
[0, 4, 8, 2, 0]  	356	2 
[0, 7, 8, 1, 0]  	357	4 
[0, 10, 0, 3, 0]  	358	3 
[0, 5, 10, 1, 0]  	361	1 
[0, 5, 2, 4, 0]  	361	1 
[0, 8, 2, 3, 0]  	362	3 
[0, 0, 12, 2, 0]  	364	2 
[0, 2, 13, 1, 0]  	367	1 
[0, 2, 5, 4, 0]  	367	1 
[2, 0, 0, 6, 0]  	368	3 
[1, 0, 17, 0, 0]  	373	3 
[1, 0, 1, 6, 0]  	373	3 
[0, 11, 8, 0, 0]  	377	1 
[0, 4, 1, 5, 0]  	377	1 
[0, 7, 1, 4, 0]  	378	3 
[0, 17, 0, 1, 0]  	379	3 
[0, 1, 4, 5, 0]  	383	1 
[0, 3, 8, 3, 0]  	393	1 
[0, 3, 0, 6, 0]  	393	1 
[0, 9, 0, 4, 0]  	395	3 
[0, 0, 19, 0, 0]  	399	1  <--- 3
[0, 0, 11, 3, 0]  	399	1 
[0, 0, 3, 6, 0]  	399	1 
[1, 0, 0, 7, 0]  	408	2 
[0, 7, 0, 5, 0]  	413	3 
[0, 2, 0, 7, 0]  	430	1 
[0, 0, 18, 1, 0]  	434	1 
[0, 0, 10, 4, 0]  	434	1 
[0, 0, 2, 7, 0]  	434	1 
[0, 0, 8, 5, 0]  	448	2 
[0, 1, 0, 8, 0]  	467	1 
[0, 0, 1, 8, 0]  	469	1 
[0, 0, 0, 9, 0]  	504	1  <--- 4
[2, 2, 1, 1, 1]  	147	3 
[2, 1, 2, 1, 1]  	149	3 
[1, 1, 9, 0, 1]  	224	3 
[0, 7, 8, 0, 1]  	301	4 
[1, 0, 14, 0, 1]  	310	4 
[3, 0, 5, 3, 1]  	321	4 
[1, 1, 8, 0, 2]  	203	3 
[2, 0, 10, 0, 2]  	242	4 
[1, 0, 9, 1, 2]  	261	3 
[1, 7, 5, 1, 2]  	310	5 
[0, 14, 3, 0, 2]  	329	4 
[0, 0, 16, 0, 2]  	336	3 
[0, 5, 9, 1, 2]  	340	2 
[0, 4, 10, 1, 2]  	342	2 
[0, 2, 12, 1, 2]  	346	2 
[0, 1, 13, 1, 2]  	348	2 
[0, 3, 9, 2, 2]  	358	2 
[0, 1, 11, 2, 2]  	362	2 
[0, 2, 8, 3, 2]  	374	2 
[0, 0, 10, 3, 2]  	378	2 
[1, 7, 0, 1, 3]  	205	3 
[5, 7, 0, 0, 3]  	213	5 
[5, 0, 7, 0, 3]  	227	4 
[0, 7, 0, 2, 3]  	245	3 
[5, 0, 0, 3, 3]  	248	4 
[0, 7, 7, 0, 3]  	280	2 
[0, 15, 0, 0, 3]  	285	4 
[2, 7, 6, 0, 3]  	291	5 
[4, 0, 7, 2, 3]  	323	5 
[4, 0, 0, 5, 3]  	344	5 
[0, 1, 8, 4, 3]  	411	2 
[0, 0, 9, 4, 3]  	413	2 
[2, 0, 5, 3, 4]  	305	4 
[3, 5, 0, 3, 4]  	311	4 
[4, 6, 0, 2, 5]  	290	5 
[4, 7, 5, 0, 5]  	302	5 
[4, 0, 7, 1, 6]  	267	4 
[4, 0, 0, 4, 6]  	288	4 
[4, 6, 7, 0, 6]  	325	4 
[3, 7, 5, 0, 8]  	286	5 
[3, 0, 7, 2, 9]  	307	4 
[3, 0, 0, 5, 9]  	328	4 
[3, 6, 7, 0, 12]  	309	4 
[0, 11, 2, 1, 244]  	307	3 
[0, 10, 3, 1, 244]  	309	3 
[0, 3, 10, 1, 246]  	323	2 
[0, 2, 11, 1, 246]  	325	2 
[0, 2, 9, 2, 249]  	339	2 
[0, 1, 10, 2, 249]  	341	2 
[0, 1, 0, 7, 249]  	411	1 
[0, 0, 1, 7, 249]  	413	1 
[0, 10, 1, 1, 250]  	267	3 
[0, 9, 2, 1, 250]  	269	3 
[0, 1, 0, 6, 251]  	355	1 
[0, 0, 1, 6, 251]  	357	1 
[0, 2, 9, 1, 252]  	283	2 
[0, 1, 10, 1, 252]  	285	2 
[1, 0, 1, 5, 252]  	317	1 
[0, 2, 1, 5, 252]  	339	1 
[0, 5, 1, 4, 252]  	340	1 
[0, 1, 2, 5, 252]  	341	1 
[0, 1, 5, 4, 252]  	348	1 
[0, 1, 8, 3, 252]  	355	2 
[0, 0, 9, 3, 252]  	357	2 
[0, 0, 8, 4, 252]  	392	2 
[5, 0, 1, 2, 253]  	213	4 
[0, 9, 0, 1, 253]  	227	3 
[0, 8, 1, 1, 253]  	229	3 
[0, 1, 0, 4, 253]  	243	1 
[0, 0, 1, 4, 253]  	245	1 
[4, 0, 1, 3, 253]  	253	3 
[0, 0, 0, 5, 253]  	280	1 
[3, 0, 6, 2, 253]  	286	4 
[2, 0, 7, 2, 253]  	291	3 
[1, 6, 0, 3, 253]  	298	1 
[1, 0, 6, 3, 253]  	310	1 
[0, 0, 8, 3, 253]  	336	1 
[1, 1, 0, 3, 254]  	203	1 
[1, 0, 1, 3, 254]  	205	1 
[1, 0, 7, 2, 254]  	275	1 
[0, 0, 8, 2, 254]  	280	1 
[0, 5, 8, 1, 254]  	319	1 
[0, 0, 13, 1, 254]  	329	1 
[1, 1, 0, 2, 255]  	147	1 
[1, 0, 1, 2, 255]  	149	1 
[1, 0, 9, 0, 255]  	205	2 
[0, 0, 8, 1, 255]  	224	2 
[0, 6, 8, 0, 255]  	282	2 
[0, 0, 14, 0, 255]  	294	2 
------
The gap is between 13 and 243.
Lengths: 2 2 3 4 2 5.
For 392 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*z^8*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*w^7

For 224 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^8*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^4

For 56 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[8742279710012185796 + 6216891574538327228*2^64 + 14888976362558162870*2^128 + 4124467218*2^192,12206815534556955070 + 6310007980988496996*2^64 + 11401771345532205772*2^128 + 2693617238*2^192,6355041540575136006 + 16386671562814321499*2^64 + 18249308706676522915*2^128 + 2304756525*2^192,17055973572423190390 + 37625433667759085*2^64 + 1059169545933052834*2^128 + 1636718877*2^192,1501610530421409128 + 10047964087994797184*2^64 + 3590231870170172048*2^128 + 3634342130*2^192,2128756677357412658 + 15131579562430721262*2^64 + 2818389965899747041*2^128 + 2137648831*2^192,8232911332243041788 + 9206937560693899138*2^64 + 17465439639116349206*2^128 + 1036115666*2^192;\
2364759495262382432 + 236286432979949204*2^64 + 1607950876341578659*2^128 + 765091669*2^192,16523906424698187006 + 11151090648854071943*2^64 + 3721067841375987387*2^128 + 3870296092*2^192,14613412236202264322 + 2737576834859528303*2^64 + 15164987318239100188*2^128 + 793897678*2^192,13764647606567977602 + 14108520464150988713*2^64 + 8054058306407358183*2^128 + 610422821*2^192,11346870522492554552 + 8435594760368716035*2^64 + 11279948089134331942*2^128 + 1673251581*2^192,11701415156073608182 + 16163363780821661871*2^64 + 3973712077258691895*2^128 + 1594712137*2^192,13985472134866054708 + 15428720111643718917*2^64 + 9350092372575925198*2^128 + 913707155*2^192;\
2797488514119407888 + 13735973843723210610*2^64 + 18318874908683111071*2^128 + 863198096*2^192,42265034779002792 + 2197429627528036951*2^64 + 13282988086594162348*2^128 + 425293259*2^192,2516641159641181456 + 4852156282192539768*2^64 + 14783153447085188805*2^128 + 368605687*2^192,10240757972487686504 + 2130391390395458593*2^64 + 15517998322809231210*2^128 + 1989332626*2^192,3043044325835357664 + 15858766506066813234*2^64 + 14821862203598156958*2^128 + 2056677605*2^192,13114848072334875640 + 4616890860119196797*2^64 + 12468787386251737487*2^128 + 1951295858*2^192,6734641023112024976 + 12487884028265614486*2^64 + 389162274191208378*2^128 + 1157157277*2^192;\
6984601350861160572 + 17796523848185027361*2^64 + 1462307589903221090*2^128 + 1019214115*2^192,2309408626963874654 + 698281249969160008*2^64 + 4816252798617953535*2^128 + 2601366484*2^192,4693893629109962074 + 13056236129296372583*2^64 + 6201200737584130667*2^128 + 3573619548*2^192,16914706328669404718 + 15665893740882297356*2^64 + 12882797201592702082*2^128 + 3741703479*2^192,4909747985672937288 + 8571154855985396846*2^64 + 1519659354993061310*2^128 + 2864494418*2^192,12727666083152572594 + 1650791024531772175*2^64 + 6776922011655149342*2^128 + 3969788024*2^192,3941418459493534140 + 17330018962935919647*2^64 + 16202352042839550972*2^128 + 367172049*2^192;\
3782730462597419952 + 6011059134395338196*2^64 + 13713495204821053011*2^128 + 1439749562*2^192,13020423944661129667 + 1382230488998704946*2^64 + 17039542993108306560*2^128 + 1217876427*2^192,2043164278234864189 + 9671797594551348576*2^64 + 4544675338206076847*2^128 + 2869425509*2^192,1425274705495304009 + 1003044982120418989*2^64 + 8435883617395725433*2^128 + 1118253701*2^192,2035339384682512292 + 3463532459717117582*2^64 + 2759415755907880992*2^128 + 777714026*2^192,5929080344976486243 + 12422559836436580551*2^64 + 13267828512322605201*2^128 + 3725967357*2^192,14757325590557776522 + 17494191690411723837*2^64 + 3661112717797363626*2^128 + 1622455860*2^192;\
14796685722095132224 + 5489841221955641826*2^64 + 12143897692314463751*2^128 + 1090523570*2^192,6162741731066508336 + 2905446492285587278*2^64 + 14332887252376967551*2^128 + 173731539*2^192,4772523351735292000 + 17698453624030044586*2^64 + 5604481933473295014*2^128 + 799737478*2^192,7914375040647413072 + 9332571444287299251*2^64 + 13781704786046121806*2^128 + 141083174*2^192,95148724979517760 + 3430226616742740060*2^64 + 2549964555134683148*2^128 + 1843642184*2^192,13380756533358550912 + 17473283203841298735*2^64 + 5581938424514152741*2^128 + 188955892*2^192,9533250064854313248 + 7112140770051574449*2^64 + 532767180070304340*2^128 + 2019065895*2^192;\
9506649258253628896 + 9123620243966693409*2^64 + 15343705395411976644*2^128 + 2860169719*2^192,8937883537533358506 + 4905384995628916462*2^64 + 899172083684624211*2^128 + 2932893749*2^192,4189212541340249558 + 15869980108962520022*2^64 + 12143571160210531645*2^128 + 788053435*2^192,5471823665707612078 + 13912632628966482737*2^64 + 4328772070967589087*2^128 + 2230707398*2^192,8199327451555911480 + 11602717606900327754*2^64 + 9447886628965610335*2^128 + 1304979670*2^192,9443626759803298122 + 5431502537847732451*2^64 + 11162539013519805790*2^128 + 2001147526*2^192,2077785285228358620 + 14067467555699675759*2^64 + 7125601433449937113*2^128 + 566843318*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2490 lists. */
The sign is: 1
The characteristic polynomial is: x^7 + 3*x^5 - 4*x^4 + 8*x^3 - 24*x^2 - 128
Its Newton polygon is: [2, 2, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x^2 - 2*x + 4, 1; x^2 + x + 4, 1; x^2 + 3*x + 4, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^7*w^1 + 1*x^2*y^2*z^2*w^1 + 1*x^1*y^8 + 1*x^1*y^1*z^1*w^2 + 1*z^8 + 1*w^3
Total 107: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 
