/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 120
[2, 1, 0, 2, 0]  	60	4 
[9, 0, 0, 0, 0]  	63	5  <--- 1
[8, 1, 0, 0, 0]  	68	4 
[1, 3, 1, 1, 0]  	75	4 
[1, 0, 0, 4, 0]  	75	3 
[1, 5, 1, 0, 0]  	82	4 
[1, 1, 5, 0, 0]  	94	3 
[7, 3, 1, 0, 0]  	100	8 
[7, 3, 0, 1, 0]  	102	6 
[7, 5, 0, 0, 0]  	109	5 
[0, 8, 1, 0, 0]  	111	3 
[0, 7, 2, 0, 0]  	114	4 
[8, 0, 4, 0, 0]  	116	5 
[6, 0, 5, 0, 0]  	117	8 
[6, 5, 0, 1, 0]  	119	7 
[6, 0, 4, 1, 0]  	119	6 
[0, 5, 1, 3, 0]  	126	4 
[5, 0, 4, 2, 0]  	129	8 
[3, 8, 0, 1, 0]  	134	6 
[2, 10, 0, 0, 0]  	134	6 
[0, 7, 0, 3, 0]  	135	4 
[5, 7, 0, 1, 0]  	136	7 
[5, 2, 4, 1, 0]  	136	7 
[1, 8, 0, 2, 0]  	137	5 
[4, 0, 4, 3, 0]  	139	5 
[2, 9, 0, 1, 0]  	139	5 
[1, 10, 0, 1, 0]  	144	4 
[0, 12, 0, 0, 0]  	144	4  <--- 2
[4, 0, 8, 0, 0]  	148	5 
[2, 0, 9, 0, 0]  	149	5 
[0, 11, 0, 1, 0]  	149	5 
[0, 5, 6, 0, 0]  	150	4 
[2, 0, 8, 1, 0]  	151	4 
[0, 6, 3, 2, 0]  	151	4 
[2, 0, 7, 2, 0]  	153	4 
[0, 4, 7, 0, 0]  	153	4 
[0, 10, 0, 2, 0]  	154	3 
[0, 5, 4, 2, 0]  	154	3 
[0, 3, 7, 1, 0]  	158	2 
[0, 2, 1, 7, 0]  	158	2 
[0, 4, 4, 3, 0]  	159	3 
[0, 3, 6, 2, 0]  	160	3 
[1, 0, 8, 2, 0]  	161	2 
[0, 4, 3, 4, 0]  	161	2 
[0, 2, 8, 1, 0]  	161	2 
[0, 5, 0, 6, 0]  	162	4 
[1, 0, 7, 3, 0]  	163	3 
[0, 4, 2, 5, 0]  	163	3 
[0, 6, 5, 1, 0]  	164	3 
[0, 3, 4, 4, 0]  	164	3 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	3 
[0, 3, 3, 5, 0]  	166	2 
[0, 4, 0, 7, 0]  	167	3 
[0, 3, 2, 6, 0]  	168	2 
[0, 3, 9, 0, 0]  	171	2 
[0, 2, 3, 6, 0]  	171	2 
[1, 0, 11, 0, 0]  	172	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 0, 7, 4, 0]  	173	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 2, 0, 9, 0]  	177	2 
[0, 1, 11, 0, 0]  	177	2 
[0, 1, 2, 8, 0]  	178	1 
[0, 1, 10, 1, 0]  	179	2 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[2, 1, 1, 1, 1]  	58	4 
[1, 0, 5, 1, 1]  	99	3 
[1, 5, 0, 3, 1]  	118	4 
[2, 0, 4, 3, 1]  	125	5 
[5, 8, 0, 0, 1]  	131	7 
[4, 9, 0, 0, 1]  	136	6 
[1, 2, 4, 3, 1]  	142	4 
[0, 6, 4, 1, 1]  	149	4 
[0, 3, 8, 0, 1]  	156	3 
[1, 0, 10, 0, 1]  	157	4 
[0, 2, 7, 2, 1]  	163	2 
[0, 1, 8, 2, 1]  	166	2 
[0, 1, 7, 3, 1]  	168	2 
[0, 1, 6, 4, 1]  	170	2 
[0, 2, 5, 5, 1]  	184	2 
[8, 0, 0, 3, 2]  	107	7 
[5, 6, 0, 1, 2]  	124	7 
[0, 1, 0, 9, 2]  	165	2 
[0, 3, 2, 5, 5]  	151	3 
[0, 1, 7, 2, 252]  	151	2 
[0, 10, 0, 1, 253]  	137	3 
[0, 5, 5, 1, 253]  	152	3 
[6, 4, 0, 1, 254]  	107	6 
[4, 0, 4, 2, 254]  	122	7 
[4, 8, 0, 0, 254]  	124	6 
[0, 0, 11, 0, 254]  	165	1 
[1, 3, 1, 0, 255]  	58	2 
[0, 7, 1, 0, 255]  	99	1 
[0, 6, 0, 2, 255]  	106	1 
[0, 4, 1, 3, 255]  	114	3 
[1, 8, 0, 1, 255]  	120	3 
[0, 5, 0, 4, 255]  	128	1 
[1, 1, 4, 3, 255]  	130	2 
[0, 5, 5, 0, 255]  	135	1 
[0, 4, 6, 0, 255]  	138	2 
[0, 4, 4, 2, 255]  	142	1 
[0, 3, 6, 1, 255]  	143	2 
[0, 3, 3, 4, 255]  	149	1 
[0, 4, 0, 6, 255]  	150	1 
[0, 0, 1, 8, 255]  	151	1 
[0, 2, 2, 6, 255]  	156	1 
[0, 2, 9, 0, 255]  	159	2 
[0, 3, 5, 3, 255]  	162	3 
[0, 0, 0, 10, 255]  	170	1 
[0, 0, 10, 2, 255]  	184	1 
------
The gap is between 6 and 251.
Lengths: 2 2 6 8 2 3.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[8836174834151937450 + 15025956865620380733*2^64 + 9800401821407773129*2^128 + 1766660948*2^192,4573694830993595296 + 9906922348158986069*2^64 + 14839598878094419021*2^128 + 216193529*2^192,8817819534381223268 + 15851363357381682464*2^64 + 11532879419499173165*2^128 + 2136492846*2^192,13445603972568313164 + 5425374989000480025*2^64 + 8829329520886294943*2^128 + 367508416*2^192,5147436026395222028 + 17858789773847330635*2^64 + 9004491699640506817*2^128 + 619627634*2^192,10957776916523078616 + 15346694105130961352*2^64 + 17633150934048923104*2^128 + 1954350825*2^192,11291513157643222432 + 11687086130844465912*2^64 + 9974414685688628480*2^128 + 1844982633*2^192,12813670893255992660 + 9978229797941596179*2^64 + 17108377574264929255*2^128 + 873029867*2^192,12868370604907911112 + 16368632037717120148*2^64 + 8894089561072081489*2^128 + 1058160751*2^192,12917728964813598152 + 12718013028699604438*2^64 + 14867704621674348631*2^128 + 265149166*2^192;\
14822137525226941576 + 2740040091535106812*2^64 + 15835538835187955155*2^128 + 752518195*2^192,2326476106869050702 + 17036301635913961912*2^64 + 9930169081004315575*2^128 + 1965214690*2^192,11365144280838475436 + 10293546370646891104*2^64 + 15291876744963625175*2^128 + 1112222413*2^192,16340187202227879764 + 7600817415721952633*2^64 + 11662510768938047188*2^128 + 436004138*2^192,129923740314514468 + 8197991210537643929*2^64 + 5534900601250254882*2^128 + 853935079*2^192,893225612396276472 + 10717746306705018389*2^64 + 1108491509782520885*2^128 + 1820723393*2^192,3687365999096740832 + 394569493704092897*2^64 + 13801301258194348718*2^128 + 440168289*2^192,10443991402953806492 + 9818112647804632792*2^64 + 15838330842341153882*2^128 + 1896996935*2^192,10148435908566543704 + 12878996902128476603*2^64 + 7877948865016106903*2^128 + 473524581*2^192,7056825346583454088 + 16531845320412516492*2^64 + 10584380605722580311*2^128 + 35959435*2^192;\
12216580715225218758 + 8637128256897070189*2^64 + 7778115398893585982*2^128 + 942482046*2^192,17827596982653310428 + 6288994695032089813*2^64 + 842696772478300565*2^128 + 663002446*2^192,17493799137196204204 + 1072034631908100757*2^64 + 5095765151702907761*2^128 + 783975263*2^192,8889915315761114644 + 14251115367725575268*2^64 + 2223743096396348793*2^128 + 896758006*2^192,13003697980252185120 + 11699437580151897107*2^64 + 17008382198906191757*2^128 + 229218331*2^192,10226540916354122504 + 3077638539868794984*2^64 + 4033073054776045036*2^128 + 1060536531*2^192,2161008770509306520 + 15798954630519254654*2^64 + 5145956808634572494*2^128 + 481814173*2^192,6462502137210255680 + 9144420447788233772*2^64 + 12526900019330647187*2^128 + 84261084*2^192,12474167855656857568 + 2309427648762585457*2^64 + 16638868556411187119*2^128 + 154278477*2^192,3540030035999708720 + 11246986446754920813*2^64 + 3366677136320037019*2^128 + 729486277*2^192;\
6029860210262360539 + 737146115340531571*2^64 + 6777845274619905491*2^128 + 275435051*2^192,684888280483368232 + 3728299760659978361*2^64 + 14755334258277577358*2^128 + 315876780*2^192,10345435179862102986 + 13132921731889679476*2^64 + 6390391062468228545*2^128 + 743559566*2^192,7885582936897514238 + 11282021669197949736*2^64 + 8868904173647878754*2^128 + 182510073*2^192,3888818320406116850 + 15281402849680508041*2^64 + 14246622236816112988*2^128 + 549357287*2^192,13538187828747718964 + 5434496226266224100*2^64 + 8845823477724618614*2^128 + 578753840*2^192,14105326714156005456 + 8576285124936577612*2^64 + 10889938610466177181*2^128 + 584317248*2^192,16999521890605350758 + 14974684360701842071*2^64 + 8384001868678614809*2^128 + 574421976*2^192,13960890944393147684 + 17718139805246662217*2^64 + 10341138920345555932*2^128 + 853461377*2^192,2090140914771018204 + 17537754300066543516*2^64 + 11647163404794474921*2^128 + 120331607*2^192;\
9799907020811000022 + 14058863240829014142*2^64 + 12233309275494308553*2^128 + 720658423*2^192,17530820004493274326 + 1639603656038281886*2^64 + 1088732598546078055*2^128 + 835749772*2^192,578253754582588822 + 15758693855736177810*2^64 + 18443161311527124850*2^128 + 965311670*2^192,16161116682302977308 + 1780545078871650147*2^64 + 3445990874966868691*2^128 + 229658953*2^192,12754681555875258116 + 17855422372939969014*2^64 + 12232529916159892229*2^128 + 2113152467*2^192,11326874288052335240 + 5952446663613676661*2^64 + 610268888128798926*2^128 + 576653520*2^192,1405971331497344072 + 10422396759267467478*2^64 + 10558641619357974817*2^128 + 668072811*2^192,7615335549273556380 + 16231084413452027682*2^64 + 14259284789736065516*2^128 + 2131589858*2^192,4322285850104071648 + 11889769935246040031*2^64 + 13916688894547274952*2^128 + 4670487*2^192,13467991503023179032 + 7848185896996106015*2^64 + 7403695499054132700*2^128 + 79901012*2^192;\
8946339443822198713 + 7606560042675316169*2^64 + 5374170454198681775*2^128 + 88297374*2^192,7338127069206331090 + 9638573995205686811*2^64 + 10489300950498109571*2^128 + 1341885380*2^192,2089198723946925890 + 18197797240222520832*2^64 + 16167453255508083449*2^128 + 1784006868*2^192,13664457171678597014 + 16761954725349647044*2^64 + 11061899865481126123*2^128 + 523290274*2^192,18246833431428274140 + 522992165276641553*2^64 + 18263802041705545048*2^128 + 22347026*2^192,9161766847173549152 + 12962250017866431841*2^64 + 15460814601020304645*2^128 + 1151056746*2^192,3897792495428553732 + 13661565062850589263*2^64 + 7746562141624467162*2^128 + 437074970*2^192,14910981479935578048 + 7472732931857843412*2^64 + 14127045333896316283*2^128 + 530480992*2^192,17343544602107336912 + 10223664581042546615*2^64 + 15959842644341211861*2^128 + 1490480328*2^192,18157232653923864752 + 12452296513595576884*2^64 + 8224679739399952340*2^128 + 1322961659*2^192;\
2461342792506806071 + 5755807692576679338*2^64 + 1899741399415082870*2^128 + 2145290355*2^192,16592946394770276768 + 16718000962124450587*2^64 + 2204125018804783237*2^128 + 847090314*2^192,6187236791883073948 + 8778587791278085712*2^64 + 5361001056858341206*2^128 + 1417010851*2^192,8415233432218461606 + 6135731817562503226*2^64 + 10817960853010460291*2^128 + 800078773*2^192,8968423118330194670 + 14276005851379489806*2^64 + 14088573006840501240*2^128 + 1373263305*2^192,2775586158559085092 + 4501243178432368589*2^64 + 8023139039741954593*2^128 + 1579038385*2^192,3793824859307228756 + 17519537507400187042*2^64 + 9852632473588533887*2^128 + 1844787781*2^192,18045212011855272230 + 4562145996808890049*2^64 + 10617272182218519414*2^128 + 870140686*2^192,14774319539755103764 + 3193334165237020497*2^64 + 4466213357180501300*2^128 + 1052897071*2^192,16826322632582836252 + 2343919187799944385*2^64 + 1283078136334127902*2^128 + 1773130502*2^192;\
6606331659870369881 + 8143589922107988337*2^64 + 232052523510627754*2^128 + 1277218565*2^192,13611373588053920892 + 14479174336202594166*2^64 + 12185418348147761653*2^128 + 393067803*2^192,15596775525186062140 + 10217038982202658150*2^64 + 10383922151797069954*2^128 + 384956296*2^192,10083682470360767602 + 5744569905433381056*2^64 + 6186523592880739361*2^128 + 1987784529*2^192,8994680908729316146 + 238817039998935979*2^64 + 7853888061375401487*2^128 + 1597286932*2^192,1719665670447468692 + 14616962790886369357*2^64 + 13018836957621388093*2^128 + 2032206900*2^192,1929036464274699092 + 17419191046115442223*2^64 + 16289081991429605338*2^128 + 1028127379*2^192,1875199156141461426 + 17817357916588505574*2^64 + 595473353485754871*2^128 + 579658727*2^192,609098248164676116 + 12569038171650627472*2^64 + 7040070764506487883*2^128 + 1529201255*2^192,624252947099291980 + 1369148798953146436*2^64 + 217204321623701255*2^128 + 1530224952*2^192;\
4732939963036005840 + 6026167017825718356*2^64 + 8142595453474550945*2^128 + 678864000*2^192,5117857370796416872 + 9590332744838364013*2^64 + 4830669508950876720*2^128 + 41739016*2^192,11735514262175940880 + 3996173583789000579*2^64 + 6543502004393485182*2^128 + 665322547*2^192,14254380196410105552 + 3679683847672080316*2^64 + 3478055694832793339*2^128 + 953402858*2^192,5565608816121025368 + 7048468276326797350*2^64 + 10685069675552564531*2^128 + 1915524044*2^192,12102412408060706432 + 15839920565931144116*2^64 + 17217299055192945138*2^128 + 923499439*2^192,270431803462420592 + 16162183850646501698*2^64 + 12763638370141054537*2^128 + 816943509*2^192,6284487324089135784 + 8519034612497917266*2^64 + 17418613818155123383*2^128 + 1660701551*2^192,6566359176310930296 + 8475416127571229267*2^64 + 741855757346180091*2^128 + 685957028*2^192,3023245083911123632 + 9033960565096790733*2^64 + 13429464625959355712*2^128 + 681263145*2^192;\
5324563266951073194 + 11357501397931586677*2^64 + 6858051635990194846*2^128 + 848555409*2^192,10201025503535146280 + 17910125881069124054*2^64 + 10663672277603875146*2^128 + 809973815*2^192,11593039815495028544 + 13222531944236362012*2^64 + 16284962645121902648*2^128 + 978779375*2^192,4364226971104429852 + 14928422894962492390*2^64 + 8158617807664664567*2^128 + 527244163*2^192,13368939100395371704 + 5922018452882308103*2^64 + 13692044346954052358*2^128 + 1165790658*2^192,13031058320782017168 + 5434539023777830275*2^64 + 9962325561263731071*2^128 + 925546656*2^192,12950195261708716536 + 1594086973067794013*2^64 + 14757773967952442429*2^128 + 1705284598*2^192,15361414840751653968 + 5682567161157293085*2^64 + 5730198291949469799*2^128 + 450756417*2^192,2527389062167052760 + 12388310786781426231*2^64 + 4991557683386475696*2^128 + 1577558382*2^192,603765153765854328 + 2326007226631104372*2^64 + 15935018023755231115*2^128 + 1048241730*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3808 lists. */
The sign is: -1
The characteristic polynomial is: x^10 + 2*x^9 - x^8 - 2*x^7 + 4*x^6 - 16*x^4 + 32*x^3 + 64*x^2 - 512*x - 1024
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + 2*x^7 + 3*x^6 + 6*x^5 + 16*x^4 + 24*x^3 + 48*x^2 + 128*x + 256, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 28
