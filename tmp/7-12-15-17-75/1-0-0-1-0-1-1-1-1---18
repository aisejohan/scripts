/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 162
[2, 1, 0, 2, 0]  	60	3 
[9, 0, 0, 0, 0]  	63	4  <--- 1
[8, 1, 0, 0, 0]  	68	3 
[1, 0, 0, 4, 0]  	75	3 
[1, 3, 0, 3, 0]  	94	4 
[2, 1, 5, 0, 0]  	101	5 
[6, 5, 0, 0, 0]  	102	5 
[1, 1, 5, 1, 0]  	111	4 
[8, 0, 4, 0, 0]  	116	4 
[5, 7, 0, 0, 0]  	119	5 
[4, 7, 1, 0, 0]  	127	5 
[2, 8, 0, 1, 0]  	127	6 
[2, 10, 0, 0, 0]  	134	5 
[6, 0, 4, 2, 0]  	136	5 
[4, 9, 0, 0, 0]  	136	6 
[1, 2, 4, 3, 0]  	142	4 
[0, 12, 0, 0, 0]  	144	4  <--- 2
[4, 5, 4, 0, 0]  	148	6 
[1, 9, 0, 2, 0]  	149	4 
[1, 4, 4, 2, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	4 
[2, 5, 4, 1, 0]  	151	4 
[1, 7, 4, 0, 0]  	151	3 
[1, 2, 8, 0, 0]  	151	3 
[0, 6, 3, 2, 0]  	151	3 
[0, 3, 2, 5, 0]  	151	3 
[3, 6, 4, 0, 0]  	153	7 
[1, 7, 3, 1, 0]  	153	5 
[0, 6, 2, 3, 0]  	153	5 
[1, 1, 9, 0, 0]  	154	3 
[0, 10, 0, 2, 0]  	154	4 
[0, 8, 4, 0, 0]  	156	4 
[0, 5, 3, 3, 0]  	156	4 
[0, 9, 1, 2, 0]  	157	3 
[0, 6, 0, 5, 0]  	157	3 
[0, 8, 3, 1, 0]  	158	2 
[0, 5, 2, 4, 0]  	158	2 
[0, 3, 7, 1, 0]  	158	2 
[0, 2, 1, 7, 0]  	158	2 
[0, 9, 0, 3, 0]  	159	4 
[0, 8, 2, 2, 0]  	160	4 
[0, 5, 1, 5, 0]  	160	4 
[0, 7, 4, 1, 0]  	161	2 
[0, 4, 3, 4, 0]  	161	2 
[0, 2, 8, 1, 0]  	161	2 
[4, 0, 9, 0, 0]  	163	2 
[0, 2, 7, 2, 0]  	163	2 
[0, 8, 0, 4, 0]  	164	3 
[0, 6, 5, 1, 0]  	164	3 
[0, 3, 4, 4, 0]  	164	3 
[0, 10, 3, 0, 0]  	165	2 
[0, 5, 7, 0, 0]  	165	2 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	2 
[0, 1, 0, 9, 0]  	165	2 
[2, 0, 9, 1, 0]  	166	2 
[0, 1, 8, 2, 0]  	166	2 
[0, 7, 1, 4, 0]  	167	4 
[0, 4, 0, 7, 0]  	167	3 
[2, 0, 8, 2, 0]  	168	2 
[0, 4, 8, 0, 0]  	168	2 
[0, 1, 7, 3, 0]  	168	2 
[0, 1, 6, 4, 0]  	170	2 
[0, 3, 9, 0, 0]  	171	2 
[0, 2, 3, 6, 0]  	171	2 
[0, 4, 6, 2, 0]  	172	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 0, 7, 4, 0]  	173	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 1, 11, 0, 0]  	177	2 
[1, 0, 8, 3, 0]  	178	1 
[0, 1, 2, 8, 0]  	178	1 
[0, 1, 10, 1, 0]  	179	2 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 11, 1, 0]  	182	1 
[0, 2, 5, 5, 0]  	184	2 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[2, 1, 1, 1, 1]  	58	3 
[0, 5, 1, 0, 1]  	75	3 
[2, 0, 5, 1, 1]  	106	4 
[1, 0, 6, 1, 1]  	114	4 
[1, 3, 5, 0, 1]  	118	4 
[2, 0, 4, 3, 1]  	125	5 
[1, 8, 0, 2, 1]  	137	5 
[1, 10, 0, 1, 1]  	144	5 
[2, 0, 9, 0, 1]  	149	5 
[0, 4, 7, 0, 1]  	153	4 
[1, 0, 10, 0, 1]  	157	3 
[0, 4, 4, 3, 1]  	159	3 
[0, 5, 0, 6, 1]  	162	4 
[7, 0, 0, 3, 2]  	100	5 
[5, 5, 0, 1, 2]  	112	6 
[6, 0, 5, 0, 2]  	117	6 
[5, 0, 4, 2, 2]  	129	8 
[4, 0, 8, 0, 2]  	148	7 
[0, 3, 6, 2, 3]  	160	3 
[0, 3, 8, 0, 4]  	156	3 
[1, 0, 9, 0, 7]  	142	4 
[0, 9, 0, 2, 248]  	142	3 
[0, 2, 2, 6, 249]  	156	2 
[0, 2, 3, 5, 250]  	154	2 
[0, 2, 0, 8, 250]  	160	2 
[1, 3, 4, 2, 251]  	137	4 
[0, 5, 0, 5, 251]  	145	2 
[0, 7, 0, 4, 251]  	152	3 
[0, 2, 9, 0, 251]  	159	2 
[0, 3, 5, 3, 251]  	162	3 
[0, 1, 10, 0, 251]  	162	2 
[4, 8, 0, 0, 252]  	124	4 
[0, 8, 0, 2, 252]  	130	3 
[0, 2, 0, 7, 252]  	143	2 
[0, 4, 3, 3, 252]  	144	3 
[0, 3, 4, 3, 252]  	147	2 
[0, 4, 1, 5, 252]  	148	1 
[0, 4, 0, 6, 252]  	150	3 
[0, 2, 4, 4, 252]  	152	2 
[0, 4, 6, 1, 252]  	155	3 
[0, 4, 0, 4, 253]  	116	1 
[0, 6, 0, 3, 253]  	123	2 
[0, 2, 0, 6, 253]  	126	2 
[0, 11, 0, 0, 253]  	132	3 
[0, 3, 2, 4, 253]  	134	2 
[0, 2, 4, 3, 253]  	135	2 
[0, 4, 6, 0, 253]  	138	3 
[0, 4, 5, 1, 253]  	140	1 
[0, 3, 7, 0, 253]  	141	3 
[0, 4, 4, 2, 253]  	142	1 
[0, 3, 5, 2, 253]  	145	2 
[0, 2, 6, 2, 253]  	148	2 
[0, 3, 0, 3, 254]  	87	1 
[1, 1, 5, 0, 254]  	94	3 
[4, 6, 0, 0, 254]  	100	3 
[0, 7, 0, 1, 254]  	101	2 
[0, 2, 0, 5, 254]  	109	2 
[0, 3, 5, 0, 254]  	111	1 
[1, 0, 4, 3, 254]  	118	2 
[0, 2, 3, 3, 254]  	120	1 
[0, 3, 4, 2, 254]  	130	1 
[0, 2, 6, 1, 254]  	131	2 
[0, 2, 8, 0, 254]  	144	1 
[0, 1, 4, 5, 254]  	157	1 
[0, 1, 3, 6, 254]  	159	1 
[0, 1, 2, 7, 254]  	161	1 
[0, 1, 9, 1, 254]  	164	1 
[0, 0, 8, 3, 254]  	171	1 
[0, 0, 4, 7, 254]  	179	1 
[0, 2, 0, 2, 255]  	58	1 
[0, 6, 0, 0, 255]  	72	2 
[0, 2, 5, 0, 255]  	99	1 
[0, 1, 4, 2, 255]  	106	1 
[0, 1, 0, 6, 255]  	114	1 
[3, 0, 4, 2, 255]  	115	5 
[1, 0, 5, 2, 255]  	116	2 
[0, 0, 4, 4, 255]  	128	1 
[0, 0, 9, 0, 255]  	135	1 
[0, 0, 8, 2, 255]  	154	1 
[0, 0, 0, 10, 255]  	170	1 
------
The gap is between 8 and 247.
Lengths: 2 2 6 9 2 9.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[4767224090630987653 + 10314534958243767975*2^64 + 15774702402875595604*2^128 + 4293448116*2^192,9168658689766028991 + 9387412320246018701*2^64 + 1166112314408580664*2^128 + 976323531*2^192,4292324521379127782 + 13705682488133700392*2^64 + 5907357458657220860*2^128 + 405645109*2^192,5022170352222745482 + 382372833767979155*2^64 + 1616214787030606173*2^128 + 1952867912*2^192,9183354820188909905 + 7357850437133905111*2^64 + 7026258393657553577*2^128 + 8056280336*2^192,10716959183299302788 + 9327324617614223858*2^64 + 2689079413786107712*2^128 + 1267724020*2^192,3034982355214367016 + 7312812563264821914*2^64 + 13771849738966703312*2^128 + 1600366029*2^192,16426895153569017520 + 5808990036325690699*2^64 + 14192887296372021888*2^128 + 2559205788*2^192,8043805095271105454 + 13762974827893904013*2^64 + 47928030513621654*2^128 + 2459314189*2^192,1150897049262359632 + 14185053558628577254*2^64 + 3808014147239115540*2^128 + 443630323*2^192;\
4211214995805540613 + 3511050700733492593*2^64 + 10454541316179728451*2^128 + 4007264994*2^192,165270528065912111 + 15195482243857549700*2^64 + 11809320917115661238*2^128 + 2501886696*2^192,18001010564429859246 + 6333428779494488405*2^64 + 13499970199580779236*2^128 + 5993010722*2^192,2169426139487215546 + 15476253263317957675*2^64 + 9108315856756078031*2^128 + 374288082*2^192,2768869745101195761 + 1209363460919407779*2^64 + 14876276396155197462*2^128 + 4725541349*2^192,12168596248350740700 + 3262489353713386626*2^64 + 7627440256168302113*2^128 + 3846460587*2^192,2574326109481708856 + 16225746965566503251*2^64 + 13656365078365386092*2^128 + 261208420*2^192,291424137497093488 + 3048745448812116474*2^64 + 16392078541110956442*2^128 + 3164439398*2^192,144085162361876814 + 4534348185469995671*2^64 + 17635109894967787277*2^128 + 7509251120*2^192,16518956388223147232 + 12123585269755477448*2^64 + 18123649583598447691*2^128 + 5275308097*2^192;\
11804874535597783248 + 18067180005117346749*2^64 + 4418320594614157743*2^128 + 3570931054*2^192,1304244854713750320 + 17114606133554193754*2^64 + 15527284358295909542*2^128 + 841881874*2^192,15601641311523974608 + 11119920318281113003*2^64 + 1562368851540680761*2^128 + 3266914789*2^192,17280274695597608288 + 10609961056810297262*2^64 + 16693562010179837405*2^128 + 2673093810*2^192,5123111589755843856 + 10705013090295171323*2^64 + 5339170677723015565*2^128 + 2935223240*2^192,5526229456407370496 + 14577019195376415876*2^64 + 1144768995952002197*2^128 + 3605950733*2^192,3463561949045291968 + 8382195428360894806*2^64 + 6790924702107288373*2^128 + 1745016884*2^192,849077533993837760 + 658383235650096622*2^64 + 15687119722092767627*2^128 + 4131990209*2^192,1885487324135386432 + 16345112824748581815*2^64 + 8676135968328733175*2^128 + 1654332721*2^192,5322634675272413504 + 5764974496724751594*2^64 + 17058293266183417637*2^128 + 3271325407*2^192;\
8072664918828447920 + 11820776433413827470*2^64 + 3168483133562746146*2^128 + 921286653*2^192,5851439613745651616 + 5482669763787664588*2^64 + 14781274466327031604*2^128 + 1801161624*2^192,5284876596730112184 + 3666581468818662395*2^64 + 1689572353964971364*2^128 + 3063749259*2^192,14089741358628067552 + 7933652858579046377*2^64 + 6614520016190452630*2^128 + 1741764311*2^192,3956866408685591696 + 13255066257746297409*2^64 + 17419945743912997770*2^128 + 150972634*2^192,7794629041957624376 + 8831747918697340321*2^64 + 13921100297767032526*2^128 + 3852085732*2^192,12557980755736389424 + 7231028504827830402*2^64 + 6737953912446211903*2^128 + 4217394334*2^192,18163987284735576736 + 1111384265441612224*2^64 + 15574809377140919709*2^128 + 3589606173*2^192,9023837469262057344 + 2474928804032652793*2^64 + 11768963186402932838*2^128 + 1179356493*2^192,3400341909737870256 + 7434116766192539633*2^64 + 10745185002447026417*2^128 + 3119064206*2^192;\
11953920658943248276 + 11386635294205226544*2^64 + 15977669035281964316*2^128 + 1178224139*2^192,17339445663556418508 + 15788669621985037872*2^64 + 14653322723109862347*2^128 + 627145807*2^192,11697691351392359520 + 15340480744718732339*2^64 + 5463221438523785143*2^128 + 3894896221*2^192,10623711519173278664 + 13288499018883294895*2^64 + 17577926398398541073*2^128 + 33352019*2^192,7605385961609233636 + 6943872458353025995*2^64 + 211482141728051731*2^128 + 706712942*2^192,10293107684271401880 + 12206080237700501955*2^64 + 6910356847602682139*2^128 + 1265331001*2^192,38088543951040208 + 15130955774691791475*2^64 + 12827002109826700387*2^128 + 2676327537*2^192,13823684191364658528 + 4368382631977391805*2^64 + 16968228859971159654*2^128 + 2636915551*2^192,11963614157839895224 + 17283253002989497593*2^64 + 1143434192223970362*2^128 + 2949983929*2^192,3472080613443217968 + 16479821679463644832*2^64 + 3380043233118394318*2^128 + 1826603209*2^192;\
91867264362631700 + 14272307085206504668*2^64 + 5494238288662511743*2^128 + 4098928619*2^192,8950384975560907948 + 10697231399185005674*2^64 + 12597938161312554829*2^128 + 4966785619*2^192,8787505220213371760 + 1418051133693882913*2^64 + 13978005522925143008*2^128 + 322740286*2^192,13863079482096722632 + 15388760073620417236*2^64 + 1612992650864298521*2^128 + 8224922459*2^192,11544181229555260980 + 15287779036392707049*2^64 + 13477278547881080885*2^128 + 5674869867*2^192,14523097163621475384 + 10937799988969534160*2^64 + 10392614438457005063*2^128 + 7974610176*2^192,3836264144745959280 + 5030572103480625561*2^64 + 896992352533389762*2^128 + 717969332*2^192,585772717699502752 + 8273104726388293683*2^64 + 10104500114239439427*2^128 + 4517449863*2^192,331338333376664184 + 12856486747249454578*2^64 + 6961038486603765163*2^128 + 1093652495*2^192,12894031543364399056 + 7414650185518078939*2^64 + 8311446128190120119*2^128 + 7444672205*2^192;\
8052937983875839641 + 14629784835363709900*2^64 + 5389985377838966291*2^128 + 2853188270*2^192,13325617016838122931 + 923214266975160911*2^64 + 11060368170896743084*2^128 + 275734354*2^192,15922108563677497454 + 15848133918882456152*2^64 + 9315370802213637494*2^128 + 2025172519*2^192,17889373658818627738 + 14456112810760577801*2^64 + 16921987960101234951*2^128 + 4110916916*2^192,2813611000048256925 + 6009896419624517063*2^64 + 9012198916243658217*2^128 + 1993168273*2^192,13595759430380804168 + 2860069891877676603*2^64 + 1066298422202863731*2^128 + 3932779847*2^192,11426605882608640592 + 8767437265959147134*2^64 + 2755909325520396342*2^128 + 2869804928*2^192,2192670501412249328 + 6245139151942782664*2^64 + 7410956526696847275*2^128 + 1912354788*2^192,247868225056552374 + 4974579051094744125*2^64 + 15998649101467335818*2^128 + 6832887895*2^192,13025398638670548152 + 14536598094226267521*2^64 + 12622749321558194884*2^128 + 2569620522*2^192;\
11770406639840763188 + 4053885307473682546*2^64 + 15020537820503158626*2^128 + 5215908889*2^192,10566119922241644748 + 7969995894735894828*2^64 + 3392464733369270478*2^128 + 6638062569*2^192,5989264328919877448 + 6696632455498693725*2^64 + 4479170625888720545*2^128 + 6856799569*2^192,7236981266868073256 + 14762727090114148457*2^64 + 4939993461606027055*2^128 + 2353749448*2^192,13932471851371459172 + 9327000304429367279*2^64 + 2061755593614594551*2^128 + 1053042928*2^192,3024254901540790064 + 17515411718059290083*2^64 + 15295031456619598446*2^128 + 8488215933*2^192,3874919835132226576 + 9678201681811088605*2^64 + 14880290882664493536*2^128 + 1478828586*2^192,5168777053007062672 + 6459860732811580747*2^64 + 14864612176730560937*2^128 + 8027402125*2^192,3217944190385064328 + 10666412674704014201*2^64 + 12790640771140765331*2^128 + 3289992648*2^192,1916272233661551248 + 13259154297712826404*2^64 + 6749842169322843944*2^128 + 3116796333*2^192;\
6262836217386526848 + 15673945068043758898*2^64 + 12638283387726584132*2^128 + 852255589*2^192,14438168107897207328 + 16155875466179421744*2^64 + 3380902075649997930*2^128 + 8470025916*2^192,10803426178844065680 + 2253745310832198717*2^64 + 1901184140078445041*2^128 + 5824800033*2^192,7428478454714898816 + 10040451664960385288*2^64 + 18352324718777234483*2^128 + 5548451054*2^192,2289434223676563328 + 14622372014667540996*2^64 + 17133350837970134759*2^128 + 5142490114*2^192,7975392030808153200 + 2665752534085247650*2^64 + 7806366966158437022*2^128 + 8313879081*2^192,7411567314517060320 + 4076617539752704769*2^64 + 17781164444210025266*2^128 + 1355094111*2^192,5468571549571081408 + 3759976403227795973*2^64 + 12308492320031675093*2^128 + 5421148678*2^192,4019858426738788384 + 17210232806416963565*2^64 + 12929341235622873715*2^128 + 5060480954*2^192,7131537215536902624 + 4146427992188641898*2^64 + 7339605406465434963*2^128 + 4158640268*2^192;\
2797381686211672626 + 14629192077888289238*2^64 + 14674573942834767696*2^128 + 5802132674*2^192,7767963829457648062 + 562016897574265472*2^64 + 17934686803944044658*2^128 + 1679134973*2^192,2299991620447855660 + 9471868255383539536*2^64 + 17281303657959987586*2^128 + 6343058243*2^192,12110785787330062988 + 6974751066873794144*2^64 + 4940154291816032616*2^128 + 1140837724*2^192,12220337001735356722 + 15112922472589776641*2^64 + 8336166991945481265*2^128 + 268885444*2^192,15692622270625261116 + 1911635049865086072*2^64 + 3207328470581713225*2^128 + 68455352*2^192,14558453559508284136 + 10612019226064870962*2^64 + 9353077438730135318*2^128 + 246203618*2^192,4924101438843585616 + 18332565519827369852*2^64 + 10915235274603947215*2^128 + 1571136305*2^192,759282549603590092 + 17680992753156490361*2^64 + 139030132792156948*2^128 + 3934780828*2^192,4526102353404961400 + 16348367438966015113*2^64 + 17421829145822900751*2^128 + 968154148*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 3766 lists. */
The sign is: -1
The characteristic polynomial is: x^10 + x^9 - 2*x^8 - 4*x^7 - 4*x^6 + 16*x^4 + 64*x^3 + 128*x^2 - 256*x - 1024
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 1, 1, 2/3, 2/3, 2/3, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + x^7 + 2*x^6 + 4*x^4 + 32*x^2 + 64*x + 256, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 25
