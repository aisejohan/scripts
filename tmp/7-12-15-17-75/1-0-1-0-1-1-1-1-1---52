/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 233
[1, 3, 1, 0, 0]  	58	3 
[9, 0, 0, 0, 0]  	63	5  <--- 1
[8, 1, 0, 0, 0]  	68	4 
[3, 2, 2, 0, 0]  	75	4 
[6, 3, 0, 1, 0]  	95	7 
[2, 2, 1, 3, 0]  	104	5 
[7, 5, 0, 0, 0]  	109	6 
[6, 0, 0, 4, 0]  	110	8 
[5, 2, 0, 3, 0]  	110	7 
[1, 2, 1, 4, 0]  	114	5 
[8, 0, 4, 0, 0]  	116	5 
[6, 0, 4, 1, 0]  	119	8 
[7, 0, 5, 0, 0]  	124	8 
[5, 6, 0, 1, 0]  	124	7 
[5, 0, 6, 0, 0]  	125	9 
[3, 1, 5, 1, 0]  	125	7 
[2, 5, 0, 3, 0]  	125	7 
[0, 8, 2, 0, 0]  	126	5 
[3, 1, 4, 2, 0]  	127	8 
[2, 2, 6, 0, 0]  	128	5 
[6, 1, 5, 0, 0]  	129	6 
[5, 5, 0, 2, 0]  	129	8 
[2, 7, 0, 2, 0]  	132	6 
[4, 6, 0, 2, 0]  	134	6 
[3, 8, 0, 1, 0]  	134	6 
[2, 10, 0, 0, 0]  	134	6 
[4, 9, 0, 0, 0]  	136	7 
[2, 1, 4, 3, 0]  	137	6 
[1, 8, 0, 2, 0]  	137	5 
[2, 9, 0, 1, 0]  	139	6 
[2, 1, 3, 4, 0]  	139	7 
[4, 1, 1, 5, 0]  	140	8 
[1, 4, 0, 5, 0]  	140	4 
[0, 9, 1, 1, 0]  	140	4 
[1, 7, 0, 3, 0]  	142	5 
[4, 4, 0, 4, 0]  	144	7 
[1, 10, 0, 1, 0]  	144	6 
[1, 0, 8, 1, 0]  	144	6 
[5, 0, 4, 3, 0]  	146	6 
[2, 1, 8, 0, 0]  	146	5 
[0, 7, 3, 1, 0]  	146	4 
[1, 6, 0, 4, 0]  	147	4 
[0, 11, 1, 0, 0]  	147	4 
[0, 8, 0, 3, 0]  	147	4 
[5, 0, 3, 4, 0]  	148	5 
[4, 0, 8, 0, 0]  	148	6 
[3, 1, 2, 5, 0]  	148	5 
[2, 1, 7, 1, 0]  	148	5 
[0, 7, 2, 2, 0]  	148	4 
[5, 1, 0, 6, 0]  	149	4 
[4, 3, 0, 5, 0]  	149	5 
[2, 0, 9, 0, 0]  	149	4 
[1, 1, 3, 5, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	4 
[0, 6, 4, 1, 0]  	149	4 
[0, 7, 1, 3, 0]  	150	5 
[3, 0, 3, 5, 0]  	151	3 
[1, 12, 0, 0, 0]  	151	3 
[1, 2, 8, 0, 0]  	151	3 
[1, 1, 2, 6, 0]  	151	3 
[0, 6, 3, 2, 0]  	151	3 
[0, 3, 2, 5, 0]  	151	3 
[0, 7, 0, 4, 0]  	152	4 
[3, 0, 2, 6, 0]  	153	6 
[2, 0, 7, 2, 0]  	153	6 
[1, 2, 7, 1, 0]  	153	5 
[0, 6, 2, 3, 0]  	153	4 
[5, 0, 0, 7, 0]  	154	5 
[4, 2, 0, 6, 0]  	154	6 
[1, 1, 9, 0, 0]  	154	4 
[0, 10, 0, 2, 0]  	154	4 
[1, 0, 2, 7, 0]  	156	3 
[0, 13, 0, 0, 0]  	156	3  <--- 2
[0, 5, 3, 3, 0]  	156	3 
[0, 3, 8, 0, 0]  	156	3 
[1, 2, 5, 3, 0]  	157	5 
[1, 1, 7, 2, 0]  	158	2 
[1, 0, 1, 8, 0]  	158	2 
[0, 5, 2, 4, 0]  	158	2 
[0, 3, 7, 1, 0]  	158	2 
[0, 2, 1, 7, 0]  	158	2 
[3, 3, 0, 6, 0]  	159	4 
[0, 7, 5, 0, 0]  	159	3 
[0, 4, 4, 3, 0]  	159	3 
[2, 1, 1, 7, 0]  	160	4 
[1, 1, 6, 3, 0]  	160	4 
[0, 5, 1, 5, 0]  	160	4 
[0, 4, 3, 4, 0]  	161	3 
[1, 3, 0, 7, 0]  	162	5 
[0, 6, 6, 0, 0]  	162	4 
[0, 5, 0, 6, 0]  	162	4 
[1, 0, 7, 3, 0]  	163	3 
[4, 0, 0, 8, 0]  	164	3 
[3, 2, 0, 7, 0]  	164	4 
[0, 3, 4, 4, 0]  	164	3 
[1, 0, 6, 4, 0]  	165	3 
[0, 5, 7, 0, 0]  	165	3 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	2 
[0, 1, 8, 2, 0]  	166	2 
[1, 2, 0, 8, 0]  	167	3 
[0, 1, 7, 3, 0]  	168	2 
[4, 0, 6, 3, 0]  	169	6 
[0, 2, 3, 6, 0]  	171	2 
[1, 0, 11, 0, 0]  	172	3 
[0, 3, 0, 8, 0]  	172	2 
[0, 0, 7, 4, 0]  	173	1 
[0, 0, 6, 5, 0]  	175	1 
[1, 0, 0, 10, 0]  	177	2 
[0, 2, 0, 9, 0]  	177	2 
[0, 1, 11, 0, 0]  	177	2 
[0, 1, 2, 8, 0]  	178	1 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 2, 5, 5, 0]  	184	2 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[3, 2, 1, 0, 1]  	60	4 
[1, 0, 0, 4, 1]  	75	4 
[2, 2, 0, 3, 1]  	89	5 
[5, 0, 5, 0, 1]  	110	8 
[4, 4, 0, 2, 1]  	110	8 
[1, 1, 5, 1, 1]  	111	5 
[2, 1, 6, 0, 1]  	116	5 
[2, 6, 0, 2, 1]  	120	6 
[3, 0, 7, 0, 1]  	126	5 
[0, 10, 1, 0, 1]  	135	5 
[4, 0, 5, 2, 1]  	137	5 
[4, 0, 4, 3, 1]  	139	6 
[1, 2, 4, 3, 1]  	142	5 
[0, 7, 4, 0, 1]  	144	4 
[0, 2, 8, 1, 1]  	161	2 
[0, 4, 0, 7, 1]  	167	3 
[0, 1, 10, 1, 1]  	179	2 
[3, 0, 1, 3, 2]  	87	5 
[2, 0, 5, 1, 2]  	106	5 
[8, 0, 0, 3, 2]  	107	6 
[3, 0, 6, 0, 2]  	111	6 
[1, 0, 6, 1, 2]  	114	5 
[5, 0, 4, 2, 2]  	129	8 
[1, 11, 0, 0, 2]  	139	5 
[0, 12, 0, 0, 2]  	144	5 
[0, 4, 7, 0, 2]  	153	4 
[1, 0, 10, 0, 2]  	157	4 
[0, 3, 6, 2, 2]  	160	3 
[0, 1, 0, 9, 2]  	165	2 
[0, 5, 6, 1, 2]  	167	4 
[3, 0, 0, 3, 3]  	72	5 
[2, 0, 4, 3, 3]  	125	6 
[0, 5, 4, 2, 3]  	154	3 
[0, 6, 1, 4, 3]  	155	4 
[0, 1, 6, 4, 3]  	170	2 
[3, 0, 5, 0, 4]  	96	6 
[0, 2, 7, 2, 5]  	163	2 
[2, 2, 4, 2, 7]  	132	6 
[1, 9, 0, 1, 246]  	132	5 
[2, 5, 0, 2, 250]  	108	6 
[0, 7, 0, 3, 250]  	135	4 
[0, 9, 1, 0, 251]  	123	4 
[1, 6, 0, 3, 251]  	130	4 
[0, 10, 0, 1, 251]  	137	4 
[0, 8, 1, 2, 251]  	145	3 
[0, 4, 6, 1, 251]  	155	3 
[0, 6, 0, 5, 251]  	157	2 
[0, 1, 1, 8, 251]  	163	1 
[2, 4, 0, 2, 252]  	96	5 
[0, 5, 0, 3, 252]  	111	3 
[1, 8, 0, 1, 252]  	120	4 
[1, 7, 0, 2, 252]  	125	4 
[0, 7, 2, 1, 252]  	131	3 
[0, 4, 3, 3, 252]  	144	2 
[0, 2, 4, 4, 252]  	152	2 
[0, 2, 3, 5, 252]  	154	2 
[0, 3, 5, 3, 252]  	162	3 
[2, 1, 5, 0, 253]  	101	5 
[1, 2, 5, 0, 253]  	106	3 
[1, 1, 6, 0, 253]  	109	4 
[5, 5, 0, 1, 253]  	112	7 
[1, 6, 0, 2, 253]  	113	4 
[0, 7, 2, 0, 253]  	114	4 
[0, 4, 0, 4, 253]  	116	2 
[2, 1, 4, 2, 253]  	120	5 
[4, 0, 4, 2, 253]  	122	7 
[0, 8, 1, 1, 253]  	128	2 
[1, 1, 4, 3, 253]  	130	2 
[0, 2, 4, 3, 253]  	135	2 
[0, 3, 0, 6, 253]  	138	2 
[1, 0, 9, 0, 253]  	142	2 
[0, 2, 0, 8, 253]  	160	2 
[0, 0, 0, 10, 253]  	170	1 
[0, 1, 5, 5, 253]  	172	1 
[0, 0, 10, 2, 253]  	184	1 
[2, 2, 0, 2, 254]  	72	4 
[1, 5, 0, 1, 254]  	84	4 
[1, 3, 0, 3, 254]  	94	4 
[1, 1, 5, 0, 254]  	94	2 
[0, 4, 0, 3, 254]  	99	2 
[0, 8, 1, 0, 254]  	111	3 
[1, 0, 5, 2, 254]  	116	4 
[0, 3, 0, 5, 254]  	121	2 
[0, 4, 6, 0, 254]  	138	3 
[0, 9, 0, 2, 254]  	142	1 
[0, 2, 0, 7, 254]  	143	2 
[0, 6, 5, 0, 254]  	147	3 
[0, 5, 5, 1, 254]  	152	3 
[0, 1, 2, 7, 254]  	161	1 
[0, 0, 11, 0, 254]  	165	1 
[0, 0, 4, 7, 254]  	179	1 
[1, 3, 0, 1, 255]  	60	3 
[0, 5, 1, 0, 255]  	75	3 
[1, 2, 0, 3, 255]  	82	3 
[2, 0, 5, 0, 255]  	89	4 
[1, 0, 5, 1, 255]  	99	3 
[0, 6, 0, 2, 255]  	106	1 
[2, 0, 4, 2, 255]  	108	5 
[0, 8, 0, 1, 255]  	113	2 
[1, 0, 4, 3, 255]  	118	3 
[0, 10, 0, 0, 255]  	120	2 
[0, 4, 5, 0, 255]  	123	1 
[0, 3, 6, 0, 255]  	126	3 
[0, 3, 5, 1, 255]  	128	1 
[0, 3, 4, 2, 255]  	130	1 
[0, 0, 9, 0, 255]  	135	1 
[0, 2, 3, 4, 255]  	137	1 
[0, 1, 2, 6, 255]  	144	1 
[0, 0, 8, 2, 255]  	154	1 
[0, 1, 4, 5, 255]  	157	1 
------
The gap is between 8 and 245.
Lengths: 2 2 6 9 2 4.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[13817906422445927256 + 153487086643394556*2^64 + 11575301506144366492*2^128 + 1798561173*2^192,5351916676353944194 + 9340238669493250695*2^64 + 6586209535967302103*2^128 + 1778060241*2^192,6890542893200875460 + 12279520083140224941*2^64 + 8303373678095243117*2^128 + 1484942826*2^192,4407299844306690372 + 14545330998237897922*2^64 + 16219234633123264744*2^128 + 73582390*2^192,3838080104187617752 + 17341131306857656386*2^64 + 3295498229665005402*2^128 + 223464301*2^192,1545944305682998600 + 13056414018416531618*2^64 + 8557852075789112558*2^128 + 835290207*2^192,9423064530152483740 + 12294793231501635515*2^64 + 16539024878289998412*2^128 + 951971998*2^192,17661444711482272220 + 1038531304953948646*2^64 + 846002096407741436*2^128 + 1244301758*2^192,1620010897791010740 + 12701410070878222146*2^64 + 14508446037405577962*2^128 + 840049949*2^192,12442493216753728776 + 7661479694145543394*2^64 + 11743537709045380519*2^128 + 293218207*2^192;\
4087029970506730250 + 11095648964909760004*2^64 + 1150293475610631038*2^128 + 2078455315*2^192,13020010597990228346 + 13089294328651478859*2^64 + 13301408613145449128*2^128 + 557168126*2^192,18082983322766734344 + 14141658573317459352*2^64 + 5827696280523344582*2^128 + 71133024*2^192,12447965780423891656 + 482196752709412142*2^64 + 1312913468279096277*2^128 + 1965718386*2^192,11173872426742418244 + 9043036539420525136*2^64 + 1114104478985422460*2^128 + 1486219920*2^192,8720055374457105072 + 10021512410635441139*2^64 + 13804711671945347136*2^128 + 534491172*2^192,17024293783691615860 + 14066533417385683799*2^64 + 10405828695534904591*2^128 + 1701794007*2^192,1126295415944838100 + 7427980272541807628*2^64 + 9578631591443204862*2^128 + 99359194*2^192,5197570759713013476 + 1858361289990250396*2^64 + 16196995372513766531*2^128 + 1045222928*2^192,12587172069702234728 + 15461465955785921148*2^64 + 8139291287496339309*2^128 + 811155735*2^192;\
9246216862913352071 + 11046666771231794458*2^64 + 15954335775100740446*2^128 + 1825275588*2^192,13212662057482926737 + 12256480728256435008*2^64 + 2477727851986253098*2^128 + 462364477*2^192,18136530079380244272 + 1641951612183935772*2^64 + 1987018486146568354*2^128 + 507231406*2^192,5208728869372141140 + 10635752997492408057*2^64 + 6294993770249870877*2^128 + 1274128597*2^192,1296743937924694206 + 8113014804256391824*2^64 + 2934583932143082341*2^128 + 853412257*2^192,13100783644591544608 + 4163799393558949642*2^64 + 9009137500870235094*2^128 + 1706146473*2^192,9573593787318386398 + 6064907097322833011*2^64 + 8160099658043469731*2^128 + 1026463925*2^192,12307313641782570494 + 115912882636953919*2^64 + 17151601538262467756*2^128 + 645725883*2^192,10032534872881456158 + 3892630290345100961*2^64 + 3814816244445270566*2^128 + 218224642*2^192,15097227426844967040 + 329735895710892181*2^64 + 4907631422585712266*2^128 + 621213529*2^192;\
4572118232496416229 + 9863344650616986047*2^64 + 908075380983664575*2^128 + 935196239*2^192,17913142985221818863 + 17554137645963613241*2^64 + 6435305221066460279*2^128 + 10691442*2^192,16807533777327978440 + 13584315125639452247*2^64 + 2447462731741377844*2^128 + 361932231*2^192,9247887757898851780 + 9611364545734574918*2^64 + 10804420371918031612*2^128 + 537430086*2^192,17032273178016705362 + 16644405096260353265*2^64 + 10287048316305019233*2^128 + 890420950*2^192,1366590219023947728 + 3350827388029622482*2^64 + 9022736914712459880*2^128 + 157257188*2^192,11390525860496795250 + 2734261156167566275*2^64 + 8493768124835702151*2^128 + 1011991915*2^192,4217003363874460466 + 3667868578152266085*2^64 + 8863025740803306018*2^128 + 971613628*2^192,2673611752972590138 + 11885585916202062581*2^64 + 8217583151233484542*2^128 + 848033896*2^192,17126120144021776880 + 6113219170345140672*2^64 + 12950877824137667144*2^128 + 483311846*2^192;\
9381516792598361072 + 731376686078009011*2^64 + 7098106275505637621*2^128 + 1505184453*2^192,3910584161513428629 + 9136534832496752532*2^64 + 4225272767255681203*2^128 + 1168403844*2^192,7636538144675380884 + 3996167552970609823*2^64 + 707062801770753622*2^128 + 1022204680*2^192,15166027202661124904 + 979251813167576824*2^64 + 5030876264777172988*2^128 + 1969127713*2^192,500058929409459732 + 17649293808646728932*2^64 + 12126435412649410022*2^128 + 1259653758*2^192,4538169804337880636 + 15029177760763807544*2^64 + 16199817921115458219*2^128 + 1037389345*2^192,6912789884771765702 + 5535836435665522107*2^64 + 10115650349392554841*2^128 + 1272906422*2^192,9125484843136964726 + 12486609253327853237*2^64 + 8886206852280037069*2^128 + 1386966062*2^192,17473381878534366098 + 3073084538257149493*2^64 + 15711441997716293208*2^128 + 1300695913*2^192,17269292003794998208 + 17363342521051571107*2^64 + 7205455609603273980*2^128 + 1254328319*2^192;\
18320681148943057297 + 9780908363015418344*2^64 + 808194806471981680*2^128 + 1043067294*2^192,4715766898939674355 + 1088896063717278046*2^64 + 13612103456583511455*2^128 + 1008303963*2^192,13397938132283091349 + 10177593035951217688*2^64 + 2988857015146564783*2^128 + 1316312128*2^192,5832263477977288799 + 12458159869441426772*2^64 + 14584715234765018679*2^128 + 198715074*2^192,5546540616455062672 + 7536095703806550711*2^64 + 10684569154610378570*2^128 + 1412895008*2^192,577919465397016884 + 4909010128635013689*2^64 + 16454432748760460505*2^128 + 1488588044*2^192,3280033275366260028 + 17846980786848398710*2^64 + 14302058961213606146*2^128 + 1968138519*2^192,6448129013759380576 + 7561078666820996279*2^64 + 3339646417839366608*2^128 + 1309079622*2^192,7747236905103219378 + 12460486490187038317*2^64 + 10397003281479332661*2^128 + 1672748398*2^192,10990984418609945142 + 8664771561371764936*2^64 + 16966333655538896708*2^128 + 1031469497*2^192;\
7104247137368603435 + 8789942274970933079*2^64 + 13011400181858607442*2^128 + 609693201*2^192,10013672020028470480 + 6817083070118775521*2^64 + 7821079186057521128*2^128 + 1592629479*2^192,8282642680024449295 + 5986011880746108490*2^64 + 431205662818242050*2^128 + 1663056659*2^192,15890077278465317741 + 9169403883947169963*2^64 + 16043500098142676454*2^128 + 374343398*2^192,15132320882141088358 + 16649090972712938089*2^64 + 11040780140823998303*2^128 + 1206687378*2^192,5195923067621993468 + 12977741132556066597*2^64 + 13027086323481053838*2^128 + 656640096*2^192,422361503752574946 + 3240928012591807607*2^64 + 11156045491267670883*2^128 + 1095793612*2^192,9951740247512673266 + 4343824828210439500*2^64 + 10355598134067120819*2^128 + 1728794948*2^192,10078608000634437006 + 3493355859364613786*2^64 + 5215318548171002381*2^128 + 1285282126*2^192,966914494490241994 + 12587711209710662107*2^64 + 14938401748701286094*2^128 + 1217851861*2^192;\
14215437018444670581 + 7693861740623853464*2^64 + 17254500791892964809*2^128 + 962844872*2^192,6395651086319734949 + 12019479566019745667*2^64 + 15444944079901649489*2^128 + 1379033927*2^192,5909699081197236647 + 3867614742886685625*2^64 + 2852814811286831425*2^128 + 1467322336*2^192,894994753059987765 + 9144055174185072629*2^64 + 15960374600946985608*2^128 + 812430750*2^192,17982183555060626118 + 3044853641266052728*2^64 + 49526656764002173*2^128 + 832643678*2^192,3051640912455759832 + 9411453822359784650*2^64 + 3978846911615428963*2^128 + 948692388*2^192,1330267297505468732 + 6196717714822080242*2^64 + 2063687815817068862*2^128 + 1289036970*2^192,16063881880647265196 + 9072204195395764421*2^64 + 408587860030609296*2^128 + 712191211*2^192,9327357716081694636 + 12674768918328557076*2^64 + 12930091081704317768*2^128 + 489604827*2^192,12439514005645526650 + 12182910720525302670*2^64 + 8429458417766876389*2^128 + 1789938162*2^192;\
3669783589364567578 + 3306205182446639278*2^64 + 1521567249148258434*2^128 + 1958823028*2^192,17158908174925329981 + 6372015717042957348*2^64 + 11615500196464152212*2^128 + 906745220*2^192,11375815230604266900 + 6296227748393764898*2^64 + 1355911685866558346*2^128 + 293190590*2^192,10779683855267862084 + 3497396933324066083*2^64 + 17865597479984787325*2^128 + 1637025051*2^192,7532633192184408644 + 8297265114576054702*2^64 + 15148942548958434215*2^128 + 398875337*2^192,7178878729901295620 + 15657877760437705666*2^64 + 7744053149332891931*2^128 + 2052812194*2^192,15317971722436543090 + 16011653438729683677*2^64 + 11986581526609435870*2^128 + 1403070274*2^192,13810077981271733610 + 10860665113296966846*2^64 + 2197384839435737089*2^128 + 437495467*2^192,14137965173133331258 + 15096934566633365716*2^64 + 8999802181476928933*2^128 + 80236732*2^192,8267198988815606448 + 13814257290171540273*2^64 + 17566580587556981251*2^128 + 1116904540*2^192;\
12753645056319586366 + 8481563944931368034*2^64 + 10827259292453915582*2^128 + 1973521927*2^192,5689848702408207633 + 5608261470748430332*2^64 + 5694136965409176721*2^128 + 9963948*2^192,9226751354031545668 + 14340892668905447380*2^64 + 2624636982872114771*2^128 + 1272672244*2^192,13782053886143215556 + 16449828969434832314*2^64 + 8427225401893250220*2^128 + 2019488290*2^192,13670650600168049512 + 2035861624698272306*2^64 + 9366867974696157722*2^128 + 1894956678*2^192,5182939651164532716 + 12064400645087834243*2^64 + 12274370509341109876*2^128 + 841047133*2^192,16095121646099554474 + 17075017596339056301*2^64 + 17412239699633692586*2^128 + 1626803562*2^192,15929259231032654634 + 2062714254618379504*2^64 + 18092510512954643279*2^128 + 696388390*2^192,121152376274511118 + 4838300552788168943*2^64 + 7150227975586946213*2^128 + 266768788*2^192,17153202806612531240 + 5629993664874973818*2^64 + 1135919795085190600*2^128 + 1027663112*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3910 lists. */
