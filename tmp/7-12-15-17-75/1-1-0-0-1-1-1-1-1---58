/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 189
[4, 0, 2, 0, 0]  	58	4 
[9, 0, 0, 0, 0]  	63	4  <--- 1
[8, 1, 0, 0, 0]  	68	4 
[1, 3, 1, 1, 0]  	75	4 
[1, 0, 0, 4, 0]  	75	4 
[6, 3, 1, 0, 0]  	93	6 
[6, 3, 0, 1, 0]  	95	7 
[5, 4, 1, 0, 0]  	98	6 
[5, 4, 0, 1, 0]  	100	7 
[5, 2, 1, 2, 0]  	108	8 
[7, 5, 0, 0, 0]  	109	7 
[5, 2, 0, 3, 0]  	110	8 
[3, 5, 2, 0, 0]  	111	7 
[3, 0, 5, 1, 0]  	113	8 
[3, 4, 3, 0, 0]  	114	5 
[4, 6, 1, 0, 0]  	115	7 
[3, 5, 0, 2, 0]  	115	9 
[2, 6, 2, 0, 0]  	116	6 
[4, 6, 0, 1, 0]  	117	9 
[1, 8, 1, 0, 0]  	118	6 
[5, 7, 0, 0, 0]  	119	8 
[3, 7, 0, 1, 0]  	122	8 
[3, 1, 6, 0, 0]  	123	7 
[4, 8, 0, 0, 0]  	124	7 
[2, 5, 0, 3, 0]  	125	8 
[0, 8, 2, 0, 0]  	126	5 
[2, 2, 5, 1, 0]  	130	6 
[1, 6, 0, 3, 0]  	130	6 
[2, 1, 7, 0, 0]  	131	6 
[3, 3, 5, 0, 0]  	132	7 
[2, 7, 0, 2, 0]  	132	7 
[2, 10, 0, 0, 0]  	134	6 
[2, 5, 4, 0, 0]  	134	7 
[2, 0, 7, 1, 0]  	136	6 
[2, 4, 5, 0, 0]  	137	5 
[1, 8, 0, 2, 0]  	137	5 
[2, 9, 0, 1, 0]  	139	6 
[1, 11, 0, 0, 0]  	139	6 
[2, 3, 6, 0, 0]  	140	6 
[2, 0, 5, 3, 0]  	140	6 
[3, 0, 8, 0, 0]  	141	6 
[1, 10, 0, 1, 0]  	144	5 
[1, 0, 8, 1, 0]  	144	4 
[0, 12, 0, 0, 0]  	144	4  <--- 2
[1, 4, 6, 0, 0]  	145	6 
[1, 0, 7, 2, 0]  	146	4 
[0, 11, 1, 0, 0]  	147	5 
[0, 8, 0, 3, 0]  	147	5 
[1, 3, 7, 0, 0]  	148	4 
[1, 0, 6, 3, 0]  	148	4 
[0, 7, 2, 2, 0]  	148	4 
[2, 0, 9, 0, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	4 
[0, 6, 4, 1, 0]  	149	4 
[1, 7, 4, 0, 0]  	151	4 
[1, 2, 8, 0, 0]  	151	4 
[0, 6, 3, 2, 0]  	151	4 
[0, 10, 1, 1, 0]  	152	5 
[1, 2, 7, 1, 0]  	153	4 
[0, 6, 2, 3, 0]  	153	4 
[0, 4, 7, 0, 0]  	153	4 
[1, 6, 5, 0, 0]  	154	3 
[1, 1, 9, 0, 0]  	154	3 
[0, 10, 0, 2, 0]  	154	3 
[0, 5, 4, 2, 0]  	154	3 
[1, 2, 6, 2, 0]  	155	4 
[0, 5, 3, 3, 0]  	156	4 
[1, 0, 10, 0, 0]  	157	4 
[0, 5, 2, 4, 0]  	158	2 
[0, 3, 7, 1, 0]  	158	2 
[0, 2, 1, 7, 0]  	158	2 
[0, 5, 1, 5, 0]  	160	3 
[0, 3, 6, 2, 0]  	160	3 
[0, 2, 8, 1, 0]  	161	2 
[0, 5, 0, 6, 0]  	162	4 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	3 
[0, 3, 3, 5, 0]  	166	3 
[0, 5, 6, 1, 0]  	167	3 
[0, 4, 0, 7, 0]  	167	3 
[0, 3, 2, 6, 0]  	168	3 
[0, 7, 0, 5, 0]  	169	3 
[0, 3, 9, 0, 0]  	171	2 
[0, 2, 3, 6, 0]  	171	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 0, 7, 4, 0]  	173	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 2, 0, 9, 0]  	177	2 
[0, 1, 11, 0, 0]  	177	2 
[0, 1, 2, 8, 0]  	178	1 
[0, 1, 10, 1, 0]  	179	2 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[4, 0, 1, 1, 1]  	60	4 
[3, 5, 1, 0, 1]  	96	6 
[4, 4, 0, 2, 1]  	110	9 
[2, 7, 1, 0, 1]  	113	8 
[4, 3, 0, 3, 1]  	115	8 
[3, 1, 4, 2, 1]  	127	8 
[2, 2, 6, 0, 1]  	128	6 
[3, 1, 3, 3, 1]  	129	6 
[3, 0, 4, 3, 1]  	132	7 
[2, 2, 4, 2, 1]  	132	7 
[2, 1, 6, 1, 1]  	133	6 
[1, 7, 3, 0, 1]  	136	6 
[2, 1, 4, 3, 1]  	137	5 
[2, 0, 6, 2, 1]  	138	6 
[1, 2, 5, 2, 1]  	140	5 
[1, 5, 5, 0, 1]  	142	6 
[1, 1, 6, 2, 1]  	143	5 
[0, 7, 4, 0, 1]  	144	4 
[1, 1, 5, 3, 1]  	145	5 
[0, 7, 1, 3, 1]  	150	5 
[0, 7, 0, 4, 1]  	152	4 
[0, 6, 1, 4, 1]  	155	4 
[0, 9, 1, 2, 1]  	157	4 
[0, 4, 4, 3, 1]  	159	3 
[0, 4, 3, 4, 1]  	161	2 
[0, 6, 6, 0, 1]  	162	4 
[0, 4, 2, 5, 1]  	163	3 
[0, 2, 7, 2, 1]  	163	2 
[0, 3, 4, 4, 1]  	164	3 
[0, 2, 5, 5, 1]  	184	2 
[8, 0, 0, 3, 2]  	107	7 
[3, 4, 0, 3, 2]  	120	9 
[2, 0, 5, 2, 2]  	123	6 
[3, 2, 2, 3, 2]  	126	6 
[1, 6, 4, 0, 2]  	139	5 
[0, 7, 3, 1, 2]  	146	4 
[0, 3, 2, 5, 2]  	151	3 
[0, 3, 8, 0, 2]  	156	3 
[0, 1, 8, 2, 2]  	166	2 
[0, 1, 7, 3, 2]  	168	2 
[3, 3, 0, 3, 3]  	108	9 
[3, 2, 1, 3, 3]  	111	6 
[1, 1, 7, 1, 3]  	141	5 
[1, 2, 4, 3, 3]  	142	5 
[0, 1, 0, 9, 3]  	165	2 
[3, 2, 5, 0, 4]  	120	8 
[2, 3, 5, 0, 4]  	125	7 
[2, 8, 0, 1, 4]  	127	7 
[2, 2, 3, 3, 4]  	134	6 
[0, 1, 6, 4, 5]  	170	2 
[2, 6, 0, 2, 249]  	120	7 
[0, 0, 0, 10, 251]  	170	1 
[2, 0, 8, 0, 252]  	134	4 
[0, 5, 2, 3, 252]  	141	3 
[3, 1, 5, 0, 253]  	108	8 
[2, 0, 4, 3, 253]  	125	6 
[1, 10, 0, 0, 253]  	127	6 
[1, 1, 8, 0, 253]  	139	4 
[1, 0, 9, 0, 253]  	142	4 
[0, 2, 2, 6, 253]  	156	2 
[0, 0, 11, 0, 253]  	165	1 
[7, 2, 0, 2, 254]  	107	6 
[3, 6, 0, 1, 254]  	110	7 
[3, 0, 6, 0, 254]  	111	4 
[1, 5, 4, 0, 254]  	127	4 
[1, 0, 8, 0, 254]  	127	3 
[0, 10, 1, 0, 254]  	135	5 
[0, 0, 1, 8, 254]  	151	1 
[0, 6, 0, 5, 254]  	157	2 
[1, 3, 0, 1, 255]  	60	3 
[0, 8, 1, 0, 255]  	111	3 
[3, 0, 4, 2, 255]  	115	7 
[2, 4, 4, 0, 255]  	122	3 
[1, 2, 5, 1, 255]  	123	4 
[1, 0, 7, 1, 255]  	129	3 
[0, 11, 0, 0, 255]  	132	3 
[1, 3, 6, 0, 255]  	133	2 
[0, 6, 2, 2, 255]  	136	2 
[0, 5, 4, 1, 255]  	137	2 
[0, 9, 0, 2, 255]  	142	1 
[0, 3, 6, 1, 255]  	143	2 
[0, 2, 8, 0, 255]  	144	1 
[0, 1, 2, 6, 255]  	144	1 
[0, 4, 2, 4, 255]  	146	3 
[0, 2, 7, 1, 255]  	146	2 
[0, 0, 2, 7, 255]  	149	1 
[0, 4, 0, 6, 255]  	150	1 
[0, 0, 10, 0, 255]  	150	1 
------
The gap is between 6 and 248.
Lengths: 2 2 6 6 2 4.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[979388215174513606 + 10618479547650964586*2^64 + 4542028835022947081*2^128 + 700380433*2^192,5121407724566750502 + 14830173919454247413*2^64 + 1020718533052157091*2^128 + 339105451*2^192,16488387777195160760 + 1664175051210882877*2^64 + 3641282182834436706*2^128 + 476637001*2^192,12006637034724943160 + 4222665971352877898*2^64 + 15227312234631864822*2^128 + 2130544447*2^192,9809705964354055160 + 14974517863413583726*2^64 + 16060517713484762774*2^128 + 1429672297*2^192,6285283327018078492 + 9550951698857469440*2^64 + 1953281073501306474*2^128 + 1213825824*2^192,6406169968468410392 + 16462921568070835655*2^64 + 18148203189648751940*2^128 + 539954329*2^192,9830857121909370920 + 3480608442363956739*2^64 + 6395435857901092754*2^128 + 183667208*2^192,12639989047011256200 + 17680371776884946657*2^64 + 8914235770072013502*2^128 + 1394182767*2^192,895948631312589896 + 6957806085272441485*2^64 + 14763300406667368605*2^128 + 1164949742*2^192;\
4051901382677141072 + 5781502113026360811*2^64 + 11545582175301708689*2^128 + 313531576*2^192,5902281797310202904 + 16203500899600288592*2^64 + 5434936283476520292*2^128 + 1018900712*2^192,15276697684486303064 + 8801356644991209943*2^64 + 18126258018466963120*2^128 + 81352790*2^192,13930357394594484480 + 16211936843403219701*2^64 + 6163333771652270216*2^128 + 704934368*2^192,16843639850194120712 + 13973755169845807064*2^64 + 8134816949782018931*2^128 + 174391814*2^192,5695029913387296516 + 965588681542469765*2^64 + 10967773547684576390*2^128 + 1167514845*2^192,8246084900128536472 + 1204690030878993937*2^64 + 7817600958341448174*2^128 + 726283084*2^192,2424249666475636672 + 12800742639361684768*2^64 + 8528057366671001298*2^128 + 569771725*2^192,3597969232264566228 + 2447890838813264265*2^64 + 17132210611747725881*2^128 + 92181385*2^192,10534562824027726848 + 16749844702769415393*2^64 + 1884803632483471191*2^128 + 1693991116*2^192;\
16230634158161899976 + 13269502566164189443*2^64 + 17966045351364918168*2^128 + 1839149107*2^192,12267565108476428032 + 4835079226221801841*2^64 + 15117781805735849665*2^128 + 1959787101*2^192,12348876966716570868 + 15640938584113006310*2^64 + 8812301254326391166*2^128 + 1346401533*2^192,7161417815276716516 + 3399367412696001173*2^64 + 5183344249277114749*2^128 + 270108540*2^192,9845630259797994340 + 9502859346494604897*2^64 + 16178472101549389923*2^128 + 763024422*2^192,9758089871868000234 + 7203743742128891459*2^64 + 11043159754327372523*2^128 + 2011484040*2^192,11126957615137639632 + 12773273766656979146*2^64 + 7004257617466111539*2^128 + 253327828*2^192,4759169870369753808 + 14035880463262819310*2^64 + 17138800485261684879*2^128 + 749058139*2^192,6883334621102428502 + 5111347423190241198*2^64 + 15305034956069544366*2^128 + 1326882728*2^192,17870719132273915332 + 3243598518364347232*2^64 + 14379526216260927859*2^128 + 519158776*2^192;\
6354030749523661260 + 18324848253284444449*2^64 + 8964101441633886311*2^128 + 606721685*2^192,8660913496824254216 + 8970365654487884107*2^64 + 16268230225299413852*2^128 + 1969286386*2^192,10388810411685170288 + 13240420411779417275*2^64 + 5378033584332267057*2^128 + 204250210*2^192,12855203974623749488 + 10611348933007978794*2^64 + 391932130249203281*2^128 + 1995585295*2^192,16023734842458023128 + 3882196762858868002*2^64 + 8501887799210147007*2^128 + 1327345028*2^192,2887891552997978256 + 7429072631712628109*2^64 + 11506088302045137894*2^128 + 939307357*2^192,4416500554952384512 + 10064905118468891681*2^64 + 88782953697162056*2^128 + 941564140*2^192,17315218193635378336 + 13158089460064546705*2^64 + 8514530358681920047*2^128 + 1858499319*2^192,14738215211341131328 + 154345877400092275*2^64 + 11078707884620633045*2^128 + 33235831*2^192,1493574307347023152 + 3149110357618846252*2^64 + 1400853470680275255*2^128 + 731095218*2^192;\
9210383782282214914 + 15814826216285255214*2^64 + 12202069569332919019*2^128 + 952699764*2^192,16977619630928627538 + 426838188840895938*2^64 + 3672610653538974018*2^128 + 1773577146*2^192,16954762924321255036 + 11076799418765487489*2^64 + 3171311953505286910*2^128 + 1871803475*2^192,12006339441022466128 + 243116245993653315*2^64 + 2396476975277486346*2^128 + 1762796684*2^192,12563838879877003360 + 1222385813979027913*2^64 + 13060763969580297470*2^128 + 1297551693*2^192,6788579398148333458 + 12397810982568491634*2^64 + 7100461759854061298*2^128 + 1582185444*2^192,4873691368110198172 + 10958881626126108679*2^64 + 12564957098769341192*2^128 + 562790044*2^192,7074153426778732592 + 5598230413331612252*2^64 + 17814060480400737246*2^128 + 2068392820*2^192,1534866812215405862 + 9615285021717573850*2^64 + 15444556191484335124*2^128 + 469312831*2^192,1269914298864825268 + 12032239005584110044*2^64 + 13176105554307125778*2^128 + 592950604*2^192;\
13959077301863504035 + 13603272750286997986*2^64 + 17884679024681062565*2^128 + 534399654*2^192,17101317616300456791 + 16815421836650877466*2^64 + 13350599953863120006*2^128 + 1463413921*2^192,18126546373268241540 + 18073769283597687236*2^64 + 16597931397742612191*2^128 + 781159466*2^192,8830775521614190816 + 975538846629275696*2^64 + 8729897951625256490*2^128 + 884247202*2^192,12987982491345958544 + 6874078208961181371*2^64 + 18279672302489562398*2^128 + 733614130*2^192,4351543480777558224 + 11955064778909262424*2^64 + 10450839089601478560*2^128 + 60511504*2^192,15807356698972785444 + 10832153415127950693*2^64 + 16021225474010565266*2^128 + 88003045*2^192,521168570511859856 + 6565317207116503182*2^64 + 10629846051388368022*2^128 + 479453890*2^192,9074928503720202410 + 16480519226598185590*2^64 + 8160700637974925145*2^128 + 468837150*2^192,5698560473301882408 + 10922665289857150532*2^64 + 1590842069072510296*2^128 + 1597900936*2^192;\
4408155561854538263 + 9648617561358255949*2^64 + 10258673016190645066*2^128 + 1956269296*2^192,1614307749936582967 + 4632785385061868537*2^64 + 10362437301285112111*2^128 + 93989193*2^192,15151166932276708684 + 13870361463994095085*2^64 + 1456249151461459191*2^128 + 1000751424*2^192,5387866641285914680 + 13320656577924105448*2^64 + 12254998681119022088*2^128 + 80634372*2^192,4517016223698294364 + 14565442842202805152*2^64 + 14326388625900112279*2^128 + 1196173760*2^192,12896273054530202758 + 534039447801444249*2^64 + 12669080263977082638*2^128 + 196236836*2^192,9472927544962186168 + 8063795037164393892*2^64 + 14570167379819571817*2^128 + 578551247*2^192,2900690238518624272 + 15628207033654710341*2^64 + 6081217521770659108*2^128 + 1776477752*2^192,10817608641466986272 + 11731653146936433611*2^64 + 13791799287906727323*2^128 + 689996011*2^192,15219164259890845748 + 1509726517563348042*2^64 + 9548272289926458907*2^128 + 1707176786*2^192;\
14504543489898746946 + 2802018359402969619*2^64 + 16267943838783224429*2^128 + 1356196926*2^192,16774218016849909944 + 2382989735761173305*2^64 + 7422474586710554207*2^128 + 432091864*2^192,7133076950246662808 + 16540413576367300307*2^64 + 12979869348717010645*2^128 + 316306953*2^192,13899617931615866280 + 15616891885170960161*2^64 + 12334281906266995012*2^128 + 1164541265*2^192,2559276635594583348 + 6675706060590036798*2^64 + 8603467169790427473*2^128 + 1909292342*2^192,10527854272679852502 + 16493504838289059183*2^64 + 8272015830129632790*2^128 + 389879108*2^192,9747810712288463792 + 9322130044849935705*2^64 + 17130765051785984406*2^128 + 1132485374*2^192,12561266645713095184 + 4366229086810156369*2^64 + 17951092701496248350*2^128 + 2005880150*2^192,4569103325736658382 + 591119934648326552*2^64 + 3815801289625463469*2^128 + 699187939*2^192,5982895462782517540 + 15563657429502185728*2^64 + 2946470165663793164*2^128 + 233456269*2^192;\
3949802166369381236 + 9104753237009782194*2^64 + 4448693087399099944*2^128 + 1816761351*2^192,4958298056598603240 + 17295821538365635648*2^64 + 5693719379086434578*2^128 + 1038025339*2^192,9623358116350433440 + 3341029002457046204*2^64 + 7459841320571022378*2^128 + 94572470*2^192,15446247178735136068 + 17699721023514389964*2^64 + 16257194831602453618*2^128 + 1735730911*2^192,16922269436365895720 + 15099020528964352257*2^64 + 16516840869279108473*2^128 + 537794613*2^192,9897027157726778336 + 7548404417767116327*2^64 + 14043432503939816950*2^128 + 537964937*2^192,7513759663112085872 + 539234882015128341*2^64 + 7439057601758604750*2^128 + 213925349*2^192,931441187390864032 + 1398710938958389037*2^64 + 13297578031333218003*2^128 + 437156217*2^192,7873538780116193312 + 17919799277446170175*2^64 + 6638227713629012243*2^128 + 419577458*2^192,15777031093758082672 + 287721135998256383*2^64 + 13132579355090404596*2^128 + 1681044327*2^192;\
12953515159469352104 + 12758347169166032643*2^64 + 3393364210240352380*2^128 + 972965580*2^192,6707395057405440456 + 11431133663213084137*2^64 + 2626337979895702603*2^128 + 687997045*2^192,16300038195621583816 + 7248515860077797514*2^64 + 11357614065909286921*2^128 + 393510773*2^192,4588421646372708460 + 17895237052760786079*2^64 + 12247683451990085354*2^128 + 325075462*2^192,2413653212597508760 + 11869812314363742399*2^64 + 4561446557838856113*2^128 + 173586609*2^192,11697608324926054748 + 7678633139661824932*2^64 + 4530131137009636911*2^128 + 313254421*2^192,9238751507185534912 + 1294754032726515036*2^64 + 399809450733423859*2^128 + 1663633722*2^192,18237970188495252192 + 4090649010655881141*2^64 + 4928436863447482409*2^128 + 405126452*2^192,12868432482042488492 + 8513397981618911100*2^64 + 7563271727455533369*2^128 + 521534620*2^192,1889052683963121312 + 11530974454184923827*2^64 + 5102230054197255470*2^128 + 1643227972*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4221 lists. */
