/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 106
[4, 0, 2, 0, 0]  	58	2 
[9, 0, 0, 0, 0]  	63	2  <--- 1
[8, 1, 0, 0, 0]  	68	3 
[1, 0, 0, 4, 0]  	75	2 
[0, 5, 1, 0, 0]  	75	2 
[5, 5, 0, 0, 0]  	95	3 
[4, 6, 0, 0, 0]  	100	4 
[3, 4, 3, 0, 0]  	114	2 
[1, 5, 0, 3, 0]  	118	2 
[2, 0, 7, 0, 0]  	119	2 
[0, 10, 0, 0, 0]  	120	2  <--- 2
[2, 4, 3, 1, 0]  	124	2 
[1, 4, 5, 0, 0]  	130	3 
[1, 4, 4, 1, 0]  	132	3 
[1, 4, 3, 2, 0]  	134	2 
[1, 0, 8, 1, 0]  	144	3 
[0, 4, 3, 3, 0]  	144	3 
[1, 0, 7, 2, 0]  	146	2 
[0, 4, 2, 4, 0]  	146	2 
[0, 4, 7, 0, 0]  	153	2 
[1, 0, 10, 0, 0]  	157	3 
[0, 3, 7, 1, 0]  	158	2 
[0, 9, 0, 3, 0]  	159	3 
[0, 4, 1, 6, 0]  	165	2 
[1, 2, 9, 0, 0]  	166	3 
[0, 4, 0, 7, 0]  	167	2 
[0, 3, 9, 0, 0]  	171	2 
[0, 4, 6, 2, 0]  	172	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 2, 2, 7, 0]  	173	1 
[0, 0, 7, 4, 0]  	173	1 
[0, 2, 1, 8, 0]  	175	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 2, 8, 2, 0]  	178	1 
[0, 1, 2, 8, 0]  	178	1 
[0, 3, 5, 4, 0]  	179	2 
[0, 2, 7, 3, 0]  	180	1 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 2, 6, 4, 0]  	182	1 
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 2, 11, 0, 0]  	189	1 
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 1, 10, 2, 0]  	196	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[4, 0, 1, 1, 1]  	60	3 
[2, 5, 0, 2, 1]  	108	3 
[3, 0, 6, 0, 1]  	111	3 
[3, 4, 2, 1, 1]  	116	3 
[0, 5, 0, 6, 1]  	162	3 
[0, 8, 0, 4, 1]  	164	3 
[6, 0, 0, 3, 2]  	93	2 
[5, 1, 0, 3, 2]  	98	3 
[3, 0, 5, 1, 2]  	113	4 
[3, 0, 4, 2, 2]  	115	3 
[2, 0, 3, 3, 4]  	110	2 
[2, 0, 5, 2, 4]  	123	2 
[1, 0, 8, 0, 4]  	127	2 
[1, 1, 5, 2, 4]  	128	3 
[1, 0, 6, 2, 4]  	131	2 
[0, 1, 6, 2, 4]  	136	2 
[0, 1, 8, 1, 4]  	149	2 
[0, 1, 11, 0, 4]  	177	2 
[1, 2, 4, 3, 6]  	142	3 
[0, 1, 0, 9, 6]  	165	2 
[0, 3, 3, 5, 6]  	166	3 
[0, 3, 2, 6, 6]  	168	3 
[0, 2, 3, 6, 6]  	171	2 
[0, 6, 0, 5, 7]  	157	3 
[0, 3, 8, 0, 10]  	156	3 
[0, 2, 1, 7, 10]  	158	2 
[0, 2, 5, 5, 10]  	184	2 
[0, 0, 0, 10, 242]  	170	1 
[0, 0, 5, 6, 242]  	177	1 
[0, 0, 10, 2, 242]  	184	1 
[0, 0, 2, 8, 244]  	166	1 
[0, 0, 1, 9, 244]  	168	1 
[0, 4, 4, 2, 246]  	142	2 
[0, 0, 1, 8, 246]  	151	1 
[0, 0, 6, 4, 246]  	158	1 
[0, 0, 11, 0, 246]  	165	1 
[0, 0, 2, 7, 248]  	149	1 
[0, 0, 8, 2, 248]  	154	1 
[0, 0, 7, 3, 248]  	156	1 
[0, 4, 3, 2, 250]  	127	1 
[0, 0, 7, 2, 250]  	139	1 
[0, 2, 2, 6, 250]  	156	2 
[0, 4, 3, 1, 252]  	110	1 
[0, 0, 7, 1, 252]  	122	1 
[0, 4, 5, 0, 252]  	123	1 
[0, 4, 1, 4, 252]  	131	1 
[0, 0, 9, 0, 252]  	135	1 
[0, 0, 0, 8, 252]  	136	1 
[0, 0, 5, 4, 252]  	143	1 
[0, 2, 3, 5, 252]  	154	2 
[0, 5, 0, 4, 253]  	128	2 
[0, 4, 3, 0, 254]  	93	1 
[0, 0, 2, 4, 254]  	98	1 
[0, 0, 7, 0, 254]  	105	1 
[0, 5, 0, 0, 255]  	60	2 
[0, 4, 0, 4, 255]  	116	1 
------
The gap is between 11 and 241.
Lengths: 2 2 6 6 2 5.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[13027510184829515920 + 10376204892146904897*2^64 + 8736391712760967126*2^128 + 207059464*2^192,1918895260991111782 + 17951474608037968037*2^64 + 1038150349255132089*2^128 + 8429499356*2^192,11906789064394459648 + 17239598112080789269*2^64 + 10238299571373417696*2^128 + 4223947872*2^192,6228931832114347754 + 10661158810003187368*2^64 + 4205447343773642877*2^128 + 1494421649*2^192,2087157243747734584 + 15230744408316412303*2^64 + 14483810045890809177*2^128 + 237890469*2^192,17970301637858686256 + 2894191514935265553*2^64 + 17199220351021505055*2^128 + 268393457*2^192,1423043369085488512 + 549736524265591830*2^64 + 7523259330019404464*2^128 + 3462768943*2^192,4373198210868678272 + 1375892102622764819*2^64 + 6635072828163828010*2^128 + 8235402771*2^192,8664585041595986240 + 7564436705924332115*2^64 + 3764111122339073631*2^128 + 4986995180*2^192,13393444704889826176 + 5938871487152817729*2^64 + 5933241256262320100*2^128 + 5919576879*2^192;\
12065357000572140464 + 16534891782537819461*2^64 + 17306996401594943286*2^128 + 5443079773*2^192,18168391749447166720 + 8896974620538186845*2^64 + 5487126426593777033*2^128 + 3440418226*2^192,8831168497673068288 + 4025903888952671974*2^64 + 13719972348589200888*2^128 + 2611666661*2^192,15234896817911114240 + 10097877621898112059*2^64 + 17220016264057146833*2^128 + 8342240502*2^192,8042316588549074944 + 1538812888252003664*2^64 + 15621240653409020227*2^128 + 657310010*2^192,344074044588129208 + 10168879241205295616*2^64 + 4643538729597568018*2^128 + 4161043141*2^192,17430562613789780032 + 8421343872279397918*2^64 + 12052499543380561271*2^128 + 1221901217*2^192,17353607629555283808 + 7034181497943835703*2^64 + 1577773090136023885*2^128 + 2834493454*2^192,4313617355924927344 + 4786428348193622509*2^64 + 13879145984151852247*2^128 + 7040167084*2^192,8962715548748669504 + 16109681467803929111*2^64 + 2628492997274280201*2^128 + 7780542599*2^192;\
16923397918745908224 + 13759704616977626915*2^64 + 127396412928613001*2^128 + 3017059445*2^192,9333970530431641760 + 8124572978355624271*2^64 + 14621022568855331242*2^128 + 160854118*2^192,16173632446333427728 + 13926210388801752731*2^64 + 6063651938395201491*2^128 + 1109566879*2^192,16546446310397201152 + 520935867015281564*2^64 + 16839257927966719392*2^128 + 699578205*2^192,15397272961055923712 + 15316352074500020818*2^64 + 10074500969917115408*2^128 + 916146063*2^192,6933423114016475392 + 18038231496324126348*2^64 + 12766161374453328789*2^128 + 4134993537*2^192,16007694057512114176 + 11118111934491361049*2^64 + 8620727512141990717*2^128 + 116473654*2^192,5629140381716558848 + 1460067754373796539*2^64 + 491037990048100026*2^128 + 3346772339*2^192,12243396740209790464 + 11586452439046213553*2^64 + 2737903475187704234*2^128 + 1077728801*2^192,3245309259484411904 + 8974990739212725162*2^64 + 1390990876111996068*2^128 + 2963151615*2^192;\
7319555446670640672 + 17945522257161851187*2^64 + 5665125340658286881*2^128 + 1194276726*2^192,9047510015874084480 + 13299113743736249152*2^64 + 12885127180980414221*2^128 + 314536829*2^192,3016620602195485696 + 9011869584321475854*2^64 + 9499683948926599945*2^128 + 4071045599*2^192,1845853636664822784 + 15208211511070903936*2^64 + 11000469997605661796*2^128 + 4141083900*2^192,2702584002473730048 + 17825587177906504767*2^64 + 4972822488511136265*2^128 + 8048960354*2^192,9267367359619940352 + 7444855070377843202*2^64 + 1565102817470992088*2^128 + 4380899838*2^192,11882146952252544768 + 10613834200790159900*2^64 + 16807043715361839198*2^128 + 2650555949*2^192,4288196175345323072 + 335540531053726606*2^64 + 117400818931563015*2^128 + 8483265321*2^192,8086594486941987104 + 15830621453151977679*2^64 + 1256296146437859217*2^128 + 1356972299*2^192,16918781300551025664 + 14792557103390107135*2^64 + 10619661336915268846*2^128 + 7277970450*2^192;\
851039120282162144 + 1999403029346119759*2^64 + 2643922502106987374*2^128 + 413489911*2^192,13519878965769809428 + 8999610914658717952*2^64 + 1974848060164764811*2^128 + 1430707311*2^192,4441612473014451200 + 10057004179846308499*2^64 + 11205120651322198024*2^128 + 941775848*2^192,18370805020490654716 + 2771456139964526647*2^64 + 3249512478492524833*2^128 + 3050400875*2^192,3807093775059997968 + 2625550070612727200*2^64 + 16162297831513632994*2^128 + 3873109441*2^192,5759916644431551520 + 7068229358239757258*2^64 + 8207017606107633965*2^128 + 60130612*2^192,8343057497833201920 + 15442078841622709687*2^64 + 15431941704710331230*2^128 + 1733407247*2^192,10244402381662206208 + 2581385834197463432*2^64 + 9086228860100622714*2^128 + 3818321343*2^192,2663902810501174400 + 16905118474106175712*2^64 + 380599297597707344*2^128 + 60673401*2^192,1077059265636576512 + 15046380382343023738*2^64 + 11377192511412781990*2^128 + 3348239913*2^192;\
17067169582307046296 + 6061871130777874772*2^64 + 18248400439976593654*2^128 + 249819495*2^192,14079499310775585984 + 8842238778455772476*2^64 + 5521369434113614591*2^128 + 195364373*2^192,3074823361808593536 + 997887099639967260*2^64 + 2728787534066793070*2^128 + 8561804350*2^192,6379327214043861760 + 13717732464780587994*2^64 + 13445656619486411338*2^128 + 3019513489*2^192,10675091803536487424 + 14829555904925992282*2^64 + 8210661883814125302*2^128 + 294566279*2^192,13383152156013873152 + 7220977733881498534*2^64 + 10740747419797318964*2^128 + 6015858476*2^192,13895883967905981280 + 6433598839715485147*2^64 + 8482763973040102749*2^128 + 2847039956*2^192,3916982999706482480 + 12477957574100023135*2^64 + 14411814230374365592*2^128 + 1775320576*2^192,9483431444674136064 + 7337776544925287948*2^64 + 10169988892654208789*2^128 + 1421884862*2^192,16211048005103292768 + 8328215553076832526*2^64 + 8559931476954880535*2^128 + 1774584520*2^192;\
0 + 0*2^64 + 0*2^128 + 4160749568*2^192,0 + 0*2^64 + 0*2^128 + 2248146944*2^192,0 + 0*2^64 + 0*2^128 + 2382364672*2^192,0 + 0*2^64 + 0*2^128 + 3724541952*2^192,0 + 0*2^64 + 0*2^128 + 603979776*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,2054658203458732048 + 10475123875176156857*2^64 + 11692149951354006236*2^128 + 1299868093*2^192,0 + 0*2^64 + 0*2^128 + 939524096*2^192,0 + 0*2^64 + 0*2^128 + 2147483648*2^192,0 + 0*2^64 + 0*2^128 + 2650800128*2^192;\
1420693285116866616 + 6350172574246099453*2^64 + 8448327808986268013*2^128 + 4218999312*2^192,17413851221781134285 + 16949491106642175328*2^64 + 8556967843117069916*2^128 + 7638599278*2^192,10022787298005155072 + 2913201538257664729*2^64 + 2803437368374592221*2^128 + 3410618448*2^192,13813434908951890059 + 14382111194914542061*2^64 + 16577282520802878618*2^128 + 5913322421*2^192,6238698241814333012 + 6131970782468953732*2^64 + 4901027303416976504*2^128 + 1938967185*2^192,9437474142605722264 + 13884269898263904264*2^64 + 9849049474581186806*2^128 + 2949742324*2^192,12922447983362359488 + 521622940230004448*2^64 + 4173307252470816930*2^128 + 351606933*2^192,8097254376042380672 + 13927386982075748951*2^64 + 14306073434157635996*2^128 + 7971823963*2^192,3136690703978665408 + 5092810188691087900*2^64 + 7415912895788439737*2^128 + 3511787941*2^192,9781744974858854336 + 2133946432372998746*2^64 + 9780979153186557247*2^128 + 2522961049*2^192;\
15690705089040674816 + 15160353056104576454*2^64 + 5700829243982763971*2^128 + 7841364975*2^192,12731425052732344032 + 15558252806494627630*2^64 + 13654836828948451513*2^128 + 362496711*2^192,8607752585865423232 + 9777836594940196525*2^64 + 16824456421770618792*2^128 + 814989253*2^192,12163693945180883712 + 8589469872768598600*2^64 + 12429558112267082233*2^128 + 7962029244*2^192,5015199097200889856 + 2040395702550509730*2^64 + 10282332155831555149*2^128 + 1238909984*2^192,6388994838639011840 + 8610804169159452702*2^64 + 18293747054743225415*2^128 + 3952923236*2^192,5698340817316521376 + 10436264058175001052*2^64 + 14386060558527022167*2^128 + 7076796018*2^192,9894598092250079232 + 17753006011993712041*2^64 + 7817803316620624545*2^128 + 1594261317*2^192,6652599948953735168 + 15267316607418920166*2^64 + 4780150553677595061*2^128 + 1185615791*2^192,7037747716200984160 + 10827891980175279176*2^64 + 7349582389559224217*2^128 + 757749774*2^192;\
7677454505324022576 + 14920276476178137739*2^64 + 10667083771825613002*2^128 + 4304860843*2^192,10910805220521810688 + 10164397972037179196*2^64 + 8892630525059328793*2^128 + 1211918645*2^192,14625663894217723136 + 17907529285264685544*2^64 + 17752734110131314895*2^128 + 4302192683*2^192,6076233382631992832 + 5835010326217161579*2^64 + 10590380490694431508*2^128 + 7465239684*2^192,15572174977209627760 + 17248524309043601531*2^64 + 172112467168419419*2^128 + 442552007*2^192,18302828972075757640 + 16674699998651205668*2^64 + 1076509456224011299*2^128 + 6102663834*2^192,13359335543628455104 + 3734075086925909982*2^64 + 15631347118641430417*2^128 + 6036583555*2^192,1380854229220686496 + 7144009156096872523*2^64 + 2680907472098199856*2^128 + 7617980198*2^192,13357131948340231504 + 14533796956513995379*2^64 + 11955962483629353141*2^128 + 1879627838*2^192,17798074811980023232 + 800821285654016273*2^64 + 8677724128924429054*2^128 + 832723255*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 3555 lists. */
