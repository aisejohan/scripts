/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 218
[4, 0, 2, 0, 0]  	58	4 
[9, 0, 0, 0, 0]  	63	5  <--- 1
[8, 1, 0, 0, 0]  	68	5 
[3, 2, 2, 0, 0]  	75	4 
[2, 1, 1, 2, 0]  	75	5 
[3, 0, 0, 4, 0]  	89	6 
[7, 1, 0, 2, 0]  	95	8 
[2, 0, 0, 5, 0]  	99	6 
[6, 5, 0, 0, 0]  	102	8 
[2, 5, 2, 0, 0]  	104	7 
[3, 6, 1, 0, 0]  	108	9 
[3, 3, 0, 3, 0]  	108	9 
[1, 6, 2, 0, 0]  	109	7 
[5, 2, 0, 3, 0]  	110	9 
[4, 4, 0, 2, 0]  	110	9 
[3, 0, 6, 0, 0]  	111	7 
[6, 3, 0, 2, 0]  	112	8 
[2, 7, 1, 0, 0]  	113	8 
[3, 5, 0, 2, 0]  	115	9 
[2, 1, 6, 0, 0]  	116	6 
[2, 1, 5, 1, 0]  	118	7 
[5, 7, 0, 0, 0]  	119	8 
[2, 0, 5, 2, 0]  	123	7 
[1, 4, 0, 4, 0]  	123	6 
[5, 6, 0, 1, 0]  	124	8 
[4, 8, 0, 0, 0]  	124	7 
[2, 5, 0, 3, 0]  	125	7 
[2, 3, 5, 0, 0]  	125	7 
[1, 1, 6, 1, 0]  	126	7 
[2, 8, 0, 1, 0]  	127	7 
[2, 0, 3, 4, 0]  	127	7 
[4, 7, 0, 1, 0]  	129	8 
[3, 9, 0, 0, 0]  	129	7 
[3, 0, 4, 3, 0]  	132	8 
[2, 7, 0, 2, 0]  	132	7 
[1, 3, 6, 0, 0]  	133	6 
[2, 10, 0, 0, 0]  	134	6 
[1, 4, 3, 2, 0]  	134	6 
[1, 3, 5, 1, 0]  	135	6 
[1, 0, 4, 4, 0]  	135	6 
[1, 2, 7, 0, 0]  	136	6 
[1, 8, 0, 2, 0]  	137	5 
[1, 3, 4, 2, 0]  	137	5 
[1, 0, 3, 5, 0]  	137	5 
[1, 11, 0, 0, 0]  	139	5 
[1, 3, 3, 3, 0]  	139	5 
[1, 1, 8, 0, 0]  	139	5 
[1, 2, 5, 2, 0]  	140	5 
[1, 3, 2, 4, 0]  	141	6 
[1, 10, 1, 0, 0]  	142	7 
[1, 5, 5, 0, 0]  	142	6 
[1, 0, 0, 8, 0]  	143	6 
[1, 10, 0, 1, 0]  	144	5 
[1, 5, 4, 1, 0]  	144	5 
[1, 2, 3, 4, 0]  	144	5 
[0, 12, 0, 0, 0]  	144	4  <--- 2
[1, 1, 5, 3, 0]  	145	5 
[1, 2, 2, 5, 0]  	146	4 
[0, 7, 3, 1, 0]  	146	4 
[0, 11, 1, 0, 0]  	147	5 
[0, 8, 0, 3, 0]  	147	5 
[1, 2, 1, 6, 0]  	148	4 
[0, 7, 2, 2, 0]  	148	4 
[2, 0, 9, 0, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	5 
[0, 10, 2, 0, 0]  	150	6 
[1, 1, 2, 6, 0]  	151	4 
[0, 3, 2, 5, 0]  	151	3 
[0, 7, 0, 4, 0]  	152	4 
[1, 1, 1, 7, 0]  	153	5 
[0, 9, 3, 0, 0]  	153	4 
[0, 4, 7, 0, 0]  	153	4 
[0, 10, 0, 2, 0]  	154	4 
[0, 9, 2, 1, 0]  	155	4 
[0, 6, 1, 4, 0]  	155	4 
[1, 0, 2, 7, 0]  	156	4 
[0, 8, 4, 0, 0]  	156	3 
[0, 3, 8, 0, 0]  	156	3 
[1, 0, 10, 0, 0]  	157	4 
[0, 9, 1, 2, 0]  	157	4 
[0, 5, 2, 4, 0]  	158	3 
[0, 3, 7, 1, 0]  	158	3 
[1, 0, 9, 1, 0]  	159	4 
[0, 7, 5, 0, 0]  	159	4 
[0, 5, 1, 5, 0]  	160	3 
[0, 3, 6, 2, 0]  	160	3 
[1, 0, 8, 2, 0]  	161	2 
[0, 4, 3, 4, 0]  	161	2 
[0, 2, 8, 1, 0]  	161	2 
[0, 6, 6, 0, 0]  	162	4 
[0, 5, 0, 6, 0]  	162	4 
[0, 3, 4, 4, 0]  	164	3 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	3 
[0, 1, 6, 4, 0]  	170	2 
[0, 2, 3, 6, 0]  	171	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 2, 2, 7, 0]  	173	1 
[0, 0, 7, 4, 0]  	173	1 
[0, 2, 1, 8, 0]  	175	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 1, 11, 0, 0]  	177	2 
[0, 1, 2, 8, 0]  	178	1 
[0, 1, 10, 1, 0]  	179	2 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[4, 0, 1, 1, 1]  	60	5 
[2, 3, 1, 1, 1]  	82	6 
[6, 3, 1, 0, 1]  	93	8 
[5, 4, 1, 0, 1]  	98	8 
[2, 2, 0, 4, 1]  	106	7 
[3, 0, 5, 1, 1]  	113	8 
[1, 5, 1, 2, 1]  	116	6 
[4, 6, 0, 1, 1]  	117	9 
[2, 0, 6, 1, 1]  	121	7 
[3, 7, 0, 1, 1]  	122	8 
[1, 3, 1, 4, 1]  	126	7 
[1, 2, 1, 5, 1]  	131	6 
[1, 4, 4, 1, 1]  	132	7 
[2, 0, 8, 0, 1]  	134	6 
[1, 4, 2, 3, 1]  	136	6 
[0, 8, 3, 0, 1]  	141	5 
[1, 0, 8, 1, 1]  	144	5 
[0, 7, 4, 0, 1]  	144	4 
[1, 0, 7, 2, 1]  	146	4 
[1, 0, 6, 3, 1]  	148	4 
[0, 6, 4, 1, 1]  	149	4 
[0, 10, 1, 1, 1]  	152	4 
[0, 6, 2, 3, 1]  	153	4 
[0, 5, 4, 2, 1]  	154	3 
[0, 5, 3, 3, 1]  	156	3 
[0, 2, 7, 2, 1]  	163	2 
[0, 1, 8, 2, 1]  	166	2 
[0, 5, 6, 1, 1]  	167	4 
[0, 4, 0, 7, 1]  	167	3 
[0, 1, 7, 3, 1]  	168	2 
[0, 2, 0, 9, 1]  	177	2 
[3, 5, 1, 0, 2]  	96	8 
[7, 0, 0, 3, 2]  	100	8 
[1, 5, 2, 1, 2]  	114	7 
[1, 6, 0, 3, 2]  	130	6 
[1, 9, 0, 1, 2]  	132	7 
[1, 8, 1, 1, 2]  	135	6 
[1, 1, 0, 7, 2]  	138	6 
[1, 0, 1, 7, 2]  	141	6 
[0, 1, 0, 9, 2]  	165	2 
[0, 3, 1, 7, 2]  	170	2 
[0, 2, 5, 5, 2]  	184	2 
[1, 9, 1, 0, 3]  	130	6 
[0, 8, 2, 1, 3]  	143	5 
[0, 6, 3, 2, 3]  	151	3 
[0, 2, 1, 7, 3]  	158	2 
[2, 6, 0, 2, 4]  	120	8 
[1, 3, 0, 6, 4]  	145	5 
[0, 4, 4, 3, 4]  	159	3 
[1, 6, 1, 1, 5]  	111	7 
[1, 3, 0, 5, 5]  	128	6 
[0, 7, 1, 3, 5]  	150	5 
[1, 2, 4, 3, 9]  	142	5 
[1, 0, 9, 0, 246]  	142	4 
[1, 1, 5, 1, 251]  	111	5 
[0, 5, 1, 4, 252]  	143	4 
[0, 8, 1, 2, 252]  	145	4 
[0, 5, 6, 0, 252]  	150	4 
[0, 2, 9, 0, 252]  	159	2 
[1, 8, 0, 1, 253]  	120	7 
[1, 4, 5, 0, 253]  	130	3 
[0, 0, 6, 4, 253]  	158	1 
[3, 2, 0, 3, 254]  	96	7 
[6, 2, 0, 2, 254]  	100	7 
[5, 6, 0, 0, 254]  	107	6 
[3, 8, 0, 0, 254]  	117	4 
[1, 3, 5, 0, 254]  	118	4 
[1, 0, 3, 4, 254]  	120	4 
[2, 9, 0, 0, 254]  	122	2 
[0, 9, 2, 0, 254]  	138	5 
[0, 5, 2, 3, 254]  	141	4 
[0, 2, 8, 0, 254]  	144	1 
[0, 0, 10, 0, 254]  	150	1 
[0, 1, 7, 2, 254]  	151	2 
[0, 0, 1, 8, 254]  	151	1 
[0, 0, 0, 10, 254]  	170	1 
[2, 1, 0, 2, 255]  	60	3 
[2, 0, 0, 4, 255]  	82	3 
[3, 6, 0, 0, 255]  	93	4 
[1, 1, 5, 0, 255]  	94	2 
[2, 7, 0, 0, 255]  	98	2 
[2, 0, 5, 1, 255]  	106	4 
[1, 2, 1, 4, 255]  	114	6 
[0, 7, 2, 0, 255]  	114	2 
[3, 0, 4, 2, 255]  	115	2 
[0, 4, 0, 4, 255]  	116	1 
[1, 3, 3, 2, 255]  	122	2 
[1, 10, 0, 0, 255]  	127	1 
[1, 5, 4, 0, 255]  	127	3 
[1, 0, 7, 1, 255]  	129	4 
[1, 1, 4, 3, 255]  	130	4 
[0, 8, 0, 2, 255]  	130	2 
[0, 11, 0, 0, 255]  	132	3 
[0, 3, 2, 4, 255]  	134	1 
[0, 10, 1, 0, 255]  	135	2 
[0, 0, 9, 0, 255]  	135	1 
[1, 1, 1, 6, 255]  	136	2 
[0, 1, 6, 2, 255]  	136	2 
[1, 0, 2, 6, 255]  	139	3 
[0, 3, 7, 0, 255]  	141	2 
[0, 6, 5, 0, 255]  	147	3 
[0, 0, 8, 2, 255]  	154	1 
[0, 2, 2, 6, 255]  	156	1 
[0, 0, 5, 6, 255]  	177	1 
------
The gap is between 10 and 245.
Lengths: 2 2 6 6 2 3.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[12398668913294951634 + 6814316957415182984*2^64 + 8437367126358594719*2^128 + 6084228576*2^192,13486553706475017884 + 7502307988521108157*2^64 + 6127113013860391170*2^128 + 4378336938*2^192,4830570444535630816 + 14383811213466582439*2^64 + 12269253262562000367*2^128 + 2727101505*2^192,980584037802424082 + 12115051367624928427*2^64 + 933143401894619426*2^128 + 1570292927*2^192,16110237650266136290 + 444280031952543211*2^64 + 8152309304790202215*2^128 + 863095949*2^192,14722289931689034764 + 9422982954628024279*2^64 + 6580655520775824095*2^128 + 7638254821*2^192,2565335958969154582 + 4440160703193408134*2^64 + 13388966967802781599*2^128 + 3572345428*2^192,15516633862621356986 + 10076080332625880905*2^64 + 12566012146820911919*2^128 + 3036488515*2^192,7982026084605106820 + 5779915274681617703*2^64 + 87776255550302455*2^128 + 3370978786*2^192,458253640616291744 + 4010914467027500059*2^64 + 6644060254249861947*2^128 + 935614910*2^192;\
1815914057303585272 + 15087424973952958706*2^64 + 13266272345004589790*2^128 + 2521861912*2^192,6508477499871402216 + 1156412194741966204*2^64 + 1430788680875215199*2^128 + 7148048290*2^192,8807272633867859392 + 7444553195474403769*2^64 + 7932732306287104828*2^128 + 2935315895*2^192,16241808353935264680 + 2493472877989010838*2^64 + 2253514839328593887*2^128 + 5582790606*2^192,9989257457588287880 + 5688010917898077051*2^64 + 323543603361052729*2^128 + 5345086559*2^192,14809585970181626000 + 281139347938142046*2^64 + 6057537297625312910*2^128 + 4308776478*2^192,6101521344214338168 + 14224929113476359608*2^64 + 17878622097929371523*2^128 + 5080573068*2^192,10406874093713635048 + 14092671924108126747*2^64 + 9294563980398913881*2^128 + 5201442990*2^192,10192634020454470960 + 1262511214672164844*2^64 + 8525399235443075297*2^128 + 4005494009*2^192,14473680147228975840 + 16637835582948080524*2^64 + 1304132600592543896*2^128 + 5632081367*2^192;\
3850981398170925882 + 14131541391864262246*2^64 + 7440473418395746901*2^128 + 5359534700*2^192,17460557489832235740 + 8989038097795054537*2^64 + 13394199596356980953*2^128 + 4576158666*2^192,9583260325925762944 + 13414357197105301724*2^64 + 1257981456562219088*2^128 + 5622323833*2^192,2870370541159511722 + 10675625079733748295*2^64 + 3118166800559976868*2^128 + 3595981287*2^192,4305662628958514170 + 1402615854421472950*2^64 + 10910024261973389341*2^128 + 7039843700*2^192,10333939160118216956 + 1798992488716618670*2^64 + 2476892998759560940*2^128 + 1054416028*2^192,14417280984006515294 + 16046821719187414622*2^64 + 3760362835755283184*2^128 + 6885523408*2^192,13071252076661182290 + 4700097823860598818*2^64 + 16660729702437321997*2^128 + 7028716471*2^192,4288729185713814580 + 8460891200792495657*2^64 + 7868512846251359663*2^128 + 4491167669*2^192,12561316328877074112 + 16640191574639334890*2^64 + 8928885794107213147*2^128 + 2249919595*2^192;\
13694323668876483389 + 6546531962649409367*2^64 + 11245139176277272245*2^128 + 6007055284*2^192,13924470966962703038 + 12572415382550872982*2^64 + 17896164249487317649*2^128 + 7945352377*2^192,15957675966557750848 + 7549718802564564244*2^64 + 16227955097137099717*2^128 + 2878888717*2^192,11689172512021777933 + 752224727349447196*2^64 + 7575610568895071644*2^128 + 1275099840*2^192,11672072270440536421 + 13589688696302036566*2^64 + 16388585516577440333*2^128 + 6728279510*2^192,1499581850160509934 + 1532749055246471997*2^64 + 4418354803436462284*2^128 + 1139045847*2^192,7280140539120934903 + 11768609579854414882*2^64 + 15458153447136898916*2^128 + 2581446204*2^192,11712957498255118593 + 17477105254517276676*2^64 + 13735345431331599086*2^128 + 3854931673*2^192,9469398798395882394 + 13675604969490729061*2^64 + 5320659453283814397*2^128 + 6861510577*2^192,6582473017552165040 + 5942714576058684960*2^64 + 17589089430279997720*2^128 + 1738775191*2^192;\
12775805369023302900 + 14670500801845162413*2^64 + 5826114199133053880*2^128 + 2574249222*2^192,7159417768300930984 + 15261693127548612619*2^64 + 3086652044617930136*2^128 + 2801420071*2^192,11027865436110280336 + 15021250154747629285*2^64 + 12415997271727155286*2^128 + 6222860015*2^192,17016719945442568604 + 18294172587996509085*2^64 + 7674676808993202131*2^128 + 5816024106*2^192,2019417833369537996 + 16890299480912936301*2^64 + 9340513739655526448*2^128 + 4638573433*2^192,14777072264738778664 + 10236972753807476007*2^64 + 9798946364481577436*2^128 + 5146248907*2^192,10218424067029390468 + 10743007639608342484*2^64 + 15084974966106636064*2^128 + 2181474283*2^192,1507458154466486396 + 1493816772877802029*2^64 + 11627233879249429069*2^128 + 1440491106*2^192,7173463327847504408 + 14748482312892695245*2^64 + 9516065088862570072*2^128 + 2071453465*2^192,17903214015483801248 + 1059908616600530825*2^64 + 14411332928022340234*2^128 + 266670618*2^192;\
6269430809528251633 + 1027183427301472512*2^64 + 17676068854428916242*2^128 + 7563423342*2^192,14080054379802136126 + 7331603704514233554*2^64 + 1772459655033784016*2^128 + 3129853722*2^192,4662318136658878112 + 13502173179999271588*2^64 + 850492848212309512*2^128 + 5670942022*2^192,6826374562449470641 + 15000785790949805158*2^64 + 9043289711330032003*2^128 + 8126126411*2^192,13057810132590628633 + 5212138418542054073*2^64 + 10939602395790668886*2^128 + 8046020903*2^192,11070099446777065174 + 9488147935862281999*2^64 + 2908981052751167440*2^128 + 3685335637*2^192,7076194626395659267 + 14606914499173248833*2^64 + 13181124967478349632*2^128 + 8517960069*2^192,9892288333254505189 + 11987554081906582337*2^64 + 16987954515657367647*2^128 + 5569096083*2^192,17373992016180350882 + 13831151867143880964*2^64 + 8468459068254233983*2^128 + 6735576528*2^192,3156858734928352528 + 3989967912660769658*2^64 + 4553832665574042910*2^128 + 4073503242*2^192;\
376589460059026814 + 14523894617005622300*2^64 + 11952812483692552596*2^128 + 3375498320*2^192,685645168923123020 + 207949222891003853*2^64 + 233550580032570198*2^128 + 4663314726*2^192,7073459203992239760 + 14045746894393906619*2^64 + 17879539899872703232*2^128 + 5053178895*2^192,9231954585196893902 + 18123772907822919391*2^64 + 16907221562115899453*2^128 + 4748296628*2^192,16603126076523902382 + 2588023034529223561*2^64 + 12157810205119415805*2^128 + 7444165042*2^192,16984314089390031684 + 6047794395103648238*2^64 + 2185541195012306740*2^128 + 7615798721*2^192,7849521088680291562 + 4017666009223315674*2^64 + 16280087575605054268*2^128 + 8447864682*2^192,12497634884519241046 + 5724812036842296277*2^64 + 855916571263623247*2^128 + 4804071343*2^192,4346384535954512924 + 10737692453174570046*2^64 + 16475724537129842401*2^128 + 3652627493*2^192,16567599203911343776 + 9233703940790089925*2^64 + 6493608352722376647*2^128 + 3977558842*2^192;\
9380560318322898553 + 12303567393355886703*2^64 + 3307519936032462935*2^128 + 4423326558*2^192,7200380631801747774 + 9751618882249491392*2^64 + 5421228920911561225*2^128 + 6776909148*2^192,16005026414128898000 + 1103070837789480278*2^64 + 7248219584873749203*2^128 + 3763883793*2^192,1391992737758908753 + 18344940823776858956*2^64 + 13755047781872156856*2^128 + 2105408850*2^192,966725461604523193 + 12510404152626202644*2^64 + 3508914255306884075*2^128 + 6729269210*2^192,15133054443975778614 + 14933420117087995205*2^64 + 13677743595971728022*2^128 + 1821613490*2^192,7358227737794844387 + 10251011490392024553*2^64 + 8484394845444991*2^128 + 1025733331*2^192,15600433633729024341 + 15600576035269686275*2^64 + 4641585163965138040*2^128 + 6086918836*2^192,5593602099939275074 + 462573521275488195*2^64 + 16771966807824996658*2^128 + 6313632501*2^192,7396493260423509744 + 3784486152756710089*2^64 + 13250143268090360778*2^128 + 7353898540*2^192;\
17922692658601031312 + 8148499822318035538*2^64 + 11100488972688876914*2^128 + 3407913550*2^192,17009150447591345360 + 5940012141113181331*2^64 + 16613713290769723342*2^128 + 6241294552*2^192,5625028155430859360 + 12677749967786345231*2^64 + 8370642607758268612*2^128 + 3117630984*2^192,5534003152301616832 + 4052658183437090376*2^64 + 3047120909054186364*2^128 + 7962632622*2^192,12898046176591816960 + 14800388570576434526*2^64 + 8267982098037703215*2^128 + 2878538806*2^192,3489129622228924928 + 7794284697717991716*2^64 + 4444541934590690791*2^128 + 6586932662*2^192,16237622663985497824 + 4859887098361733068*2^64 + 4088023815180631655*2^128 + 375298280*2^192,7872162652597469856 + 17777546447969414071*2^64 + 1402392124288326422*2^128 + 7267445353*2^192,7118939070391793888 + 817179927269977891*2^64 + 11792363251159684400*2^128 + 3097487767*2^192,7974700380904073472 + 17364986506919283326*2^64 + 350746385955400751*2^128 + 2070581908*2^192;\
656135349524896361 + 1385824310608964251*2^64 + 8880066934564988199*2^128 + 6918909043*2^192,10473597399226938862 + 14424490940973376416*2^64 + 2445006599090172288*2^128 + 1260331723*2^192,16648200689078801488 + 8474125599991832690*2^64 + 15141699980722866758*2^128 + 2759821421*2^192,2978279389882919745 + 3915693948363900219*2^64 + 12933388274674480410*2^128 + 1662945466*2^192,4726990236953492121 + 10690313354925773412*2^64 + 9141177779803702110*2^128 + 1398666948*2^192,6618233342245591910 + 1872361076789752404*2^64 + 16837245423167086941*2^128 + 2433547112*2^192,5682249637980615939 + 18353823584387559316*2^64 + 8522776299189845976*2^128 + 7186697218*2^192,6762514110824639317 + 8825722455714707102*2^64 + 1390508334149947794*2^128 + 8230907750*2^192,783456893422745378 + 17904385546774109823*2^64 + 16662649957470594357*2^128 + 7631445726*2^192,10333690185466505456 + 4994146904688131179*2^64 + 9680922010063814412*2^128 + 1377617668*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4269 lists. */
The sign is: 1
The characteristic polynomial is: x^10 + x^9 + 24*x^5 + 256*x + 1024
Its Newton polygon is: [2, 5/4, 5/4, 5/4, 5/4, 3/4, 3/4, 3/4, 3/4, 0]
Its factorization is: Mat([x^10 + x^9 + 24*x^5 + 256*x + 1024, 1])
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 28
