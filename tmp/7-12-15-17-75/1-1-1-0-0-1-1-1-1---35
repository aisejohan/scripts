/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 217
[4, 0, 2, 0, 0]  	58	3 
[9, 0, 0, 0, 0]  	63	4  <--- 1
[8, 1, 0, 0, 0]  	68	4 
[3, 2, 2, 0, 0]  	75	5 
[2, 0, 0, 4, 0]  	82	4 
[1, 5, 1, 0, 0]  	82	4 
[5, 5, 0, 0, 0]  	95	7 
[5, 2, 1, 2, 0]  	108	6 
[5, 2, 0, 3, 0]  	110	7 
[4, 4, 0, 2, 0]  	110	7 
[3, 0, 6, 0, 0]  	111	6 
[4, 3, 1, 2, 0]  	113	8 
[4, 3, 0, 3, 0]  	115	7 
[4, 6, 0, 1, 0]  	117	10 
[1, 5, 0, 3, 0]  	118	4 
[7, 3, 0, 2, 0]  	119	5 
[3, 7, 0, 1, 0]  	122	9 
[4, 8, 0, 0, 0]  	124	7 
[2, 4, 2, 2, 0]  	126	7 
[3, 6, 0, 2, 0]  	127	9 
[2, 2, 6, 0, 0]  	128	6 
[2, 3, 2, 3, 0]  	131	7 
[2, 1, 7, 0, 0]  	131	6 
[2, 7, 0, 2, 0]  	132	8 
[2, 1, 6, 1, 0]  	133	6 
[2, 10, 0, 0, 0]  	134	6 
[2, 0, 8, 0, 0]  	134	6 
[0, 10, 1, 0, 0]  	135	5 
[2, 4, 5, 0, 0]  	137	6 
[1, 8, 0, 2, 0]  	137	6 
[2, 0, 6, 2, 0]  	138	7 
[1, 4, 1, 4, 0]  	138	7 
[2, 9, 0, 1, 0]  	139	6 
[2, 4, 4, 1, 0]  	139	6 
[1, 11, 0, 0, 0]  	139	6 
[1, 4, 0, 5, 0]  	140	6 
[1, 3, 2, 4, 0]  	141	5 
[0, 8, 3, 0, 0]  	141	5 
[3, 1, 5, 2, 0]  	142	5 
[1, 1, 6, 2, 0]  	143	5 
[1, 0, 0, 8, 0]  	143	6 
[3, 1, 4, 3, 0]  	144	4 
[2, 3, 4, 2, 0]  	144	4 
[1, 10, 0, 1, 0]  	144	5 
[1, 2, 3, 4, 0]  	144	4 
[0, 12, 0, 0, 0]  	144	4  <--- 2
[0, 7, 4, 0, 0]  	144	4 
[1, 2, 2, 5, 0]  	146	4 
[0, 7, 3, 1, 0]  	146	4 
[1, 1, 4, 4, 0]  	147	6 
[1, 3, 7, 0, 0]  	148	4 
[1, 2, 1, 6, 0]  	148	4 
[0, 7, 2, 2, 0]  	148	4 
[1, 4, 4, 2, 0]  	149	4 
[1, 1, 3, 5, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	4 
[0, 6, 4, 1, 0]  	149	4 
[1, 0, 5, 4, 0]  	150	6 
[1, 1, 2, 6, 0]  	151	4 
[0, 6, 3, 2, 0]  	151	3 
[1, 3, 5, 2, 0]  	152	5 
[1, 0, 4, 5, 0]  	152	5 
[1, 1, 1, 7, 0]  	153	5 
[0, 6, 2, 3, 0]  	153	4 
[1, 3, 4, 3, 0]  	154	5 
[0, 10, 0, 2, 0]  	154	3 
[0, 9, 2, 1, 0]  	155	4 
[0, 6, 1, 4, 0]  	155	4 
[1, 0, 2, 7, 0]  	156	3 
[0, 5, 3, 3, 0]  	156	3 
[0, 3, 8, 0, 0]  	156	3 
[0, 9, 1, 2, 0]  	157	4 
[0, 5, 2, 4, 0]  	158	2 
[0, 3, 7, 1, 0]  	158	2 
[0, 9, 0, 3, 0]  	159	3 
[0, 4, 4, 3, 0]  	159	3 
[0, 5, 1, 5, 0]  	160	3 
[0, 3, 6, 2, 0]  	160	3 
[1, 0, 8, 2, 0]  	161	2 
[0, 4, 3, 4, 0]  	161	2 
[0, 8, 1, 3, 0]  	162	4 
[0, 6, 6, 0, 0]  	162	4 
[0, 5, 0, 6, 0]  	162	4 
[0, 4, 2, 5, 0]  	163	2 
[0, 2, 7, 2, 0]  	163	2 
[0, 8, 0, 4, 0]  	164	3 
[0, 5, 7, 0, 0]  	165	2 
[0, 4, 1, 6, 0]  	165	3 
[0, 2, 6, 3, 0]  	165	3 
[0, 1, 8, 2, 0]  	166	2 
[0, 5, 6, 1, 0]  	167	3 
[0, 4, 0, 7, 0]  	167	3 
[0, 1, 7, 3, 0]  	168	2 
[1, 0, 11, 0, 0]  	172	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 2, 2, 7, 0]  	173	1 
[0, 0, 7, 4, 0]  	173	1 
[0, 2, 1, 8, 0]  	175	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 1, 11, 0, 0]  	177	2 
[0, 1, 2, 8, 0]  	178	1 
[0, 3, 5, 4, 0]  	179	2 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[4, 0, 1, 1, 1]  	60	4 
[1, 0, 0, 4, 1]  	75	4 
[7, 3, 1, 0, 1]  	100	7 
[3, 2, 1, 3, 1]  	111	6 
[3, 0, 5, 1, 1]  	113	8 
[3, 1, 2, 3, 1]  	114	6 
[2, 3, 1, 3, 1]  	116	6 
[2, 3, 5, 0, 1]  	125	7 
[2, 2, 4, 2, 1]  	132	8 
[1, 9, 0, 1, 1]  	132	7 
[2, 2, 3, 3, 1]  	134	6 
[1, 4, 2, 3, 1]  	136	7 
[2, 1, 4, 3, 1]  	137	6 
[2, 0, 5, 3, 1]  	140	6 
[1, 1, 7, 1, 1]  	141	5 
[1, 2, 4, 3, 1]  	142	5 
[0, 8, 2, 1, 1]  	143	5 
[1, 0, 8, 1, 1]  	144	4 
[1, 4, 6, 0, 1]  	145	5 
[1, 1, 5, 3, 1]  	145	5 
[0, 8, 0, 3, 1]  	147	5 
[1, 0, 6, 3, 1]  	148	4 
[0, 7, 1, 3, 1]  	150	5 
[1, 2, 8, 0, 1]  	151	4 
[0, 3, 2, 5, 1]  	151	3 
[0, 7, 0, 4, 1]  	152	4 
[0, 4, 7, 0, 1]  	153	4 
[1, 1, 9, 0, 1]  	154	4 
[0, 5, 4, 2, 1]  	154	3 
[1, 0, 10, 0, 1]  	157	4 
[0, 2, 1, 7, 1]  	158	2 
[0, 2, 8, 1, 1]  	161	2 
[0, 3, 4, 4, 1]  	164	3 
[0, 2, 0, 9, 1]  	177	2 
[0, 1, 10, 1, 1]  	179	2 
[6, 0, 0, 3, 2]  	93	5 
[5, 1, 0, 3, 2]  	98	5 
[3, 3, 0, 3, 2]  	108	9 
[3, 1, 4, 2, 2]  	127	8 
[2, 8, 0, 1, 2]  	127	7 
[3, 0, 4, 3, 2]  	132	8 
[1, 3, 4, 2, 2]  	137	5 
[1, 3, 3, 3, 2]  	139	6 
[1, 0, 7, 2, 2]  	146	4 
[1, 4, 5, 1, 2]  	147	6 
[0, 2, 5, 5, 2]  	184	2 
[2, 6, 0, 2, 3]  	120	8 
[2, 3, 3, 2, 3]  	129	7 
[2, 2, 5, 1, 3]  	130	6 
[2, 0, 7, 1, 3]  	136	7 
[1, 3, 6, 1, 3]  	150	5 
[0, 1, 6, 4, 3]  	170	2 
[0, 2, 3, 6, 3]  	171	2 
[3, 5, 0, 2, 4]  	115	9 
[2, 0, 5, 2, 4]  	123	7 
[1, 2, 6, 1, 4]  	138	6 
[1, 2, 5, 2, 4]  	140	5 
[0, 1, 0, 9, 4]  	165	2 
[0, 9, 1, 0, 252]  	123	3 
[0, 7, 3, 0, 252]  	129	3 
[0, 0, 11, 0, 252]  	165	1 
[0, 0, 0, 10, 252]  	170	1 
[0, 0, 8, 3, 252]  	171	1 
[3, 0, 4, 2, 253]  	115	8 
[1, 8, 0, 1, 253]  	120	6 
[0, 10, 0, 0, 253]  	120	3 
[0, 7, 0, 3, 253]  	135	4 
[0, 6, 5, 0, 253]  	147	2 
[0, 4, 0, 6, 253]  	150	3 
[5, 2, 0, 2, 254]  	93	4 
[4, 3, 0, 2, 254]  	98	3 
[2, 7, 0, 1, 254]  	115	5 
[2, 3, 4, 1, 254]  	127	6 
[0, 6, 4, 0, 254]  	132	4 
[0, 5, 5, 0, 254]  	135	3 
[1, 2, 7, 0, 254]  	136	5 
[0, 6, 2, 2, 254]  	136	4 
[0, 5, 3, 2, 254]  	139	3 
[0, 5, 1, 4, 254]  	143	3 
[0, 4, 2, 4, 254]  	146	2 
[0, 1, 7, 2, 254]  	151	2 
[0, 0, 8, 2, 254]  	154	1 
[0, 0, 2, 8, 254]  	166	1 
[0, 0, 1, 9, 254]  	168	1 
[0, 5, 0, 0, 255]  	60	2 
[3, 1, 5, 0, 255]  	108	5 
[2, 3, 2, 2, 255]  	114	5 
[2, 1, 6, 0, 255]  	116	1 
[2, 4, 4, 0, 255]  	122	1 
[1, 2, 5, 1, 255]  	123	5 
[1, 0, 7, 1, 255]  	129	4 
[1, 4, 5, 0, 255]  	130	4 
[1, 1, 4, 3, 255]  	130	2 
[0, 3, 4, 2, 255]  	130	1 
[0, 3, 2, 4, 255]  	134	1 
[0, 1, 6, 2, 255]  	136	1 
[1, 1, 8, 0, 255]  	139	4 
[0, 3, 7, 0, 255]  	141	1 
[0, 1, 2, 6, 255]  	144	1 
[0, 0, 3, 6, 255]  	147	1 
[0, 0, 1, 8, 255]  	151	1 
[0, 3, 1, 6, 255]  	153	3 
[0, 2, 3, 5, 255]  	154	2 
[0, 0, 6, 4, 255]  	158	1 
[0, 1, 9, 1, 255]  	164	2 
------
The gap is between 5 and 251.
Lengths: 2 2 6 7 2 3.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^3*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[14378158778148717224 + 1571157326759617721*2^64 + 10832430223496490134*2^128 + 1183174007*2^192,8089053367409497412 + 13451478725350872226*2^64 + 4847815527861937999*2^128 + 1421223289*2^192,10456381526652741392 + 14810700522475367834*2^64 + 13529054569769974676*2^128 + 1439501871*2^192,861115240397897488 + 5491793138542736717*2^64 + 15535223183116827480*2^128 + 397729715*2^192,13561465516244341520 + 4127548835090450684*2^64 + 5715593844942263162*2^128 + 832544054*2^192,13580124099880869880 + 7586238206006700737*2^64 + 3265985151500789719*2^128 + 1595033157*2^192,17888671380141698280 + 6354204720589208157*2^64 + 6590298922716514048*2^128 + 861384550*2^192,364279018917100024 + 3326249481060084821*2^64 + 1752610165173919217*2^128 + 2104250466*2^192,84201264516784864 + 16648842017792556640*2^64 + 3517813538973970578*2^128 + 1299040916*2^192,13374079463819297152 + 7014655322275913502*2^64 + 8128559865696344531*2^128 + 1921395971*2^192;\
7073437542594635126 + 18383376072827617604*2^64 + 13490064662295776710*2^128 + 150996639*2^192,13441639375572219344 + 11681032385647192780*2^64 + 5913400851042099266*2^128 + 330606798*2^192,16009315897062633484 + 8988460747631133153*2^64 + 17141021016471301619*2^128 + 477509513*2^192,9465350287218666640 + 11161534249404627949*2^64 + 14388709302394793914*2^128 + 1372707406*2^192,15535603196948955832 + 13197989577181964077*2^64 + 3715860542029512894*2^128 + 1672905313*2^192,2761175053555367140 + 9702131615820101832*2^64 + 7881866667895744761*2^128 + 2139511944*2^192,12423884470838830832 + 6748330997163325549*2^64 + 5607268790418170715*2^128 + 952800589*2^192,17968159142554979644 + 15014474129749697862*2^64 + 17181706670602134755*2^128 + 492362767*2^192,1567779283794112608 + 13718127359942379234*2^64 + 7575028354906855865*2^128 + 1387281354*2^192,8507632326832788112 + 14998239588977013526*2^64 + 3757053117823277649*2^128 + 1537982388*2^192;\
13636901074652898780 + 220534612484599805*2^64 + 11627166573295065461*2^128 + 1143104457*2^192,10397061495192040248 + 14990457833147398246*2^64 + 5676887258860623247*2^128 + 446358079*2^192,8600424514972918256 + 17632174092545851521*2^64 + 10874389342173101517*2^128 + 1046514304*2^192,11680843218663188944 + 2218432703639786316*2^64 + 2301305033087893051*2^128 + 185074788*2^192,3779753646202961400 + 17021227868030920140*2^64 + 1940232802794779262*2^128 + 1437896285*2^192,14271935547323200560 + 4944815704945938049*2^64 + 1990674448054269391*2^128 + 1961376262*2^192,10591468731070183600 + 5808662786646745372*2^64 + 1667445735226980201*2^128 + 282952968*2^192,74408884030006800 + 12395052394531429622*2^64 + 6633643254757536575*2^128 + 702683128*2^192,12043383960789966360 + 9991096142834204013*2^64 + 10239546252473837863*2^128 + 226224541*2^192,12454018792871713504 + 6268464401562583928*2^64 + 2188067596844147444*2^128 + 516694160*2^192;\
3529157024894801172 + 15505802649281372067*2^64 + 12727060740185012225*2^128 + 1265143941*2^192,3206827430234980656 + 1053520156692297924*2^64 + 2769122235550340993*2^128 + 484166815*2^192,82397335250990188 + 14774129369264631107*2^64 + 4142806852414013635*2^128 + 834280534*2^192,13972936404024141472 + 18327014779896420921*2^64 + 16629418147720472400*2^128 + 988657353*2^192,480639397930437968 + 15016501920716470796*2^64 + 7688145582057326167*2^128 + 938704000*2^192,683528527748684512 + 241818285799064655*2^64 + 10157018274023820796*2^128 + 1957245521*2^192,4665100430585148944 + 18087146929418449559*2^64 + 15753697111684502416*2^128 + 1534611035*2^192,17730191971083175840 + 3527783794005356402*2^64 + 1448115990736680863*2^128 + 703666965*2^192,5411405545657378000 + 448806221433608541*2^64 + 2917813028720433832*2^128 + 1043858084*2^192,3242974665246157760 + 18214074114421245169*2^64 + 12127001761407762357*2^128 + 330686191*2^192;\
9915985610628151122 + 3798954937655229319*2^64 + 14888315058261488136*2^128 + 2044023389*2^192,9807671374127217268 + 12611298392999986520*2^64 + 16828549163615126324*2^128 + 696077352*2^192,661914852937235628 + 13470834547339927913*2^64 + 10317539688420468992*2^128 + 433912246*2^192,5539314961496385940 + 6006870598763273995*2^64 + 16221293292022306148*2^128 + 1569106388*2^192,14620717487310116448 + 7848192815941926416*2^64 + 5875888169992492631*2^128 + 677859190*2^192,13599963574157704132 + 5775100798554959411*2^64 + 12580361301153707533*2^128 + 2144747257*2^192,8771121759532107628 + 311542152818519388*2^64 + 3918471617373479877*2^128 + 2022947603*2^192,1308012992662356668 + 7424037644486970832*2^64 + 5510915438700901181*2^128 + 832318876*2^192,969166619401023792 + 5292216107686093823*2^64 + 14214954439899357326*2^128 + 409531618*2^192,10545700478724767864 + 13202461130182354826*2^64 + 54298903873378856*2^128 + 1660186100*2^192;\
7383496213064502638 + 8355073486914569254*2^64 + 12841248938514971008*2^128 + 1693977608*2^192,3151144811416364807 + 1909936316355018549*2^64 + 13686578965110851549*2^128 + 1820016659*2^192,7412150440329322767 + 16591160885913731348*2^64 + 6177710222136462174*2^128 + 1501104263*2^192,10421574122952021984 + 15367387643673304014*2^64 + 2542467472331889201*2^128 + 10719865*2^192,11939380115248392546 + 11264456950794751604*2^64 + 8151680364930129373*2^128 + 298271811*2^192,8644689120823750603 + 315053433335983823*2^64 + 18305468503329630470*2^128 + 2128559712*2^192,17512628561137877184 + 5580159524726077048*2^64 + 6632451751575658508*2^128 + 1904348393*2^192,5491862477295530917 + 16830935409675994572*2^64 + 10963348882146717484*2^128 + 2034178603*2^192,7672798059138249484 + 4724812593396921822*2^64 + 11045391354166859909*2^128 + 227731872*2^192,13795754828497428516 + 7875226853095383397*2^64 + 7420848941528823680*2^128 + 713813413*2^192;\
7626250309539722734 + 10493712886963768627*2^64 + 13437912237882867347*2^128 + 1834274107*2^192,17990740379206873772 + 11147100275514813375*2^64 + 3905624765970746951*2^128 + 62377033*2^192,614621362745594082 + 16323461658006246065*2^64 + 8682373980034970682*2^128 + 83776702*2^192,1101056614393111708 + 13754421718580964070*2^64 + 3150755633707439967*2^128 + 201169499*2^192,13527182900493527960 + 5655485563100834242*2^64 + 3445126784381508170*2^128 + 1317970498*2^192,17178688809178001134 + 8082003557991202174*2^64 + 11738590665384136996*2^128 + 362169964*2^192,6183355061573100028 + 10120875806590138369*2^64 + 3129374861669420794*2^128 + 1609415018*2^192,7294206734996224786 + 7731097886420684657*2^64 + 17936252800323339260*2^128 + 699133690*2^192,9362462566841986352 + 13536201576436657055*2^64 + 9571752374759594128*2^128 + 1014075409*2^192,16477066383492848232 + 8951895748727952487*2^64 + 6801865520143105704*2^128 + 237723377*2^192;\
8103006825972553570 + 15474676804085016562*2^64 + 12141124434568838618*2^128 + 1606098829*2^192,1119493350590819731 + 5206468824408989475*2^64 + 17205098155065274513*2^128 + 1849871136*2^192,16679165531655109511 + 5534368998694441024*2^64 + 5651950617686228568*2^128 + 645565891*2^192,6159252970980211296 + 11133533748779835587*2^64 + 17017322901914047505*2^128 + 1333546567*2^192,14837485362395087770 + 10898511388375903918*2^64 + 3803188282504007201*2^128 + 280529576*2^192,7026386395450498951 + 13961872291500708785*2^64 + 18341140446359411732*2^128 + 1809631669*2^192,241290538293534884 + 3451074190987265277*2^64 + 13826047935865839075*2^128 + 1920336995*2^192,6426730688658533921 + 4163083767952913335*2^64 + 18247287083601611724*2^128 + 1574363431*2^192,18388637525543285436 + 2511004274305016040*2^64 + 2755368568725493*2^128 + 1584719557*2^192,12743510131783882612 + 5109478672994734718*2^64 + 6126069320308277447*2^128 + 1904713467*2^192;\
2780679959363976112 + 17079781932284524543*2^64 + 9521495375195877452*2^128 + 873572178*2^192,14010017976719954304 + 11709252241618424665*2^64 + 912513002165994319*2^128 + 592378352*2^192,3671768108203655652 + 4642953882300080856*2^64 + 5771171614138162972*2^128 + 491254740*2^192,7814012434970907608 + 14285329311983400163*2^64 + 11279921751653427657*2^128 + 1025825187*2^192,1381647938058056224 + 8033715823869412347*2^64 + 1277894884867559667*2^128 + 278712075*2^192,15315149125097813572 + 11994554023145285153*2^64 + 6415808334599889777*2^128 + 2062462230*2^192,4817461235517540928 + 2707673408709802368*2^64 + 3459974175566941393*2^128 + 1522357595*2^192,12612431931409921796 + 9838047690308629891*2^64 + 9213949105838714405*2^128 + 1707031803*2^192,2644752618800370816 + 3898224441722561664*2^64 + 6443151223035491242*2^128 + 1409902125*2^192,14174745085766482088 + 8590979992876816151*2^64 + 7887547053316372511*2^128 + 898806368*2^192;\
11004810056800367062 + 2371280408643946625*2^64 + 15310892333957803911*2^128 + 1653866231*2^192,3048585679406570447 + 17827934801627427060*2^64 + 14325942615999381720*2^128 + 1465928008*2^192,5148733784191721965 + 1023142823616485971*2^64 + 2112011483066717627*2^128 + 766575502*2^192,14006129732412663820 + 11705469159463919463*2^64 + 14434274083029617474*2^128 + 970539219*2^192,15952475301772862774 + 10660564283256094130*2^64 + 1757575385651119931*2^128 + 976651506*2^192,5690075137199988053 + 3704070899247756068*2^64 + 5218153507859840135*2^128 + 1771342195*2^192,3865614730264978204 + 5733909929632240431*2^64 + 3059488927325410285*2^128 + 49452050*2^192,15290450971530520939 + 7486082990174385232*2^64 + 6685524331813426703*2^128 + 1411076996*2^192,2172700961414367236 + 7806185528582283773*2^64 + 7877278672346712848*2^128 + 306350690*2^192,2773734193549857836 + 14370927847579329854*2^64 + 7330017118912146529*2^128 + 1267438770*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4269 lists. */
