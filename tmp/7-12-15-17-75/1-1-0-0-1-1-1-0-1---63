/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^4 * z^2 * w^1         = Coefficient of   x^3 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * z^1               = Coefficient of   y^2 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 181
[4, 0, 2, 0, 0]  	58	3 
[9, 0, 0, 0, 0]  	63	3  <--- 1
[8, 1, 0, 0, 0]  	68	4 
[1, 3, 1, 1, 0]  	75	3 
[1, 0, 0, 4, 0]  	75	3 
[6, 3, 1, 0, 0]  	93	4 
[6, 3, 0, 1, 0]  	95	6 
[5, 4, 1, 0, 0]  	98	5 
[5, 4, 0, 1, 0]  	100	7 
[3, 6, 1, 0, 0]  	108	6 
[7, 5, 0, 0, 0]  	109	7 
[3, 6, 0, 1, 0]  	110	7 
[3, 5, 2, 0, 0]  	111	6 
[2, 7, 1, 0, 0]  	113	8 
[3, 4, 3, 0, 0]  	114	3 
[2, 6, 2, 0, 0]  	116	6 
[1, 8, 1, 0, 0]  	118	4 
[2, 6, 0, 2, 0]  	120	5 
[3, 1, 6, 0, 0]  	123	7 
[3, 2, 3, 2, 0]  	124	6 
[2, 5, 0, 3, 0]  	125	7 
[2, 3, 5, 0, 0]  	125	7 
[6, 7, 0, 0, 0]  	126	7 
[3, 0, 7, 0, 0]  	126	3 
[0, 8, 2, 0, 0]  	126	4 
[2, 8, 0, 1, 0]  	127	7 
[3, 0, 6, 1, 0]  	128	7 
[2, 2, 5, 1, 0]  	130	6 
[1, 6, 0, 3, 0]  	130	6 
[2, 1, 7, 0, 0]  	131	5 
[2, 5, 4, 0, 0]  	134	5 
[2, 0, 7, 1, 0]  	136	6 
[1, 7, 3, 0, 0]  	136	6 
[2, 1, 4, 3, 0]  	137	5 
[1, 8, 0, 2, 0]  	137	5 
[1, 6, 4, 0, 0]  	139	5 
[2, 0, 5, 3, 0]  	140	5 
[1, 1, 7, 1, 0]  	141	5 
[1, 5, 5, 0, 0]  	142	5 
[1, 2, 4, 3, 0]  	142	5 
[5, 9, 0, 0, 0]  	143	5 
[1, 10, 0, 1, 0]  	144	5 
[1, 0, 8, 1, 0]  	144	5 
[0, 7, 4, 0, 0]  	144	4 
[1, 4, 6, 0, 0]  	145	5 
[2, 11, 0, 0, 0]  	146	4 
[1, 0, 7, 2, 0]  	146	4 
[0, 7, 3, 1, 0]  	146	4 
[0, 11, 1, 0, 0]  	147	5 
[0, 8, 0, 3, 0]  	147	5 
[1, 3, 7, 0, 0]  	148	4 
[1, 0, 6, 3, 0]  	148	4 
[0, 7, 2, 2, 0]  	148	4 
[2, 0, 9, 0, 0]  	149	4 
[0, 11, 0, 1, 0]  	149	4 
[0, 6, 4, 1, 0]  	149	4 
[0, 7, 1, 3, 0]  	150	5 
[1, 12, 0, 0, 0]  	151	4 
[1, 2, 8, 0, 0]  	151	4 
[0, 10, 1, 1, 0]  	152	4 
[0, 7, 0, 4, 0]  	152	4 
[0, 6, 2, 3, 0]  	153	4 
[0, 4, 7, 0, 0]  	153	4 
[1, 1, 9, 0, 0]  	154	4 
[0, 10, 0, 2, 0]  	154	4 
[1, 2, 6, 2, 0]  	155	4 
[0, 6, 1, 4, 0]  	155	4 
[0, 13, 0, 0, 0]  	156	3  <--- 2
[0, 5, 3, 3, 0]  	156	3 
[1, 0, 10, 0, 0]  	157	4 
[0, 9, 1, 2, 0]  	157	4 
[0, 5, 2, 4, 0]  	158	2 
[0, 3, 7, 1, 0]  	158	2 
[0, 2, 1, 7, 0]  	158	2 
[0, 4, 4, 3, 0]  	159	3 
[0, 5, 1, 5, 0]  	160	3 
[0, 3, 6, 2, 0]  	160	3 
[0, 4, 3, 4, 0]  	161	2 
[0, 2, 8, 1, 0]  	161	2 
[0, 5, 0, 6, 0]  	162	4 
[0, 2, 7, 2, 0]  	163	2 
[0, 4, 1, 6, 0]  	165	2 
[0, 2, 6, 3, 0]  	165	2 
[0, 5, 6, 1, 0]  	167	3 
[0, 4, 0, 7, 0]  	167	3 
[0, 3, 9, 0, 0]  	171	2 
[0, 3, 0, 8, 0]  	172	2 
[0, 0, 7, 4, 0]  	173	1 
[0, 0, 6, 5, 0]  	175	1 
[0, 1, 2, 8, 0]  	178	1 
[0, 3, 5, 4, 0]  	179	2 
[0, 1, 10, 1, 0]  	179	2 
[0, 1, 1, 9, 0]  	180	1 
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 1, 0, 10, 0]  	182	1 
[0, 0, 11, 1, 0]  	182	1 
[0, 0, 1, 10, 0]  	185	1 
[0, 0, 0, 11, 0]  	187	1  <--- 4
[0, 2, 11, 0, 0]  	189	1 
[0, 1, 5, 6, 0]  	189	1 
[0, 0, 5, 7, 0]  	194	1 
[0, 0, 4, 8, 0]  	196	1 
[0, 0, 10, 3, 0]  	201	1 
[4, 0, 1, 1, 1]  	60	4 
[3, 5, 1, 0, 1]  	96	5 
[3, 0, 6, 0, 1]  	111	5 
[3, 0, 5, 1, 1]  	113	8 
[4, 3, 0, 3, 1]  	115	8 
[2, 2, 6, 0, 1]  	128	6 
[2, 2, 4, 2, 1]  	132	7 
[2, 1, 6, 1, 1]  	133	6 
[1, 11, 0, 0, 1]  	139	5 
[1, 2, 5, 2, 1]  	140	5 
[0, 6, 3, 2, 1]  	151	3 
[0, 3, 2, 5, 1]  	151	3 
[0, 3, 8, 0, 1]  	156	3 
[0, 6, 6, 0, 1]  	162	4 
[0, 3, 4, 4, 1]  	164	3 
[0, 1, 0, 9, 1]  	165	2 
[0, 1, 8, 2, 1]  	166	2 
[0, 1, 7, 3, 1]  	168	2 
[0, 1, 6, 4, 1]  	170	2 
[0, 2, 3, 6, 1]  	171	2 
[0, 1, 11, 0, 1]  	177	2 
[0, 2, 5, 5, 1]  	184	2 
[8, 0, 0, 3, 2]  	107	5 
[3, 3, 0, 3, 2]  	108	8 
[5, 2, 0, 3, 2]  	110	7 
[2, 5, 3, 0, 2]  	119	5 
[4, 5, 0, 2, 2]  	122	7 
[3, 1, 4, 2, 2]  	127	6 
[3, 9, 0, 0, 2]  	129	7 
[3, 0, 4, 3, 2]  	132	8 
[2, 10, 0, 0, 2]  	134	6 
[2, 2, 3, 3, 2]  	134	6 
[1, 1, 5, 3, 2]  	145	5 
[0, 5, 4, 2, 2]  	154	3 
[3, 0, 4, 2, 3]  	115	7 
[1, 0, 6, 2, 3]  	131	5 
[2, 0, 5, 2, 4]  	123	6 
[0, 12, 0, 0, 4]  	144	4 
[1, 9, 0, 1, 252]  	132	6 
[2, 0, 8, 0, 252]  	134	5 
[0, 10, 1, 0, 252]  	135	5 
[0, 4, 3, 3, 252]  	144	2 
[2, 7, 0, 1, 253]  	115	5 
[1, 2, 5, 1, 253]  	123	5 
[0, 7, 2, 1, 253]  	131	4 
[0, 5, 1, 4, 253]  	143	4 
[3, 2, 3, 1, 254]  	107	4 
[3, 1, 5, 0, 254]  	108	5 
[2, 3, 4, 0, 254]  	110	3 
[2, 2, 4, 1, 254]  	115	4 
[2, 0, 7, 0, 254]  	119	3 
[1, 6, 3, 0, 254]  	124	4 
[1, 5, 4, 0, 254]  	127	4 
[1, 2, 3, 3, 254]  	127	4 
[1, 0, 7, 1, 254]  	129	3 
[1, 2, 7, 0, 254]  	136	4 
[0, 5, 2, 3, 254]  	141	3 
[0, 8, 1, 2, 254]  	145	4 
[0, 2, 6, 2, 254]  	148	2 
[0, 0, 2, 8, 254]  	166	1 
[0, 0, 1, 9, 254]  	168	1 
[0, 0, 5, 6, 254]  	177	1 
[1, 3, 0, 1, 255]  	60	3 
[0, 8, 1, 0, 255]  	111	3 
[2, 9, 0, 0, 255]  	122	6 
[2, 0, 4, 3, 255]  	125	4 
[1, 4, 5, 0, 255]  	130	4 
[1, 3, 6, 0, 255]  	133	3 
[1, 1, 8, 0, 255]  	139	4 
[0, 0, 7, 2, 255]  	139	1 
[1, 0, 9, 0, 255]  	142	2 
[0, 4, 0, 6, 255]  	150	2 
[0, 0, 1, 8, 255]  	151	1 
[0, 2, 3, 5, 255]  	154	2 
[0, 3, 5, 3, 255]  	162	2 
[0, 1, 9, 1, 255]  	164	2 
[0, 0, 11, 0, 255]  	165	1 
[0, 0, 0, 10, 255]  	170	1 
------
The gap is between 5 and 251.
Lengths: 2 2 6 6 2 2.
For 174 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6

For 99 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5

For 24 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[1859615435743037340 + 12372526761705121094*2^64 + 5630905437425299238*2^128 + 26528128*2^192,13987423019514325548 + 16277539289360546281*2^64 + 13880271086768538405*2^128 + 1653765438*2^192,3394473965155004648 + 5023498101450513259*2^64 + 14637078969584088825*2^128 + 1856622786*2^192,450691552454682048 + 11713066238618587751*2^64 + 6407587785266396578*2^128 + 897851023*2^192,15739250797573676040 + 11278755806155632207*2^64 + 12846155782829286462*2^128 + 59624503*2^192,9712655561004391736 + 18081126690473678822*2^64 + 1810678019329562879*2^128 + 1418772418*2^192,5867350205943188600 + 5227711458073211231*2^64 + 7637822040932217512*2^128 + 1066584026*2^192,7097957110766986520 + 8227392671008705867*2^64 + 11699848222553710981*2^128 + 2071049740*2^192,9759020090348358400 + 12817710656635852437*2^64 + 2777720843364416423*2^128 + 222734166*2^192,2496559852070489344 + 12573853314770857368*2^64 + 4721861606953999177*2^128 + 1360627460*2^192;\
13541907192596054188 + 8853470946233214648*2^64 + 18206111275935232800*2^128 + 1152588357*2^192,621597149257040434 + 11488756449764881004*2^64 + 3704547368417523396*2^128 + 1185553936*2^192,5753707621352685168 + 909990276188177894*2^64 + 14766027536332609891*2^128 + 1279291465*2^192,10387436498324589976 + 14153541659054935140*2^64 + 1519064591284940950*2^128 + 2085529142*2^192,17356184411055964296 + 10565796430539870222*2^64 + 8252412220397760100*2^128 + 634715166*2^192,10571722397438895024 + 16523035413277610124*2^64 + 10796272532445974019*2^128 + 884785863*2^192,4699998883422107512 + 2416419773443388394*2^64 + 16116404360843403737*2^128 + 770687621*2^192,18349231006884340776 + 17206221303716675358*2^64 + 3080634957833201928*2^128 + 763461213*2^192,11185845267296564720 + 3547117228666979*2^64 + 12327262515251010135*2^128 + 1248543634*2^192,16984786014023166672 + 7787190859492420626*2^64 + 4626721792396890195*2^128 + 642717228*2^192;\
18096988970884867477 + 11028509770286529818*2^64 + 8720114450326516200*2^128 + 7272075*2^192,4130407167640749900 + 13094737734262002958*2^64 + 16590717733203119999*2^128 + 530805046*2^192,6731370873393571336 + 9614409141299705284*2^64 + 761012098937462172*2^128 + 1652859002*2^192,9704505368565047108 + 4971088075965003117*2^64 + 1631716626324705465*2^128 + 2105160825*2^192,12630397938713856184 + 13566371610849752516*2^64 + 9402900499635827024*2^128 + 297440334*2^192,10063431428561521852 + 12451515811249479893*2^64 + 620922187692079923*2^128 + 46124726*2^192,16472026479472112464 + 2445301911568109062*2^64 + 15029011584543828144*2^128 + 304706511*2^192,3820260657661562212 + 3234778960235536784*2^64 + 5568593716482302292*2^128 + 2059330273*2^192,5404054604731254368 + 12407315013348521055*2^64 + 17435228522749186149*2^128 + 2038078397*2^192,14922370371558162192 + 219212951672700413*2^64 + 10048209005791924785*2^128 + 902040437*2^192;\
4631830986250633780 + 7117785214312236561*2^64 + 12040712790595388451*2^128 + 1558752092*2^192,18200266907548222768 + 3186102180439768167*2^64 + 2450092953230337633*2^128 + 405391532*2^192,13172705012126894176 + 9977522447186846894*2^64 + 8063777526865439270*2^128 + 839921430*2^192,1305670897022892256 + 8652171112183966700*2^64 + 15968402693164439971*2^128 + 1039232055*2^192,7438143149806249944 + 13430498325108958956*2^64 + 2722468192402325202*2^128 + 1419909097*2^192,17042435267667746016 + 851792385694290374*2^64 + 7456223071443382394*2^128 + 1751893162*2^192,7887969879390656176 + 16106624550038510797*2^64 + 6304553859666433317*2^128 + 1400255614*2^192,14294002884434521136 + 13176252004385295637*2^64 + 9092797742692975033*2^128 + 1015724107*2^192,13664687592092841816 + 4490890669152222347*2^64 + 4007131454165213575*2^128 + 147196191*2^192,9032738152992805824 + 1802282386488088336*2^64 + 6728082733462720889*2^128 + 356606041*2^192;\
13018390025210332377 + 7950045577831627081*2^64 + 16792191478687514761*2^128 + 767926490*2^192,5956013759404212186 + 11055079096597748276*2^64 + 494959885789631927*2^128 + 1872627984*2^192,6212118866766889728 + 4456390458133869532*2^64 + 1542079319702222721*2^128 + 821768781*2^192,11314527426732350660 + 9801583512356254641*2^64 + 15615138940653823669*2^128 + 420131648*2^192,9126722383437764304 + 5706333430833497354*2^64 + 17187447286136253659*2^128 + 1770393516*2^192,8138599071339972864 + 13404084026645444164*2^64 + 796409152315742345*2^128 + 196721392*2^192,585108339933060352 + 17486855269448697668*2^64 + 11616134404003577057*2^128 + 188431507*2^192,16190834082065427660 + 2369456491900799159*2^64 + 8848650219612347932*2^128 + 1308205811*2^192,16022570453927941592 + 15246805163847949291*2^64 + 7789843409291175781*2^128 + 41270073*2^192,15402976327891503000 + 11289332357732327060*2^64 + 12589315709906073769*2^128 + 810146850*2^192;\
9300745969374050112 + 4490679521874224375*2^64 + 7196228859834702001*2^128 + 1668255044*2^192,3957579791994044208 + 7834092638479133007*2^64 + 16760514332949561581*2^128 + 1872465986*2^192,12827199638541106632 + 6632452494392062623*2^64 + 6003361979620554341*2^128 + 1068140099*2^192,1840720758329531008 + 7460767524912316461*2^64 + 10544833176199114647*2^128 + 2063993102*2^192,14807333120964210316 + 95385097849871632*2^64 + 9230222321360307064*2^128 + 1108520307*2^192,4791787285886546540 + 8357900352403109555*2^64 + 16434302802570633497*2^128 + 441470869*2^192,8177710345957094388 + 18305563171096360501*2^64 + 5976513598641019570*2^128 + 578304362*2^192,9025781307264708160 + 7353591739902642332*2^64 + 14324761103790837931*2^128 + 603759872*2^192,12392667328871660952 + 17870858285686712057*2^64 + 3239810993789362502*2^128 + 1593565839*2^192,2982407526944316768 + 16377584746405338148*2^64 + 32021538126712553*2^128 + 909436118*2^192;\
0 + 0*2^64 + 0*2^128 + 771751936*2^192,0 + 0*2^64 + 0*2^128 + 520093696*2^192,0 + 0*2^64 + 0*2^128 + 864026624*2^192,0 + 0*2^64 + 0*2^128 + 436207616*2^192,0 + 0*2^64 + 0*2^128 + 318767104*2^192,0 + 0*2^64 + 0*2^128 + 150994944*2^192,5125350569292070916 + 2618780968794039214*2^64 + 7534723506265889463*2^128 + 937335407*2^192,0 + 0*2^64 + 0*2^128 + 226492416*2^192,0 + 0*2^64 + 0*2^128 + 872415232*2^192,0 + 0*2^64 + 0*2^128 + 184549376*2^192;\
4566773009959174509 + 2647982609088016945*2^64 + 17074702198355508266*2^128 + 1399280626*2^192,12235542547178631604 + 2329548663328342859*2^64 + 18125116697329116780*2^128 + 182199954*2^192,4407370075747998900 + 4019015659074998931*2^64 + 11313323090988449175*2^128 + 763367568*2^192,13771775490868065104 + 3314545196061829178*2^64 + 18185971238063484539*2^128 + 1386587296*2^192,2248146867978027640 + 3992211527036453895*2^64 + 13461425001528945325*2^128 + 1109016988*2^192,15993220318877326092 + 13003832424084210230*2^64 + 13463241021466490661*2^128 + 1538337053*2^192,9575086190928273936 + 2320090078161693485*2^64 + 13706012649405821104*2^128 + 1186852681*2^192,3643896556003280996 + 3669951338685216255*2^64 + 1402316112074453637*2^128 + 179484560*2^192,1446553500983394672 + 2468495610789188743*2^64 + 4573355277562952998*2^128 + 1062360992*2^192,11939632373762324232 + 10906173504593335653*2^64 + 10994135442713357203*2^128 + 1274688521*2^192;\
2436874372871113160 + 13114657605012308110*2^64 + 685474414163645616*2^128 + 1356691018*2^192,17263676169014311408 + 192043922217512507*2^64 + 18408317742271050324*2^128 + 605680845*2^192,10591259684902096944 + 9062812562338953016*2^64 + 6380850444490209375*2^128 + 1261323527*2^192,14976386080070964548 + 2763340765411041382*2^64 + 4497463505291693843*2^128 + 1551406055*2^192,16120923592237674912 + 4192660876746753436*2^64 + 3725143618172845389*2^128 + 274047591*2^192,10406079536332695760 + 7932940396810402052*2^64 + 1292708335474648605*2^128 + 2054454781*2^192,18213851699133223360 + 17865134617898222657*2^64 + 11787899450001185304*2^128 + 304855544*2^192,7673147935275913184 + 128865819996532167*2^64 + 6717015067386313896*2^128 + 1950439409*2^192,9615221629116459552 + 3791257357433430267*2^64 + 5678727654401944810*2^128 + 628837046*2^192,15697303261668192544 + 8040368651768331865*2^64 + 15282845143516212851*2^128 + 1424814559*2^192;\
12066151328200407888 + 11665001955589920516*2^64 + 14295449851329551461*2^128 + 107659142*2^192,6304957610903579424 + 6099854999216851654*2^64 + 4782128041914627779*2^128 + 746341028*2^192,11349909640959040336 + 9353210129355659541*2^64 + 3496107092675903573*2^128 + 70451159*2^192,8818473882933966756 + 10468768967640592259*2^64 + 13169046538954938609*2^128 + 176183311*2^192,8630683521862897160 + 2078088477337605484*2^64 + 9963525999156580491*2^128 + 1217926504*2^192,17357952366387421168 + 13791893904439118944*2^64 + 17162597951027943095*2^128 + 571792383*2^192,15463318067694248240 + 7770916011921240573*2^64 + 10792043184840365063*2^128 + 152800335*2^192,17713584960247784288 + 17979928766522035207*2^64 + 2109512178531228288*2^128 + 872345258*2^192,13243520603845007728 + 9087261948031785714*2^64 + 1752119944190128384*2^128 + 483692117*2^192,6965897677922556808 + 16371948290832167839*2^64 + 2243857125913951984*2^128 + 540596242*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3915 lists. */
