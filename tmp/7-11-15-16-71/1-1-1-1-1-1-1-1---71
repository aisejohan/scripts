/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * z^1               = Coefficient of   x^7 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 219
[8, 0, 0, 0, 0]  	56	4  <--- 1
[5, 0, 0, 2, 0]  	67	6 
[7, 2, 0, 0, 0]  	71	4 
[4, 1, 0, 2, 0]  	71	3 
[2, 1, 2, 1, 0]  	71	4 
[6, 3, 0, 0, 0]  	75	8 
[5, 1, 2, 0, 0]  	76	8 
[2, 3, 1, 1, 0]  	78	4 
[6, 0, 2, 1, 0]  	88	8 
[4, 3, 2, 0, 0]  	91	10 
[4, 0, 0, 4, 0]  	92	8 
[3, 1, 4, 0, 0]  	92	8 
[2, 0, 1, 4, 0]  	93	4 
[6, 2, 1, 1, 0]  	95	11 
[3, 3, 3, 0, 0]  	99	8 
[2, 1, 5, 0, 0]  	100	5 
[5, 6, 0, 0, 0]  	101	7 
[3, 0, 0, 5, 0]  	101	6 
[6, 0, 4, 0, 0]  	102	8 
[2, 4, 3, 0, 0]  	103	7 
[2, 0, 6, 0, 0]  	104	6 
[1, 6, 1, 1, 0]  	104	6 
[5, 5, 1, 0, 0]  	105	10 
[5, 5, 0, 1, 0]  	106	10 
[4, 0, 2, 3, 0]  	106	9 
[3, 5, 2, 0, 0]  	106	9 
[2, 7, 0, 1, 0]  	107	8 
[3, 5, 0, 2, 0]  	108	6 
[3, 8, 0, 0, 0]  	109	7 
[2, 6, 2, 0, 0]  	110	7 
[1, 4, 3, 1, 0]  	112	7 
[3, 7, 1, 0, 0]  	113	9 
[3, 4, 0, 3, 0]  	113	8 
[1, 7, 2, 0, 0]  	114	7 
[1, 3, 5, 0, 0]  	115	5 
[1, 7, 0, 2, 0]  	116	5 
[2, 8, 1, 0, 0]  	117	8 
[1, 6, 3, 0, 0]  	118	7 
[1, 3, 1, 4, 0]  	119	5 
[1, 2, 6, 0, 0]  	119	5 
[1, 0, 0, 7, 0]  	119	5 
[4, 0, 4, 2, 0]  	120	6 
[2, 1, 0, 6, 0]  	121	8 
[1, 9, 1, 0, 0]  	121	7 
[2, 4, 0, 4, 0]  	122	6 
[2, 0, 4, 3, 0]  	122	6 
[1, 9, 0, 1, 0]  	122	6 
[1, 5, 4, 0, 0]  	122	6 
[1, 2, 2, 4, 0]  	123	6 
[1, 1, 7, 0, 0]  	123	6 
[1, 5, 1, 3, 0]  	125	6 
[2, 6, 0, 3, 0]  	128	6 
[1, 1, 2, 5, 0]  	128	6 
[1, 4, 2, 3, 0]  	129	5 
[1, 1, 1, 6, 0]  	129	5 
[1, 0, 5, 3, 0]  	130	4 
[0, 9, 1, 1, 0]  	130	4 
[1, 4, 0, 5, 0]  	131	5 
[1, 3, 4, 2, 0]  	132	5 
[1, 0, 3, 5, 0]  	132	5 
[1, 3, 3, 3, 0]  	133	5 
[1, 0, 2, 6, 0]  	133	5 
[0, 8, 2, 1, 0]  	134	5 
[2, 11, 0, 0, 0]  	135	5 
[0, 8, 1, 2, 0]  	135	5 
[1, 3, 0, 6, 0]  	136	5 
[1, 2, 5, 2, 0]  	136	4 
[0, 11, 1, 0, 0]  	136	5 
[1, 6, 0, 4, 0]  	137	4 
[1, 2, 4, 3, 0]  	137	4 
[0, 11, 0, 1, 0]  	137	4 
[0, 7, 4, 0, 0]  	137	4 
[1, 12, 0, 0, 0]  	139	4 
[0, 4, 1, 5, 0]  	139	4 
[1, 1, 6, 2, 0]  	140	4 
[0, 10, 2, 0, 0]  	140	4 
[1, 1, 4, 4, 0]  	142	5 
[0, 10, 0, 2, 0]  	142	5 
[1, 0, 8, 1, 0]  	143	5 
[1, 0, 7, 2, 0]  	144	4 
[0, 9, 3, 0, 0]  	144	4 
[0, 6, 0, 5, 0]  	146	4 
[0, 9, 0, 3, 0]  	147	3 
[0, 5, 4, 2, 0]  	147	3 
[0, 2, 0, 8, 0]  	150	3 
[0, 5, 0, 6, 0]  	151	2 
[0, 4, 5, 2, 0]  	151	2 
[0, 1, 4, 5, 0]  	151	2 
[0, 8, 0, 4, 0]  	152	2 
[0, 4, 4, 3, 0]  	152	3 
[0, 3, 8, 0, 0]  	153	3 
[0, 14, 0, 0, 0]  	154	3  <--- 2
[0, 3, 7, 1, 0]  	154	3 
[0, 3, 6, 2, 0]  	155	2 
[0, 1, 0, 9, 0]  	155	2 
[0, 6, 6, 0, 0]  	156	4 
[1, 0, 10, 0, 0]  	157	4 
[0, 6, 5, 1, 0]  	157	3 
[0, 3, 3, 5, 0]  	158	2 
[0, 3, 2, 6, 0]  	159	2 
[0, 2, 7, 2, 0]  	159	2 
[0, 5, 7, 0, 0]  	160	2 
[0, 3, 1, 7, 0]  	160	2 
[0, 2, 6, 3, 0]  	160	2 
[0, 1, 9, 1, 0]  	162	1 
[0, 1, 6, 4, 0]  	165	2 
[0, 0, 10, 1, 0]  	166	1 
[0, 0, 9, 2, 0]  	167	1 
[0, 1, 2, 8, 0]  	169	1 
[0, 0, 7, 4, 0]  	169	1 
[0, 3, 5, 4, 0]  	172	2 
[0, 2, 10, 0, 0]  	172	2 
[0, 0, 3, 8, 0]  	173	1 
[0, 0, 2, 9, 0]  	174	1 
[0, 1, 11, 0, 0]  	176	1 
[0, 0, 0, 11, 0]  	176	1  <--- 4
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 5, 7, 0]  	187	1 
[4, 1, 0, 1, 1]  	55	5 
[7, 1, 0, 0, 1]  	60	6 
[3, 0, 0, 4, 1]  	85	6 
[5, 5, 0, 0, 1]  	90	9 
[3, 5, 0, 1, 1]  	92	8 
[3, 4, 0, 2, 1]  	97	7 
[3, 0, 2, 3, 1]  	99	8 
[4, 7, 0, 0, 1]  	105	8 
[3, 2, 1, 3, 1]  	106	9 
[1, 5, 2, 1, 1]  	108	6 
[1, 2, 1, 4, 1]  	108	6 
[2, 6, 0, 2, 1]  	112	7 
[2, 5, 0, 3, 1]  	117	7 
[1, 2, 0, 6, 1]  	125	6 
[2, 3, 0, 5, 1]  	127	7 
[1, 0, 6, 2, 1]  	129	5 
[1, 0, 4, 4, 1]  	131	5 
[0, 8, 0, 3, 1]  	136	4 
[0, 7, 2, 2, 1]  	139	4 
[0, 7, 0, 4, 1]  	141	4 
[0, 13, 0, 0, 1]  	143	4 
[0, 6, 3, 2, 1]  	143	4 
[0, 6, 2, 3, 1]  	144	4 
[0, 6, 1, 4, 1]  	145	3 
[0, 5, 6, 0, 1]  	145	3 
[0, 4, 6, 1, 1]  	150	3 
[0, 1, 3, 6, 1]  	152	2 
[0, 3, 4, 4, 1]  	157	3 
[0, 2, 8, 1, 1]  	158	2 
[2, 3, 4, 0, 2]  	107	8 
[1, 4, 0, 4, 2]  	115	5 
[2, 10, 0, 0, 2]  	124	8 
[3, 0, 5, 2, 2]  	128	7 
[1, 11, 0, 0, 2]  	128	6 
[0, 7, 1, 3, 2]  	140	4 
[1, 0, 9, 0, 2]  	142	5 
[0, 3, 1, 6, 2]  	144	3 
[0, 5, 5, 1, 2]  	146	3 
[7, 0, 1, 0, 3]  	64	6 
[5, 0, 3, 1, 3]  	96	9 
[5, 0, 5, 0, 3]  	110	8 
[2, 9, 0, 0, 3]  	113	7 
[2, 0, 5, 2, 3]  	121	7 
[0, 7, 3, 1, 3]  	138	5 
[0, 5, 3, 3, 3]  	148	3 
[0, 5, 2, 4, 3]  	149	4 
[0, 4, 3, 4, 3]  	153	3 
[0, 2, 5, 4, 3]  	161	2 
[5, 0, 4, 0, 4]  	95	10 
[0, 4, 0, 7, 5]  	156	3 
[0, 3, 5, 3, 250]  	156	2 
[4, 2, 2, 0, 252]  	80	7 
[1, 1, 6, 1, 252]  	124	5 
[0, 1, 10, 0, 252]  	161	1 
[6, 2, 0, 0, 253]  	64	5 
[5, 4, 1, 0, 253]  	94	6 
[1, 1, 4, 3, 253]  	126	4 
[0, 3, 7, 0, 253]  	138	2 
[0, 2, 6, 2, 253]  	144	2 
[1, 4, 3, 0, 254]  	96	5 
[1, 1, 6, 0, 254]  	108	4 
[1, 8, 1, 0, 254]  	110	5 
[1, 1, 1, 5, 254]  	113	5 
[1, 2, 4, 2, 254]  	121	5 
[0, 10, 0, 1, 254]  	126	4 
[0, 6, 2, 2, 254]  	128	3 
[0, 6, 4, 1, 254]  	142	3 
[0, 2, 2, 6, 254]  	148	2 
[0, 1, 2, 7, 254]  	153	2 
[2, 1, 2, 0, 255]  	55	3 
[4, 0, 0, 2, 255]  	60	5 
[2, 6, 0, 1, 255]  	96	6 
[1, 1, 1, 4, 255]  	97	3 
[1, 7, 1, 0, 255]  	99	2 
[1, 3, 1, 3, 255]  	103	3 
[2, 0, 3, 3, 255]  	107	7 
[2, 0, 0, 6, 255]  	110	7 
[1, 1, 4, 2, 255]  	110	3 
[2, 3, 0, 4, 255]  	111	7 
[1, 4, 2, 2, 255]  	113	6 
[1, 0, 4, 3, 255]  	115	3 
[0, 9, 0, 1, 255]  	115	1 
[1, 0, 2, 5, 255]  	117	2 
[1, 6, 0, 3, 255]  	121	6 
[1, 0, 7, 1, 255]  	128	5 
[0, 3, 1, 5, 255]  	128	1 
[0, 2, 5, 2, 255]  	129	1 
[0, 4, 4, 2, 255]  	136	2 
[0, 1, 0, 8, 255]  	139	1 
[0, 4, 0, 6, 255]  	140	3 
[0, 6, 5, 0, 255]  	141	2 
[0, 0, 1, 8, 255]  	143	1 
[0, 3, 0, 7, 255]  	145	1 
[0, 2, 4, 4, 255]  	146	2 
[0, 1, 9, 0, 255]  	146	1 
[0, 1, 7, 2, 255]  	148	1 
[0, 1, 5, 4, 255]  	150	2 
[0, 0, 8, 2, 255]  	152	1 
[0, 0, 7, 3, 255]  	153	1 
[0, 0, 5, 5, 255]  	155	1 
[0, 0, 0, 10, 255]  	160	1 
------
The gap is between 6 and 249.
Lengths: 2 2 6 6 2 3.
For 164 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7*w^3

For 93 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 22 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[13989859945820611880 + 13271387419593956137*2^64 + 10378162567006291451*2^128 + 1001209131*2^192,16198873656189151412 + 7704308474622841760*2^64 + 12006603512544040953*2^128 + 3322128889*2^192,2728980739383113488 + 3440463482034256804*2^64 + 210863336364048581*2^128 + 3149401743*2^192,9182175087228296912 + 10613967362732497103*2^64 + 10513685501583703450*2^128 + 4809953940*2^192,17087207820450932536 + 14235197596867751623*2^64 + 3050226968254561425*2^128 + 1376473380*2^192,1964570265434543952 + 9349923705367180492*2^64 + 3948979997562335722*2^128 + 886575840*2^192,2630055111585551792 + 9757717377636951785*2^64 + 11939915049149000820*2^128 + 4565290770*2^192,9547439501785482320 + 17541636704325391695*2^64 + 13916064989251590160*2^128 + 7780243942*2^192,1737719836026396144 + 12669512141658580766*2^64 + 13813715324890241884*2^128 + 8209168789*2^192,14069385872144413456 + 7942287858647690059*2^64 + 2564705503841953497*2^128 + 5948521829*2^192;\
6892823880821946992 + 10084612161541056235*2^64 + 14605489258375467066*2^128 + 6448994038*2^192,16205299568963563246 + 12263138560505292192*2^64 + 8769850941637907063*2^128 + 8256457666*2^192,15301796192492747448 + 5445440119345050833*2^64 + 6155729852353872967*2^128 + 5706994262*2^192,4066053864629728184 + 11648292082311719728*2^64 + 9750671856076744848*2^128 + 3269202006*2^192,7077929095911149604 + 6897386560950266815*2^64 + 15091046483543490839*2^128 + 990892908*2^192,10697941962933429176 + 11404642342936788005*2^64 + 17657819318719886775*2^128 + 2635183483*2^192,11062562829118493848 + 12698622288064479473*2^64 + 2307591159126071594*2^128 + 3691788657*2^192,13287968342072867560 + 12788443341966978921*2^64 + 9713366838869884894*2^128 + 320201135*2^192,8125079733436348456 + 2109564267631537482*2^64 + 12258140981067916734*2^128 + 1303242401*2^192,13834230088316764984 + 1189112427979545510*2^64 + 2391892384317205827*2^128 + 4232894116*2^192;\
17230212533965870416 + 17023893482431253116*2^64 + 8864134863759512263*2^128 + 579274981*2^192,933135696481400334 + 14548993024640633588*2^64 + 2571567984699580271*2^128 + 4636029377*2^192,8577850990189976584 + 15858142563005740105*2^64 + 15174446787862681245*2^128 + 1490697411*2^192,10257278855385287208 + 2428431494343777299*2^64 + 10904554830542881677*2^128 + 7939231595*2^192,15432157909483562324 + 13874460711373176554*2^64 + 18234500260446724981*2^128 + 7613955978*2^192,15403085026478648744 + 7626889176291363048*2^64 + 3719635614943452314*2^128 + 1783089288*2^192,9076957454177016856 + 1943280562393150835*2^64 + 7741948518208093113*2^128 + 6864375026*2^192,10221018197351273528 + 8687698432140867806*2^64 + 17800071784001229598*2^128 + 7639273601*2^192,726879832564153608 + 14067962953401370191*2^64 + 7846159861412309738*2^128 + 5981528235*2^192,18261840320805498040 + 15353935613323963894*2^64 + 1963192764124130111*2^128 + 7950642483*2^192;\
16290078981345561064 + 9518382271656865321*2^64 + 12448044114421024261*2^128 + 4445887894*2^192,935345170960213848 + 2088542003733216506*2^64 + 9445854065709831365*2^128 + 786258608*2^192,10116345272475157248 + 6881246180069997881*2^64 + 6571355606755670874*2^128 + 8458783190*2^192,8908764495358618368 + 12005462393117543464*2^64 + 11359754854356370126*2^128 + 4225097031*2^192,4240605078499723248 + 6144018558887717336*2^64 + 16848148372387187354*2^128 + 7046158049*2^192,2117975401996175920 + 8860933887743957520*2^64 + 9289442966279439746*2^128 + 3964278318*2^192,18002443058038033424 + 9962151248414748849*2^64 + 14581431777149796281*2^128 + 489814857*2^192,16750982843574534576 + 3416660272201447302*2^64 + 14889935547063358094*2^128 + 7377408751*2^192,8721972865536246336 + 3825319782482344282*2^64 + 10414787648917534987*2^128 + 1567711265*2^192,10487926803631945408 + 1420620885321634426*2^64 + 18266905956699019508*2^128 + 2065078228*2^192;\
4758654189264227032 + 8498333659983115398*2^64 + 12942669120838932611*2^128 + 1350424482*2^192,15797454061952885223 + 16634515439938745326*2^64 + 17970332112646974748*2^128 + 4628911592*2^192,14572625706478987980 + 2586518169843782064*2^64 + 5666603101073747833*2^128 + 6428431663*2^192,2082858274555582284 + 6887984829712267234*2^64 + 14195859314635621847*2^128 + 3228395748*2^192,6076612540430815410 + 16094167273181664018*2^64 + 1001525053130029179*2^128 + 1815122602*2^192,13939567937733431708 + 4496272814451180133*2^64 + 18211183184238168379*2^128 + 1423237458*2^192,7015388685069453660 + 11970114204294024357*2^64 + 14089763635950196768*2^128 + 3659737657*2^192,16056172235580910212 + 12778670014998548059*2^64 + 16515597210898118987*2^128 + 4075103903*2^192,8667305561493270996 + 5992261986781828089*2^64 + 10477538401065146827*2^128 + 5633910690*2^192,12845147560964951804 + 9529463048111852547*2^64 + 626823217229896833*2^128 + 3008051364*2^192;\
3445859280286062216 + 14060891891208118841*2^64 + 2500922760787066410*2^128 + 6366736609*2^192,10489296486053094648 + 11930393762971740867*2^64 + 11210163673696279398*2^128 + 2488438165*2^192,15244836137672903856 + 10781039290972668604*2^64 + 11484388365223423970*2^128 + 4577994445*2^192,12327221866322262752 + 7782603219838288275*2^64 + 6700841154401374397*2^128 + 729170451*2^192,7526803445055972256 + 14538361383401771855*2^64 + 15037292601132689012*2^128 + 8541134240*2^192,15808549486424525952 + 16327815026406769981*2^64 + 8920227383497967504*2^128 + 6280089589*2^192,15743926114599643440 + 14871247960694978004*2^64 + 871115677177161006*2^128 + 5268635704*2^192,14902605558957929824 + 9653499824491336959*2^64 + 6629808638225228181*2^128 + 1476724480*2^192,8932791485914044576 + 5938567108538954576*2^64 + 16232483035429422080*2^128 + 3827574270*2^192,5918878317434026656 + 9716962008780501576*2^64 + 12746348495915057844*2^128 + 1682369967*2^192;\
3566518174351059648 + 12196272983688163679*2^64 + 9591688770483768705*2^128 + 3278229069*2^192,15762962111379774149 + 460403065126909197*2^64 + 2839599942062069143*2^128 + 4271704231*2^192,6798168284982775236 + 15807654304835655076*2^64 + 11171935871125525635*2^128 + 644401978*2^192,8494598331368507668 + 11276725102356609886*2^64 + 15326694667752370682*2^128 + 5623650261*2^192,4414679427531619270 + 17366811783713522669*2^64 + 8778267154177088659*2^128 + 276564652*2^192,12436446576873330628 + 604510256934170668*2^64 + 2978108648097672866*2^128 + 8106385528*2^192,18206734074520169908 + 5713234779837523271*2^64 + 17802631961082922105*2^128 + 7185111231*2^192,5987213855613372892 + 10579812839336716275*2^64 + 6563391372218651713*2^128 + 6390731697*2^192,1998214052919029692 + 15918113047114205886*2^64 + 7055387316678454919*2^128 + 2100985554*2^192,14986879718595383700 + 10812883012058379716*2^64 + 13105199706867139182*2^128 + 5795141516*2^192;\
5776960096443802312 + 13404437992939023498*2^64 + 11143999444521818082*2^128 + 6925718660*2^192,13484343066304276625 + 7615249871275892448*2^64 + 18325481548821689206*2^128 + 6327704452*2^192,1572473940608402084 + 6500651977182250391*2^64 + 15368879147532615132*2^128 + 2917865172*2^192,16413717141394687524 + 12622598032553691751*2^64 + 13571408145671179191*2^128 + 8532391892*2^192,5684407488899201006 + 5774678756379642400*2^64 + 10901220831937806196*2^128 + 4269282889*2^192,3874401055388061220 + 3521050865386381805*2^64 + 394462377494832420*2^128 + 8195089730*2^192,3692090622295528884 + 12097432929677311879*2^64 + 8069576457291740010*2^128 + 6492382023*2^192,4634046069277074076 + 4080902204192667396*2^64 + 16058838568773839597*2^128 + 6340704485*2^192,14384204206991377388 + 17391961939893782874*2^64 + 3094301546320817440*2^128 + 4314434735*2^192,11529629029551169124 + 8628815822865003052*2^64 + 17250797881550948702*2^128 + 7899550893*2^192;\
11174329688447581104 + 5657588341451740400*2^64 + 10259746691041282125*2^128 + 6262487793*2^192,15844902271613648302 + 9257146749587832848*2^64 + 2077414301547880246*2^128 + 5179792004*2^192,12437828408208794520 + 6604908407370297957*2^64 + 16268310663508664155*2^128 + 7870234181*2^192,10968834117354129688 + 1190954283143664839*2^64 + 3686310895173746983*2^128 + 3714234842*2^192,4012682622566470852 + 14019354294036576764*2^64 + 15903511083000042156*2^128 + 554431803*2^192,4992533905795008376 + 1069733161989551399*2^64 + 17529388352078706697*2^128 + 6788283537*2^192,12180656313003606712 + 10774591251266731705*2^64 + 9129765393258617325*2^128 + 7710275397*2^192,14596216530947946088 + 14821402631560251237*2^64 + 17496721409991584995*2^128 + 4099770678*2^192,12719933798343931080 + 5817003347159105906*2^64 + 13146276406101202879*2^128 + 6303415684*2^192,16396209250893835832 + 16023300790545997873*2^64 + 7976407263695729708*2^128 + 6072599095*2^192;\
10888241204622242208 + 5457509818301631216*2^64 + 11727282328375748230*2^128 + 2637771627*2^192,2311907211930932210 + 17901326390647617118*2^64 + 1357989222705815629*2^128 + 6828706856*2^192,14481001762754539320 + 6202364265648141729*2^64 + 7110638610529707748*2^128 + 3666133952*2^192,12480804093430060376 + 11999671143018722444*2^64 + 11792796946194915296*2^128 + 4456103993*2^192,10340387636316148876 + 6294839949986616886*2^64 + 10569899052698575401*2^128 + 5945927938*2^192,11059805149342758360 + 6849313399957855789*2^64 + 8419762692648982969*2^128 + 3948727633*2^192,4037871131004903944 + 178843554790129237*2^64 + 5979605677280080033*2^128 + 8494100894*2^192,13102465612799058120 + 12766089991841712088*2^64 + 10412243742604862283*2^128 + 4766781025*2^192,14546091387564760856 + 1401305054764351376*2^64 + 4100227361002971805*2^128 + 6308973488*2^192,1523024957332832936 + 12477551546216133103*2^64 + 2989774075746167663*2^128 + 1261430955*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4620 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - 2*x^9 + x^8 - 8*x^7 + 16*x^6 - 16*x^5 + 64*x^4 - 128*x^3 + 64*x^2 - 512*x + 1024
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 2; x^2 + 2*x + 4, 1; x^6 + x^4 + 2*x^3 + 4*x^2 + 64, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 25
