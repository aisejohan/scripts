/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * z^1               = Coefficient of   x^7 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 225
[8, 0, 0, 0, 0]  	56	3  <--- 1
[5, 0, 0, 2, 0]  	67	6 
[7, 2, 0, 0, 0]  	71	3 
[4, 1, 0, 2, 0]  	71	3 
[2, 1, 2, 1, 0]  	71	3 
[6, 3, 0, 0, 0]  	75	8 
[5, 1, 2, 0, 0]  	76	6 
[6, 0, 2, 1, 0]  	88	7 
[4, 3, 2, 0, 0]  	91	9 
[4, 0, 0, 4, 0]  	92	8 
[3, 1, 4, 0, 0]  	92	8 
[2, 0, 1, 4, 0]  	93	3 
[6, 2, 1, 1, 0]  	95	10 
[3, 3, 3, 0, 0]  	99	8 
[2, 2, 0, 4, 0]  	100	5 
[5, 6, 0, 0, 0]  	101	5 
[2, 5, 0, 2, 0]  	101	4 
[6, 0, 4, 0, 0]  	102	8 
[2, 4, 3, 0, 0]  	103	7 
[2, 0, 6, 0, 0]  	104	6 
[4, 7, 0, 0, 0]  	105	9 
[4, 0, 2, 3, 0]  	106	10 
[2, 3, 4, 0, 0]  	107	8 
[4, 6, 1, 0, 0]  	109	6 
[3, 0, 3, 3, 0]  	114	7 
[3, 6, 2, 0, 0]  	117	5 
[3, 0, 0, 6, 0]  	117	5 
[1, 6, 3, 0, 0]  	118	7 
[1, 6, 2, 1, 0]  	119	6 
[1, 3, 1, 4, 0]  	119	5 
[4, 0, 4, 2, 0]  	120	7 
[3, 9, 0, 0, 0]  	120	7 
[2, 7, 2, 0, 0]  	121	7 
[2, 4, 1, 3, 0]  	121	8 
[2, 1, 0, 6, 0]  	121	7 
[2, 0, 4, 3, 0]  	122	3 
[1, 9, 0, 1, 0]  	122	6 
[2, 10, 0, 0, 0]  	124	6 
[1, 8, 2, 0, 0]  	125	7 
[2, 0, 0, 7, 0]  	126	5 
[1, 11, 0, 0, 0]  	128	6 
[1, 4, 2, 3, 0]  	129	6 
[1, 0, 5, 3, 0]  	130	4 
[0, 9, 1, 1, 0]  	130	4 
[1, 10, 1, 0, 0]  	132	6 
[1, 3, 4, 2, 0]  	132	5 
[0, 8, 2, 1, 0]  	134	5 
[1, 0, 0, 8, 0]  	135	5 
[1, 2, 5, 2, 0]  	136	4 
[0, 11, 1, 0, 0]  	136	4 
[0, 8, 0, 3, 0]  	136	4 
[1, 6, 0, 4, 0]  	137	4 
[0, 11, 0, 1, 0]  	137	4 
[0, 7, 4, 0, 0]  	137	4 
[1, 1, 8, 0, 0]  	138	6 
[1, 5, 3, 2, 0]  	139	5 
[0, 4, 1, 5, 0]  	139	4 
[0, 10, 2, 0, 0]  	140	4 
[1, 1, 4, 4, 0]  	142	7 
[0, 13, 0, 0, 0]  	143	4  <--- 2
[0, 9, 3, 0, 0]  	144	4 
[0, 6, 2, 3, 0]  	144	3 
[0, 6, 0, 5, 0]  	146	4 
[1, 0, 4, 5, 0]  	147	3 
[0, 5, 4, 2, 0]  	147	3 
[0, 5, 3, 3, 0]  	148	3 
[0, 5, 2, 4, 0]  	149	4 
[0, 4, 6, 1, 0]  	150	3 
[0, 2, 0, 8, 0]  	150	3 
[0, 5, 0, 6, 0]  	151	2 
[0, 4, 5, 2, 0]  	151	2 
[0, 1, 4, 5, 0]  	151	2 
[1, 5, 6, 0, 0]  	152	2 
[1, 3, 0, 7, 0]  	152	2 
[0, 4, 4, 3, 0]  	152	3 
[0, 4, 3, 4, 0]  	153	3 
[0, 3, 8, 0, 0]  	153	3 
[1, 1, 7, 2, 0]  	155	2 
[0, 1, 0, 9, 0]  	155	2 
[0, 6, 6, 0, 0]  	156	3 
[0, 4, 0, 7, 0]  	156	3 
[0, 6, 5, 1, 0]  	157	4 
[0, 3, 3, 5, 0]  	158	3 
[1, 0, 8, 2, 0]  	159	2 
[0, 3, 2, 6, 0]  	159	2 
[0, 5, 7, 0, 0]  	160	2 
[0, 3, 1, 7, 0]  	160	2 
[0, 1, 9, 1, 0]  	162	1 
[0, 1, 6, 4, 0]  	165	2 
[0, 0, 10, 1, 0]  	166	1 
[0, 0, 9, 2, 0]  	167	1 
[0, 1, 2, 8, 0]  	169	1 
[0, 0, 7, 4, 0]  	169	1 
[0, 0, 3, 8, 0]  	173	1 
[0, 2, 8, 2, 0]  	174	1 
[0, 0, 2, 9, 0]  	174	1 
[0, 1, 11, 0, 0]  	176	1 
[0, 0, 0, 11, 0]  	176	1  <--- 4
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 5, 7, 0]  	187	1 
[4, 1, 0, 1, 1]  	55	4 
[7, 1, 0, 0, 1]  	60	5 
[2, 3, 1, 1, 1]  	78	4 
[2, 5, 0, 1, 1]  	85	4 
[5, 5, 0, 0, 1]  	90	8 
[3, 0, 2, 3, 1]  	99	7 
[1, 6, 1, 1, 1]  	104	5 
[3, 5, 2, 0, 1]  	106	9 
[3, 2, 1, 3, 1]  	106	9 
[1, 5, 2, 1, 1]  	108	6 
[2, 6, 2, 0, 1]  	110	5 
[3, 1, 0, 5, 1]  	112	7 
[1, 4, 3, 1, 1]  	112	7 
[3, 4, 0, 3, 1]  	113	9 
[1, 7, 2, 0, 1]  	114	7 
[1, 4, 0, 4, 1]  	115	5 
[1, 3, 5, 0, 1]  	115	5 
[1, 2, 6, 0, 1]  	119	5 
[1, 0, 0, 7, 1]  	119	5 
[1, 2, 2, 4, 1]  	123	6 
[1, 1, 7, 0, 1]  	123	6 
[1, 1, 2, 5, 1]  	128	6 
[1, 0, 6, 2, 1]  	129	5 
[1, 0, 4, 4, 1]  	131	4 
[1, 3, 3, 3, 1]  	133	5 
[1, 0, 2, 6, 1]  	133	5 
[0, 8, 1, 2, 1]  	135	5 
[1, 3, 0, 6, 1]  	136	4 
[1, 2, 4, 3, 1]  	137	4 
[0, 7, 2, 2, 1]  	139	4 
[1, 2, 1, 6, 1]  	140	5 
[0, 7, 1, 3, 1]  	140	4 
[0, 6, 3, 2, 1]  	143	4 
[0, 6, 1, 4, 1]  	145	4 
[0, 3, 7, 1, 1]  	154	3 
[0, 3, 6, 2, 1]  	155	2 
[1, 0, 10, 0, 1]  	157	4 
[0, 2, 7, 2, 1]  	159	2 
[0, 2, 6, 3, 1]  	160	2 
[1, 2, 1, 4, 2]  	108	6 
[3, 7, 1, 0, 2]  	113	10 
[2, 8, 1, 0, 2]  	117	7 
[2, 0, 5, 2, 2]  	121	8 
[1, 5, 4, 0, 2]  	122	6 
[1, 5, 1, 3, 2]  	125	6 
[1, 8, 0, 2, 2]  	127	7 
[1, 1, 1, 6, 2]  	129	5 
[1, 7, 0, 3, 2]  	132	6 
[1, 0, 3, 5, 2]  	132	5 
[0, 7, 3, 1, 2]  	138	5 
[0, 7, 0, 4, 2]  	141	4 
[1, 0, 8, 1, 2]  	143	4 
[0, 1, 3, 6, 2]  	152	2 
[0, 3, 4, 4, 2]  	157	3 
[0, 2, 5, 4, 2]  	161	2 
[7, 0, 1, 0, 3]  	64	5 
[5, 0, 3, 1, 3]  	96	8 
[5, 0, 5, 0, 3]  	110	9 
[1, 0, 9, 0, 3]  	142	6 
[0, 3, 1, 6, 3]  	144	3 
[0, 5, 6, 0, 3]  	145	3 
[0, 5, 5, 1, 3]  	146	3 
[0, 2, 8, 1, 3]  	158	2 
[5, 0, 4, 0, 4]  	95	9 
[3, 4, 0, 2, 4]  	97	7 
[1, 9, 1, 0, 4]  	121	7 
[0, 10, 0, 2, 4]  	142	5 
[3, 0, 4, 2, 5]  	113	8 
[1, 2, 0, 6, 5]  	125	6 
[0, 2, 10, 0, 5]  	172	2 
[0, 0, 4, 7, 248]  	172	1 
[0, 6, 4, 1, 249]  	142	4 
[2, 0, 0, 6, 251]  	110	5 
[1, 4, 2, 2, 251]  	113	6 
[1, 1, 5, 2, 251]  	125	5 
[0, 3, 0, 7, 251]  	145	1 
[0, 0, 2, 8, 251]  	158	1 
[4, 2, 2, 0, 252]  	80	5 
[6, 2, 0, 0, 253]  	64	4 
[4, 6, 0, 0, 253]  	94	4 
[1, 4, 2, 1, 253]  	97	5 
[2, 2, 5, 0, 253]  	111	5 
[1, 6, 0, 3, 253]  	121	6 
[0, 10, 0, 1, 253]  	126	4 
[0, 12, 0, 0, 253]  	132	2 
[0, 4, 2, 4, 253]  	138	4 
[0, 6, 5, 0, 253]  	141	3 
[0, 2, 6, 2, 253]  	144	2 
[0, 1, 9, 0, 253]  	146	1 
[3, 1, 0, 4, 254]  	96	4 
[2, 2, 4, 0, 254]  	96	3 
[2, 4, 0, 3, 254]  	106	4 
[2, 9, 0, 0, 254]  	113	2 
[0, 9, 1, 0, 254]  	114	2 
[0, 9, 0, 1, 254]  	115	1 
[1, 2, 4, 2, 254]  	121	4 
[0, 11, 0, 0, 254]  	121	3 
[1, 1, 6, 1, 254]  	124	4 
[0, 6, 4, 0, 254]  	126	2 
[0, 6, 2, 2, 254]  	128	3 
[0, 0, 0, 8, 254]  	128	1 
[0, 1, 8, 0, 254]  	131	1 
[0, 4, 4, 2, 254]  	136	2 
[0, 4, 3, 3, 254]  	137	3 
[0, 0, 4, 5, 254]  	140	1 
[0, 3, 2, 5, 254]  	143	1 
[0, 0, 8, 2, 254]  	152	1 
[2, 1, 2, 0, 255]  	55	2 
[4, 0, 0, 2, 255]  	60	4 
[2, 0, 0, 4, 255]  	78	1 
[2, 0, 2, 3, 255]  	92	3 
[0, 6, 2, 0, 255]  	96	2 
[0, 3, 0, 4, 255]  	97	1 
[2, 2, 1, 3, 255]  	99	2 
[0, 9, 0, 0, 255]  	99	1 
[0, 1, 4, 2, 255]  	103	1 
[1, 1, 6, 0, 255]  	108	5 
[0, 0, 4, 3, 255]  	108	1 
[1, 1, 2, 4, 255]  	112	4 
[1, 0, 2, 5, 255]  	117	4 
[0, 5, 2, 2, 255]  	117	1 
[1, 2, 3, 3, 255]  	122	5 
[0, 4, 2, 3, 255]  	122	2 
[0, 7, 1, 2, 255]  	124	2 
[1, 0, 7, 1, 255]  	128	5 
------
The gap is between 6 and 247.
Lengths: 2 2 6 6 2 3.
For 164 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7*w^3

For 93 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 22 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[16757756583341089782 + 5828392093762905041*2^64 + 3718863377329587166*2^128 + 117634360*2^192,6582394853526019692 + 5345314929245507603*2^64 + 13394319183304305803*2^128 + 678685896*2^192,8456680472513775672 + 7004823454729636353*2^64 + 16813937737173628012*2^128 + 55795610*2^192,4382665970353249264 + 11577124838827230274*2^64 + 651031083145646364*2^128 + 1601823278*2^192,6156013679375344672 + 1439772321523706467*2^64 + 12479585908748128194*2^128 + 1701113184*2^192,8050771840431379384 + 18142423318571147122*2^64 + 16526360748305098538*2^128 + 2098049923*2^192,6884515941097992912 + 9820020870294259717*2^64 + 17065583619317263543*2^128 + 140691512*2^192,17181579733233274088 + 2739474602758540619*2^64 + 1519154186565156322*2^128 + 1435265632*2^192,14435891575644527984 + 1642783782409219349*2^64 + 17539891969229220130*2^128 + 1484038423*2^192,18045157752130716112 + 2717467547341794078*2^64 + 1772627637328018841*2^128 + 512997767*2^192;\
15244260390404476396 + 12048536982743594127*2^64 + 13358526807810286564*2^128 + 1393771140*2^192,10101778261048111088 + 4976279394507371573*2^64 + 16380761259773910365*2^128 + 768728323*2^192,1998635057731706612 + 16196312135463226013*2^64 + 602041449492801558*2^128 + 663360536*2^192,4235936265945514880 + 1915519642018610629*2^64 + 18413665038768717718*2^128 + 1043348666*2^192,6028907592700530504 + 5189655233083626482*2^64 + 2657657521158614607*2^128 + 1032848760*2^192,15881934691537314772 + 13328653589439527159*2^64 + 11580615716827937444*2^128 + 1940455268*2^192,17577537744315696328 + 13762208532786087697*2^64 + 16012238245168567670*2^128 + 1446052427*2^192,17236436670421609892 + 3744438490465855815*2^64 + 1363656352906296588*2^128 + 818836927*2^192,6755443670731412288 + 10706948631387764179*2^64 + 10794905377830652477*2^128 + 674483669*2^192,17189634098897734528 + 4776899746607497353*2^64 + 16231094749197514831*2^128 + 691626083*2^192;\
11456278396671799296 + 11978174609026101115*2^64 + 602586294827547630*2^128 + 505987063*2^192,15986058675622390664 + 10236443284451833520*2^64 + 7195883549537100196*2^128 + 356757106*2^192,15448690704341216024 + 7497240190776173311*2^64 + 10604882726877853980*2^128 + 1448778508*2^192,161258285755756496 + 13930392639458045805*2^64 + 5032154066873268715*2^128 + 731751057*2^192,1776429979880615640 + 2631133323834359207*2^64 + 17650277645384397257*2^128 + 861360221*2^192,12514305660365195704 + 456595696221581288*2^64 + 3590145078641024768*2^128 + 1773128063*2^192,6349511086844163224 + 14915563212037525710*2^64 + 6295380331101227797*2^128 + 1059854139*2^192,1608268991831999568 + 15209599848916317824*2^64 + 10068551653086630421*2^128 + 2120226983*2^192,4318464812042117512 + 5064907122827698995*2^64 + 646464179228049742*2^128 + 1448846681*2^192,15409622784987862008 + 15940326271119442415*2^64 + 13363256706322089802*2^128 + 2031201468*2^192;\
13115654820164885222 + 2026504664477733662*2^64 + 6766472631088553644*2^128 + 1680919262*2^192,4091078793624375606 + 6160443178639584200*2^64 + 4318217812188865627*2^128 + 741167864*2^192,6514392090088003164 + 10787370821747796046*2^64 + 2200020344548459529*2^128 + 809472127*2^192,10112667021666572188 + 1857013066290948147*2^64 + 3635168915691423400*2^128 + 433631979*2^192,6774494021101928496 + 9899553031367970199*2^64 + 17147472301690194042*2^128 + 1346093565*2^192,8972617587089484912 + 10842357417562924891*2^64 + 4368190854475969764*2^128 + 1167349943*2^192,8098244129803585444 + 7480347179254628197*2^64 + 16974424514755942583*2^128 + 361609008*2^192,15326861441305747636 + 11342263769949026047*2^64 + 11381019233979478171*2^128 + 1752291361*2^192,16259855186781202336 + 13361018940990938620*2^64 + 6186710118394341766*2^128 + 1767565255*2^192,17656683622400583600 + 6696360015190375773*2^64 + 4564370807184296806*2^128 + 21497804*2^192;\
1908685445150208100 + 18169169616690327966*2^64 + 15101602942405846893*2^128 + 255473820*2^192,2007413141038120746 + 17091648765529589916*2^64 + 4823428425398291842*2^128 + 153973911*2^192,18052536847978244796 + 5127082307060026045*2^64 + 8182073314097953945*2^128 + 1186886309*2^192,4129107456176073392 + 16929128211576201363*2^64 + 16377365285816464668*2^128 + 1061714814*2^192,2753838637027786312 + 7712229086217412510*2^64 + 387902827975559553*2^128 + 1519549770*2^192,6056786856566668248 + 8926278377773367158*2^64 + 7174143698174876553*2^128 + 728030083*2^192,9704478406642692664 + 5658064788605025279*2^64 + 10439080706124272681*2^128 + 103720278*2^192,10358186230490127428 + 9930912845622056688*2^64 + 12649392058089616840*2^128 + 1679712226*2^192,6042607146650772552 + 10012682397167366805*2^64 + 714622782973479790*2^128 + 950711647*2^192,5786789409173937400 + 12411897932704590665*2^64 + 11469129883124902038*2^128 + 1413526850*2^192;\
16125033810495412710 + 4591084534515804194*2^64 + 12419743523344583060*2^128 + 1739770973*2^192,16247028154622800742 + 16575171879567198857*2^64 + 3484960843938062263*2^128 + 452820797*2^192,4565072340898306554 + 6021089834960887950*2^64 + 14569724464884307351*2^128 + 1927593620*2^192,5464585088626093376 + 16272824918667606363*2^64 + 965281102988448603*2^128 + 182583812*2^192,15328380593568816304 + 14721201950530450099*2^64 + 16870088402415271293*2^128 + 1756536268*2^192,14247532364980431258 + 10930464604471519765*2^64 + 823444227525703215*2^128 + 528874645*2^192,10763477373086590024 + 7937924260422064764*2^64 + 3901974174013881183*2^128 + 1799173462*2^192,14469004382032730022 + 11876045653744900481*2^64 + 9884295657358056179*2^128 + 561411362*2^192,7442074262196516808 + 17207515437047634823*2^64 + 13342693877018244993*2^128 + 2079185028*2^192,15429168617222587016 + 11874862272044608726*2^64 + 11498175152226198328*2^128 + 381150999*2^192;\
10927273028320017123 + 9991853421303394365*2^64 + 17740717048808034032*2^128 + 190406318*2^192,581608859152873568 + 4023719810303370029*2^64 + 14813312249294204781*2^128 + 134272407*2^192,1346809841038655560 + 5885236055993469545*2^64 + 18384266101507610891*2^128 + 1379965382*2^192,2740389050208304856 + 14307782315808753844*2^64 + 941776221310313040*2^128 + 593849404*2^192,8224619357425982596 + 8417475919943152336*2^64 + 16547138697451349174*2^128 + 385350038*2^192,7620174061351521068 + 3846604048421892419*2^64 + 11018355738811943990*2^128 + 646558333*2^192,16043502798602365940 + 16120958773544592478*2^64 + 11392462182998109901*2^128 + 2022333639*2^192,5245647183379373196 + 7232383359594399751*2^64 + 17573224458760390334*2^128 + 1204546051*2^192,8521801438072753288 + 1067010088821604961*2^64 + 2962373658383601452*2^128 + 539746765*2^192,3006125987069700992 + 15091658146291122982*2^64 + 3991072660787313098*2^128 + 783637002*2^192;\
1601241841652537610 + 12422475582337754552*2^64 + 11767480669804408333*2^128 + 1899388605*2^192,9569231119027234826 + 17089466155124306513*2^64 + 11322279180305369213*2^128 + 849693143*2^192,8224054507988922502 + 10348588005977938609*2^64 + 18145723348963150836*2^128 + 1740305907*2^192,7105403903882018368 + 17488984252700246301*2^64 + 9239911554325192756*2^128 + 69722530*2^192,15432290277359286364 + 6628544420312962566*2^64 + 17117915313130244312*2^128 + 1173880131*2^192,1282404691086118422 + 11782417278989788036*2^64 + 12656436215295582893*2^128 + 1475051597*2^192,434603164696927644 + 11565639807316507767*2^64 + 1217252914270491972*2^128 + 1365737178*2^192,5730504270936041778 + 746561723561111306*2^64 + 16076267366667516977*2^128 + 1949785999*2^192,5845650201489069664 + 3869897721160893718*2^64 + 3825919347939449569*2^128 + 1336285461*2^192,628554987405908544 + 6834922163551027131*2^64 + 1107824662256018392*2^128 + 690180046*2^192;\
10458600138378967408 + 15953638824213394182*2^64 + 3597275193109475625*2^128 + 711211333*2^192,13141182066020337496 + 7341358229704764736*2^64 + 18328973338515876443*2^128 + 753028055*2^192,17286817274649521616 + 5705065073075943575*2^64 + 7145100748246804906*2^128 + 556771138*2^192,15323280382515712160 + 11929395249923455742*2^64 + 1626545923882298553*2^128 + 898835411*2^192,15013148511404381248 + 18211724892606490665*2^64 + 6421310883624025501*2^128 + 857850970*2^192,6118317869323696760 + 2218441293185768264*2^64 + 3185594828561971897*2^128 + 228499641*2^192,8264408986780849120 + 3425344836988008625*2^64 + 2551896119917978089*2^128 + 1039940140*2^192,10333508213225657336 + 2558531685522592680*2^64 + 3086524022105481749*2^128 + 175057110*2^192,18367211374054885096 + 14760621735310624373*2^64 + 27269906831383298*2^128 + 569467931*2^192,2956689010566864336 + 10313049736080823594*2^64 + 10220405722060434385*2^128 + 628751790*2^192;\
4520430954571791834 + 15532277941521075699*2^64 + 6055700109037372680*2^128 + 930849585*2^192,7681685727162509930 + 17752512650195936581*2^64 + 13483030972579933139*2^128 + 182233869*2^192,12938896959172887846 + 4184853909246963722*2^64 + 18162402640088083362*2^128 + 1042744738*2^192,5468956502323570972 + 17513773151507805056*2^64 + 13233116592485172903*2^128 + 216954995*2^192,6093627474901483888 + 4229497244132550666*2^64 + 13007294696908041525*2^128 + 539384472*2^192,14299071313182311062 + 12889673543167315429*2^64 + 7484138093471581284*2^128 + 951198402*2^192,7637743006194292712 + 15768775290462728151*2^64 + 4135396649901041563*2^128 + 398363782*2^192,15022915954835024922 + 14747608874875597414*2^64 + 8042787793887058975*2^128 + 1723633669*2^192,15253086571616569744 + 4868104409410532303*2^64 + 6034849199502735295*2^128 + 1963540951*2^192,349150884866991480 + 5999892445856289004*2^64 + 8777073502688700430*2^128 + 765380717*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4624 lists. */
