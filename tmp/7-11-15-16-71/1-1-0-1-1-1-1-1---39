/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * z^1               = Coefficient of   x^7 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 199
[2, 1, 2, 0, 0]  	55	4 
[8, 0, 0, 0, 0]  	56	4  <--- 1
[3, 0, 2, 1, 0]  	67	5 
[7, 2, 0, 0, 0]  	71	5 
[6, 3, 0, 0, 0]  	75	6 
[2, 3, 1, 1, 0]  	78	5 
[2, 0, 1, 4, 0]  	93	5 
[6, 2, 1, 1, 0]  	95	9 
[6, 0, 4, 0, 0]  	102	9 
[1, 6, 1, 1, 0]  	104	5 
[1, 2, 5, 0, 0]  	104	4 
[5, 5, 1, 0, 0]  	105	8 
[6, 0, 0, 4, 0]  	106	11 
[1, 1, 6, 0, 0]  	108	5 
[5, 1, 0, 4, 0]  	110	9 
[6, 2, 0, 3, 0]  	112	6 
[5, 7, 0, 0, 0]  	112	7 
[1, 0, 4, 3, 0]  	115	4 
[5, 6, 0, 1, 0]  	117	7 
[2, 8, 1, 0, 0]  	117	7 
[4, 0, 6, 0, 0]  	118	10 
[1, 3, 1, 4, 0]  	119	5 
[4, 7, 1, 0, 0]  	120	6 
[2, 0, 6, 1, 0]  	120	5 
[2, 0, 5, 2, 0]  	121	7 
[1, 9, 1, 0, 0]  	121	7 
[2, 4, 0, 4, 0]  	122	7 
[3, 8, 0, 1, 0]  	125	6 
[1, 8, 2, 0, 0]  	125	6 
[2, 0, 0, 7, 0]  	126	5 
[4, 9, 0, 0, 0]  	127	7 
[1, 7, 3, 0, 0]  	129	5 
[1, 0, 6, 2, 0]  	129	5 
[3, 10, 0, 0, 0]  	131	5 
[1, 3, 3, 3, 0]  	133	5 
[3, 3, 0, 5, 0]  	134	9 
[1, 3, 0, 6, 0]  	136	5 
[0, 11, 1, 0, 0]  	136	4 
[1, 6, 0, 4, 0]  	137	4 
[0, 11, 0, 1, 0]  	137	4 
[0, 7, 4, 0, 0]  	137	4 
[1, 2, 3, 4, 0]  	138	6 
[1, 12, 0, 0, 0]  	139	4 
[1, 5, 3, 2, 0]  	139	5 
[1, 2, 2, 5, 0]  	139	6 
[1, 2, 1, 6, 0]  	140	5 
[0, 7, 1, 3, 0]  	140	4 
[0, 7, 0, 4, 0]  	141	4 
[1, 5, 0, 5, 0]  	142	7 
[1, 4, 4, 2, 0]  	143	5 
[1, 1, 3, 5, 0]  	143	5 
[0, 13, 0, 0, 0]  	143	4  <--- 2
[1, 1, 2, 6, 0]  	144	5 
[0, 9, 3, 0, 0]  	144	3 
[1, 1, 1, 7, 0]  	145	4 
[0, 6, 1, 4, 0]  	145	3 
[1, 1, 0, 8, 0]  	146	4 
[0, 5, 3, 3, 0]  	148	3 
[2, 0, 9, 0, 0]  	149	6 
[0, 8, 3, 1, 0]  	149	4 
[1, 0, 1, 8, 0]  	150	4 
[0, 8, 2, 2, 0]  	150	4 
[0, 5, 1, 5, 0]  	150	3 
[0, 4, 6, 1, 0]  	150	3 
[1, 0, 0, 9, 0]  	151	2 
[0, 5, 0, 6, 0]  	151	2 
[0, 4, 5, 2, 0]  	151	2 
[0, 1, 4, 5, 0]  	151	2 
[0, 4, 4, 3, 0]  	152	3 
[0, 4, 3, 4, 0]  	153	3 
[0, 3, 8, 0, 0]  	153	3 
[0, 7, 3, 2, 0]  	154	3 
[0, 3, 7, 1, 0]  	154	3 
[0, 3, 6, 2, 0]  	155	2 
[0, 1, 0, 9, 0]  	155	2 
[0, 6, 6, 0, 0]  	156	3 
[0, 6, 5, 1, 0]  	157	3 
[1, 0, 9, 1, 0]  	158	4 
[0, 6, 4, 2, 0]  	158	3 
[0, 2, 8, 1, 0]  	158	2 
[0, 5, 7, 0, 0]  	160	2 
[0, 1, 9, 1, 0]  	162	1 
[1, 10, 0, 3, 0]  	165	2 
[0, 2, 1, 8, 0]  	165	2 
[0, 1, 6, 4, 0]  	165	2 
[0, 0, 10, 1, 0]  	166	1 
[0, 0, 9, 2, 0]  	167	1 
[0, 1, 2, 8, 0]  	169	1 
[0, 0, 7, 4, 0]  	169	1 
[0, 2, 10, 0, 0]  	172	2 
[0, 0, 3, 8, 0]  	173	1 
[0, 3, 3, 6, 0]  	174	1 
[0, 0, 2, 9, 0]  	174	1 
[0, 1, 11, 0, 0]  	176	1 
[0, 0, 0, 11, 0]  	176	1  <--- 4
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 5, 7, 0]  	187	1 
[7, 1, 0, 0, 1]  	60	5 
[1, 0, 0, 4, 1]  	71	2 
[1, 7, 0, 1, 1]  	100	4 
[5, 5, 0, 1, 1]  	106	8 
[1, 5, 2, 1, 1]  	108	6 
[3, 7, 1, 0, 1]  	113	8 
[0, 8, 1, 1, 1]  	119	4 
[1, 5, 4, 0, 1]  	122	6 
[1, 4, 3, 2, 1]  	128	6 
[1, 4, 2, 3, 1]  	129	6 
[1, 3, 4, 2, 1]  	132	5 
[2, 0, 8, 0, 1]  	134	5 
[0, 8, 0, 3, 1]  	136	4 
[0, 7, 2, 2, 1]  	139	4 
[0, 4, 1, 5, 1]  	139	4 
[1, 0, 8, 1, 1]  	143	5 
[0, 6, 3, 2, 1]  	143	4 
[0, 6, 2, 3, 1]  	144	4 
[0, 5, 6, 0, 1]  	145	3 
[0, 6, 0, 5, 1]  	146	3 
[0, 5, 5, 1, 1]  	146	3 
[0, 5, 2, 4, 1]  	149	4 
[0, 2, 0, 8, 1]  	150	3 
[0, 4, 0, 7, 1]  	156	3 
[1, 0, 10, 0, 1]  	157	5 
[0, 3, 3, 5, 1]  	158	2 
[0, 3, 2, 6, 1]  	159	3 
[0, 2, 7, 2, 1]  	159	2 
[0, 3, 1, 7, 1]  	160	3 
[0, 2, 6, 3, 1]  	160	2 
[0, 3, 5, 4, 1]  	172	2 
[1, 5, 1, 1, 2]  	93	4 
[7, 0, 0, 3, 2]  	97	6 
[6, 1, 0, 3, 2]  	101	7 
[5, 1, 1, 3, 2]  	109	7 
[4, 6, 0, 2, 2]  	126	7 
[5, 4, 0, 3, 2]  	127	8 
[2, 6, 0, 3, 2]  	128	8 
[1, 11, 0, 0, 2]  	128	7 
[0, 9, 0, 2, 2]  	131	4 
[0, 3, 1, 6, 2]  	144	3 
[0, 3, 4, 4, 2]  	157	3 
[0, 2, 5, 4, 2]  	161	2 
[7, 0, 1, 0, 3]  	64	5 
[6, 0, 0, 3, 3]  	90	7 
[2, 10, 0, 0, 3]  	124	6 
[0, 7, 3, 1, 3]  	138	5 
[0, 10, 2, 0, 3]  	140	4 
[1, 0, 9, 0, 3]  	142	6 
[0, 5, 4, 2, 3]  	147	3 
[5, 0, 5, 0, 4]  	110	8 
[0, 1, 3, 6, 4]  	152	2 
[3, 2, 1, 3, 5]  	106	9 
[2, 7, 1, 0, 251]  	106	8 
[0, 6, 2, 2, 251]  	128	4 
[0, 5, 0, 5, 252]  	135	3 
[0, 4, 2, 4, 252]  	138	3 
[0, 2, 8, 0, 252]  	142	2 
[0, 1, 8, 1, 252]  	147	1 
[0, 0, 8, 2, 252]  	152	1 
[0, 1, 10, 0, 252]  	161	1 
[6, 2, 0, 0, 253]  	64	4 
[5, 4, 1, 0, 253]  	94	6 
[1, 4, 2, 2, 253]  	113	4 
[0, 7, 1, 2, 253]  	124	4 
[0, 1, 8, 0, 253]  	131	1 
[0, 4, 0, 6, 253]  	140	3 
[0, 0, 4, 7, 253]  	172	1 
[5, 5, 0, 0, 254]  	90	6 
[1, 1, 5, 0, 254]  	93	2 
[4, 7, 0, 0, 254]  	105	5 
[3, 8, 0, 0, 254]  	109	3 
[4, 6, 0, 1, 254]  	110	6 
[1, 8, 1, 0, 254]  	110	3 
[0, 6, 2, 1, 254]  	112	3 
[2, 9, 0, 0, 254]  	113	5 
[0, 7, 3, 0, 254]  	122	1 
[0, 10, 0, 1, 254]  	126	4 
[0, 5, 5, 0, 254]  	130	1 
[0, 12, 0, 0, 254]  	132	3 
[0, 4, 6, 0, 254]  	134	1 
[0, 1, 4, 4, 254]  	135	1 
[0, 3, 6, 1, 254]  	139	2 
[0, 0, 0, 9, 254]  	144	1 
[0, 3, 0, 7, 254]  	145	2 
[0, 3, 5, 3, 254]  	156	2 
[0, 0, 2, 8, 254]  	158	1 
[2, 0, 2, 1, 255]  	60	4 
[0, 1, 4, 0, 255]  	71	1 
[1, 3, 3, 0, 255]  	85	2 
[0, 7, 1, 0, 255]  	92	1 
[1, 4, 2, 1, 255]  	97	4 
[0, 6, 1, 1, 255]  	97	3 
[0, 5, 3, 0, 255]  	100	1 
[0, 4, 0, 4, 255]  	108	2 
[0, 0, 4, 3, 255]  	108	1 
[0, 9, 0, 1, 255]  	115	2 
[0, 11, 0, 0, 255]  	121	1 
[1, 2, 3, 3, 255]  	122	3 
[0, 3, 2, 4, 255]  	127	2 
[0, 0, 0, 8, 255]  	128	1 
[0, 4, 3, 3, 255]  	137	2 
------
The gap is between 6 and 250.
Lengths: 2 2 6 8 2 3.
For 164 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7*w^3

For 93 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^1*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^3*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 22 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[912347883837998240 + 4320721604847933926*2^64 + 7238380010077893204*2^128 + 664911596*2^192,18043355283525200968 + 17484488235604061234*2^64 + 12068495323127999567*2^128 + 2213752132*2^192,7672467225117708896 + 16363376932081321094*2^64 + 7045990952017610907*2^128 + 1557538088*2^192,7523922662226713312 + 15083177810793760725*2^64 + 7988529566389374393*2^128 + 3827110968*2^192,713624206574486688 + 17315528542668239360*2^64 + 11722679430290407600*2^128 + 1932355023*2^192,7106677219693910992 + 9643733652560028984*2^64 + 8443802528557531625*2^128 + 2886950657*2^192,10633313992414980704 + 10488480325861712717*2^64 + 7325222973887835470*2^128 + 31883163*2^192,9640504613668963392 + 13974427568039580149*2^64 + 12113703388784942943*2^128 + 3649258775*2^192,9049601693138057824 + 8707722752381223746*2^64 + 14413401007518649786*2^128 + 1097254146*2^192,11132425815873988864 + 281262960126065133*2^64 + 17757188893198836640*2^128 + 2193876183*2^192;\
15052381494033906738 + 15300281434112757429*2^64 + 7446628867141004163*2^128 + 622600930*2^192,9680693373556452336 + 18145348754140287449*2^64 + 7601400833862231903*2^128 + 2982486086*2^192,7306048678916630064 + 17964132007527684703*2^64 + 11897578113856366966*2^128 + 4133797820*2^192,14907959350104473600 + 1119748549312987388*2^64 + 17880529323674364136*2^128 + 2041216106*2^192,5478657983284542096 + 603221946719609888*2^64 + 853097720710783264*2^128 + 1555715535*2^192,18321891639687740472 + 12198630990937007811*2^64 + 18131618181009755913*2^128 + 1064136615*2^192,16596263563210383104 + 1447176297092264935*2^64 + 13589225496994281311*2^128 + 328321608*2^192,14796639794234990656 + 6479936620059053047*2^64 + 15107400793024609079*2^128 + 640734700*2^192,18011228234379984704 + 14938373427710084466*2^64 + 15157265601253284722*2^128 + 74024328*2^192,17050799794186401648 + 9915797667409810822*2^64 + 9751381324178229320*2^128 + 2625491755*2^192;\
14981245396414373790 + 8699051267180839536*2^64 + 13384285374998302497*2^128 + 1425778667*2^192,18291726653742185684 + 13659434055629865024*2^64 + 4172529203842544823*2^128 + 1124243604*2^192,14951411173197237600 + 16079753988024437948*2^64 + 3846772009067648069*2^128 + 631598099*2^192,181573105919955192 + 12139574841525918683*2^64 + 6241700044175549786*2^128 + 1820253655*2^192,8443017703346575392 + 7829924519298946631*2^64 + 4263758915541094386*2^128 + 560210307*2^192,12871311076476614096 + 261469121803894823*2^64 + 10634025498129410028*2^128 + 127140632*2^192,12457405614517857216 + 6450849791541983454*2^64 + 16461530174142263583*2^128 + 877239035*2^192,3647760571758837096 + 16038373908333935640*2^64 + 10019796023905593408*2^128 + 1560570953*2^192,13786603968630351728 + 9305739786249595560*2^64 + 4116201669818594532*2^128 + 226265404*2^192,14812898450669252368 + 3813624073706438111*2^64 + 17787788819117522676*2^128 + 1956481027*2^192;\
10814591891948949486 + 9157444510144584856*2^64 + 4723306419085599216*2^128 + 614857733*2^192,9929613531735730964 + 2047352827410909546*2^64 + 16289636573991560741*2^128 + 2127981533*2^192,14388169829190071128 + 14342024627898780571*2^64 + 9201796380212087936*2^128 + 231554332*2^192,14718550772426551248 + 10416613588055253437*2^64 + 15966919693140650743*2^128 + 208361290*2^192,9970156135327204480 + 92704114888678811*2^64 + 12183996480538904390*2^128 + 1520166450*2^192,394543429120390480 + 7823921263463761190*2^64 + 17550776337338131897*2^128 + 882381794*2^192,5559792265803410576 + 17789012491074610236*2^64 + 15208034486309715308*2^128 + 1433039947*2^192,14904822608102596232 + 17038060600329066380*2^64 + 5009910276005603705*2^128 + 320721283*2^192,698603344921427120 + 13883866248317692544*2^64 + 1438994168302087012*2^128 + 1383552710*2^192,12983209213411662016 + 1494627306621862632*2^64 + 17219806261121204351*2^128 + 1618449887*2^192;\
14924083865105183363 + 15518053742825237605*2^64 + 17157504101075689852*2^128 + 2743100864*2^192,2374543131218812510 + 10319261678739037317*2^64 + 5437954966932849413*2^128 + 1941390765*2^192,14927460840884413098 + 16157665065486548982*2^64 + 10093157551029653158*2^128 + 3549822132*2^192,13971273015821372730 + 18273902941986080961*2^64 + 11454032461961640272*2^128 + 599497066*2^192,3031291409933014944 + 14008516988762767270*2^64 + 5114504059927103224*2^128 + 487663101*2^192,8271092479396423936 + 11228101603744507389*2^64 + 16169094586884610676*2^128 + 3959727207*2^192,12423078994039584932 + 8548911226544796922*2^64 + 11829640588922562910*2^128 + 2141172783*2^192,12352605007999212536 + 983676611438418287*2^64 + 6976186027937906719*2^128 + 2083624470*2^192,844115479644537280 + 8356987704295291478*2^64 + 17683838087462442930*2^128 + 2251672121*2^192,9342462499653296916 + 8860928539639358468*2^64 + 4600256536707632423*2^128 + 884703781*2^192;\
12632491299097373186 + 9204809142581928049*2^64 + 14323702302761981442*2^128 + 2608010083*2^192,14799105029043903332 + 3139628384923923407*2^64 + 6135169103153100812*2^128 + 2941582398*2^192,11238169512416244228 + 2010982680684681995*2^64 + 2444810123341559296*2^128 + 2391447838*2^192,14088516206320510188 + 8118866424802772334*2^64 + 18363612432070623212*2^128 + 1265457765*2^192,8505165196060884032 + 6697135346030936083*2^64 + 2775221509453103280*2^128 + 528126115*2^192,8197746946791524192 + 14314242636323399328*2^64 + 1259318343646800372*2^128 + 1653328402*2^192,11442660939795222664 + 14557595507066689255*2^64 + 16997804369746760318*2^128 + 2247576765*2^192,11657179899514724960 + 4719894472517461801*2^64 + 6025620556319173582*2^128 + 3248445118*2^192,5243580322169903888 + 11289206981873139089*2^64 + 5688415847022284959*2^128 + 2787099468*2^192,10572156492811725896 + 7045357846125551763*2^64 + 18200414359413440559*2^128 + 658609503*2^192;\
4876498199182162018 + 11731494821063783619*2^64 + 5817504272294220210*2^128 + 3236439299*2^192,5209875876875384172 + 7669967930686617525*2^64 + 6543501047938971446*2^128 + 2425107881*2^192,6431592839142329728 + 6686527218425188555*2^64 + 10041247048276126414*2^128 + 2064918072*2^192,13720763270344909212 + 5015239551604400044*2^64 + 6710586723938519692*2^128 + 2024743556*2^192,17670423928973423264 + 16114145583280446186*2^64 + 178730179265601626*2^128 + 748339154*2^192,10495100831739914064 + 15173086457266099982*2^64 + 16420298010444611524*2^128 + 1510951160*2^192,15836374169542895208 + 10652296603560791801*2^64 + 11932392648591428057*2^128 + 969356873*2^192,16692512390233920232 + 17266406350597728916*2^64 + 8709436266892391760*2^128 + 40041206*2^192,4184603956732551336 + 4539619666956996012*2^64 + 11223900611245778211*2^128 + 1524717941*2^192,8629565154014369600 + 7818611165811811919*2^64 + 15276119378442561266*2^128 + 625139065*2^192;\
1697181289837822439 + 1573231319798397093*2^64 + 14723429640139049534*2^128 + 1609690766*2^192,15176521775469578764 + 2412421217121513451*2^64 + 16777875129743981225*2^128 + 666493071*2^192,5570347697396460776 + 9464678069945709264*2^64 + 12497955016781368132*2^128 + 1800249377*2^192,10992764398657314816 + 17886869799053057921*2^64 + 9506479411872369547*2^128 + 1370145226*2^192,15707415082067280568 + 18145133100349746671*2^64 + 8796823176499384175*2^128 + 656594200*2^192,62426217010905572 + 3124056541386271902*2^64 + 157562946349897851*2^128 + 1305036844*2^192,925240255249584256 + 8499783888308643340*2^64 + 11652131325212410960*2^128 + 313989851*2^192,12075753278321422312 + 11220965664413327712*2^64 + 7515746616019474386*2^128 + 539281896*2^192,9441129956519559264 + 10977557359854509382*2^64 + 10868111273082909254*2^128 + 1464548667*2^192,9921344176616350792 + 13488845240004646204*2^64 + 4347681374765661147*2^128 + 1598101098*2^192;\
3306729297772987992 + 11136350736917018570*2^64 + 12025058435563226948*2^128 + 572178253*2^192,2181651441612976400 + 9260486936316484433*2^64 + 10257371467973077881*2^128 + 77690376*2^192,5796481208819020896 + 6882450160088600406*2^64 + 5843822514786943601*2^128 + 854703516*2^192,11529701863431568432 + 279869873498134397*2^64 + 7202317886284936970*2^128 + 703883784*2^192,2087891207449033248 + 13399344967834126874*2^64 + 7749256773800391305*2^128 + 1711374598*2^192,14869750291264647216 + 7676474762458524871*2^64 + 5307593394846964737*2^128 + 970928015*2^192,1825142227988405760 + 13930398225759214423*2^64 + 8050953055594199937*2^128 + 1102772890*2^192,2164108725720629792 + 2011160045381805089*2^64 + 10289687610452593932*2^128 + 335040155*2^192,10069936250107496432 + 8381017984901205228*2^64 + 17278996578688952973*2^128 + 938040772*2^192,16480513815211044672 + 1521093778022684557*2^64 + 1401991907705808707*2^128 + 663165570*2^192;\
4193127343169951092 + 7958748712002077049*2^64 + 178735487096641182*2^128 + 2018119959*2^192,13378950222261561192 + 4479897626884408469*2^64 + 4470589278946239907*2^128 + 865956356*2^192,6967530053298782664 + 4152372810322051694*2^64 + 14311147527564237385*2^128 + 2197803335*2^192,9736637789726336280 + 16771153023179251817*2^64 + 14656002421880406315*2^128 + 1855546354*2^192,586416913718576896 + 15659358557541187565*2^64 + 12016474247640012721*2^128 + 4124507409*2^192,17717233316808849632 + 7765469262555519910*2^64 + 3684548014653174635*2^128 + 3097018411*2^192,15912469174245296272 + 5993541465564174659*2^64 + 17627945940134998989*2^128 + 1037211674*2^192,10073751114359978752 + 12887401822179610730*2^64 + 16983889535465862089*2^128 + 210296864*2^192,14640738542662464048 + 2032583600088891522*2^64 + 3787213994706748564*2^128 + 2432610965*2^192,2717699321326916864 + 14769889295248091236*2^64 + 15854411795385973393*2^128 + 4121543979*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4683 lists. */
The sign is: -1
The characteristic polynomial is: x^10 - x^8 - 8*x^7 - 4*x^6 + 16*x^4 + 128*x^3 + 64*x^2 - 1024
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + 3*x^6 - 8*x^5 + 8*x^4 - 32*x^3 + 48*x^2 + 256, 1]
The valuation of f-g is: 28
The valuation of subst(g,x,A) is: 26

Please input coefficients below.
The polynomial is: 1*x^8*z^1 + 1*x^7*y^2 + 1*x^2*y^1*z^2*w^1 + 1*x^1*y^3*z^1*w^1 + 1*x^1*w^4 + 1*y^5*w^1 + 1*y^1*z^4
Total 528: 
Look at the ideal generated by: 
1*x^1
1*y^1
