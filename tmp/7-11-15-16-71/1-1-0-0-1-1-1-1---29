/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * z^1               = Coefficient of   x^7 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 124
[1, 3, 1, 0, 0]  	55	3 
[8, 0, 0, 0, 0]  	56	3  <--- 1
[2, 2, 1, 1, 0]  	67	4 
[7, 2, 0, 0, 0]  	71	4 
[6, 3, 0, 0, 0]  	75	5 
[2, 0, 0, 4, 0]  	78	2 
[1, 1, 4, 0, 0]  	78	2 
[6, 0, 4, 0, 0]  	102	5 
[1, 3, 0, 4, 0]  	104	2 
[0, 4, 4, 0, 0]  	104	2 
[5, 5, 0, 1, 0]  	106	9 
[1, 2, 1, 4, 0]  	108	4 
[6, 2, 3, 0, 0]  	109	3 
[6, 2, 0, 3, 0]  	112	4 
[5, 7, 0, 0, 0]  	112	5 
[1, 0, 7, 0, 0]  	112	3 
[1, 0, 4, 3, 0]  	115	2 
[0, 5, 3, 1, 0]  	116	2 
[0, 5, 0, 4, 0]  	119	2 
[4, 7, 0, 1, 0]  	121	7 
[0, 7, 2, 1, 0]  	123	2 
[5, 0, 6, 0, 0]  	125	6 
[5, 4, 0, 3, 0]  	127	8 
[1, 1, 2, 5, 0]  	128	4 
[0, 9, 1, 1, 0]  	130	2 
[0, 8, 3, 0, 0]  	133	3 
[3, 9, 0, 1, 0]  	136	5 
[0, 11, 0, 1, 0]  	137	2 
[4, 10, 0, 0, 0]  	138	5 
[0, 3, 6, 1, 0]  	139	3 
[0, 10, 2, 0, 0]  	140	3 
[5, 0, 5, 2, 0]  	142	7 
[0, 12, 1, 0, 0]  	147	3 
[1, 0, 1, 8, 0]  	150	3 
[1, 0, 0, 9, 0]  	151	3 
[3, 12, 0, 0, 0]  	153	3 
[0, 4, 3, 4, 0]  	153	2 
[0, 3, 8, 0, 0]  	153	2 
[0, 4, 1, 6, 0]  	155	3 
[1, 2, 0, 8, 0]  	157	2 
[0, 3, 4, 4, 0]  	157	2 
[0, 2, 9, 0, 0]  	157	2 
[0, 3, 3, 5, 0]  	158	2 
[0, 2, 8, 1, 0]  	158	2 
[0, 3, 2, 6, 0]  	159	2 
[0, 2, 7, 2, 0]  	159	2 
[0, 3, 1, 7, 0]  	160	2 
[0, 2, 6, 3, 0]  	160	2 
[1, 14, 0, 0, 0]  	161	4 
[0, 2, 4, 5, 0]  	162	1 
[0, 1, 9, 1, 0]  	162	1 
[0, 2, 0, 9, 0]  	166	1 
[0, 1, 5, 5, 0]  	166	1 
[0, 0, 10, 1, 0]  	166	1 
[0, 1, 4, 6, 0]  	167	1 
[0, 0, 9, 2, 0]  	167	1 
[0, 1, 2, 8, 0]  	169	1 
[0, 0, 7, 4, 0]  	169	1 
[0, 4, 0, 8, 0]  	172	2 
[0, 0, 3, 8, 0]  	173	1 
[0, 0, 2, 9, 0]  	174	1 
[0, 16, 0, 0, 0]  	176	1  <--- 2
[0, 1, 11, 0, 0]  	176	1 
[0, 0, 0, 11, 0]  	176	1  <--- 4
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 5, 7, 0]  	187	1 
[7, 1, 0, 0, 1]  	60	4 
[1, 0, 0, 4, 1]  	71	2 
[0, 4, 0, 4, 1]  	108	3 
[0, 3, 1, 5, 1]  	128	3 
[0, 1, 0, 9, 1]  	155	2 
[6, 0, 0, 3, 2]  	90	6 
[1, 0, 3, 3, 2]  	100	2 
[5, 0, 4, 2, 2]  	127	7 
[1, 0, 6, 2, 2]  	129	4 
[3, 8, 0, 3, 2]  	157	3 
[7, 0, 1, 0, 3]  	64	4 
[2, 10, 0, 1, 3]  	140	4 
[4, 6, 0, 3, 3]  	142	6 
[0, 14, 0, 0, 3]  	154	4 
[0, 1, 3, 4, 4]  	120	2 
[3, 0, 5, 2, 4]  	128	7 
[2, 9, 0, 1, 4]  	129	6 
[2, 7, 0, 3, 4]  	139	5 
[0, 2, 0, 8, 4]  	150	2 
[1, 9, 0, 3, 4]  	154	4 
[5, 1, 2, 3, 5]  	124	6 
[5, 0, 2, 3, 6]  	113	9 
[1, 8, 0, 3, 7]  	143	5 
[0, 10, 0, 3, 10]  	158	2 
[0, 6, 2, 3, 17]  	144	4 
[0, 8, 1, 3, 18]  	151	2 
[0, 0, 9, 1, 234]  	151	1 
[0, 2, 6, 2, 238]  	144	2 
[0, 0, 11, 0, 241]  	165	1 
[0, 0, 10, 0, 244]  	150	1 
[0, 0, 2, 8, 246]  	158	1 
[0, 0, 9, 0, 247]  	135	1 
[0, 2, 7, 1, 248]  	143	2 
[0, 1, 1, 8, 249]  	154	2 
[0, 2, 8, 0, 250]  	142	1 
[0, 2, 6, 1, 251]  	128	2 
[0, 3, 0, 5, 252]  	113	2 
[0, 0, 8, 0, 252]  	120	1 
[0, 1, 0, 8, 252]  	139	2 
[6, 2, 0, 0, 253]  	64	3 
[5, 4, 0, 1, 253]  	95	4 
[5, 0, 5, 0, 253]  	110	4 
[0, 7, 3, 0, 253]  	122	3 
[0, 3, 5, 1, 253]  	124	2 
[3, 11, 0, 0, 253]  	142	3 
[0, 0, 4, 7, 253]  	172	1 
[5, 5, 0, 0, 254]  	90	3 
[0, 3, 0, 4, 254]  	97	2 
[0, 5, 3, 0, 254]  	100	1 
[4, 7, 0, 0, 254]  	105	3 
[0, 7, 2, 0, 254]  	107	1 
[2, 9, 0, 0, 254]  	113	3 
[0, 9, 1, 0, 254]  	114	1 
[0, 11, 0, 0, 254]  	121	1 
[1, 2, 1, 1, 255]  	60	3 
[0, 1, 4, 0, 255]  	71	1 
[0, 4, 3, 1, 255]  	105	2 
[0, 0, 4, 3, 255]  	108	1 
------
The gap is between 19 and 233.
Lengths: 2 2 6 7 2 3.
For 164 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7*w^3

For 93 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^1*z^1*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^3*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 22 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[7802577976263438154 + 17294070974120466756*2^64 + 16564472488603030716*2^128 + 1983046012*2^192,17904410075997877776 + 1498744793533068461*2^64 + 9381818788318389569*2^128 + 1611288940*2^192,13630879083494349184 + 18112810711559805992*2^64 + 4106896698066199188*2^128 + 1215518713*2^192,14879448584490418432 + 2830488809485057675*2^64 + 17657631419849373122*2^128 + 1676450898*2^192,16309998408956460200 + 18306360446786086472*2^64 + 2093631453492308437*2^128 + 298408150*2^192,16961053897207827840 + 1758792010722468655*2^64 + 16724370340559143860*2^128 + 78861517*2^192,17454717845635041536 + 5523254053263028543*2^64 + 11074705466741369838*2^128 + 1649715940*2^192,11564181818955926312 + 4961738663832381213*2^64 + 15121595554694104080*2^128 + 1921651948*2^192,17862630873362104960 + 12682900180529837371*2^64 + 9227443970107498194*2^128 + 1708927962*2^192,13369718778171478784 + 3298833975746393245*2^64 + 10854354789420340231*2^128 + 11572816*2^192;\
10813398639974708148 + 12812801569279549790*2^64 + 8293440681708899779*2^128 + 1454573244*2^192,2969075820817701034 + 2958861435949340359*2^64 + 13687024327555352983*2^128 + 906732446*2^192,14798076084853762880 + 2064090203584998728*2^64 + 16272007288640734227*2^128 + 2131364907*2^192,1834140481117620416 + 13730598340930242770*2^64 + 2599854191284389897*2^128 + 835961119*2^192,17949796842471423140 + 17447259727270928187*2^64 + 257492067719809520*2^128 + 1948194442*2^192,3064887474760073472 + 2898015561239524899*2^64 + 11969115040077499939*2^128 + 193332839*2^192,5949921141711222400 + 12273427561863320337*2^64 + 12910067088648960898*2^128 + 66337312*2^192,4568262097951076068 + 2221103843746730304*2^64 + 10420518890444665744*2^128 + 889188604*2^192,18204712901652540288 + 4862005145144784484*2^64 + 11032896483159557995*2^128 + 1834631204*2^192,15445004318848102272 + 11952750841925073221*2^64 + 6413317661563733227*2^128 + 1483974577*2^192;\
16778311907027324353 + 13500095012260352493*2^64 + 15800237836653332068*2^128 + 1007581732*2^192,14718400042170493806 + 16082868793075347389*2^64 + 9202069512998849980*2^128 + 524948731*2^192,98370206320025472 + 7829668511859281551*2^64 + 5325052248300783014*2^128 + 64655443*2^192,14024237659524126080 + 18225514103465238168*2^64 + 11018037000629866434*2^128 + 545125805*2^192,4655551721127140584 + 8886675770324748399*2^64 + 439613048425459287*2^128 + 529369245*2^192,2090344155391143296 + 13835083097074964557*2^64 + 5873557857682050994*2^128 + 467920131*2^192,6166277501966346112 + 10887547683958180328*2^64 + 8947472352708263119*2^128 + 144016918*2^192,13942347080131641932 + 9911846220810340094*2^64 + 13778843454261560820*2^128 + 1046728207*2^192,11239737389697015360 + 15139121624392435360*2^64 + 1977758307882095934*2^128 + 399352512*2^192,13490629750930350784 + 16458313582309050912*2^64 + 12129153927231333791*2^128 + 181943472*2^192;\
6417928493657849259 + 643300904306892009*2^64 + 2371178449939262722*2^128 + 1031345518*2^192,7939704428299711658 + 10045546712590577446*2^64 + 17246096899288583078*2^128 + 550318062*2^192,9410760852043990656 + 14611509148829649357*2^64 + 17643099331414488573*2^128 + 323737230*2^192,4328579866475008448 + 2068960862544053378*2^64 + 11870625309968623293*2^128 + 630393917*2^192,7438043418973204904 + 4972719388865223424*2^64 + 1413871629554815347*2^128 + 531936407*2^192,7588057780568346628 + 16006555788262599300*2^64 + 14738599243172404444*2^128 + 317993333*2^192,14379959523922184064 + 13607869618437415792*2^64 + 12819744880908457704*2^128 + 169836474*2^192,17627408658220643148 + 4189777125311795622*2^64 + 6349846445177010839*2^128 + 449167991*2^192,11848547659965314496 + 13052166070106231984*2^64 + 342860567292151026*2^128 + 687890243*2^192,10842425434511189440 + 9707130411770655733*2^64 + 17941046818221877837*2^128 + 721079632*2^192;\
15192057807459587352 + 5732618788731847113*2^64 + 2756950965299867269*2^128 + 318480545*2^192,3763160119342509232 + 13965379209703501678*2^64 + 18323856127426173691*2^128 + 48396409*2^192,15120392265014015744 + 6354355858025202829*2^64 + 12658610221315215845*2^128 + 757544470*2^192,7291637940624422912 + 16434812016282137468*2^64 + 17651173512956364645*2^128 + 1020482726*2^192,7473499797423438816 + 5384261820229377749*2^64 + 8452214396807229005*2^128 + 927212086*2^192,11299236992872752136 + 5500886322275027440*2^64 + 7458297061153463803*2^128 + 775610488*2^192,436392982073175040 + 10707338650214900965*2^64 + 4476910588722767378*2^128 + 625241572*2^192,17570908168598933984 + 5845621881636855483*2^64 + 2226235269426308392*2^128 + 393951239*2^192,10876488368637538904 + 12702991060604153733*2^64 + 8261648482795733521*2^128 + 889959703*2^192,1198972261013387776 + 11009219771426713531*2^64 + 2276868559931241068*2^128 + 628981244*2^192;\
14086713382431028624 + 14128318124934668270*2^64 + 7785775175603659996*2^128 + 1928861074*2^192,7945108159879260208 + 6225995917446201005*2^64 + 15010504650362412579*2^128 + 1486538801*2^192,1786752662843864828 + 3832654373714166911*2^64 + 15209775295966538155*2^128 + 1744279235*2^192,3118442753109167620 + 13550853055963089307*2^64 + 2304223631640558181*2^128 + 633225602*2^192,2245286900232909792 + 7801859504538553600*2^64 + 9498633515236441252*2^128 + 1890424536*2^192,4177941738907992488 + 17570346315557058864*2^64 + 11837393470619243684*2^128 + 1419723747*2^192,3418696322912976896 + 8217905200267355882*2^64 + 1646466494951080858*2^128 + 1384150331*2^192,5580188173416012800 + 3454993470832242153*2^64 + 3579403683207214734*2^128 + 258590072*2^192,8126894098452716632 + 14296811806166486331*2^64 + 8037928551912143360*2^128 + 1530568715*2^192,6004289166277740288 + 13158963905544224228*2^64 + 14521645206576975453*2^128 + 194933002*2^192;\
534525444652575092 + 17911196650584566980*2^64 + 7072679513010591073*2^128 + 1258915244*2^192,10104161187141329164 + 9510825432211675615*2^64 + 4215910990805526351*2^128 + 342480188*2^192,15006681756779320808 + 4685706286290106397*2^64 + 10399107074780597709*2^128 + 233098753*2^192,1166207662505248886 + 2472168090689062027*2^64 + 15742394757465614095*2^128 + 2084176590*2^192,13725436437706787912 + 16542396476846000723*2^64 + 14741790945816262842*2^128 + 897866144*2^192,11043581533348082836 + 14583744675204811861*2^64 + 17875616635386977119*2^128 + 1930833873*2^192,7533683798398636804 + 5832398825271313820*2^64 + 13376329125911610395*2^128 + 669394098*2^192,8244443670841393720 + 3716420151675978960*2^64 + 16061252313799774373*2^128 + 863897704*2^192,18119051503751289956 + 9547896399336438390*2^64 + 13717599299538758015*2^128 + 308418942*2^192,7622387945135998464 + 16621783932620788479*2^64 + 16503011693861080581*2^128 + 1863962073*2^192;\
13040044753722197542 + 2816971252215000912*2^64 + 14300023732855101726*2^128 + 791051425*2^192,13135582339142439853 + 18098175134403322120*2^64 + 3445775609559872096*2^128 + 550004362*2^192,11047706031282670176 + 8191326935062276443*2^64 + 1087368392534408694*2^128 + 159054314*2^192,17529673833150741408 + 2358072866389654422*2^64 + 7923444941212580859*2^128 + 395714416*2^192,248473615619064238 + 9723114210074087522*2^64 + 18317998039849646855*2^128 + 439383226*2^192,7690928299474739072 + 7774364256235013358*2^64 + 3238814516816025838*2^128 + 20774092*2^192,6248411465999164608 + 12310030292777891447*2^64 + 11991710529385071166*2^128 + 503702255*2^192,2841219520316532882 + 1508229046920674062*2^64 + 2324464061043556591*2^128 + 1008640497*2^192,9344387622883281472 + 6792369464282383565*2^64 + 12930295832129772618*2^128 + 219340781*2^192,1500869877430724672 + 3246996615892239197*2^64 + 6016713206072909194*2^128 + 843459623*2^192;\
11736899676603344968 + 306540219352354255*2^64 + 13643673239532478577*2^128 + 1486090783*2^192,16225569308726051144 + 15829035357715962283*2^64 + 5821906295389252219*2^128 + 1425492212*2^192,17242515099652992364 + 9158183979629812192*2^64 + 9699355275327403793*2^128 + 1982662180*2^192,11524177678772893184 + 4685172542588218893*2^64 + 3303953464999339219*2^128 + 1550492561*2^192,13666180359213229728 + 8612956462611338319*2^64 + 17135721810236144055*2^128 + 1729101433*2^192,9114113237085150360 + 2399629236451525079*2^64 + 5149653474861020688*2^128 + 1637752502*2^192,904280495799559680 + 16590880807281471232*2^64 + 14307467755492882155*2^128 + 281456899*2^192,488604320562759280 + 302139756724399440*2^64 + 1406303205652472198*2^128 + 577521010*2^192,3445217682669071016 + 4790902593224234576*2^64 + 16450158863670194640*2^128 + 2022350503*2^192,15008761639455952640 + 3350821872677291669*2^64 + 3256717104181883405*2^128 + 1784521721*2^192;\
16730058977286339672 + 2017909938600944157*2^64 + 5013553325098307934*2^128 + 1972308540*2^192,6683905729872996072 + 12912739022337639396*2^64 + 8043969028497833336*2^128 + 318135194*2^192,11053116021882947948 + 15502333868428642446*2^64 + 2964834411556585171*2^128 + 171915562*2^192,2086506190848104704 + 17686940825953018151*2^64 + 4930558923803878306*2^128 + 410291467*2^192,846466975978027552 + 3187895817921169996*2^64 + 1919004469321296004*2^128 + 1744786078*2^192,1525649900786732208 + 7183318444080243087*2^64 + 598614973632943176*2^128 + 1416622562*2^192,8017838159026552320 + 17608036815856184349*2^64 + 9013170696368099493*2^128 + 2100522382*2^192,13777166594042993712 + 9789066814630769380*2^64 + 15940444677062937793*2^128 + 492080079*2^192,13318038727238193560 + 6627309550742728205*2^64 + 17168712051376007625*2^128 + 802529178*2^192,1540631616101458696 + 8585044515514167116*2^64 + 7708814403681865394*2^128 + 133056702*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 4301 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - x^9 - 32*x^5 - 256*x + 1024
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 2; x^8 + 3*x^7 + 8*x^6 + 20*x^5 + 48*x^4 + 80*x^3 + 128*x^2 + 192*x + 256, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^8*z^1 + 1*x^7*y^2 + 1*x^1*y^3*z^1*w^1 + 1*x^1*w^4 + 1*y^5*w^1 + 1*y^1*z^4
Total 528: 
Look at the ideal generated by: 
1*x^1
1*y^1
