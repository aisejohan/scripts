/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * z^1               = Coefficient of   x^7 * y^2               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * w^4               = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
Allocate M_len = 102400 elements.
The final length of G is 253
[8, 0, 0, 0, 0]  	56	3  <--- 1
[5, 0, 0, 2, 0]  	67	5 
[7, 2, 0, 0, 0]  	71	4 
[4, 1, 0, 2, 0]  	71	3 
[1, 3, 1, 1, 0]  	71	3 
[6, 3, 0, 0, 0]  	75	7 
[4, 3, 1, 0, 0]  	76	6 
[2, 0, 0, 4, 0]  	78	3 
[5, 2, 1, 1, 0]  	88	6 
[5, 5, 0, 0, 0]  	90	9 
[4, 1, 4, 0, 0]  	99	5 
[2, 5, 2, 0, 0]  	99	7 
[6, 0, 4, 0, 0]  	102	7 
[3, 6, 1, 0, 0]  	102	7 
[3, 2, 4, 0, 0]  	103	4 
[4, 0, 4, 1, 0]  	104	5 
[4, 7, 0, 0, 0]  	105	9 
[2, 3, 4, 0, 0]  	107	6 
[3, 5, 0, 2, 0]  	108	7 
[1, 2, 1, 4, 0]  	108	6 
[6, 2, 3, 0, 0]  	109	5 
[3, 4, 0, 3, 0]  	113	9 
[2, 2, 2, 3, 0]  	114	5 
[1, 4, 0, 4, 0]  	115	4 
[1, 3, 5, 0, 0]  	115	4 
[2, 8, 1, 0, 0]  	117	7 
[3, 9, 0, 0, 0]  	120	7 
[1, 3, 0, 5, 0]  	120	5 
[4, 0, 3, 3, 0]  	121	9 
[2, 0, 4, 3, 0]  	122	6 
[1, 5, 4, 0, 0]  	122	6 
[3, 1, 4, 2, 0]  	124	7 
[5, 0, 6, 0, 0]  	125	9 
[2, 2, 5, 1, 0]  	127	7 
[3, 0, 5, 2, 0]  	128	7 
[2, 6, 0, 3, 0]  	128	7 
[2, 2, 4, 2, 0]  	128	6 
[1, 1, 2, 5, 0]  	128	6 
[1, 1, 1, 6, 0]  	129	6 
[2, 1, 5, 2, 0]  	132	5 
[1, 10, 1, 0, 0]  	132	5 
[1, 7, 0, 3, 0]  	132	6 
[4, 0, 7, 0, 0]  	133	7 
[2, 8, 0, 2, 0]  	134	7 
[2, 0, 8, 0, 0]  	134	7 
[2, 11, 0, 0, 0]  	135	7 
[1, 9, 2, 0, 0]  	136	5 
[1, 2, 5, 2, 0]  	136	4 
[1, 2, 4, 3, 0]  	137	5 
[1, 1, 8, 0, 0]  	138	5 
[0, 7, 3, 1, 0]  	138	5 
[1, 12, 0, 0, 0]  	139	5 
[1, 1, 6, 2, 0]  	140	4 
[2, 2, 7, 0, 0]  	141	4 
[1, 2, 0, 7, 0]  	141	5 
[1, 1, 5, 3, 0]  	141	4 
[0, 7, 0, 4, 0]  	141	4 
[1, 1, 4, 4, 0]  	142	6 
[1, 0, 9, 0, 0]  	142	5 
[1, 0, 8, 1, 0]  	143	4 
[0, 6, 3, 2, 0]  	143	4 
[1, 11, 0, 1, 0]  	144	3 
[1, 0, 7, 2, 0]  	144	4 
[0, 9, 3, 0, 0]  	144	4 
[0, 3, 1, 6, 0]  	144	3 
[1, 0, 6, 3, 0]  	145	3 
[0, 9, 2, 1, 0]  	145	4 
[0, 6, 1, 4, 0]  	145	4 
[1, 1, 0, 8, 0]  	146	3 
[1, 0, 5, 4, 0]  	146	3 
[0, 6, 0, 5, 0]  	146	3 
[1, 0, 4, 5, 0]  	147	3 
[0, 12, 1, 0, 0]  	147	4 
[0, 8, 4, 0, 0]  	148	3 
[0, 5, 3, 3, 0]  	148	3 
[1, 10, 0, 2, 0]  	149	5 
[0, 5, 2, 4, 0]  	149	4 
[1, 0, 1, 8, 0]  	150	3 
[0, 5, 1, 5, 0]  	150	4 
[0, 2, 0, 8, 0]  	150	3 
[1, 0, 0, 9, 0]  	151	2 
[0, 11, 2, 0, 0]  	151	3 
[0, 5, 0, 6, 0]  	151	2 
[0, 1, 4, 5, 0]  	151	2 
[0, 11, 1, 1, 0]  	152	2 
[0, 7, 5, 0, 0]  	152	3 
[0, 4, 4, 3, 0]  	152	2 
[0, 4, 3, 4, 0]  	153	3 
[0, 3, 8, 0, 0]  	153	3 
[0, 14, 0, 0, 0]  	154	4  <--- 2
[0, 4, 2, 5, 0]  	154	4 
[0, 7, 2, 3, 0]  	155	2 
[0, 3, 6, 2, 0]  	155	2 
[0, 10, 1, 2, 0]  	157	3 
[0, 3, 4, 4, 0]  	157	3 
[0, 13, 0, 1, 0]  	159	2 
[0, 2, 7, 2, 0]  	159	2 
[0, 5, 7, 0, 0]  	160	2 
[0, 2, 6, 3, 0]  	160	2 
[0, 2, 5, 4, 0]  	161	2 
[0, 9, 1, 3, 0]  	162	1 
[0, 5, 5, 2, 0]  	162	1 
[0, 1, 9, 1, 0]  	162	1 
[0, 1, 6, 4, 0]  	165	2 
[0, 0, 10, 1, 0]  	166	1 
[0, 0, 9, 2, 0]  	167	1 
[0, 11, 0, 3, 0]  	169	1 
[0, 1, 2, 8, 0]  	169	1 
[0, 0, 7, 4, 0]  	169	1 
[0, 0, 3, 8, 0]  	173	1 
[0, 0, 2, 9, 0]  	174	1 
[0, 1, 11, 0, 0]  	176	1 
[0, 0, 0, 11, 0]  	176	1  <--- 4
[0, 0, 12, 0, 0]  	180	1  <--- 3
[0, 0, 5, 7, 0]  	187	1 
[4, 1, 0, 1, 1]  	55	4 
[7, 1, 0, 0, 1]  	60	5 
[4, 0, 4, 0, 1]  	88	8 
[3, 5, 0, 1, 1]  	92	5 
[3, 4, 0, 2, 1]  	97	6 
[3, 2, 1, 3, 1]  	106	9 
[3, 0, 4, 2, 1]  	113	8 
[2, 5, 0, 3, 1]  	117	7 
[2, 8, 0, 1, 1]  	118	6 
[1, 9, 1, 0, 1]  	121	7 
[3, 1, 5, 1, 1]  	123	7 
[1, 1, 7, 0, 1]  	123	6 
[1, 11, 0, 0, 1]  	128	6 
[1, 7, 3, 0, 1]  	129	6 
[1, 0, 5, 3, 1]  	130	4 
[1, 0, 4, 4, 1]  	131	4 
[1, 10, 0, 1, 1]  	133	6 
[0, 11, 1, 0, 1]  	136	4 
[0, 8, 0, 3, 1]  	136	4 
[0, 4, 1, 5, 1]  	139	4 
[0, 7, 1, 3, 1]  	140	4 
[0, 13, 0, 0, 1]  	143	4 
[0, 6, 2, 3, 1]  	144	3 
[0, 5, 5, 1, 1]  	146	3 
[0, 5, 4, 2, 1]  	147	3 
[1, 0, 3, 6, 1]  	148	4 
[0, 8, 2, 2, 1]  	150	4 
[0, 4, 5, 2, 1]  	151	2 
[0, 1, 0, 9, 1]  	155	2 
[0, 4, 0, 7, 1]  	156	3 
[0, 3, 3, 5, 1]  	158	3 
[0, 2, 8, 1, 1]  	158	2 
[0, 4, 7, 1, 1]  	165	2 
[3, 3, 3, 0, 2]  	99	5 
[2, 4, 3, 0, 2]  	103	4 
[4, 0, 2, 3, 2]  	106	9 
[3, 1, 5, 0, 2]  	107	8 
[2, 7, 0, 1, 2]  	107	7 
[3, 0, 5, 1, 2]  	112	6 
[2, 6, 0, 2, 2]  	112	7 
[1, 9, 0, 1, 2]  	122	6 
[3, 1, 3, 3, 2]  	125	8 
[1, 2, 0, 6, 2]  	125	4 
[1, 1, 0, 7, 2]  	130	5 
[0, 9, 1, 1, 2]  	130	4 
[1, 0, 3, 5, 2]  	132	5 
[1, 2, 6, 1, 2]  	135	5 
[0, 8, 1, 2, 2]  	135	5 
[2, 0, 6, 2, 2]  	136	6 
[0, 11, 0, 1, 2]  	137	5 
[0, 5, 6, 0, 2]  	145	3 
[0, 4, 6, 1, 2]  	150	3 
[0, 1, 3, 6, 2]  	152	2 
[0, 3, 7, 1, 2]  	154	3 
[0, 2, 10, 0, 2]  	172	2 
[7, 0, 1, 0, 3]  	64	5 
[4, 0, 1, 3, 3]  	91	8 
[3, 1, 4, 0, 3]  	92	5 
[3, 0, 5, 0, 3]  	96	8 
[3, 2, 3, 1, 3]  	104	4 
[1, 7, 2, 0, 3]  	114	6 
[2, 1, 6, 0, 3]  	115	5 
[1, 2, 6, 0, 3]  	119	5 
[1, 0, 0, 7, 3]  	119	4 
[2, 0, 5, 2, 3]  	121	8 
[1, 0, 2, 6, 3]  	133	5 
[0, 7, 2, 2, 3]  	139	5 
[0, 10, 2, 0, 3]  	140	4 
[0, 10, 0, 2, 3]  	142	5 
[1, 8, 0, 2, 4]  	127	7 
[2, 0, 7, 1, 4]  	135	6 
[0, 7, 4, 0, 4]  	137	4 
[1, 6, 3, 0, 5]  	118	5 
[2, 10, 0, 0, 5]  	124	6 
[0, 8, 2, 1, 5]  	134	5 
[1, 0, 6, 2, 7]  	129	5 
[0, 5, 0, 5, 249]  	135	3 
[0, 4, 3, 3, 249]  	137	3 
[1, 1, 4, 3, 250]  	126	5 
[0, 5, 1, 4, 250]  	134	4 
[0, 6, 1, 3, 251]  	129	3 
[3, 4, 1, 0, 252]  	80	5 
[2, 7, 1, 0, 252]  	106	5 
[1, 1, 5, 2, 252]  	125	4 
[0, 6, 0, 4, 252]  	130	2 
[0, 4, 0, 6, 252]  	140	3 
[6, 2, 0, 0, 253]  	64	4 
[1, 2, 1, 3, 253]  	92	4 
[2, 2, 4, 0, 253]  	96	3 
[1, 3, 0, 4, 253]  	104	2 
[1, 5, 0, 3, 253]  	110	5 
[1, 0, 4, 3, 253]  	115	3 
[1, 0, 1, 6, 253]  	118	4 
[0, 5, 0, 4, 253]  	119	2 
[1, 1, 3, 4, 253]  	127	6 
[1, 0, 8, 0, 253]  	127	4 
[0, 9, 2, 0, 253]  	129	4 
[0, 3, 6, 1, 253]  	139	3 
[0, 6, 4, 1, 253]  	142	2 
[0, 2, 4, 4, 253]  	146	2 
[0, 1, 5, 4, 253]  	150	2 
[0, 0, 2, 8, 253]  	158	1 
[0, 0, 4, 7, 253]  	172	1 
[3, 1, 2, 3, 254]  	110	7 
[0, 9, 1, 0, 254]  	114	3 
[0, 5, 1, 3, 254]  	118	3 
[0, 1, 4, 3, 254]  	119	1 
[1, 2, 4, 2, 254]  	121	2 
[0, 4, 1, 4, 254]  	123	3 
[1, 1, 6, 1, 254]  	124	5 
[0, 5, 4, 1, 254]  	131	3 
[0, 4, 4, 2, 254]  	136	3 
[0, 0, 8, 1, 254]  	136	1 
[0, 1, 7, 2, 254]  	148	1 
[0, 0, 7, 3, 254]  	153	1 
[1, 3, 1, 0, 255]  	55	2 
[4, 0, 0, 2, 255]  	60	4 
[1, 1, 1, 4, 255]  	97	2 
[0, 8, 1, 0, 255]  	103	3 
[0, 5, 0, 3, 255]  	103	2 
[0, 1, 4, 2, 255]  	103	1 
[0, 7, 2, 0, 255]  	107	3 
[0, 7, 1, 1, 255]  	108	3 
[0, 4, 0, 4, 255]  	108	2 
[0, 0, 4, 3, 255]  	108	1 
[1, 1, 0, 6, 255]  	114	3 
[1, 2, 5, 1, 255]  	120	4 
[0, 4, 4, 1, 255]  	120	2 
[0, 0, 8, 0, 255]  	120	1 
[0, 3, 1, 5, 255]  	128	2 
[0, 9, 0, 2, 255]  	131	4 
[0, 12, 0, 0, 255]  	132	3 
[0, 5, 3, 2, 255]  	132	1 
[0, 4, 6, 0, 255]  	134	3 
[0, 1, 0, 8, 255]  	139	2 
[0, 3, 3, 4, 255]  	142	1 
[0, 2, 2, 6, 255]  	148	2 
[0, 1, 2, 7, 255]  	153	2 
------
The gap is between 8 and 248.
Lengths: 2 2 6 6 2 4.
For 164 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7*w^3

For 93 = 2*d-d1-d2-d3-d4 you get 6 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 22 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[11762084947651830360 + 1984672972005281489*2^64 + 1753040039601737317*2^128 + 4096294061*2^192,16755998656971147544 + 2365102111446329029*2^64 + 10323027067936135440*2^128 + 1533182748*2^192,15680342397804740432 + 10296775938852782241*2^64 + 11023148108265556001*2^128 + 1536448101*2^192,16071027761268894976 + 142046280950020817*2^64 + 9659477921481711467*2^128 + 7139354804*2^192,13765717349562098816 + 2541952747173234777*2^64 + 3061998638759306600*2^128 + 1591253210*2^192,2969476843692746432 + 3443795609514443722*2^64 + 3857893828795712558*2^128 + 5922609400*2^192,3553050886364214208 + 10625339195884019356*2^64 + 11485145595545034467*2^128 + 6164644977*2^192,15663045396156314800 + 17193534365803382285*2^64 + 8754628693298211564*2^128 + 1954804101*2^192,11383115365277976480 + 1511311920749897645*2^64 + 18035362972059183068*2^128 + 498226458*2^192,8057533117586068224 + 16063406272030183015*2^64 + 7433027236348833392*2^128 + 8120938796*2^192;\
13902792508830004356 + 15777711110471300284*2^64 + 1526129354710004737*2^128 + 7487255555*2^192,6253055353989649846 + 3846050817102180103*2^64 + 4774642074289661733*2^128 + 3064302482*2^192,8404393869749836220 + 6268891798108839087*2^64 + 12493845275623447370*2^128 + 6664835754*2^192,839180292034973472 + 980565457838108967*2^64 + 11828558608819722205*2^128 + 1721785798*2^192,9044753894683345712 + 8554639141393798111*2^64 + 3104624599796302587*2^128 + 1849125421*2^192,6494950454903370456 + 5945742115289006231*2^64 + 9666100551498757115*2^128 + 2416195995*2^192,9941323218780630784 + 14985283623346765173*2^64 + 11821983648405980123*2^128 + 5925234557*2^192,7163013047127587380 + 6107693335708377034*2^64 + 4142378848825919482*2^128 + 848920125*2^192,15992170761849586680 + 9700288742143642329*2^64 + 15537444734017100052*2^128 + 2366344187*2^192,15814001574305910672 + 15941954678556230539*2^64 + 870385471460857169*2^128 + 4794434606*2^192;\
7322130545718425804 + 8337963498856826877*2^64 + 14656773825446472275*2^128 + 7615272389*2^192,7119241523558510946 + 6770543119954224488*2^64 + 1495819153358245024*2^128 + 1252887599*2^192,10285434148780378260 + 9632071587527507135*2^64 + 12932786556610944344*2^128 + 5820825727*2^192,205941438642724064 + 17262142710573065058*2^64 + 234508094872443037*2^128 + 6073096147*2^192,2688625164448183248 + 105376393811880040*2^64 + 1140245092192822325*2^128 + 1418053468*2^192,17449231160583412520 + 4526869206038044613*2^64 + 15849983351763117560*2^128 + 6445073091*2^192,9787601954742759296 + 8548947186912547915*2^64 + 10194940954219329866*2^128 + 547460759*2^192,17114167995760164764 + 8847734269526924215*2^64 + 9173059742253274978*2^128 + 1928438088*2^192,11794325495651449544 + 10428748638971934741*2^64 + 10720813676864239969*2^128 + 3125483562*2^192,10641229471258587120 + 3532196050441616232*2^64 + 16148299362754585806*2^128 + 6022134020*2^192;\
3137606154418559208 + 2276918357138702052*2^64 + 15728311710702924104*2^128 + 4103008608*2^192,17612176006833999820 + 14571027208181916582*2^64 + 14457769285365935756*2^128 + 167263826*2^192,4557596947239538760 + 2428230558489909542*2^64 + 10724166041953949077*2^128 + 6061001298*2^192,4099777549707183408 + 9597045814499369835*2^64 + 248649919470716844*2^128 + 6430991943*2^192,675885633309829792 + 9109408810858768769*2^64 + 15630637606383534457*2^128 + 2026052538*2^192,6700047904382863904 + 9702312518657640122*2^64 + 8902763644913770615*2^128 + 5788921299*2^192,2287629259892056240 + 4869614391418816915*2^64 + 4107538745723423300*2^128 + 2536662837*2^192,12161269156519521304 + 18411567890920564420*2^64 + 16531168981601348315*2^128 + 1880511148*2^192,10774552275942988272 + 5182285120017136571*2^64 + 1077832947187963862*2^128 + 907758455*2^192,18124010185882236704 + 9505707539471303957*2^64 + 3567138981548884821*2^128 + 4654269145*2^192;\
7196897511696925024 + 15807356691396481702*2^64 + 5539618006306412435*2^128 + 8069597228*2^192,2962838756432171834 + 3311404826399222571*2^64 + 18312014768384585236*2^128 + 6995263092*2^192,9404575942540384532 + 9934519016398163018*2^64 + 14307586209724821387*2^128 + 1395947498*2^192,9885551009855292384 + 9700807827365067304*2^64 + 18432567901444166728*2^128 + 1390207558*2^192,3084256019515297408 + 716024685664032154*2^64 + 11612937996953084408*2^128 + 752206411*2^192,10399567616228617912 + 17932906253979739085*2^64 + 10936371094569382872*2^128 + 8090216972*2^192,9465679251333528256 + 1253918974139899777*2^64 + 15337201725325136806*2^128 + 3343593327*2^192,2510012127375214684 + 16877693785979986795*2^64 + 8878477330263048169*2^128 + 4064072120*2^192,6759591049239058856 + 3192044525070666429*2^64 + 3856188306018421423*2^128 + 8184998492*2^192,724920626292698128 + 9759183422325543623*2^64 + 5917349825978334038*2^128 + 3587518646*2^192;\
6579104475614045042 + 12019575745442502097*2^64 + 10324088884981188131*2^128 + 5716489331*2^192,6686129313473172119 + 9695967694228959440*2^64 + 11137324386483146693*2^128 + 8253137478*2^192,11918228677524753846 + 2552865334223080241*2^64 + 2203952427488046842*2^128 + 2740903623*2^192,3678550679434240240 + 18164986975825001779*2^64 + 4309089513176222991*2^128 + 150743295*2^192,11150612062527192104 + 16587274005363658114*2^64 + 16944048993032752852*2^128 + 2440036134*2^192,18437198111133027564 + 1105825281427207923*2^64 + 13577681564469123693*2^128 + 6189256977*2^192,9680595083823690768 + 8615238455018416519*2^64 + 1859667576684683175*2^128 + 7574573978*2^192,4487302136440972466 + 6653759802671464387*2^64 + 848172548825570839*2^128 + 1344206604*2^192,620240517133245068 + 8284333951314844531*2^64 + 5405075329097700108*2^128 + 1153719413*2^192,15885999378765456904 + 7636714599824764301*2^64 + 4800949360958302253*2^128 + 930191150*2^192;\
399889470403263240 + 2977574571289423981*2^64 + 7958453307243623938*2^128 + 10282953*2^192,17492909914839308946 + 17886665667928845501*2^64 + 17962965628691379052*2^128 + 577538018*2^192,18411040838125242164 + 7060329905964257858*2^64 + 14839479370952199112*2^128 + 5399242021*2^192,14703119264406539904 + 17544404917856394463*2^64 + 5013137687158990929*2^128 + 4679044723*2^192,4856451048211690048 + 1201233228449815503*2^64 + 12594453859583419161*2^128 + 2021915263*2^192,6239163413747055496 + 11202475768324630998*2^64 + 16509930584409147999*2^128 + 7338849714*2^192,6434055788422347936 + 396259996565234689*2^64 + 2103670606543100783*2^128 + 6302205135*2^192,9155539879847697852 + 16396588981892626533*2^64 + 4992448349433471776*2^128 + 5549359076*2^192,11072059941802796424 + 9784390982315642881*2^64 + 18149220599361920165*2^128 + 7870968709*2^192,2730998870158673424 + 286656548813297663*2^64 + 11025932993042044757*2^128 + 3511011817*2^192;\
11495347819294549438 + 1334516481619125665*2^64 + 8460307359499773439*2^128 + 6691800574*2^192,9237093136936457517 + 11823793742977448493*2^64 + 1876341908786260255*2^128 + 3068533661*2^192,5021175101979857698 + 15312298174655132072*2^64 + 12199821435897827930*2^128 + 7371445930*2^192,8803781890837289072 + 8733089307935721324*2^64 + 12532464769299690513*2^128 + 883937564*2^192,4700995089513102952 + 4946052466157876752*2^64 + 7671059736956624514*2^128 + 467946217*2^192,5975896809403090580 + 6250500979210272692*2^64 + 4390321761105397250*2^128 + 5871887154*2^192,4252710427464460416 + 1730730225181393221*2^64 + 3312380212651785746*2^128 + 5677648961*2^192,16919895753604489974 + 7421277207321968339*2^64 + 397588490086270687*2^128 + 8307714719*2^192,1227286655929982468 + 13596599702637730451*2^64 + 1454649669846225781*2^128 + 3162126850*2^192,1316371249701820472 + 1252394697576660538*2^64 + 18011551337979123031*2^128 + 5471297000*2^192;\
14799454605409600834 + 14332043332955569283*2^64 + 4656079973547215581*2^128 + 4081092813*2^192,11205254598423086571 + 12339395734444288472*2^64 + 6492710194439051943*2^128 + 1364667796*2^192,3478367414863905230 + 5511455927489988816*2^64 + 13992506986831457955*2^128 + 4869673672*2^192,16961549439710121552 + 14310021173772079550*2^64 + 4389187040634812283*2^128 + 4254555448*2^192,14298589438473806920 + 18166333000901898869*2^64 + 4030536756984863599*2^128 + 2905220619*2^192,8730306653048472684 + 11735200454591953362*2^64 + 15406133570669794704*2^128 + 1648102714*2^192,9143478964157421856 + 10907832154083402755*2^64 + 15939448550683369620*2^128 + 5419981732*2^192,4228072428464896218 + 9954188459992597962*2^64 + 5043165715494213302*2^128 + 4134700572*2^192,14720401187503923676 + 13859322188170930104*2^64 + 4162218382149571827*2^128 + 5436678873*2^192,15692512111113785352 + 9839836111231937968*2^64 + 18253534302937037111*2^128 + 7216812828*2^192;\
2730290204100545758 + 8066591627152254178*2^64 + 8961356692976698814*2^128 + 6050726168*2^192,4718337257951938517 + 7303278255510643654*2^64 + 3248672510238043145*2^128 + 7746767767*2^192,3160381723752895666 + 12009743115171044118*2^64 + 11285447886099874962*2^128 + 7755680083*2^192,7835219743885041968 + 5806995726365946793*2^64 + 778187866193196572*2^128 + 4185608948*2^192,14513404253755622104 + 12745422366333196116*2^64 + 2785118604402766673*2^128 + 2588951219*2^192,12034422397987187188 + 13596732618854714812*2^64 + 17625213574712017680*2^128 + 1663822100*2^192,14992446416859470496 + 16976389910084208438*2^64 + 13691651104974836187*2^128 + 7277295968*2^192,5064114291198653542 + 13862212121705904414*2^64 + 6964385772764114288*2^128 + 7199170243*2^192,7287234768881537572 + 394165781143112350*2^64 + 6297066019359882005*2^128 + 7664466790*2^192,1867679967063432536 + 13052928660188159154*2^64 + 9539339954112451393*2^128 + 224883858*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4381 lists. */
The sign is: -1
The characteristic polynomial is: x^10 - x^9 - 4*x^7 + 64*x^3 + 256*x - 1024
Its Newton polygon is: [2, 1, 1, 1, 1, 1, 1, 1, 1, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 - x^7 + 4*x^6 - 8*x^5 + 16*x^4 - 32*x^3 + 64*x^2 - 64*x + 256, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 28
