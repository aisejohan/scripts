/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^12 * y^1               = Coefficient of   x^5 * z^2 * w^1         = Coefficient of   x^4 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * z^1               = Coefficient of   z^5                     = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^12*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 118
[2, 1, 0, 2, 0]  	80	4 
[12, 0, 0, 0, 0]  	84	4  <--- 1
[1, 3, 1, 1, 0]  	100	3 
[0, 0, 5, 0, 0]  	100	2  <--- 3
[1, 5, 1, 0, 0]  	107	3 
[11, 3, 1, 0, 0]  	145	3 
[11, 3, 0, 1, 0]  	150	4 
[1, 3, 0, 4, 0]  	155	3 
[11, 5, 0, 0, 0]  	157	4 
[1, 5, 0, 3, 0]  	162	4 
[10, 0, 0, 4, 0]  	170	5 
[10, 0, 4, 1, 0]  	175	4 
[0, 10, 1, 0, 0]  	180	3 
[8, 0, 4, 2, 0]  	186	7 
[1, 10, 0, 1, 0]  	192	3 
[6, 8, 0, 1, 0]  	195	5 
[8, 0, 0, 6, 0]  	206	2 
[3, 0, 3, 5, 0]  	206	3 
[0, 6, 3, 2, 0]  	206	2 
[1, 1, 3, 5, 0]  	208	4 
[0, 10, 0, 2, 0]  	210	2 
[0, 5, 4, 2, 0]  	210	2 
[0, 8, 3, 1, 0]  	213	2 
[5, 0, 4, 4, 0]  	215	2 
[1, 13, 0, 0, 0]  	215	2 
[0, 5, 3, 3, 0]  	215	2 
[0, 12, 0, 1, 0]  	217	2 
[0, 7, 4, 1, 0]  	217	2 
[1, 2, 4, 4, 0]  	219	2 
[0, 9, 0, 3, 0]  	219	2 
[0, 5, 2, 4, 0]  	220	2 
[0, 6, 0, 5, 0]  	221	2 
[9, 10, 0, 0, 0]  	223	4 
[0, 14, 0, 0, 0]  	224	2  <--- 2
[0, 9, 4, 0, 0]  	224	2 
[0, 1, 3, 6, 0]  	226	1 
[0, 7, 2, 3, 0]  	227	2 
[0, 8, 0, 4, 0]  	228	2 
[0, 5, 0, 6, 0]  	230	2 
[0, 1, 2, 7, 0]  	231	1 
[0, 3, 3, 5, 0]  	233	1 
[0, 9, 2, 2, 0]  	234	2 
[5, 0, 0, 8, 0]  	235	1 
[0, 0, 3, 7, 0]  	235	1 
[0, 3, 2, 6, 0]  	238	1 
[1, 2, 0, 8, 0]  	239	2 
[0, 0, 2, 8, 0]  	240	1 
[0, 0, 1, 9, 0]  	245	1 
[3, 0, 0, 9, 0]  	246	1 
[1, 1, 0, 9, 0]  	248	2 
[0, 2, 1, 8, 0]  	252	1 
[0, 4, 1, 7, 0]  	259	1 
[0, 1, 0, 10, 0]  	266	1 
[0, 3, 0, 9, 0]  	273	1 
[0, 0, 0, 11, 0]  	275	1  <--- 4
[2, 1, 1, 1, 1]  	75	3 
[1, 0, 0, 5, 1]  	132	3 
[10, 3, 1, 0, 1]  	138	4 
[2, 0, 4, 3, 1]  	169	5 
[1, 8, 0, 2, 1]  	185	4 
[1, 0, 4, 4, 1]  	187	3 
[5, 8, 0, 1, 1]  	188	5 
[9, 8, 0, 0, 1]  	191	4 
[1, 12, 0, 0, 1]  	199	3 
[0, 11, 0, 1, 1]  	201	3 
[0, 13, 0, 0, 1]  	208	3 
[11, 1, 0, 0, 2]  	93	3 
[10, 3, 0, 1, 2]  	143	5 
[10, 5, 0, 0, 2]  	150	4 
[11, 0, 0, 3, 2]  	152	3 
[11, 0, 4, 0, 2]  	157	3 
[9, 0, 0, 4, 2]  	163	6 
[9, 0, 4, 1, 2]  	168	5 
[7, 0, 4, 2, 2]  	179	6 
[8, 8, 0, 0, 2]  	184	5 
[4, 8, 0, 1, 3]  	181	5 
[10, 0, 0, 3, 4]  	145	3 
[8, 0, 4, 1, 4]  	161	5 
[7, 8, 0, 0, 4]  	177	5 
[3, 9, 0, 1, 5]  	190	4 
[6, 8, 0, 0, 6]  	170	5 
[5, 10, 0, 0, 8]  	195	4 
[0, 5, 2, 3, 248]  	195	2 
[0, 5, 2, 2, 250]  	170	2 
[0, 5, 2, 1, 252]  	145	2 
[0, 5, 0, 5, 252]  	205	2 
[0, 9, 1, 2, 253]  	214	2 
[0, 4, 1, 6, 253]  	234	1 
[0, 5, 1, 1, 254]  	125	1 
[0, 7, 2, 0, 254]  	152	1 
[0, 4, 1, 3, 254]  	159	1 
[0, 9, 1, 0, 254]  	164	2 
[0, 3, 0, 5, 254]  	173	1 
[0, 10, 0, 1, 254]  	185	2 
[0, 7, 0, 3, 254]  	187	2 
[1, 2, 4, 3, 254]  	194	3 
[0, 3, 4, 3, 254]  	203	1 
[0, 2, 0, 7, 254]  	207	1 
[0, 2, 4, 4, 254]  	212	1 
[0, 2, 3, 5, 254]  	217	1 
[0, 1, 4, 5, 254]  	221	1 
[0, 1, 0, 9, 254]  	241	1 
[1, 3, 1, 0, 255]  	75	1 
[1, 1, 1, 2, 255]  	93	2 
[0, 3, 1, 1, 255]  	93	1 
[0, 7, 1, 0, 255]  	132	2 
[1, 2, 0, 4, 255]  	139	1 
[1, 4, 0, 3, 255]  	146	3 
[0, 2, 1, 4, 255]  	152	1 
[0, 8, 0, 1, 255]  	153	2 
[0, 2, 0, 5, 255]  	157	1 
[0, 1, 0, 6, 255]  	166	1 
[0, 6, 0, 3, 255]  	171	2 
[0, 5, 0, 4, 255]  	180	2 
[0, 12, 0, 0, 255]  	192	2 
[0, 0, 0, 8, 255]  	200	1 
[0, 0, 4, 5, 255]  	205	1 
[0, 0, 3, 6, 255]  	210	1 
------
The gap is between 9 and 247.
Lengths: 2 2 5 7 2 5.
For 232 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 132 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 32 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[9815534644362879504 + 9149886277069993210*2^64 + 3168712316770264919*2^128 + 1616087672*2^192,16388528710147784046 + 14366481031251843020*2^64 + 16766301880276058853*2^128 + 1841217976*2^192,1486216630808402900 + 3722082435984855255*2^64 + 8780533460751236637*2^128 + 1708162886*2^192,8650127225410150164 + 1911228282753835940*2^64 + 185180951789750620*2^128 + 2130677447*2^192,14832089424000516996 + 16447302978131434048*2^64 + 13520947928365608952*2^128 + 321226649*2^192,6099693880610246232 + 17091891048334739692*2^64 + 18080419559512592578*2^128 + 233105963*2^192,17020396811031727580 + 18212362804026039290*2^64 + 16030077116616157079*2^128 + 760447866*2^192,9781601796278824252 + 17164304559034101624*2^64 + 13780453245906365851*2^128 + 685771752*2^192,4796750917265630632 + 8948256645684779417*2^64 + 5088688587647295274*2^128 + 1398553534*2^192;\
12680820977688852578 + 6246848655889728849*2^64 + 3523794370977878123*2^128 + 1754421831*2^192,757139697512517372 + 3151813031092002682*2^64 + 14165654526726485983*2^128 + 1983521576*2^192,2664186282932700748 + 2879260880835302264*2^64 + 18058717182416580009*2^128 + 1691875845*2^192,4576135251003466644 + 8416682632461713678*2^64 + 16274387296165410229*2^128 + 1932904798*2^192,8819478067305277132 + 12948463319082247*2^64 + 5818704902600574883*2^128 + 1277900478*2^192,1752244707528775656 + 8954314192751693438*2^64 + 12102073033559464828*2^128 + 1719074036*2^192,10963743046129069684 + 16943070849294910277*2^64 + 16413892169105241151*2^128 + 888174064*2^192,8142343118383220020 + 17446803981829328217*2^64 + 7480332245805476719*2^128 + 234835663*2^192,3756301923260148408 + 10101837037334627896*2^64 + 327400355858029625*2^128 + 1797373601*2^192;\
12549867310748291300 + 16640694699814429412*2^64 + 13291685439488239663*2^128 + 176532113*2^192,16910236170652976348 + 6403771369581020920*2^64 + 13760518368057772153*2^128 + 880025921*2^192,9863135271052098400 + 7329940236572539640*2^64 + 12052356373749330626*2^128 + 302280904*2^192,6854482371004838224 + 9199453135433126883*2^64 + 12782396814949338042*2^128 + 811487474*2^192,2051264175531655304 + 14458506206820950976*2^64 + 7476258753232436903*2^128 + 272763072*2^192,9815642582486115888 + 10065609594574688518*2^64 + 2274761275584977888*2^128 + 1060953567*2^192,3432198092677792560 + 16841470425701034543*2^64 + 14189770534401767258*2^128 + 426330185*2^192,15687185805852254688 + 13271141094475751796*2^64 + 13552403869258975417*2^128 + 367116544*2^192,11709002247641497568 + 4953829836720196859*2^64 + 15707996225772367909*2^128 + 331505136*2^192;\
8438495661337624046 + 10155273430191615960*2^64 + 10751206107186675332*2^128 + 69131510*2^192,12033181711817193536 + 12970131305018105122*2^64 + 4340259879182875696*2^128 + 765796445*2^192,12330016872430941624 + 9277328124664786970*2^64 + 8253047868987559655*2^128 + 568741402*2^192,11169537532802825000 + 15168215076984157011*2^64 + 2472365122337077077*2^128 + 338511048*2^192,16424789676596993812 + 13913028601912832651*2^64 + 4624799925531146639*2^128 + 389956178*2^192,2446431935327784472 + 9387199091685011308*2^64 + 8985536824891616863*2^128 + 736662903*2^192,5810934666311584100 + 1090554308393685542*2^64 + 4921520115910302189*2^128 + 433576805*2^192,17600998807311422420 + 2439290460524257909*2^64 + 14051489090178041421*2^128 + 97180358*2^192,13663864687100996056 + 14982074489687647370*2^64 + 9333505043349180941*2^128 + 58599918*2^192;\
15176201784042274432 + 6234851074612537807*2^64 + 11738649628412250635*2^128 + 370183362*2^192,17393462835741800988 + 9829879959979836172*2^64 + 9683848133181825675*2^128 + 945884614*2^192,10935451931342194050 + 13543647099228703233*2^64 + 13945991538236418861*2^128 + 1914030416*2^192,13361566664931314176 + 8485771006950494046*2^64 + 13424227261370722235*2^128 + 773812413*2^192,16795760025224910512 + 14592623789846757732*2^64 + 13634707465799941366*2^128 + 186599193*2^192,4120512077926384544 + 871227805144691912*2^64 + 11719605085341625320*2^128 + 662830244*2^192,15644223401008029240 + 17235580393065573862*2^64 + 16740892487337510154*2^128 + 1906247568*2^192,16963195543915809800 + 9344643181417427120*2^64 + 7759542197694600294*2^128 + 408474581*2^192,15776950197716867664 + 16774344595580369534*2^64 + 17642818023035628734*2^128 + 2019795154*2^192;\
8097933384444207917 + 568951082399198363*2^64 + 1439963081938603097*2^128 + 1265445156*2^192,15788249071702675126 + 582754064544447301*2^64 + 11273952593601707368*2^128 + 1338587434*2^192,6655938963724375206 + 2031645632177123578*2^64 + 15762487160175538443*2^128 + 995811245*2^192,10173074047963556880 + 10543078382140486841*2^64 + 3004252393584156447*2^128 + 1503529316*2^192,9154914724544293126 + 17693435402290287841*2^64 + 6782847572039547916*2^128 + 140715006*2^192,12750389511158442504 + 12383151928421130751*2^64 + 1686865296594380596*2^128 + 1543891689*2^192,11101086809687569846 + 8452752555373294503*2^64 + 2882072084710195199*2^128 + 412609035*2^192,5417348717732085974 + 545475061473014483*2^64 + 1623686658821339888*2^128 + 744580709*2^192,16490563983767918388 + 8237401152436848074*2^64 + 8749153501110435418*2^128 + 877731512*2^192;\
4805751648993537096 + 8930930966984021379*2^64 + 17504230146469459656*2^128 + 748886919*2^192,13073314177275283728 + 1309721480830310409*2^64 + 2866513106531731840*2^128 + 1085905871*2^192,14098723368271011772 + 6185179668268843293*2^64 + 14893865007877805677*2^128 + 1971869738*2^192,17972289722563675826 + 1802846315070437556*2^64 + 2532755345681335211*2^128 + 1376020020*2^192,13745672087448034916 + 5253376000158420571*2^64 + 891883301283381938*2^128 + 1365340106*2^192,12495226595899398744 + 570605701297102611*2^64 + 1765041302765831040*2^128 + 72851331*2^192,13763036700736167396 + 3646248933222057769*2^64 + 9616185420161808173*2^128 + 489768475*2^192,11433597344467680224 + 13997843468631544083*2^64 + 9137387175797609834*2^128 + 1223371382*2^192,1996107856581614640 + 1981433093786751866*2^64 + 17335252845741764765*2^128 + 243328865*2^192;\
7513246220773380908 + 10141833790158265365*2^64 + 11805833246941890434*2^128 + 2099877875*2^192,8622099750616768272 + 7611145475905249565*2^64 + 388619344193421047*2^128 + 295081992*2^192,9482097557475209936 + 6764831602329208920*2^64 + 15977579293249644954*2^128 + 1759854716*2^192,10395476749477588080 + 1576979276351044027*2^64 + 8628326050756023081*2^128 + 2004450153*2^192,15418486610928703848 + 6288354288339128099*2^64 + 10075704394795266492*2^128 + 1642541834*2^192,14698830599622669168 + 18342521831963751364*2^64 + 9028760287618586598*2^128 + 1721122741*2^192,2417073000958038312 + 15555496625483124832*2^64 + 1972020357840466920*2^128 + 1034954256*2^192,739916222399019088 + 9855239101698607470*2^64 + 13213934799385233296*2^128 + 1354969685*2^192,6915581276646058864 + 18268282890371596122*2^64 + 2770119338935073194*2^128 + 1400660701*2^192;\
5490839286814362802 + 15796952953457556509*2^64 + 13818691309408788286*2^128 + 1373774873*2^192,6058883696319910428 + 12464530924065656471*2^64 + 17451307187136759893*2^128 + 505778027*2^192,8827399648956066036 + 18413694115743065988*2^64 + 14393904243027652683*2^128 + 101680483*2^192,15691561373589593152 + 191152132638867280*2^64 + 6378052661248768842*2^128 + 1520843125*2^192,13006082666471799324 + 17374055081260113058*2^64 + 10538759006944961701*2^128 + 2117535924*2^192,2009946038693820768 + 1309553411701983901*2^64 + 6563181750671447919*2^128 + 1793637527*2^192,8098973321808937756 + 1175286685824061500*2^64 + 12229811508846708679*2^128 + 1513427371*2^192,9271736085975013860 + 15252124549952103492*2^64 + 2563196426332614502*2^128 + 111498420*2^192,13393526733390692736 + 9405322749324832184*2^64 + 17554611281597067682*2^128 + 812412615*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3051 lists. */
The sign is: -1
The characteristic polynomial is: x^9 - x^7 + 4*x^6 - 12*x^5 - 24*x^4 + 32*x^3 - 32*x^2 + 512
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x + 2, 1; x^2 + 4, 1; x^6 - 2*x^5 - x^4 + 6*x^3 - 4*x^2 - 32*x + 64, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 28
