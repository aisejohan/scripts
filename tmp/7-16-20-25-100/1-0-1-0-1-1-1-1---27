/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^12 * y^1               = Coefficient of   x^5 * z^2 * w^1         = Coefficient of   x^4 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * z^1               = Coefficient of   z^5                     = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^12*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 150
[1, 3, 1, 0, 0]  	75	2 
[12, 0, 0, 0, 0]  	84	4  <--- 1
[4, 2, 2, 0, 0]  	100	3 
[0, 5, 1, 0, 0]  	100	3 
[1, 0, 5, 0, 0]  	107	3 
[9, 3, 0, 1, 0]  	136	4 
[5, 4, 0, 2, 0]  	149	6 
[1, 3, 0, 4, 0]  	155	3 
[8, 0, 0, 4, 0]  	156	4 
[11, 5, 0, 0, 0]  	157	5 
[2, 6, 0, 2, 0]  	160	5 
[4, 1, 0, 5, 0]  	169	5 
[2, 5, 0, 3, 0]  	169	5 
[4, 8, 0, 1, 0]  	181	6 
[11, 0, 4, 1, 0]  	182	6 
[1, 8, 0, 2, 0]  	185	4 
[1, 2, 0, 6, 0]  	189	3 
[3, 9, 0, 1, 0]  	190	5 
[1, 10, 0, 1, 0]  	192	4 
[1, 0, 3, 5, 0]  	192	4 
[1, 7, 0, 3, 0]  	194	4 
[0, 6, 0, 4, 0]  	196	3 
[4, 1, 4, 3, 0]  	199	4 
[2, 2, 4, 3, 0]  	201	4 
[0, 5, 0, 5, 0]  	205	3 
[0, 1, 7, 2, 0]  	206	2 
[4, 0, 4, 4, 0]  	208	3 
[0, 10, 0, 2, 0]  	210	3 
[8, 0, 4, 3, 0]  	211	7 
[1, 1, 2, 6, 0]  	213	2 
[0, 3, 7, 1, 0]  	213	2 
[10, 9, 0, 0, 0]  	214	5 
[1, 13, 0, 0, 0]  	215	2 
[0, 0, 7, 3, 0]  	215	2 
[0, 1, 10, 0, 0]  	216	3 
[0, 12, 0, 1, 0]  	217	2 
[0, 2, 8, 1, 0]  	217	2 
[1, 2, 4, 4, 0]  	219	2 
[0, 9, 0, 3, 0]  	219	2 
[0, 0, 11, 0, 0]  	220	2  <--- 3
[0, 0, 6, 4, 0]  	220	2 
[0, 1, 9, 1, 0]  	221	2 
[0, 14, 0, 0, 0]  	224	2  <--- 2
[0, 4, 8, 0, 0]  	224	2 
[0, 0, 10, 1, 0]  	225	3 
[0, 1, 3, 6, 0]  	226	1 
[0, 2, 6, 3, 0]  	227	2 
[4, 0, 0, 8, 0]  	228	2 
[0, 3, 9, 0, 0]  	228	2 
[0, 1, 2, 7, 0]  	231	1 
[1, 0, 0, 9, 0]  	232	3 
[0, 3, 3, 5, 0]  	233	1 
[0, 0, 3, 7, 0]  	235	1 
[0, 3, 2, 6, 0]  	238	1 
[9, 11, 0, 0, 0]  	239	3 
[0, 4, 5, 3, 0]  	239	2 
[0, 0, 2, 8, 0]  	240	1 
[0, 0, 1, 9, 0]  	245	1 
[0, 3, 5, 4, 0]  	248	2 
[0, 0, 5, 6, 0]  	250	2 
[0, 2, 1, 8, 0]  	252	1 
[0, 4, 1, 7, 0]  	259	1 
[0, 1, 0, 10, 0]  	266	1 
[0, 3, 0, 9, 0]  	273	1 
[0, 0, 0, 11, 0]  	275	1  <--- 4
[4, 2, 1, 0, 1]  	80	4 
[8, 3, 0, 1, 1]  	129	5 
[4, 2, 0, 4, 1]  	160	4 
[3, 0, 4, 4, 1]  	201	4 
[7, 0, 4, 3, 1]  	204	6 
[0, 0, 8, 2, 1]  	210	2 
[11, 1, 0, 0, 2]  	93	3 
[3, 0, 1, 3, 2]  	116	3 
[7, 0, 0, 4, 2]  	149	5 
[10, 5, 0, 0, 2]  	150	5 
[11, 0, 0, 3, 2]  	152	2 
[11, 0, 4, 0, 2]  	157	4 
[10, 0, 4, 1, 2]  	175	5 
[6, 1, 4, 2, 2]  	188	6 
[1, 12, 0, 0, 2]  	199	3 
[4, 11, 0, 0, 2]  	204	6 
[9, 9, 0, 0, 2]  	207	5 
[0, 13, 0, 0, 2]  	208	3 
[3, 0, 0, 8, 2]  	221	2 
[0, 4, 6, 2, 2]  	234	2 
[0, 1, 5, 5, 2]  	241	2 
[3, 0, 0, 3, 3]  	96	4 
[7, 6, 0, 1, 3]  	170	5 
[4, 1, 4, 2, 3]  	174	6 
[2, 2, 4, 2, 3]  	176	5 
[7, 0, 4, 2, 3]  	179	6 
[2, 1, 4, 3, 3]  	185	4 
[3, 11, 0, 0, 3]  	197	5 
[2, 0, 0, 6, 4]  	164	3 
[2, 0, 4, 3, 4]  	169	5 
[0, 11, 0, 1, 4]  	201	3 
[2, 2, 3, 4, 4]  	206	2 
[2, 11, 0, 0, 5]  	190	4 
[2, 1, 2, 5, 6]  	195	3 
[1, 0, 1, 7, 6]  	202	3 
[1, 1, 4, 4, 6]  	203	3 
[1, 1, 0, 8, 6]  	223	3 
[0, 0, 6, 3, 246]  	195	2 
[0, 8, 0, 3, 247]  	203	2 
[0, 3, 1, 6, 248]  	218	1 
[0, 3, 5, 3, 248]  	223	2 
[0, 2, 1, 7, 248]  	227	1 
[1, 6, 0, 3, 249]  	178	3 
[1, 2, 4, 3, 249]  	194	3 
[0, 0, 3, 6, 249]  	210	1 
[0, 0, 6, 2, 250]  	170	2 
[0, 5, 0, 4, 250]  	180	3 
[0, 3, 5, 2, 250]  	198	2 
[0, 0, 10, 0, 250]  	200	3 
[0, 2, 1, 6, 250]  	202	1 
[0, 0, 9, 1, 250]  	205	2 
[0, 1, 2, 6, 250]  	206	1 
[0, 0, 0, 9, 250]  	225	1 
[1, 5, 0, 2, 251]  	137	3 
[0, 7, 0, 3, 251]  	187	2 
[0, 2, 9, 0, 251]  	212	2 
[0, 0, 6, 1, 252]  	145	2 
[0, 2, 5, 1, 252]  	157	2 
[1, 8, 0, 1, 252]  	160	4 
[1, 2, 0, 5, 252]  	164	2 
[0, 4, 5, 0, 252]  	164	2 
[0, 2, 1, 5, 252]  	177	1 
[0, 1, 2, 5, 252]  	181	1 
[0, 0, 3, 5, 252]  	185	1 
[1, 4, 0, 1, 253]  	96	3 
[2, 1, 4, 2, 253]  	160	5 
[0, 6, 0, 3, 253]  	171	2 
[1, 1, 4, 3, 253]  	178	3 
[0, 0, 9, 0, 253]  	180	2 
[1, 0, 4, 4, 253]  	187	2 
[0, 12, 0, 0, 253]  	192	3 
[0, 3, 1, 1, 254]  	93	1 
[0, 1, 5, 0, 254]  	116	2 
[1, 1, 0, 4, 254]  	123	1 
[0, 0, 5, 1, 254]  	125	2 
[0, 1, 0, 5, 254]  	141	1 
[0, 2, 1, 4, 254]  	152	1 
[0, 0, 8, 0, 254]  	160	2 
[1, 0, 3, 4, 254]  	167	1 
[0, 10, 0, 1, 254]  	185	3 
[0, 0, 0, 8, 254]  	200	1 
[1, 3, 0, 1, 255]  	80	3 
[2, 0, 4, 2, 255]  	144	5 
[0, 5, 0, 3, 255]  	155	2 
[1, 0, 4, 3, 255]  	162	3 
------
The gap is between 7 and 245.
Lengths: 2 2 5 6 2 5.
For 232 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8

For 132 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 32 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[11785331610100773862 + 4057504527961364889*2^64 + 10749669624483524288*2^128 + 4845179046*2^192,12866356683642915694 + 16316819373773211207*2^64 + 14827252355297083897*2^128 + 3977442340*2^192,11459794483694531000 + 11285935900015539419*2^64 + 6825605696571970041*2^128 + 3193900743*2^192,15490236629283304048 + 401741327195369717*2^64 + 9316490863766235972*2^128 + 2420485421*2^192,13180220411574659974 + 13527628101024841091*2^64 + 15368815680275369086*2^128 + 7567316208*2^192,11805052785936644664 + 15938097169890277119*2^64 + 3791971767003954291*2^128 + 5630815267*2^192,9182087837359626416 + 10768539108339600633*2^64 + 216585786938664660*2^128 + 3284239751*2^192,12500150110779256844 + 4134591036876349277*2^64 + 17093174263681923516*2^128 + 3847710350*2^192,4861400373454598304 + 7650032954710938260*2^64 + 14259710494447164146*2^128 + 8544492999*2^192;\
1128566273454519414 + 5157714356648019297*2^64 + 4107425584046810403*2^128 + 6251454743*2^192,13256073058366372942 + 15143975124486933453*2^64 + 12079848660973789763*2^128 + 3363151683*2^192,1330397123250747256 + 12808472135649544123*2^64 + 14998008771490287753*2^128 + 265200530*2^192,14500530306981792176 + 8648545667632939833*2^64 + 12069366004063804056*2^128 + 4674688380*2^192,2270377115569773918 + 4194299807186737491*2^64 + 15625234491272284671*2^128 + 6184687749*2^192,15243062463485247384 + 13733514222748821971*2^64 + 6241973933201854585*2^128 + 440775453*2^192,4083912073668872944 + 9345730839370510132*2^64 + 14906186273003468880*2^128 + 5837184319*2^192,6472500861740691260 + 13813657931649864969*2^64 + 5076207935991212280*2^128 + 2823819850*2^192,15009803015192093984 + 9106472283560618814*2^64 + 944930052772649465*2^128 + 5359790687*2^192;\
5846064225951419104 + 1437081018671819639*2^64 + 4934590625911798432*2^128 + 3934684499*2^192,8318869260836726752 + 3642473772343766694*2^64 + 18056690797221731330*2^128 + 3323534335*2^192,17965974914796550384 + 233492555039114023*2^64 + 6407748836640640506*2^128 + 3038261007*2^192,1107640352076776992 + 2874292235861983197*2^64 + 11586059035768979387*2^128 + 3788804490*2^192,15120756634781557280 + 11953824920195896287*2^64 + 2567805425261346379*2^128 + 1915203994*2^192,4641348252217986304 + 12866024852578444863*2^64 + 473489106068417350*2^128 + 2786004705*2^192,15665765939929473344 + 8499506621486501071*2^64 + 4821644510432785904*2^128 + 1109953426*2^192,17150766670228229024 + 6862738603602556145*2^64 + 17587924562061538758*2^128 + 2694975158*2^192,4176304307650593792 + 15599898246936112460*2^64 + 12296230929992169537*2^128 + 3788713247*2^192;\
13400448009722635916 + 11465673486185034883*2^64 + 1369869236779505316*2^128 + 1072694305*2^192,3767248585999422076 + 13977258090134884285*2^64 + 6426543910484147216*2^128 + 1228740341*2^192,14088820842762618416 + 10909555686653392046*2^64 + 8952950633706484087*2^128 + 2746893893*2^192,8608876553146675552 + 5225068525841523483*2^64 + 9649928902696389112*2^128 + 851052667*2^192,2547812295532804636 + 7213698447786582373*2^64 + 3844637256202461142*2^128 + 2271584072*2^192,9374149831866051248 + 16512310070193644256*2^64 + 7439676699620277099*2^128 + 746414946*2^192,15429674839653148832 + 8710349313823334413*2^64 + 1684926442971457949*2^128 + 2384536251*2^192,8363263554663574168 + 17505614842244353956*2^64 + 870009640157705726*2^128 + 4249006089*2^192,9133695764150200896 + 6122889194771469616*2^64 + 469574928262237781*2^128 + 1245542507*2^192;\
1300736433057626544 + 16110464643809883964*2^64 + 15644102667971761917*2^128 + 5636065467*2^192,15147275649082980752 + 8794629922063913314*2^64 + 4519850110571331273*2^128 + 3015731234*2^192,511720717862087376 + 3047997539607096923*2^64 + 12073939593951711148*2^128 + 8068723545*2^192,2573301419180801200 + 6983036621500392097*2^64 + 4649023005192172789*2^128 + 1124557374*2^192,14803571988614689680 + 14505858908025000203*2^64 + 12784466187090990598*2^128 + 2292245848*2^192,8163862567354589632 + 2856079661182986158*2^64 + 8711077756718502026*2^128 + 4089687618*2^192,12003435566965926144 + 2307931649538672293*2^64 + 2953459677608087129*2^128 + 4392378409*2^192,15727593597965544192 + 8048739854500051404*2^64 + 8258004098197062644*2^128 + 1998225490*2^192,11628655027436818304 + 13275884450160720663*2^64 + 3424963851177897188*2^128 + 144465751*2^192;\
5076835469754444945 + 16206141467079709252*2^64 + 17047620540846833706*2^128 + 6778473535*2^192,16340238073254967853 + 2934822232462098891*2^64 + 17304964292584015293*2^128 + 5998346378*2^192,10700462573286736100 + 8866359242289469200*2^64 + 178270377275518297*2^128 + 7808734757*2^192,4636971561132372168 + 4028838119945485908*2^64 + 4190206847767008097*2^128 + 7790199446*2^192,5996246714647117149 + 16086481936096867432*2^64 + 11437870924082530881*2^128 + 3363066126*2^192,16521483950492157684 + 13593131328445385892*2^64 + 8099009412237625540*2^128 + 8528971321*2^192,7099911037480794104 + 4114452572728992757*2^64 + 15073401303042267038*2^128 + 7697525556*2^192,18178711571222878290 + 12754792806942918595*2^64 + 17597451703712424704*2^128 + 3094279672*2^192,15000205361880398288 + 14274283628316327241*2^64 + 11912929150300442726*2^128 + 6556459860*2^192;\
3440411970639352906 + 5674055868103239133*2^64 + 107734451622360898*2^128 + 2280630781*2^192,15141557018912806418 + 15759534055021551493*2^64 + 9533056250150267743*2^128 + 5597387177*2^192,102720161577648440 + 13166452182649695953*2^64 + 5807672900120940274*2^128 + 5716427100*2^192,15566026154195964768 + 17874545091797266586*2^64 + 11094420625238047893*2^128 + 2847577875*2^192,8332366543620010002 + 12967045462222476501*2^64 + 13395894788755905926*2^128 + 1819416119*2^192,9582703301529535848 + 11945796832406193887*2^64 + 9560777006567889011*2^128 + 5508025756*2^192,8524537555482681840 + 17556464840127388811*2^64 + 3741949861193248760*2^128 + 5444684779*2^192,13494988072596267804 + 14649531799327593203*2^64 + 16891591923901944709*2^128 + 758181665*2^192,4942720009173807872 + 9161596155242716872*2^64 + 5007171737672131749*2^128 + 7465143087*2^192;\
2142340962874076200 + 9878746393310064204*2^64 + 12907148769744304100*2^128 + 7806641086*2^192,689891142168789320 + 1103947796095124100*2^64 + 4593813651514355253*2^128 + 7607140229*2^192,7969175479209657040 + 14445847832104776204*2^64 + 10381536771212127331*2^128 + 6922445792*2^192,5457421860468980512 + 5610964457656669567*2^64 + 4284722155451424409*2^128 + 3120103908*2^192,447089539281926504 + 4528000714670349888*2^64 + 3194526993064582180*2^128 + 5872698546*2^192,11385379669127339296 + 7080882491439816469*2^64 + 10904196652436694534*2^128 + 4581656887*2^192,8153379950218634560 + 1529698458413271799*2^64 + 13230644757304947165*2^128 + 8279990037*2^192,17389415264868978928 + 12003947144727575127*2^64 + 4001451848425733239*2^128 + 5829392172*2^192,6376991414769258880 + 10638296252308172428*2^64 + 12139297381067610643*2^128 + 1696583137*2^192;\
2507381659847180064 + 1890673384631143282*2^64 + 7920167304505952726*2^128 + 2028630094*2^192,5360831049858267040 + 4858660099712748974*2^64 + 3153871982040988712*2^128 + 5234770323*2^192,14284992543103298480 + 9687466880768161799*2^64 + 14357813308294342709*2^128 + 8453796607*2^192,1337873307778675936 + 12099591120098913149*2^64 + 15072992965116942900*2^128 + 380848651*2^192,4082318102713953856 + 12491932065433268410*2^64 + 517484361200390886*2^128 + 8426231012*2^192,11402361197295226368 + 16733181284823052823*2^64 + 11859228398885217146*2^128 + 1333880504*2^192,5759368274818084992 + 279270258271422732*2^64 + 1960261184925400403*2^128 + 4081852772*2^192,4190637658107174304 + 15000162404872637016*2^64 + 14717205900701592128*2^128 + 2934557516*2^192,10853982188612859936 + 16825617379992709419*2^64 + 41264375465456736*2^128 + 4049142888*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 3140 lists. */
The sign is: 1
The characteristic polynomial is: x^9 - x^8 - 8*x^6 - 4*x^5 + 8*x^4 + 64*x^3 + 128*x - 512
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 1, 2/3, 2/3, 2/3, 0]
Its factorization is: [x - 2, 1; x^8 + x^7 + 2*x^6 - 4*x^5 - 12*x^4 - 16*x^3 + 32*x^2 + 64*x + 256, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29

Please input coefficients below.
The polynomial is: 1*x^12*y^1 + 1*x^4*y^2*z^2 + 1*x^1*y^3*z^1*w^1 + 1*y^5*z^1 + 1*z^5 + 1*w^4
Total 421: 1 2 3 4 5 6 
Look at the ideal generated by: 
1*x^3*z^1 + 1*y^1*w^1
1*y^5 + 1*z^4
