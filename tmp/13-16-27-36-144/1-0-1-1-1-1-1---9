/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^5 * y^1 * z^1 * w^1   = Coefficient of   x^2 * y^4 * z^2         = Coefficient of   x^1 * y^2 * z^1 * w^2   = Coefficient of   y^9                     = Coefficient of   z^4 * w^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^4*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 142
[9, 0, 0, 0, 0]  	117	4  <--- 1
[8, 0, 1, 0, 0]  	131	3 
[2, 4, 2, 0, 0]  	144	3 
[0, 9, 0, 0, 0]  	144	2  <--- 2
[1, 2, 5, 0, 0]  	180	3 
[7, 0, 4, 0, 0]  	199	4 
[0, 0, 8, 0, 0]  	216	3  <--- 3
[7, 8, 0, 0, 0]  	219	3 
[2, 0, 6, 1, 0]  	224	3 
[7, 0, 0, 4, 0]  	235	3 
[6, 2, 0, 4, 0]  	254	5 
[6, 1, 1, 4, 0]  	265	5 
[6, 0, 7, 0, 0]  	267	4 
[5, 4, 0, 4, 0]  	273	4 
[6, 1, 0, 5, 0]  	274	5 
[6, 0, 2, 4, 0]  	276	4 
[6, 8, 0, 2, 0]  	278	3 
[5, 0, 4, 3, 0]  	281	4 
[6, 0, 1, 5, 0]  	285	6 
[4, 4, 1, 4, 0]  	287	4 
[3, 2, 4, 3, 0]  	287	4 
[5, 0, 3, 4, 0]  	290	4 
[5, 8, 1, 2, 0]  	292	4 
[6, 0, 0, 6, 0]  	294	3 
[5, 0, 2, 5, 0]  	299	4 
[5, 8, 0, 3, 0]  	301	5 
[3, 2, 2, 5, 0]  	305	2 
[2, 0, 5, 4, 0]  	305	2 
[1, 7, 4, 2, 0]  	305	2 
[0, 5, 7, 1, 0]  	305	2 
[2, 4, 0, 6, 0]  	306	2 
[1, 2, 3, 5, 0]  	306	2 
[0, 0, 6, 4, 0]  	306	2 
[4, 2, 3, 4, 0]  	309	3 
[1, 5, 0, 6, 0]  	309	2 
[0, 3, 7, 2, 0]  	309	2 
[3, 4, 1, 5, 0]  	310	2 
[2, 2, 4, 4, 0]  	310	2 
[1, 0, 7, 3, 0]  	310	2 
[0, 7, 6, 1, 0]  	310	2 
[4, 8, 1, 3, 0]  	315	2 
[1, 2, 2, 6, 0]  	315	2 
[0, 0, 5, 5, 0]  	315	2 
[1, 6, 1, 5, 0]  	316	2 
[0, 4, 4, 4, 0]  	316	2 
[1, 0, 2, 7, 0]  	319	1 
[0, 7, 5, 2, 0]  	319	1 
[0, 7, 1, 5, 0]  	319	1 
[0, 7, 4, 3, 0]  	328	2 
[0, 2, 7, 3, 0]  	329	2 
[2, 1, 0, 8, 0]  	330	3 
[0, 5, 0, 7, 0]  	332	1 
[0, 3, 4, 5, 0]  	336	2 
[1, 0, 0, 9, 0]  	337	2 
[2, 0, 1, 8, 0]  	341	1 
[0, 5, 3, 5, 0]  	341	1 
[0, 0, 2, 8, 0]  	342	1 
[0, 3, 3, 6, 0]  	345	1 
[0, 0, 1, 9, 0]  	351	1 
[5, 0, 0, 8, 0]  	353	2 
[0, 3, 2, 7, 0]  	354	1 
[0, 3, 0, 9, 0]  	372	1 
[0, 0, 0, 11, 0]  	396	1  <--- 4
[1, 2, 1, 1, 1]  	108	3 
[1, 1, 5, 0, 1]  	164	3 
[7, 1, 1, 2, 1]  	206	4 
[1, 1, 4, 2, 1]  	209	3 
[1, 0, 5, 2, 1]  	220	3 
[6, 0, 4, 1, 1]  	222	4 
[1, 2, 0, 5, 1]  	225	3 
[1, 1, 1, 5, 1]  	236	3 
[2, 1, 2, 4, 1]  	240	4 
[1, 0, 1, 6, 1]  	256	3 
[6, 1, 3, 3, 1]  	283	4 
[0, 6, 5, 2, 1]  	303	2 
[0, 3, 6, 3, 1]  	318	2 
[0, 5, 5, 3, 1]  	323	2 
[2, 3, 2, 0, 2]  	128	3 
[8, 0, 0, 3, 2]  	212	3 
[7, 4, 0, 3, 2]  	263	5 
[6, 6, 0, 3, 2]  	282	5 
[2, 1, 0, 7, 2]  	294	3 
[2, 0, 4, 5, 2]  	314	4 
[5, 0, 0, 7, 2]  	317	4 
[0, 2, 4, 6, 2]  	356	2 
[0, 0, 4, 7, 2]  	360	2 
[1, 1, 0, 8, 3]  	317	3 
[7, 3, 0, 3, 4]  	247	6 
[2, 0, 4, 4, 4]  	278	4 
[2, 0, 0, 8, 4]  	314	3 
[1, 0, 4, 5, 5]  	301	4 
[2, 0, 3, 5, 6]  	287	3 
[4, 6, 0, 4, 6]  	292	4 
[5, 1, 0, 6, 7]  	297	4 
[0, 7, 4, 2, 247]  	292	1 
[0, 0, 7, 3, 247]  	297	1 
[0, 3, 4, 4, 248]  	300	2 
[0, 5, 5, 2, 250]  	287	2 
[0, 5, 7, 0, 251]  	269	2 
[0, 7, 6, 0, 251]  	274	2 
[0, 0, 5, 4, 251]  	279	2 
[0, 0, 4, 6, 251]  	324	2 
[0, 2, 0, 9, 251]  	356	1 
[0, 0, 0, 10, 251]  	360	1 
[0, 4, 7, 0, 252]  	253	2 
[0, 7, 4, 1, 252]  	256	1 
[0, 0, 7, 2, 252]  	261	1 
[0, 6, 1, 5, 252]  	303	1 
[0, 3, 3, 5, 252]  	309	1 
[0, 3, 2, 6, 252]  	318	1 
[0, 5, 1, 6, 252]  	323	1 
[0, 6, 4, 1, 253]  	240	1 
[0, 0, 5, 3, 253]  	243	2 
[6, 1, 3, 2, 253]  	247	4 
[0, 2, 4, 3, 253]  	248	2 
[0, 6, 6, 0, 253]  	258	2 
[2, 0, 0, 7, 253]  	278	3 
[0, 3, 6, 2, 253]  	282	2 
[0, 2, 3, 5, 253]  	293	1 
[0, 5, 0, 6, 253]  	296	1 
[1, 0, 0, 8, 253]  	301	3 
[0, 2, 2, 6, 253]  	302	1 
[0, 0, 2, 7, 253]  	306	1 
[0, 0, 0, 9, 253]  	324	1 
[1, 1, 3, 2, 254]  	182	2 
[0, 0, 7, 0, 254]  	189	1 
[0, 6, 4, 0, 254]  	204	1 
[0, 8, 3, 0, 254]  	209	1 
[6, 0, 0, 4, 254]  	222	2 
[0, 8, 1, 2, 254]  	227	1 
[0, 2, 2, 4, 254]  	230	1 
[0, 4, 1, 4, 254]  	235	1 
[5, 0, 2, 4, 254]  	263	1 
[5, 8, 0, 2, 254]  	265	2 
[0, 2, 6, 2, 254]  	266	2 
[0, 4, 0, 6, 254]  	280	1 
[0, 0, 0, 8, 254]  	288	1 
[0, 0, 4, 0, 255]  	108	1 
[1, 1, 1, 2, 255]  	128	2 
[0, 8, 0, 0, 255]  	128	1 
[0, 0, 2, 4, 255]  	198	1 
[0, 4, 0, 4, 255]  	208	1 
------
The gap is between 8 and 246.
Lengths: 2 2 4 6 2 6.
For 340 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^9

For 196 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*z^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^5

For 52 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^1

Extra powers of p used 8.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[7663402891411264792 + 3136835161819610919*2^64 + 9054525919253405136*2^128 + 3453607402*2^192,656847161698864048 + 16705281742726891852*2^64 + 3389232869021033668*2^128 + 24417325692*2^192,11554220546573057696 + 1868331809695512907*2^64 + 14452045267995208283*2^128 + 6756001113*2^192,10019217410366476672 + 17920950581750061474*2^64 + 5844641633624884532*2^128 + 72189518637*2^192,2057437772712212928 + 18085070852494842011*2^64 + 15096929583853782723*2^128 + 7235175810*2^192,8310980336172033312 + 14524933609277452018*2^64 + 13225048078471029708*2^128 + 129854564926*2^192,12752443045475248416 + 10610756591370807090*2^64 + 13546254854119990575*2^128 + 65838898416*2^192,11607165593868818912 + 3797562824860051439*2^64 + 11058360239476417191*2^128 + 17523135938*2^192;\
7905388905799150834 + 12986740773732455187*2^64 + 15791768166490136500*2^128 + 17367646163*2^192,699737169430579588 + 4069690490898383561*2^64 + 13230545413385736054*2^128 + 12195725943*2^192,16502944604551339256 + 15324667944255050358*2^64 + 1257142858108576487*2^128 + 96245262611*2^192,18068808539057024544 + 8054959347090761954*2^64 + 9917977486580155722*2^128 + 65484685970*2^192,7850201465855944400 + 13474727780087579721*2^64 + 15721479840863390239*2^128 + 93951610197*2^192,3950805020189928792 + 7575847719287402591*2^64 + 9413693525673979026*2^128 + 105396563837*2^192,17519565588714333784 + 14824137679525344138*2^64 + 5091550122479718153*2^128 + 55294646304*2^192,17052438312868053224 + 580066533953223991*2^64 + 6412922251546405893*2^128 + 84625105558*2^192;\
3386800611936505268 + 6399503593498440566*2^64 + 13201468859844800657*2^128 + 108079046801*2^192,4888199016822742440 + 4236380006510151477*2^64 + 14528094650260077118*2^128 + 4285206907*2^192,3048345697337682864 + 7727890507861536816*2^64 + 8307088168266265067*2^128 + 44752871967*2^192,10967239321856088512 + 13278593303684440705*2^64 + 14678890041883707135*2^128 + 84907441501*2^192,17913415798525300000 + 8605214718210088805*2^64 + 743592358020693180*2^128 + 16521104665*2^192,16933231925336219632 + 17239972891148716080*2^64 + 15786438138560526915*2^128 + 46965762034*2^192,13765772170889434736 + 4968495700257595703*2^64 + 18289216772636493123*2^128 + 115293271205*2^192,9584876263305638928 + 2493525332071281291*2^64 + 8626672439429837492*2^128 + 114473123217*2^192;\
14112914425578368324 + 10284869100657074440*2^64 + 14869119314577777231*2^128 + 72469667874*2^192,13273160857474578632 + 8723589655036193441*2^64 + 8815258630108216669*2^128 + 126051268334*2^192,2043979197731462768 + 1497591636659116601*2^64 + 15517038871627202343*2^128 + 71323939234*2^192,3566301780154793280 + 1389133984026605801*2^64 + 1924424009347802686*2^128 + 71139529032*2^192,7837597541143693472 + 13493325844868834685*2^64 + 15657299318008490519*2^128 + 80230011511*2^192,4988784144617913904 + 9851063755951996479*2^64 + 14484886472524585547*2^128 + 132617947253*2^192,2742209615042386736 + 14467219290781656701*2^64 + 3726275369071857506*2^128 + 129787059355*2^192,12646444395526874448 + 6445888840564422758*2^64 + 18200878878985182425*2^128 + 97483056601*2^192;\
2074771026479568478 + 9023321629915504165*2^64 + 10127190964059915645*2^128 + 134393790519*2^192,15407729944692462748 + 14997877246250155915*2^64 + 15238327331312980393*2^128 + 90039751932*2^192,13606737157968973000 + 149556619935288536*2^64 + 387137848169675236*2^128 + 19258317511*2^192,8884313027716733664 + 12438862873899789963*2^64 + 10747770609195156113*2^128 + 80276482823*2^192,11045392808037960624 + 998538789072366969*2^64 + 12589914940076909145*2^128 + 82372483169*2^192,1059862672839854184 + 10354179175276539080*2^64 + 952336407307172610*2^128 + 121502632263*2^192,15724712049472758376 + 9959507404362917714*2^64 + 13833068221394829636*2^128 + 33623923893*2^192,2116060144338541656 + 7540120804588232669*2^64 + 4847920967176069813*2^128 + 55066939346*2^192;\
2406832587915962912 + 6705611624130987999*2^64 + 10019643043768576970*2^128 + 33141864893*2^192,17668278361712467264 + 13861156812321200379*2^64 + 15677404595069726082*2^128 + 102090064469*2^192,3211786935326510464 + 7976079874919426401*2^64 + 554053817379814346*2^128 + 32798844833*2^192,7472238687851438592 + 15788259006352417491*2^64 + 12577006370443798857*2^128 + 11493384618*2^192,5439741414785735424 + 9562966352167947579*2^64 + 5828988732573266734*2^128 + 120827760010*2^192,1950425305453937024 + 18101757196932734332*2^64 + 8725090332741725040*2^128 + 105981125197*2^192,11246233292467751808 + 2051420034410825713*2^64 + 15230634505072387794*2^128 + 35254696411*2^192,8207615777819334784 + 320104764121958612*2^64 + 7726962232578637417*2^128 + 32959685156*2^192;\
4991174792582348187 + 18382278373471202375*2^64 + 4384347052920637096*2^128 + 26426487875*2^192,8866440866134942886 + 11308927141914884635*2^64 + 7071742701908405807*2^128 + 19401695516*2^192,13827768594473159092 + 4416066285904032621*2^64 + 17446096377958740146*2^128 + 31685268692*2^192,5361569341770279088 + 5354856182284072122*2^64 + 6513377674517767042*2^128 + 7831542273*2^192,2582288766916103864 + 9956152173593884006*2^64 + 10426987149281546936*2^128 + 16350269073*2^192,5814654689856380100 + 8545808784575448932*2^64 + 15681698071041209653*2^128 + 21664833216*2^192,5805641796735333828 + 15254297783050592602*2^64 + 5223998523593509271*2^128 + 12715076139*2^192,5130114195701350684 + 16578745673352750468*2^64 + 12163374192659177629*2^128 + 19964971436*2^192;\
15371751878484897216 + 13622735208838948823*2^64 + 14996167736606630502*2^128 + 34879086742*2^192,1982593218288255360 + 17997376011649431712*2^64 + 6366142978769728826*2^128 + 1821781256*2^192,6118032904814394624 + 13512365709314775223*2^64 + 17817311446414747583*2^128 + 97578370034*2^192,11061782281434979328 + 6200334264623446956*2^64 + 2093352141967031165*2^128 + 95691275209*2^192,3535226000762182144 + 10751469322217314232*2^64 + 2547738571036669543*2^128 + 86504607180*2^192,1218212672885536000 + 8754079436962260481*2^64 + 6755966518913376247*2^128 + 56414302188*2^192,208431183644815616 + 10997452995287859714*2^64 + 2637331499935117851*2^128 + 23870695757*2^192,7608241785138574592 + 14354475797829850623*2^64 + 7751141414656098090*2^128 + 59933433751*2^192]
/* 
This matrix times 2^(-7) should be the matrix of frobenius.
*/ 
B = 2^(-7) * A; 
/* Freed 2679 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - 12*x^4 + 64*x + 256
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 2/3, 2/3, 2/3, 0]
Its factorization is: Mat([x^8 + x^7 - 12*x^4 + 64*x + 256, 1])
The valuation of f-g is: 24
The valuation of subst(g,x,A) is: 17
