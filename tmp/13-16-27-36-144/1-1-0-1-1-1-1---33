/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * z^1               = Coefficient of   x^5 * y^1 * z^1 * w^1   = Coefficient of   x^2 * y^4 * z^2         = Coefficient of   x^1 * y^2 * z^1 * w^2   = Coefficient of   y^9                     = Coefficient of   z^4 * w^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^1*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 133
[5, 1, 1, 0, 0]  	108	4 
[9, 0, 0, 0, 0]  	117	4  <--- 1
[5, 0, 1, 1, 0]  	128	3 
[8, 0, 1, 0, 0]  	131	3 
[0, 9, 0, 0, 0]  	144	3  <--- 2
[4, 2, 1, 1, 0]  	147	4 
[4, 0, 4, 0, 0]  	160	5 
[4, 1, 1, 2, 0]  	167	3 
[4, 8, 0, 0, 0]  	180	4 
[4, 0, 0, 4, 0]  	196	3 
[2, 3, 1, 3, 0]  	209	3 
[2, 4, 2, 2, 0]  	216	5 
[2, 2, 2, 3, 0]  	220	5 
[3, 0, 7, 0, 0]  	228	4 
[3, 8, 0, 2, 0]  	239	3 
[3, 6, 4, 0, 0]  	243	4 
[3, 8, 3, 0, 0]  	248	3 
[3, 0, 4, 3, 0]  	255	3 
[3, 0, 0, 6, 0]  	255	3 
[2, 1, 8, 0, 0]  	258	4 
[3, 0, 3, 4, 0]  	264	3 
[2, 0, 9, 0, 0]  	269	4 
[2, 4, 0, 5, 0]  	270	4 
[2, 8, 3, 1, 0]  	271	3 
[2, 2, 0, 6, 0]  	274	4 
[3, 6, 0, 4, 0]  	279	3 
[2, 7, 4, 1, 0]  	282	3 
[2, 7, 0, 4, 0]  	282	3 
[2, 2, 7, 1, 0]  	283	4 
[2, 0, 7, 2, 0]  	287	3 
[2, 0, 3, 5, 0]  	287	3 
[1, 7, 6, 0, 0]  	287	3 
[2, 6, 5, 1, 0]  	293	4 
[2, 1, 4, 4, 0]  	294	3 
[2, 1, 0, 7, 0]  	294	3 
[2, 0, 6, 3, 0]  	296	4 
[2, 0, 2, 6, 0]  	296	3 
[1, 7, 1, 4, 0]  	296	3 
[1, 4, 3, 4, 0]  	302	3 
[1, 8, 2, 3, 0]  	303	2 
[2, 0, 5, 4, 0]  	305	2 
[2, 0, 1, 7, 0]  	305	2 
[1, 7, 4, 2, 0]  	305	3 
[1, 7, 0, 5, 0]  	305	2 
[1, 2, 3, 5, 0]  	306	3 
[1, 6, 6, 1, 0]  	307	3 
[1, 6, 2, 4, 0]  	307	3 
[1, 5, 8, 0, 0]  	309	2 
[1, 5, 4, 3, 0]  	309	3 
[1, 5, 0, 6, 0]  	309	2 
[1, 0, 7, 3, 0]  	310	3 
[1, 0, 3, 6, 0]  	310	2 
[2, 0, 0, 8, 0]  	314	3 
[1, 2, 10, 0, 0]  	315	2 
[1, 2, 6, 3, 0]  	315	3 
[1, 2, 2, 6, 0]  	315	3 
[1, 6, 5, 2, 0]  	316	3 
[1, 6, 1, 5, 0]  	316	3 
[1, 5, 7, 1, 0]  	318	2 
[0, 3, 10, 0, 0]  	318	2 
[1, 0, 10, 1, 0]  	319	1 
[1, 0, 6, 4, 0]  	319	1 
[1, 0, 2, 7, 0]  	319	1 
[0, 7, 5, 2, 0]  	319	1 
[0, 7, 1, 5, 0]  	319	1 
[0, 5, 9, 0, 0]  	323	2 
[1, 0, 5, 5, 0]  	328	3 
[1, 0, 1, 8, 0]  	328	3 
[1, 4, 0, 7, 0]  	329	3 
[0, 5, 8, 1, 0]  	332	1 
[0, 5, 4, 4, 0]  	332	1 
[0, 5, 0, 7, 0]  	332	1 
[1, 2, 0, 8, 0]  	333	3 
[1, 0, 0, 9, 0]  	337	2 
[0, 5, 7, 2, 0]  	341	1 
[0, 5, 3, 5, 0]  	341	1 
[0, 0, 10, 2, 0]  	342	1 
[0, 0, 6, 5, 0]  	342	1 
[0, 0, 2, 8, 0]  	342	1 
[0, 3, 7, 3, 0]  	345	1 
[0, 3, 3, 6, 0]  	345	1 
[0, 0, 13, 0, 0]  	351	1  <--- 3
[0, 0, 9, 3, 0]  	351	1 
[0, 0, 5, 6, 0]  	351	1 
[0, 0, 1, 9, 0]  	351	1 
[0, 3, 6, 4, 0]  	354	1 
[0, 3, 2, 7, 0]  	354	1 
[0, 3, 0, 9, 0]  	372	1 
[0, 0, 0, 11, 0]  	396	1  <--- 4
[0, 0, 4, 1, 1]  	144	2 
[0, 8, 4, 0, 1]  	236	2 
[1, 4, 8, 0, 1]  	293	5 
[0, 0, 11, 0, 1]  	297	3 
[0, 7, 8, 0, 1]  	328	3 
[5, 1, 0, 3, 2]  	189	6 
[8, 0, 0, 3, 2]  	212	3 
[3, 1, 0, 5, 4]  	235	3 
[3, 2, 1, 4, 4]  	242	4 
[3, 0, 1, 5, 4]  	246	4 
[1, 0, 10, 0, 6]  	283	5 
[2, 0, 0, 7, 249]  	278	2 
[1, 0, 2, 6, 249]  	283	2 
[1, 6, 0, 5, 249]  	289	2 
[2, 0, 3, 4, 250]  	251	2 
[2, 8, 0, 3, 250]  	262	2 
[2, 8, 3, 0, 251]  	235	2 
[2, 0, 8, 0, 251]  	242	3 
[2, 7, 4, 0, 251]  	246	3 
[0, 2, 0, 9, 252]  	356	1 
[0, 0, 0, 10, 252]  	360	1 
[2, 6, 0, 4, 253]  	266	3 
[2, 0, 1, 6, 253]  	269	3 
[0, 0, 2, 7, 253]  	306	1 
[0, 0, 0, 9, 253]  	324	1 
[0, 7, 0, 6, 253]  	328	1 
[0, 2, 3, 6, 253]  	329	1 
[2, 4, 1, 2, 254]  	189	3 
[2, 0, 7, 0, 254]  	215	2 
[1, 1, 0, 6, 254]  	245	2 
[0, 0, 0, 7, 254]  	252	1 
[1, 0, 1, 6, 254]  	256	2 
[1, 5, 7, 0, 254]  	282	3 
[0, 8, 2, 3, 254]  	290	1 
[0, 7, 0, 5, 254]  	292	1 
[0, 0, 3, 6, 254]  	297	1 
[0, 5, 3, 4, 254]  	305	1 
[0, 7, 2, 4, 254]  	310	1 
[0, 0, 0, 4, 255]  	144	1 
[0, 8, 0, 3, 255]  	236	1 
[0, 5, 7, 0, 255]  	269	1 
[0, 7, 6, 0, 255]  	274	1 
[0, 8, 3, 2, 255]  	281	1 
[0, 2, 10, 0, 255]  	302	1 
------
The gap is between 7 and 248.
Lengths: 2 2 4 5 2 7.
For 340 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^9

For 196 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^5*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^5

For 52 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^1

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[10697424281415873576 + 17405921418501988385*2^64 + 14799310384245429582*2^128 + 1746449566*2^192,4429638527670434704 + 16599761884949771774*2^64 + 10998566454259182131*2^128 + 397843914*2^192,13638913879712008912 + 14662187333976217165*2^64 + 7931861934719492085*2^128 + 1636282224*2^192,12959009888574163500 + 3693953684958387697*2^64 + 7677927178359659198*2^128 + 2318344614*2^192,5752222802216095076 + 4132726737567238947*2^64 + 17152346329104887183*2^128 + 2357614549*2^192,12255261890707040000 + 3259518866928047358*2^64 + 3520558687222750751*2^128 + 3900919027*2^192,16058177563652663888 + 15340548762960039425*2^64 + 5424654148712393517*2^128 + 2902717086*2^192,12129264084194331144 + 16897618809175052235*2^64 + 15879870253735232853*2^128 + 3728817169*2^192;\
11442405958429350608 + 17228296062236985693*2^64 + 2319598316664579247*2^128 + 3706193975*2^192,2394748245902413462 + 12952127731215071993*2^64 + 1975678605985832569*2^128 + 3028124838*2^192,17441601054574913990 + 9338621124112233726*2^64 + 9382015360155426357*2^128 + 1916305449*2^192,15374915727897312968 + 8046767829195640918*2^64 + 15041593485048620652*2^128 + 976930255*2^192,4599285726401836366 + 3880176603325752835*2^64 + 12990205142826596230*2^128 + 2801769308*2^192,6170238984544930980 + 16334645526920876656*2^64 + 5516859071026519010*2^128 + 3423731147*2^192,6182140619798332820 + 4337445765863808843*2^64 + 1108271989522783516*2^128 + 581359433*2^192,7924521466367710036 + 1383805512745909773*2^64 + 9283685933572668454*2^128 + 487123777*2^192;\
5280773014913308016 + 5936070649636748715*2^64 + 10758819695618427589*2^128 + 4122715038*2^192,2769217436307546300 + 5290805425726953312*2^64 + 14722701768970973053*2^128 + 2733838153*2^192,15160689631319295956 + 16321066265802634640*2^64 + 6088994972098556676*2^128 + 2877473621*2^192,8687361757933197856 + 16389612053855063085*2^64 + 5090543721014273274*2^128 + 1350882836*2^192,11766129881511287796 + 1632630854909287443*2^64 + 2080030774888782019*2^128 + 735867393*2^192,360910590717397640 + 15085484047038633464*2^64 + 18184821943820173773*2^128 + 3496090498*2^192,16350216597354680088 + 3461541184779955173*2^64 + 7491086539337004795*2^128 + 3146577181*2^192,5366147909811417784 + 15401327793072193269*2^64 + 11345174845191578375*2^128 + 3278184555*2^192;\
5623490726196276640 + 6555959592322589369*2^64 + 7053696345507035932*2^128 + 3299717710*2^192,1936331850663349140 + 16447203754666496802*2^64 + 3346536784681738268*2^128 + 2841876777*2^192,13500040468301895412 + 5785106314726529952*2^64 + 6064724314117617412*2^128 + 364708942*2^192,1749662298467436500 + 1740866861299655346*2^64 + 16965013380489824735*2^128 + 4285430089*2^192,13075944105430395816 + 17169572648147701672*2^64 + 11433280484967661982*2^128 + 485617743*2^192,7726210977910969752 + 14229157168544727274*2^64 + 5410118274033765145*2^128 + 218083576*2^192,1590749238103119272 + 9533983693565090631*2^64 + 4132585014793938829*2^128 + 3000302471*2^192,4357416685811031056 + 16087013334450303457*2^64 + 9616994986858380164*2^128 + 3110323157*2^192;\
18409004559380127400 + 16103753908911570161*2^64 + 17661640321515115289*2^128 + 3854222836*2^192,13290820919749695072 + 4363597781418573230*2^64 + 5904634406772091204*2^128 + 43365600*2^192,15216993513853867024 + 12922566857871811023*2^64 + 12463309957611774169*2^128 + 1562929140*2^192,991777231227845624 + 16613994396646758176*2^64 + 17549608650826081836*2^128 + 833239608*2^192,374656932222729520 + 7540448472914373745*2^64 + 6804589887551974057*2^128 + 2327003304*2^192,5254102034652286112 + 17223061787398140341*2^64 + 234758533608999716*2^128 + 3864653859*2^192,13386847880794679824 + 15818763352713909640*2^64 + 17395206983169475152*2^128 + 3406090291*2^192,2317286023913346144 + 6003378385790971090*2^64 + 13955659001318572728*2^128 + 3899814465*2^192;\
7845743624229544152 + 3521019508749123142*2^64 + 4583563550106659797*2^128 + 426142873*2^192,5018637972746301095 + 8766853302281608431*2^64 + 890918858257360358*2^128 + 2567021878*2^192,2718362059612185963 + 18141157059741301057*2^64 + 3089554852314873128*2^128 + 1174186084*2^192,6517184040850146612 + 5496949784535699259*2^64 + 12363026054369876655*2^128 + 3155522802*2^192,12727615104151334563 + 4474229354901413415*2^64 + 2386471643224306766*2^128 + 1910447393*2^192,18056302164523257546 + 10405905065110741105*2^64 + 16740163905738870403*2^128 + 759157337*2^192,10257187865382117810 + 16589559330767769739*2^64 + 10090087365472699382*2^128 + 2215433824*2^192,660772621074695322 + 6534141098567698521*2^64 + 8271631028982898803*2^128 + 3648372408*2^192;\
17382542122897111864 + 9667819426458266182*2^64 + 2572926064403945295*2^128 + 2597998556*2^192,13921047986353698320 + 236346398804946118*2^64 + 15295332252797674508*2^128 + 4143954803*2^192,7876748554202252992 + 148836783370552920*2^64 + 16858814376272503630*2^128 + 710561113*2^192,3229806197875544616 + 1807483803036349804*2^64 + 14887720829789009402*2^128 + 2105588305*2^192,14764295760113281568 + 9272801642004456351*2^64 + 793454156216911711*2^128 + 2529291061*2^192,4427171896457836160 + 7747144685818746586*2^64 + 2560648630392683404*2^128 + 3739502964*2^192,3125205228166821056 + 12030838364967840196*2^64 + 2238729802113944231*2^128 + 1957036625*2^192,13084177243784139600 + 17200767771936949667*2^64 + 781767756953353583*2^128 + 3996638730*2^192;\
15251248065044095160 + 16502836099240277788*2^64 + 12437594856709481576*2^128 + 1184240178*2^192,16244177980473993944 + 9416162821021117957*2^64 + 466080805674414071*2^128 + 3267375144*2^192,17342442432287408664 + 2639521930828528997*2^64 + 12705000554598565414*2^128 + 2508532347*2^192,10061815883418001672 + 13830304723117227275*2^64 + 9327493490713056528*2^128 + 744331323*2^192,18142919033724467464 + 6155587274848010821*2^64 + 18263227667254655704*2^128 + 2503603317*2^192,6609935296273061488 + 14304635151614427685*2^64 + 1677536228899338928*2^128 + 2786248788*2^192,16430687525452675552 + 15963104390174532500*2^64 + 7814085403566000948*2^128 + 913171293*2^192,13340241804363623648 + 3619316756202458439*2^64 + 3952970066862555594*2^128 + 1533371901*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2410 lists. */
The sign is: -1
The characteristic polynomial is: x^8 - x^6 + 4*x^5 - 16*x^3 + 16*x^2 - 256
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^6 + 3*x^4 + 4*x^3 + 12*x^2 + 64, 1]
The valuation of f-g is: 27
The valuation of subst(g,x,A) is: 27

Please input coefficients below.
The polynomial is: 1*x^9*z^1 + 1*x^5*y^1*z^1*w^1 + 1*x^1*y^2*z^1*w^2 + 1*y^9 + 1*z^4*w^1 + 1*w^4
Total 166: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 
Look at the ideal generated by: 
1*x^3*y^2*z^1*w^1 + 1*x^2*w^3 + 1*y^5*z^2
1*x^8*w^1 + 1*x^5*y^3*z^1 + 1*x^4*y^1*w^2 + 1*y^2*z^4
