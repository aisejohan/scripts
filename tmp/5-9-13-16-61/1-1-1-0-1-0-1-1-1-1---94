/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * w^1               = Coefficient of   x^7 * z^2               = Coefficient of   x^6 * y^2 * z^1         = Coefficient of   x^5 * y^4               = Coefficient of   x^4 * y^1 * w^2         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   y^5 * w^1               = Coefficient of   y^1 * z^4               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^2*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
Allocate M_len = 102400 elements.
The final length of G is 255
[9, 0, 0, 0, 0]  	45	5  <--- 1
[8, 0, 0, 1, 0]  	56	5 
[6, 3, 0, 0, 0]  	57	7 
[8, 2, 0, 0, 0]  	58	8 
[7, 0, 2, 0, 0]  	61	4 
[6, 2, 1, 0, 0]  	61	4 
[4, 1, 0, 2, 0]  	61	5 
[7, 0, 0, 2, 0]  	67	7 
[5, 3, 0, 1, 0]  	68	10 
[7, 2, 0, 1, 0]  	69	8 
[5, 0, 1, 2, 0]  	70	7 
[6, 0, 2, 1, 0]  	72	9 
[4, 3, 1, 1, 0]  	76	8 
[5, 0, 4, 0, 0]  	77	10 
[6, 0, 0, 3, 0]  	78	11 
[2, 3, 2, 1, 0]  	79	6 
[3, 4, 1, 1, 0]  	80	10 
[4, 5, 0, 1, 0]  	81	10 
[4, 0, 1, 3, 0]  	81	10 
[5, 5, 1, 0, 0]  	83	11 
[4, 0, 0, 4, 0]  	84	9 
[4, 3, 3, 0, 0]  	86	10 
[3, 5, 2, 0, 0]  	86	10 
[4, 6, 1, 0, 0]  	87	10 
[2, 5, 0, 2, 0]  	87	7 
[5, 7, 0, 0, 0]  	88	10 
[4, 0, 4, 1, 0]  	88	10 
[4, 2, 4, 0, 0]  	90	10 
[3, 4, 3, 0, 0]  	90	9 
[3, 3, 0, 3, 0]  	90	10 
[4, 0, 3, 2, 0]  	91	11 
[3, 7, 1, 0, 0]  	91	11 
[3, 0, 1, 4, 0]  	92	8 
[4, 2, 3, 1, 0]  	93	11 
[2, 6, 1, 1, 0]  	93	9 
[3, 7, 0, 1, 0]  	94	11 
[3, 0, 0, 5, 0]  	95	9 
[3, 9, 0, 0, 0]  	96	9 
[2, 2, 4, 1, 0]  	96	9 
[3, 2, 0, 4, 0]  	97	7 
[2, 0, 3, 3, 0]  	97	7 
[3, 2, 5, 0, 0]  	98	9 
[3, 1, 2, 3, 0]  	98	9 
[2, 8, 0, 1, 0]  	98	9 
[2, 4, 4, 0, 0]  	98	9 
[3, 0, 4, 2, 0]  	99	10 
[2, 2, 3, 2, 0]  	99	9 
[2, 3, 0, 4, 0]  	101	9 
[3, 1, 6, 0, 0]  	102	7 
[2, 3, 5, 0, 0]  	102	7 
[2, 2, 2, 3, 0]  	102	7 
[1, 9, 0, 1, 0]  	102	7 
[1, 5, 4, 0, 0]  	102	7 
[2, 6, 3, 0, 0]  	103	8 
[2, 1, 4, 2, 0]  	103	8 
[2, 9, 1, 0, 0]  	104	9 
[2, 0, 6, 1, 0]  	104	8 
[2, 2, 1, 4, 0]  	105	7 
[1, 5, 3, 1, 0]  	105	7 
[1, 4, 0, 4, 0]  	105	7 
[3, 0, 7, 0, 0]  	106	8 
[2, 2, 6, 0, 0]  	106	9 
[2, 0, 0, 6, 0]  	106	7 
[2, 4, 1, 3, 0]  	107	7 
[2, 0, 5, 2, 0]  	107	7 
[1, 7, 3, 0, 0]  	107	7 
[1, 6, 0, 3, 0]  	107	7 
[2, 2, 0, 5, 0]  	108	7 
[1, 10, 1, 0, 0]  	108	7 
[1, 5, 2, 2, 0]  	108	7 
[2, 11, 0, 0, 0]  	109	7 
[2, 1, 2, 4, 0]  	109	7 
[1, 8, 0, 2, 0]  	109	7 
[1, 4, 4, 1, 0]  	109	7 
[1, 3, 1, 4, 0]  	109	7 
[1, 7, 2, 1, 0]  	110	7 
[1, 3, 6, 0, 0]  	110	7 
[1, 5, 1, 3, 0]  	111	6 
[1, 1, 5, 2, 0]  	111	6 
[2, 1, 1, 5, 0]  	112	7 
[1, 9, 2, 0, 0]  	112	6 
[1, 0, 7, 1, 0]  	112	6 
[1, 12, 0, 0, 0]  	113	6 
[1, 7, 1, 2, 0]  	113	6 
[1, 3, 5, 1, 0]  	113	6 
[1, 2, 2, 4, 0]  	113	6 
[2, 0, 8, 0, 0]  	114	6 
[1, 1, 4, 3, 0]  	114	6 
[1, 4, 2, 3, 0]  	115	6 
[1, 0, 6, 2, 0]  	115	6 
[2, 0, 2, 5, 0]  	116	5 
[1, 3, 4, 2, 0]  	116	5 
[1, 2, 1, 5, 0]  	116	5 
[0, 10, 2, 0, 0]  	116	5 
[1, 2, 6, 1, 0]  	117	6 
[1, 1, 3, 4, 0]  	117	6 
[1, 0, 0, 7, 0]  	117	6 
[1, 1, 8, 0, 0]  	118	5 
[1, 0, 5, 3, 0]  	118	6 
[1, 3, 3, 3, 0]  	119	5 
[1, 2, 0, 6, 0]  	119	5 
[0, 10, 1, 1, 0]  	119	5 
[1, 1, 2, 5, 0]  	120	4 
[1, 0, 4, 4, 0]  	121	4 
[0, 7, 2, 2, 0]  	121	4 
[1, 0, 9, 0, 0]  	122	6 
[0, 10, 0, 2, 0]  	122	6 
[1, 1, 1, 6, 0]  	123	5 
[0, 5, 6, 0, 0]  	123	4 
[1, 0, 3, 5, 0]  	124	5 
[0, 12, 0, 1, 0]  	124	5 
[0, 6, 3, 2, 0]  	125	3 
[0, 5, 0, 5, 0]  	125	3 
[0, 14, 0, 0, 0]  	126	4  <--- 2
[0, 9, 1, 2, 0]  	126	4 
[1, 0, 2, 6, 0]  	127	4 
[0, 8, 3, 1, 0]  	127	4 
[0, 7, 0, 4, 0]  	127	4 
[0, 6, 2, 3, 0]  	128	3 
[0, 2, 6, 2, 0]  	128	3 
[0, 9, 0, 3, 0]  	129	3 
[0, 4, 1, 5, 0]  	129	3 
[0, 4, 6, 1, 0]  	130	3 
[0, 3, 3, 4, 0]  	130	3 
[0, 7, 4, 1, 0]  	131	3 
[0, 6, 1, 4, 0]  	131	3 
[0, 3, 8, 0, 0]  	131	3 
[0, 4, 0, 6, 0]  	132	3 
[0, 9, 4, 0, 0]  	133	4 
[0, 8, 1, 3, 0]  	133	3 
[0, 3, 7, 1, 0]  	134	2 
[0, 2, 4, 4, 0]  	134	2 
[0, 6, 5, 1, 0]  	135	3 
[0, 5, 2, 4, 0]  	135	3 
[0, 2, 9, 0, 0]  	135	3 
[0, 3, 1, 6, 0]  	136	2 
[0, 8, 5, 0, 0]  	137	3 
[0, 2, 8, 1, 0]  	138	2 
[0, 1, 5, 4, 0]  	138	2 
[0, 3, 0, 7, 0]  	139	2 
[0, 1, 10, 0, 0]  	139	2 
[0, 1, 4, 5, 0]  	141	1 
[0, 0, 1, 8, 0]  	141	1 
[0, 1, 9, 1, 0]  	142	2 
[0, 1, 8, 2, 0]  	145	2 
[0, 2, 0, 8, 0]  	146	1 
[0, 0, 10, 1, 0]  	146	1 
[0, 1, 2, 7, 0]  	147	1 
[0, 0, 3, 7, 0]  	151	1 
[0, 0, 8, 3, 0]  	152	1 
[0, 0, 7, 4, 0]  	155	1 
[0, 0, 12, 0, 0]  	156	1  <--- 3
[0, 0, 0, 10, 0]  	160	1  <--- 4
[0, 0, 5, 6, 0]  	161	1 
[7, 0, 1, 0, 1]  	48	5 
[6, 1, 1, 0, 1]  	52	5 
[4, 1, 2, 1, 1]  	71	7 
[5, 4, 1, 0, 1]  	74	8 
[5, 3, 2, 0, 1]  	78	11 
[4, 1, 4, 0, 1]  	81	10 
[5, 2, 3, 0, 1]  	82	10 
[4, 4, 2, 0, 1]  	82	10 
[4, 7, 0, 0, 1]  	83	10 
[2, 5, 1, 1, 1]  	84	8 
[4, 0, 5, 0, 1]  	85	11 
[3, 8, 0, 0, 1]  	87	9 
[3, 1, 5, 0, 1]  	89	10 
[3, 0, 2, 3, 1]  	89	10 
[3, 0, 6, 0, 1]  	93	10 
[3, 3, 4, 0, 1]  	94	11 
[3, 0, 5, 1, 1]  	96	9 
[2, 1, 6, 0, 1]  	97	7 
[1, 7, 1, 1, 1]  	97	7 
[2, 7, 2, 0, 1]  	99	9 
[2, 10, 0, 0, 1]  	100	9 
[2, 1, 5, 1, 1]  	100	8 
[2, 0, 1, 5, 1]  	103	8 
[1, 4, 5, 0, 1]  	106	7 
[1, 3, 0, 5, 1]  	112	6 
[1, 2, 7, 0, 1]  	114	6 
[0, 9, 3, 0, 1]  	120	5 
[0, 8, 0, 3, 1]  	120	4 
[0, 12, 1, 0, 1]  	121	4 
[0, 6, 4, 1, 1]  	122	5 
[0, 5, 5, 1, 1]  	126	4 
[0, 7, 5, 0, 1]  	128	3 
[0, 5, 4, 2, 1]  	129	3 
[0, 5, 3, 3, 1]  	132	3 
[0, 2, 3, 5, 1]  	137	2 
[0, 2, 1, 7, 1]  	143	2 
[0, 1, 3, 6, 1]  	144	2 
[0, 1, 7, 3, 1]  	148	2 
[5, 1, 1, 1, 2]  	63	9 
[5, 1, 3, 0, 2]  	73	10 
[3, 1, 3, 1, 2]  	79	8 
[2, 2, 5, 0, 2]  	93	8 
[1, 11, 0, 0, 2]  	104	8 
[1, 4, 3, 2, 2]  	112	7 
[0, 7, 3, 1, 2]  	118	5 
[0, 9, 2, 1, 2]  	123	4 
[0, 2, 7, 1, 2]  	125	3 
[0, 4, 5, 2, 2]  	133	3 
[0, 4, 4, 3, 2]  	136	2 
[3, 2, 1, 3, 3]  	94	10 
[2, 0, 2, 4, 3]  	100	8 
[1, 2, 3, 3, 3]  	110	6 
[0, 11, 0, 1, 3]  	115	5 
[0, 8, 4, 0, 3]  	124	4 
[3, 2, 2, 2, 5]  	91	10 
[2, 0, 7, 0, 7]  	101	8 
[1, 6, 2, 1, 249]  	101	7 
[2, 5, 3, 0, 251]  	94	9 
[2, 9, 0, 0, 252]  	91	9 
[1, 1, 0, 6, 252]  	110	5 
[0, 6, 1, 3, 253]  	115	2 
[4, 3, 0, 1, 254]  	63	7 
[3, 0, 0, 4, 254]  	79	5 
[2, 7, 0, 1, 254]  	89	6 
[1, 5, 2, 1, 254]  	92	5 
[2, 1, 2, 3, 254]  	93	7 
[1, 5, 1, 2, 254]  	95	5 
[1, 3, 4, 1, 254]  	100	6 
[1, 2, 1, 4, 254]  	100	5 
[1, 3, 2, 3, 254]  	106	5 
[0, 6, 2, 2, 254]  	112	1 
[0, 6, 0, 4, 254]  	118	4 
[0, 3, 1, 5, 254]  	120	2 
[0, 3, 0, 6, 254]  	123	2 
[0, 1, 4, 4, 254]  	125	2 
[0, 0, 8, 2, 254]  	136	1 
[6, 2, 0, 0, 255]  	48	3 
[4, 0, 0, 2, 255]  	52	4 
[2, 5, 0, 1, 255]  	71	5 
[4, 3, 2, 0, 255]  	73	7 
[3, 5, 1, 0, 255]  	73	4 
[3, 3, 0, 2, 255]  	74	5 
[3, 3, 3, 0, 255]  	81	8 
[1, 5, 0, 2, 255]  	82	4 
[2, 1, 5, 0, 255]  	84	5 
[1, 3, 4, 0, 255]  	84	3 
[3, 2, 4, 0, 255]  	85	7 
[1, 2, 0, 4, 255]  	87	3 
[1, 2, 2, 3, 255]  	97	3 
[1, 0, 6, 1, 255]  	99	3 
[1, 0, 4, 3, 255]  	105	2 
[0, 11, 1, 0, 255]  	112	3 
[1, 0, 1, 6, 255]  	114	3 
[0, 3, 6, 1, 255]  	121	1 
[0, 2, 8, 0, 255]  	122	2 
[0, 4, 2, 4, 255]  	126	2 
[0, 0, 0, 8, 255]  	128	1 
[0, 1, 8, 1, 255]  	129	2 
[0, 0, 10, 0, 255]  	130	1 
[0, 0, 4, 5, 255]  	132	1 
[0, 0, 6, 4, 255]  	142	1 
------
The gap is between 8 and 248.
Lengths: 2 2 8 9 2 2.
For 140 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^5*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^2*w^6

For 79 = 2*d-d1-d2-d3-d4 you get 8 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^6
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^3*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^1*w^3

For 18 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[5516523286558596092 + 9060619230771508607*2^64 + 14874759501954949725*2^128 + 46548239*2^192,6473124748017043696 + 15001993433120141781*2^64 + 9661737776619547188*2^128 + 1945117353*2^192,13682062944026115072 + 13740451977773068834*2^64 + 9965132330216748504*2^128 + 4048313612*2^192,12998326811497883376 + 8177302776491376743*2^64 + 3163176082911187719*2^128 + 3944200672*2^192,17883205381331043152 + 13639959506226529425*2^64 + 10437164505233941843*2^128 + 51696250*2^192,7177078326816929280 + 16016615083938714999*2^64 + 2960422375332876093*2^128 + 2354030496*2^192,17898900532065419136 + 1152474268708714833*2^64 + 18335663166095335649*2^128 + 778099521*2^192,16169599174020048112 + 14675452353793010448*2^64 + 1939788556143194502*2^128 + 1185685883*2^192,5659786224082352320 + 12107931339827289405*2^64 + 4440110728672729172*2^128 + 1077846320*2^192,4541453691842707280 + 12094328538405620133*2^64 + 10611599027015808586*2^128 + 159205434*2^192,2475337458536230784 + 1254236227056169569*2^64 + 2589762674563286478*2^128 + 3114902455*2^192,2392075073819652832 + 5795097339725671096*2^64 + 7274611652087769877*2^128 + 960648208*2^192;\
15024518514884453700 + 5605742665843780769*2^64 + 18157780335476462791*2^128 + 3425588993*2^192,15197721208348605376 + 2432484465551545654*2^64 + 9202097224947858840*2^128 + 1987424899*2^192,3487040192182799408 + 13081181474254256896*2^64 + 13126581329729391448*2^128 + 2945634522*2^192,2036719534314707184 + 8477878851304002769*2^64 + 12575205338412908947*2^128 + 4072182098*2^192,17954745627664396400 + 17050977260572149811*2^64 + 11981539313810300352*2^128 + 2753833741*2^192,6550018187322011872 + 18409076448060923697*2^64 + 3064520430625432718*2^128 + 3740766059*2^192,2041399229809072512 + 5047214416481106845*2^64 + 11336748666710971360*2^128 + 1319283969*2^192,18129475269100496640 + 18349520397183636851*2^64 + 4667169880451724933*2^128 + 3595256373*2^192,6516791818314603024 + 12575698947377574323*2^64 + 14734700820201967007*2^128 + 3800468470*2^192,8150495417462995360 + 14729754437962551927*2^64 + 14935752743115359975*2^128 + 1561825341*2^192,7696911935333328416 + 542616758247247366*2^64 + 5139126130359940439*2^128 + 4115768036*2^192,4757873070977416096 + 16047059254798333039*2^64 + 15482461581358604675*2^128 + 3355521151*2^192;\
0 + 0*2^64 + 0*2^128 + 4177526784*2^192,0 + 0*2^64 + 0*2^128 + 3204448256*2^192,10250701138584141832 + 5237561937588078428*2^64 + 15069447012531778926*2^128 + 1555903710*2^192,0 + 0*2^64 + 0*2^128 + 1409286144*2^192,0 + 0*2^64 + 0*2^128 + 2617245696*2^192,0 + 0*2^64 + 0*2^128 + 3539992576*2^192,0 + 0*2^64 + 0*2^128 + 2684354560*2^192,0 + 0*2^64 + 0*2^128 + 3456106496*2^192,0 + 0*2^64 + 0*2^128 + 1728053248*2^192,0 + 0*2^64 + 0*2^128 + 436207616*2^192,0 + 0*2^64 + 0*2^128 + 1275068416*2^192,0 + 0*2^64 + 0*2^128 + 1308622848*2^192;\
17864461348721752171 + 2854425129739091781*2^64 + 14693495644583332589*2^128 + 13690634*2^192,10727420180894525135 + 4864748486727923096*2^64 + 6264396065328735538*2^128 + 1306350226*2^192,15220767274645257624 + 6117598706945712870*2^64 + 11991440539430327788*2^128 + 2001325775*2^192,17658017526324838900 + 10065140275506826610*2^64 + 4229677941356003764*2^128 + 548984636*2^192,1186552104901228212 + 14133286939481890959*2^64 + 11977944407920818465*2^128 + 2596028262*2^192,10552409136935522024 + 3007893096007512731*2^64 + 13407497835265909675*2^128 + 3151594066*2^192,7246541242234144272 + 15337510324550839079*2^64 + 3599722948556256624*2^128 + 215281868*2^192,4561298067499486744 + 4872129926992661986*2^64 + 18320784306631243914*2^128 + 1831510756*2^192,2242487982214653972 + 680926344030496425*2^64 + 9317930560655837383*2^128 + 1299327174*2^192,251981165344059096 + 15562733181876979137*2^64 + 13599380854121656634*2^128 + 2761847097*2^192,9017957059829666228 + 15676231469209447664*2^64 + 5963126821421986344*2^128 + 2346271583*2^192,3673722647635565440 + 2715452115167191437*2^64 + 787366965300290036*2^128 + 228486342*2^192;\
3191606921155429658 + 4752864640054737700*2^64 + 15095786806816204484*2^128 + 3698175342*2^192,1945340138109076882 + 6205286467280191467*2^64 + 10738753898560753431*2^128 + 411577531*2^192,16459122937127019808 + 17123325632607368203*2^64 + 16601944606396968767*2^128 + 288668593*2^192,15774646484140019256 + 8400932292579600977*2^64 + 3586871479349060583*2^128 + 563958565*2^192,5342869915916475488 + 15398913519520140940*2^64 + 11753890508745919778*2^128 + 3956322605*2^192,1445544836277413232 + 8814211532704364592*2^64 + 11731019122584509105*2^128 + 3676101521*2^192,15494267065760360064 + 4464060342515714373*2^64 + 18417043644650277300*2^128 + 922579817*2^192,4627923948596225864 + 4714554621552975951*2^64 + 4619629026274959523*2^128 + 497932301*2^192,17209723851956355528 + 18068950667345793482*2^64 + 10661769158226886326*2^128 + 4190442098*2^192,1097650074141336896 + 3227308603767425905*2^64 + 1043748085060035147*2^128 + 2546518015*2^192,9023368028445004504 + 14601863690420596532*2^64 + 5236230883289212487*2^128 + 1998909799*2^192,15150654696357812064 + 1747536326630846454*2^64 + 13168466495937731872*2^128 + 3345039186*2^192;\
8872718593466482650 + 14991518156947833195*2^64 + 6755166626069535371*2^128 + 1743238064*2^192,17383571156283765138 + 12717371327338734072*2^64 + 15288164565466449244*2^128 + 1236435155*2^192,17251107556096426992 + 14845105825550291863*2^64 + 1489834180462885186*2^128 + 52469676*2^192,12424162872493932712 + 13806839656653974907*2^64 + 5997920557968737590*2^128 + 1350604895*2^192,8327315135246906696 + 3167417505250978384*2^64 + 18192581332160665635*2^128 + 560244162*2^192,6433301697952506696 + 14214483769404253518*2^64 + 7667636689560607997*2^128 + 3980014396*2^192,10881646398099751232 + 11823482083401355069*2^64 + 8047132933999275394*2^128 + 2231830786*2^192,11990093313911739104 + 17847357684025790248*2^64 + 9610091631876428568*2^128 + 1016922248*2^192,12966057235371059208 + 678497407772784322*2^64 + 891993275207104078*2^128 + 4203218336*2^192,13992100134023298432 + 6405943948204415747*2^64 + 16512643301119157874*2^128 + 1833360954*2^192,13712375557715754656 + 1118102800088039288*2^64 + 4480576792081047342*2^128 + 197059458*2^192,11832589002531500464 + 991788489905256264*2^64 + 2857793319592236323*2^128 + 248908426*2^192;\
12669805111881799932 + 17972835246331942281*2^64 + 18446165886739400098*2^128 + 1297469662*2^192,14897724923441666890 + 9510536047869529715*2^64 + 4101071683157609813*2^128 + 740585722*2^192,8725645031899592568 + 6581184856690603591*2^64 + 5992926024103496391*2^128 + 3307296282*2^192,6381278505000620928 + 7816222307884021224*2^64 + 16442217306820866422*2^128 + 2815138021*2^192,2661386504748489760 + 11894756161216822701*2^64 + 3300411905955365505*2^128 + 172840805*2^192,15489513828835607272 + 7359420584847352266*2^64 + 2875695361551931788*2^128 + 3257556411*2^192,16793976982239424568 + 2156067838976112227*2^64 + 6897605094986240210*2^128 + 1560846825*2^192,12770648063426198344 + 1519908059596684726*2^64 + 16429467589152060004*2^128 + 1434083817*2^192,11260787303920553432 + 18089733396937041157*2^64 + 3538984888720542039*2^128 + 1152144272*2^192,10202489280940021848 + 13302703266288595608*2^64 + 11035607108664884302*2^128 + 1568219102*2^192,13988135622531745632 + 11752637521620593295*2^64 + 844552195492744950*2^128 + 1744691587*2^192,3466082202805368688 + 7712331654379748203*2^64 + 9450119781352586088*2^128 + 3081516383*2^192;\
6644784838487176822 + 4662869980839026929*2^64 + 13266006908038275575*2^128 + 2741158031*2^192,7146352850380711022 + 12400200405403281111*2^64 + 13264321476783069906*2^128 + 1292134717*2^192,15749796109864468960 + 16189039709123913282*2^64 + 12564945629455028680*2^128 + 4000963554*2^192,14149294020603612112 + 15777813912782109186*2^64 + 12719649641041256037*2^128 + 1701149883*2^192,7748313731337524472 + 2465179383345267514*2^64 + 12682778935930649258*2^128 + 4199856792*2^192,6178928401829420624 + 12243742887278670640*2^64 + 4528882405094263774*2^128 + 2254056250*2^192,17933951540427023368 + 11346481522155068999*2^64 + 15247290443622869729*2^128 + 3874393916*2^192,1457598592523574296 + 7375426489730981919*2^64 + 1192829637889716195*2^128 + 590126287*2^192,14559322085075037104 + 17162122827226687529*2^64 + 12245969023370618859*2^128 + 841328436*2^192,16765850243375024304 + 8486497368505179555*2^64 + 5547240933484449718*2^128 + 2596043483*2^192,181881741736954024 + 3689035392220777340*2^64 + 2768998791687796804*2^128 + 1070180721*2^192,12109959328057034672 + 16533046369098418515*2^64 + 8738064041667012208*2^128 + 3220887231*2^192;\
17904205004626062625 + 12492752738579918010*2^64 + 16291926677275606229*2^128 + 1875968019*2^192,3796376573954697065 + 13012570639023074170*2^64 + 10445367098807130631*2^128 + 1914895002*2^192,6268647652581315456 + 6099821195289074283*2^64 + 10367445102900294587*2^128 + 2081693230*2^192,17038489331255052428 + 10058525055090523003*2^64 + 3500291329078187014*2^128 + 952975130*2^192,5125806983021062172 + 15347038203026533896*2^64 + 1601475581309601575*2^128 + 2567318045*2^192,7499457315561314056 + 10974256736949835299*2^64 + 861148373020378305*2^128 + 2801099813*2^192,9550225940444615384 + 12278422954470045623*2^64 + 16228229951726946628*2^128 + 308465042*2^192,6162115812714421408 + 11856854138710472197*2^64 + 16037068505737354076*2^128 + 985370988*2^192,16973783603907223596 + 12360462150010350150*2^64 + 2026069777743134098*2^128 + 3925810863*2^192,15962735182971063880 + 8895281343939451840*2^64 + 2892355728902355800*2^128 + 451300109*2^192,7383909328409449668 + 10245100067095152707*2^64 + 13014373746603987064*2^128 + 725664659*2^192,7269025889957480864 + 2749024843087923379*2^64 + 1583349452374563962*2^128 + 2089944469*2^192;\
8336217243424499925 + 165218783015719469*2^64 + 14446308754174203389*2^128 + 1937101849*2^192,14797402869433949945 + 15468673647763777127*2^64 + 3730976910710772278*2^128 + 61357858*2^192,17920289940539152056 + 8326449340007211744*2^64 + 11566265418290795236*2^128 + 2765917568*2^192,10324358241283392780 + 15520085794566647349*2^64 + 6460315748818409457*2^128 + 2647269290*2^192,2690866039746339956 + 2901126964490264260*2^64 + 11374762403441471390*2^128 + 721646683*2^192,13141584746712855816 + 6767803609988394018*2^64 + 10331378757331153980*2^128 + 1987359098*2^192,11537565242674570128 + 15126859608015558993*2^64 + 2175916971498072943*2^128 + 2450653157*2^192,17030634957059523736 + 4761266110300340833*2^64 + 3590913649158725417*2^128 + 1000832756*2^192,11292988869384966156 + 1773691414904341928*2^64 + 16909487783511545332*2^128 + 3449880973*2^192,3938930627850032872 + 16051677151668102732*2^64 + 15145670433029201758*2^128 + 1459024188*2^192,13425323301953655396 + 13359749794181636052*2^64 + 14068331042931744292*2^128 + 2352404814*2^192,13423026858742822528 + 17535377655448530249*2^64 + 4587055417990243136*2^128 + 1068945501*2^192;\
15907997853763680684 + 266584131696653670*2^64 + 1240316176397350339*2^128 + 3134305809*2^192,8633386305015015960 + 6143180782127827813*2^64 + 1826877063089379676*2^128 + 195630514*2^192,2077779617246315056 + 8691788574646748369*2^64 + 3752626480396066464*2^128 + 3610082814*2^192,9288535857546412224 + 10082261494737065481*2^64 + 7197125069116772453*2^128 + 1683106409*2^192,14168517201170359424 + 13466546643738055302*2^64 + 15313107342015536863*2^128 + 3805328987*2^192,6453769658956734872 + 10214549968150013783*2^64 + 7739824546481364211*2^128 + 1310965554*2^192,5768458283797528416 + 6132760504210101246*2^64 + 12399242019013869928*2^128 + 1217089701*2^192,14058700825692772552 + 17417325952604657450*2^64 + 9248598306802171221*2^128 + 2052698747*2^192,16119697693923101072 + 14515339268041870107*2^64 + 2872683334676142672*2^128 + 3729004560*2^192,4368689053642012464 + 5268859441923126173*2^64 + 17758410325498218256*2^128 + 831443503*2^192,769387518889554760 + 16924110138494037595*2^64 + 17028551100573906744*2^128 + 350403696*2^192,4335267697760640000 + 8448113365455728238*2^64 + 5132701130994820092*2^128 + 2368347839*2^192;\
15668263106346249526 + 18413238439591425864*2^64 + 1216148171103189573*2^128 + 2441895415*2^192,12708150049292387114 + 8872967840692656627*2^64 + 13519268876561658125*2^128 + 3743033461*2^192,751333808000695280 + 3299521074442522669*2^64 + 11816547704125124316*2^128 + 1562331530*2^192,16926197857498621176 + 11399051413846203073*2^64 + 4143660280410192036*2^128 + 2256698024*2^192,7652086364731665824 + 14648719825013624166*2^64 + 4458625631001497263*2^128 + 2961312434*2^192,16090288155760827048 + 9450173980957354691*2^64 + 11357216696589525019*2^128 + 4210851832*2^192,3394224344832545920 + 8253748908492432734*2^64 + 801628629004666814*2^128 + 831142416*2^192,12053389403746955840 + 16718612243317386583*2^64 + 15510621282404926204*2^128 + 983778608*2^192,12496888675101922680 + 13242986745954976177*2^64 + 17798256454146107029*2^128 + 3760950194*2^192,1525335981232656144 + 12388290969852036302*2^64 + 7787812134073217369*2^128 + 3910767124*2^192,7702613924531639696 + 8240676640688734452*2^64 + 4955748025132965683*2^128 + 1834893220*2^192,16690643741646385136 + 2544347911563345894*2^64 + 6210805871943937532*2^128 + 3253731768*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 5458 lists. */
The sign is: -1
The characteristic polynomial is: x^12 + x^11 - 4*x^9 - 4*x^8 - 16*x^7 + 64*x^5 + 64*x^4 + 256*x^3 - 1024*x - 4096
Its Newton polygon is: [2, 4/3, 4/3, 4/3, 1, 1, 1, 1, 2/3, 2/3, 2/3, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^4 + x^3 + 4*x^2 + 4*x + 16, 1; x^6 - 4*x^3 + 64, 1]
The valuation of f-g is: 31
The valuation of subst(g,x,A) is: 30

Please input coefficients below.
The polynomial is: 1*x^9*w^1 + 1*x^7*z^2 + 1*x^6*y^2*z^1 + 1*x^4*y^1*w^2 + 1*x^1*y^3*z^1*w^1 + 1*y^5*w^1 + 1*y^1*z^4 + 1*z^1*w^3
Total 1635: 1 2 3 
Look at the ideal generated by: 
1*z^1
1*w^1
