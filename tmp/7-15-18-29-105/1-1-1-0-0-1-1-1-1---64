/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 214
[4, 2, 1, 0, 0]  	76	3 
[6, 3, 0, 0, 0]  	87	5 
[14, 0, 0, 0, 0]  	98	5  <--- 1
[3, 2, 3, 0, 0]  	105	5 
[1, 1, 3, 1, 0]  	105	3 
[3, 1, 1, 2, 0]  	112	5 
[2, 7, 0, 0, 0]  	119	6 
[3, 1, 5, 0, 0]  	126	7 
[12, 2, 0, 1, 0]  	143	8 
[11, 1, 3, 0, 0]  	146	6 
[6, 0, 1, 3, 0]  	147	9 
[2, 0, 1, 4, 0]  	148	5 
[1, 0, 3, 3, 0]  	148	3 
[4, 0, 2, 3, 0]  	151	7 
[11, 1, 2, 1, 0]  	157	9 
[10, 1, 4, 0, 0]  	157	9 
[10, 2, 0, 2, 0]  	158	10 
[11, 0, 3, 1, 0]  	160	9 
[7, 0, 3, 2, 0]  	161	10 
[13, 0, 1, 2, 0]  	167	5 
[3, 6, 0, 2, 0]  	169	7 
[10, 1, 0, 3, 0]  	172	8 
[3, 6, 2, 1, 0]  	176	8 
[13, 0, 0, 3, 0]  	178	6 
[2, 0, 6, 2, 0]  	180	6 
[13, 0, 5, 0, 0]  	181	9 
[9, 0, 5, 1, 0]  	182	8 
[8, 0, 7, 0, 0]  	182	9 
[4, 0, 7, 1, 0]  	183	7 
[3, 5, 0, 3, 0]  	183	7 
[10, 0, 0, 4, 0]  	186	8 
[8, 1, 0, 4, 0]  	187	7 
[2, 0, 8, 1, 0]  	187	6 
[6, 2, 0, 4, 0]  	188	9 
[6, 0, 5, 2, 0]  	190	7 
[4, 0, 9, 0, 0]  	190	7 
[2, 6, 0, 3, 0]  	191	5 
[2, 1, 9, 0, 0]  	191	5 
[2, 5, 1, 3, 0]  	194	5 
[5, 3, 0, 4, 0]  	196	7 
[2, 5, 6, 0, 0]  	197	6 
[1, 5, 0, 4, 0]  	198	5 
[1, 0, 9, 1, 0]  	198	5 
[1, 7, 0, 3, 0]  	199	5 
[8, 0, 0, 5, 0]  	201	6 
[3, 0, 10, 0, 0]  	201	6 
[6, 1, 0, 5, 0]  	202	7 
[1, 13, 0, 0, 0]  	202	5 
[2, 3, 0, 5, 0]  	204	6 
[1, 6, 6, 0, 0]  	205	5 
[1, 5, 7, 0, 0]  	208	4 
[1, 0, 8, 2, 0]  	209	4 
[1, 4, 8, 0, 0]  	211	4 
[1, 2, 0, 6, 0]  	211	4 
[2, 0, 11, 0, 0]  	212	3 
[1, 4, 0, 5, 0]  	212	4 
[1, 3, 9, 0, 0]  	214	4 
[1, 1, 1, 6, 0]  	214	4 
[1, 3, 1, 5, 0]  	215	4 
[6, 0, 0, 6, 0]  	216	5 
[1, 2, 2, 5, 0]  	218	4 
[1, 4, 2, 4, 0]  	219	3 
[0, 11, 3, 0, 0]  	219	3 
[0, 5, 8, 0, 0]  	219	3 
[1, 6, 2, 3, 0]  	220	3 
[1, 1, 11, 0, 0]  	220	3 
[0, 10, 4, 0, 0]  	222	3 
[0, 9, 0, 3, 0]  	222	3 
[0, 4, 9, 0, 0]  	222	3 
[1, 0, 12, 0, 0]  	223	3 
[0, 11, 0, 2, 0]  	223	3 
[1, 1, 0, 7, 0]  	225	5 
[0, 15, 0, 0, 0]  	225	5  <--- 2
[0, 6, 6, 1, 0]  	227	3 
[1, 0, 1, 7, 0]  	228	4 
[0, 7, 2, 3, 0]  	228	4 
[0, 3, 7, 2, 0]  	229	2 
[0, 5, 7, 1, 0]  	230	2 
[4, 0, 0, 7, 0]  	231	5 
[1, 9, 5, 0, 0]  	232	5 
[0, 4, 8, 1, 0]  	233	2 
[0, 3, 4, 4, 0]  	233	2 
[0, 5, 4, 3, 0]  	234	2 
[0, 4, 0, 6, 0]  	234	2 
[1, 9, 2, 2, 0]  	236	3 
[0, 9, 4, 1, 0]  	236	2 
[0, 8, 0, 4, 0]  	236	2 
[0, 2, 5, 4, 0]  	236	2 
[0, 4, 5, 3, 0]  	237	2 
[1, 0, 0, 8, 0]  	239	5 
[0, 5, 6, 2, 0]  	241	1 
[0, 4, 2, 5, 0]  	241	1 
[0, 6, 2, 4, 0]  	242	2 
[0, 1, 11, 1, 0]  	242	2 
[0, 9, 6, 0, 0]  	243	3 
[0, 3, 11, 0, 0]  	243	2 
[0, 10, 2, 2, 0]  	244	1 
[0, 3, 3, 5, 0]  	244	1 
[0, 9, 3, 2, 0]  	247	2 
[0, 2, 4, 5, 0]  	247	2 
[0, 3, 0, 7, 0]  	248	1 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 9, 2, 0]  	250	2 
[0, 1, 5, 5, 0]  	250	2 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[4, 1, 1, 1, 1]  	90	6 
[2, 2, 5, 0, 1]  	134	5 
[2, 6, 0, 2, 1]  	162	7 
[1, 8, 2, 0, 1]  	163	5 
[11, 0, 0, 3, 1]  	164	9 
[8, 2, 0, 3, 1]  	173	8 
[1, 7, 4, 0, 1]  	184	5 
[0, 8, 4, 0, 1]  	192	5 
[4, 4, 0, 4, 1]  	204	7 
[1, 3, 2, 4, 1]  	204	5 
[1, 12, 1, 0, 1]  	205	5 
[0, 7, 4, 1, 1]  	206	4 
[0, 14, 0, 0, 1]  	210	5 
[0, 7, 6, 0, 1]  	213	4 
[1, 12, 0, 1, 1]  	216	5 
[4, 1, 0, 6, 1]  	217	7 
[1, 9, 1, 2, 1]  	218	5 
[0, 9, 3, 1, 1]  	218	4 
[1, 11, 1, 1, 1]  	219	3 
[0, 6, 4, 2, 1]  	220	3 
[0, 10, 1, 2, 1]  	226	3 
[0, 4, 6, 2, 1]  	226	2 
[0, 9, 2, 2, 1]  	229	2 
[0, 3, 9, 1, 1]  	236	2 
[0, 3, 6, 3, 1]  	240	2 
[0, 2, 7, 3, 1]  	243	2 
[0, 1, 4, 6, 1]  	261	2 
[0, 1, 9, 3, 1]  	264	2 
[3, 0, 5, 2, 2]  	169	7 
[8, 0, 5, 1, 2]  	175	9 
[2, 4, 0, 4, 2]  	190	6 
[2, 4, 2, 3, 2]  	197	5 
[4, 2, 0, 5, 2]  	203	9 
[1, 10, 0, 2, 2]  	215	3 
[0, 7, 0, 4, 2]  	221	4 
[0, 8, 1, 3, 2]  	225	4 
[0, 5, 2, 4, 2]  	227	2 
[0, 6, 0, 5, 2]  	235	3 
[1, 7, 0, 1, 3]  	141	5 
[3, 0, 7, 1, 3]  	176	7 
[1, 6, 2, 2, 3]  	191	5 
[0, 13, 0, 0, 3]  	195	5 
[1, 5, 2, 3, 3]  	205	4 
[0, 12, 0, 1, 3]  	209	4 
[0, 11, 1, 1, 3]  	212	3 
[0, 10, 2, 1, 3]  	215	3 
[0, 12, 2, 0, 3]  	216	4 
[0, 8, 3, 2, 3]  	232	4 
[1, 2, 9, 0, 4]  	199	5 
[0, 0, 11, 1, 251]  	227	1 
[1, 0, 1, 6, 252]  	199	4 
[1, 0, 11, 0, 252]  	205	2 
[1, 0, 1, 4, 253]  	141	4 
[2, 6, 4, 0, 253]  	176	6 
[1, 0, 7, 2, 253]  	191	3 
[0, 6, 2, 3, 253]  	213	2 
[0, 4, 7, 1, 253]  	215	1 
[0, 5, 3, 3, 253]  	216	2 
[0, 4, 3, 4, 253]  	230	1 
[0, 0, 7, 4, 253]  	242	1 
[0, 0, 1, 8, 253]  	250	1 
[2, 0, 7, 1, 254]  	169	4 
[7, 0, 7, 0, 254]  	175	7 
[2, 5, 0, 3, 254]  	176	3 
[0, 7, 4, 0, 254]  	177	4 
[3, 0, 9, 0, 254]  	183	5 
[1, 3, 0, 5, 254]  	197	4 
[0, 10, 3, 0, 254]  	204	4 
[0, 4, 8, 0, 254]  	204	1 
[0, 1, 9, 1, 254]  	206	2 
[0, 6, 5, 1, 254]  	209	3 
[0, 5, 6, 1, 254]  	212	2 
[0, 3, 3, 4, 254]  	215	1 
[0, 3, 10, 0, 254]  	225	3 
[0, 3, 2, 5, 254]  	226	1 
[0, 2, 8, 2, 254]  	232	3 
[0, 2, 0, 7, 254]  	233	1 
[0, 0, 0, 9, 254]  	261	1 
[3, 1, 3, 0, 255]  	90	5 
[0, 0, 1, 4, 255]  	134	1 
[9, 0, 3, 1, 255]  	146	8 
[1, 0, 7, 1, 255]  	162	3 
[6, 1, 0, 4, 255]  	173	4 
[0, 6, 0, 3, 255]  	177	1 
[1, 11, 1, 0, 255]  	190	3 
[1, 5, 6, 0, 255]  	190	2 
[0, 4, 6, 1, 255]  	197	2 
[0, 0, 11, 0, 255]  	198	1 
[2, 1, 0, 6, 255]  	203	6 
[0, 2, 8, 1, 255]  	203	3 
[0, 2, 0, 6, 255]  	204	1 
[1, 0, 0, 7, 255]  	210	2 
[0, 5, 0, 5, 255]  	220	1 
------
The gap is between 5 and 250.
Lengths: 3 3 4 5 3 5.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^12
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[13811902471410301744 + 10447978527079144333*2^64 + 6324535068501206341*2^128 + 8400820622*2^192,1202673429985346608 + 1237246169529982802*2^64 + 7455172987037176775*2^128 + 16441443209*2^192,13399778241889088848 + 9173375681887703654*2^64 + 16435539504029975727*2^128 + 6952776475*2^192,15646910526414756480 + 13089968410563552871*2^64 + 9470938919045770309*2^128 + 9103022629*2^192,672521740923919392 + 3759603100120153677*2^64 + 16600250996841591952*2^128 + 13350873790*2^192,11128195733276791200 + 10944170797308774461*2^64 + 2043607337335451587*2^128 + 8723702808*2^192,11945438269697289376 + 17465501561042473603*2^64 + 17962779910558084108*2^128 + 9565460849*2^192,9445172876523023872 + 2832928289799006284*2^64 + 6372242305683542248*2^128 + 6455020632*2^192,2937969909098087040 + 4184080630496737207*2^64 + 3760360010240981093*2^128 + 13148045634*2^192,4925644471342895616 + 11742839223842991150*2^64 + 5640362975246928734*2^128 + 4877456002*2^192;\
14965391299812447424 + 5107459650214208973*2^64 + 1532254024716129779*2^128 + 12584854756*2^192,11729117822954411504 + 15064762091988048878*2^64 + 2846270532168915385*2^128 + 2444881334*2^192,178625491267633344 + 10256308096245037702*2^64 + 13924993163166538577*2^128 + 11385587703*2^192,12150235750714739328 + 15065987941943445353*2^64 + 13111176536200053634*2^128 + 4960943780*2^192,14487290871778346112 + 6264682181483223178*2^64 + 377235861628834252*2^128 + 16834112422*2^192,9136074271291016768 + 8704950705532248801*2^64 + 17858650035834593370*2^128 + 17039525817*2^192,4790757920989448448 + 18109504093743968253*2^64 + 7372823829202132044*2^128 + 14076441218*2^192,13705814245330398720 + 7311638595789755513*2^64 + 14361373347709082597*2^128 + 5329265453*2^192,14076670049503404928 + 1289867782046381745*2^64 + 11432797245845252807*2^128 + 8323213326*2^192,4035507140016609536 + 12555255380564384607*2^64 + 16271868215906392952*2^128 + 7279528054*2^192;\
12802254942226559856 + 13432804844688296194*2^64 + 10056505036786272583*2^128 + 14972653265*2^192,14012602129075254512 + 841865850491027685*2^64 + 8564684686874648220*2^128 + 1537743127*2^192,10517597903958339424 + 7178374966604262021*2^64 + 10913469572947565520*2^128 + 15226700847*2^192,8473224645961143552 + 17120961883248522722*2^64 + 3267269088457332833*2^128 + 14200035285*2^192,13089453365214668736 + 9430770356700195512*2^64 + 15230282126517221987*2^128 + 9747122299*2^192,16784190223078507968 + 17649579519865012566*2^64 + 16155945246388666762*2^128 + 11082760921*2^192,12186856444388485440 + 3328708905361228972*2^64 + 6016066510688336592*2^128 + 2098755700*2^192,12633249573660637312 + 16707438558064014320*2^64 + 9845025491954503456*2^128 + 14666680426*2^192,17716797755386253184 + 1799770448061739796*2^64 + 9968419449682214054*2^128 + 4108578930*2^192,14725509959743860352 + 7738598110972552851*2^64 + 11301812324652339887*2^128 + 13816955031*2^192;\
18093702819912584301 + 9259707742867390008*2^64 + 7468697518770951279*2^128 + 3685963207*2^192,16679209885738904703 + 13851320530448741287*2^64 + 5954947978666210058*2^128 + 9235330342*2^192,299867053698726964 + 8749461481265716590*2^64 + 13443726703038726660*2^128 + 17018236295*2^192,16957042636088714056 + 16008737460717943895*2^64 + 3733566054657465709*2^128 + 5431832002*2^192,5461575830396542020 + 2750354590479738238*2^64 + 4196629128803004338*2^128 + 11625314260*2^192,1712180516034109208 + 6914567971803515560*2^64 + 15057848727365436384*2^128 + 4385641853*2^192,8225215549713008956 + 2159674390736133495*2^64 + 12075281901447184788*2^128 + 8425826346*2^192,13025233325882750008 + 18141874152825891182*2^64 + 12848078237151388458*2^128 + 16389560264*2^192,3742247897625286992 + 14725159888333281616*2^64 + 8601123950073961351*2^128 + 2337832460*2^192,13644278810274597976 + 12549640527592579580*2^64 + 350114244429937344*2^128 + 5470662772*2^192;\
13836638017821950590 + 9040667754398991830*2^64 + 7806053369089625627*2^128 + 3211704366*2^192,1165677997173086250 + 15297120817359359115*2^64 + 13771841186773372841*2^128 + 2054866859*2^192,4078279895674901728 + 10684041191699213343*2^64 + 4359416579999006051*2^128 + 14706159971*2^192,17407025989164811504 + 448953408673341176*2^64 + 9530353425577562004*2^128 + 3879012975*2^192,2938650403642695048 + 18140782589619211127*2^64 + 8815450902132290954*2^128 + 3493614721*2^192,1189471988800496128 + 11665662256687991286*2^64 + 12320715234884741567*2^128 + 10061173417*2^192,5582131000609182040 + 13102852185130067797*2^64 + 16740726450791022742*2^128 + 11485669932*2^192,16942904711230128080 + 6887753868550413589*2^64 + 13736987777981710108*2^128 + 7239490694*2^192,9007381826497972704 + 10418801795126744437*2^64 + 8908420839500452451*2^128 + 8909058685*2^192,6751721515745229712 + 3520394131276142975*2^64 + 2839597946336276344*2^128 + 13526800383*2^192;\
10228542566872426026 + 15941967980434565598*2^64 + 14311967744412037487*2^128 + 16191958178*2^192,12271980070188217086 + 12673539277066486803*2^64 + 8439406124048248934*2^128 + 1840562048*2^192,468764441485819568 + 9000000596335901118*2^64 + 11788508570358823456*2^128 + 2113991792*2^192,12300553800639154448 + 1515156843036618399*2^64 + 2053790880496670105*2^128 + 9192727126*2^192,3379575867074579064 + 10996199691007021832*2^64 + 12358532188563163268*2^128 + 5292828315*2^192,11298865433956125760 + 16248564944315321586*2^64 + 16481627313145112674*2^128 + 8645647893*2^192,14990488480733634504 + 1617004014137599523*2^64 + 8611533238069540001*2^128 + 3662027919*2^192,4497835162141165360 + 7772356798644868021*2^64 + 648131994750508804*2^128 + 12485538579*2^192,13922293658599956448 + 16455245380465453459*2^64 + 12244333202542991121*2^128 + 13178811726*2^192,25529620123388144 + 4870622215509314851*2^64 + 4052778955574830545*2^128 + 4511850324*2^192;\
4719738643303088828 + 17119581051408363149*2^64 + 12344467442965721033*2^128 + 13334746636*2^192,17222930262375201316 + 6832708520123633939*2^64 + 3360395925907598237*2^128 + 9531796087*2^192,8982422953604938160 + 11685241326986459424*2^64 + 3780129565488405559*2^128 + 14757491939*2^192,1404180310767313184 + 15835530890548023993*2^64 + 15894192889474493213*2^128 + 11919137927*2^192,2897124507188796496 + 1132939072432406930*2^64 + 5884274359769475450*2^128 + 3857240172*2^192,14983388250071742688 + 4069707837027511157*2^64 + 11789728803388932664*2^128 + 7217270720*2^192,3716256767258091856 + 11440950660653159819*2^64 + 5868294900957532017*2^128 + 10617384003*2^192,5351820669578807072 + 17732970048305967084*2^64 + 6322906183296369476*2^128 + 3308536094*2^192,9561534129623493184 + 6753744238061885763*2^64 + 3828546777909057429*2^128 + 10659536592*2^192,9612045337784140832 + 1156361200460322004*2^64 + 10990161209324305097*2^128 + 11414837582*2^192;\
4936824493844913450 + 4038846842043142782*2^64 + 6617921240680311645*2^128 + 3753576172*2^192,3400251584186149710 + 5968574991607209928*2^64 + 8079206239117411286*2^128 + 12213277071*2^192,11509193219401033144 + 6519524950518213472*2^64 + 3340505747208699622*2^128 + 4510328294*2^192,16963204982933169168 + 13687377526503357953*2^64 + 14706133250881408009*2^128 + 1101618479*2^192,33324576672809832 + 6001511286401755563*2^64 + 5163861360295677761*2^128 + 15596084767*2^192,7221332703044833680 + 13461523600160625823*2^64 + 15119728548319218147*2^128 + 8717388205*2^192,7145310557343820312 + 4167217105450251281*2^64 + 2675315404037867067*2^128 + 6185901991*2^192,13618969025825402992 + 4978199869308727569*2^64 + 14592985705572238090*2^128 + 12697744*2^192,14527635147291595616 + 894132838577280939*2^64 + 330954026222413739*2^128 + 12221410052*2^192,13690637579270216368 + 13020803607302012499*2^64 + 18286381134254344163*2^128 + 2701993718*2^192;\
6461886110074795476 + 12418942253543203564*2^64 + 10902521200483800557*2^128 + 7306773620*2^192,8037891443464703932 + 10611379881773244355*2^64 + 13785272900889810525*2^128 + 8311038798*2^192,13030022548439948768 + 18063059857768792998*2^64 + 12569660951901364969*2^128 + 8024097619*2^192,16780751268946379936 + 776173380204016489*2^64 + 11481444556014840840*2^128 + 1783640382*2^192,6497182009728914096 + 14019298102089971899*2^64 + 8440030906572606697*2^128 + 7992547994*2^192,1533998657196717376 + 5571037277528281612*2^64 + 4500792584208393149*2^128 + 6341368665*2^192,14462176136748157264 + 11478279333229163121*2^64 + 6632155817400962783*2^128 + 6357483483*2^192,13942369269659150368 + 13741172956102868358*2^64 + 2919547613803512449*2^128 + 619248334*2^192,13809206289429870208 + 243740187681953235*2^64 + 14599201062937504541*2^128 + 4353773561*2^192,284640560184962016 + 10788269257386859497*2^64 + 15329184339822781782*2^128 + 7309878360*2^192;\
16685384517275290546 + 7040282391577418006*2^64 + 15428914435919190573*2^128 + 6982609869*2^192,5977582103686442758 + 1708719831707201961*2^64 + 8051321861955837043*2^128 + 9383211252*2^192,15998461831400456776 + 7193383233240438060*2^64 + 17989195432382031826*2^128 + 15342585995*2^192,3681288039550267984 + 12133558733730360949*2^64 + 8557467639463186129*2^128 + 10801832761*2^192,11743613288778995048 + 13929700479870670856*2^64 + 12302115626939219881*2^128 + 1062195080*2^192,6216768833575172848 + 1988230292914606192*2^64 + 6640452034000339639*2^128 + 13123135778*2^192,17652473428150722840 + 1885649017138163651*2^64 + 1074240592820369028*2^128 + 15896021477*2^192,14539716906916731504 + 9747078282437640177*2^64 + 4219598597795466111*2^128 + 10790159395*2^192,5292215881511655264 + 6680454086026130509*2^64 + 964933989085461783*2^128 + 8587703251*2^192,12539066332684724784 + 5366620172605487116*2^64 + 14798844310058218830*2^128 + 8839254844*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 4051 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - 4*x^8 + 3*x^7 + 6*x^6 - 36*x^5 + 24*x^4 + 48*x^3 - 256*x^2 + 1024
Its Newton polygon is: [2, 2, 2, 1, 1, 1, 1, 0, 0, 0]
Its factorization is: Mat([x^10 - 4*x^8 + 3*x^7 + 6*x^6 - 36*x^5 + 24*x^4 + 48*x^3 - 256*x^2 + 1024, 1])
The valuation of f-g is: 25
The valuation of subst(g,x,A) is: 21
