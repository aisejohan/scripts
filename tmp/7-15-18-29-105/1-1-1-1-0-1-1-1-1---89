/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 201
[4, 2, 1, 0, 0]  	76	3 
[6, 3, 0, 0, 0]  	87	6 
[14, 0, 0, 0, 0]  	98	5  <--- 1
[3, 2, 3, 0, 0]  	105	4 
[2, 1, 1, 2, 0]  	105	4 
[2, 1, 3, 1, 0]  	112	4 
[2, 7, 0, 0, 0]  	119	6 
[3, 1, 5, 0, 0]  	126	7 
[2, 2, 5, 0, 0]  	134	5 
[1, 7, 0, 1, 0]  	141	5 
[1, 1, 5, 1, 0]  	141	5 
[12, 2, 0, 1, 0]  	143	9 
[11, 1, 3, 0, 0]  	146	6 
[6, 0, 1, 3, 0]  	147	9 
[2, 0, 1, 4, 0]  	148	5 
[4, 0, 2, 3, 0]  	151	7 
[2, 1, 7, 0, 0]  	155	6 
[11, 1, 2, 1, 0]  	157	9 
[10, 1, 4, 0, 0]  	157	9 
[10, 2, 0, 2, 0]  	158	10 
[7, 0, 3, 2, 0]  	161	10 
[3, 0, 3, 3, 0]  	162	7 
[2, 6, 0, 2, 0]  	162	7 
[1, 8, 2, 0, 0]  	163	5 
[1, 2, 7, 0, 0]  	163	5 
[13, 0, 1, 2, 0]  	167	5 
[12, 0, 3, 1, 0]  	167	9 
[10, 1, 0, 3, 0]  	172	8 
[8, 0, 5, 1, 0]  	175	9 
[4, 0, 5, 2, 0]  	176	8 
[3, 6, 2, 1, 0]  	176	8 
[13, 0, 0, 3, 0]  	178	6 
[13, 0, 5, 0, 0]  	181	8 
[8, 0, 7, 0, 0]  	182	8 
[4, 0, 7, 1, 0]  	183	7 
[3, 5, 0, 3, 0]  	183	7 
[1, 7, 4, 0, 0]  	184	5 
[10, 0, 0, 4, 0]  	186	7 
[8, 1, 0, 4, 0]  	187	7 
[2, 0, 8, 1, 0]  	187	6 
[6, 2, 0, 4, 0]  	188	7 
[4, 0, 9, 0, 0]  	190	6 
[2, 4, 0, 4, 0]  	190	6 
[2, 0, 5, 3, 0]  	191	5 
[1, 1, 3, 4, 0]  	192	5 
[0, 8, 4, 0, 0]  	192	5 
[2, 0, 10, 0, 0]  	194	5 
[1, 0, 4, 4, 0]  	195	6 
[5, 3, 0, 4, 0]  	196	7 
[1, 4, 4, 2, 0]  	197	5 
[2, 0, 7, 2, 0]  	198	7 
[1, 0, 9, 1, 0]  	198	5 
[8, 0, 0, 5, 0]  	201	5 
[6, 1, 0, 5, 0]  	202	7 
[1, 13, 0, 0, 0]  	202	5 
[2, 3, 0, 5, 0]  	204	5 
[1, 3, 2, 4, 0]  	204	5 
[1, 6, 6, 0, 0]  	205	5 
[1, 0, 3, 5, 0]  	206	4 
[0, 7, 4, 1, 0]  	206	4 
[0, 14, 0, 0, 0]  	210	5  <--- 2
[1, 3, 4, 3, 0]  	211	4 
[1, 2, 0, 6, 0]  	211	4 
[1, 4, 0, 5, 0]  	212	4 
[1, 6, 0, 4, 0]  	213	4 
[1, 3, 1, 5, 0]  	215	3 
[0, 10, 2, 1, 0]  	215	3 
[6, 0, 0, 6, 0]  	216	4 
[0, 9, 3, 1, 0]  	218	4 
[0, 11, 3, 0, 0]  	219	3 
[0, 5, 8, 0, 0]  	219	3 
[1, 1, 11, 0, 0]  	220	3 
[0, 6, 4, 2, 0]  	220	3 
[0, 7, 0, 4, 0]  	221	4 
[0, 9, 0, 3, 0]  	222	3 
[0, 4, 9, 0, 0]  	222	3 
[1, 0, 12, 0, 0]  	223	4 
[0, 13, 0, 1, 0]  	224	4 
[1, 1, 0, 7, 0]  	225	5 
[0, 10, 1, 2, 0]  	226	2 
[0, 4, 6, 2, 0]  	226	2 
[0, 12, 1, 1, 0]  	227	3 
[0, 6, 6, 1, 0]  	227	3 
[1, 0, 1, 7, 0]  	228	5 
[0, 5, 7, 1, 0]  	230	2 
[4, 0, 0, 7, 0]  	231	6 
[0, 3, 4, 4, 0]  	233	2 
[0, 5, 4, 3, 0]  	234	2 
[0, 6, 0, 5, 0]  	235	3 
[0, 3, 9, 1, 0]  	236	2 
[0, 2, 5, 4, 0]  	236	2 
[0, 4, 5, 3, 0]  	237	2 
[1, 0, 0, 8, 0]  	239	4 
[0, 4, 2, 5, 0]  	241	1 
[0, 1, 11, 1, 0]  	242	2 
[0, 3, 11, 0, 0]  	243	2 
[0, 2, 7, 3, 0]  	243	2 
[0, 3, 3, 5, 0]  	244	1 
[0, 3, 8, 2, 0]  	247	2 
[0, 2, 4, 5, 0]  	247	2 
[0, 3, 0, 7, 0]  	248	1 
[0, 5, 0, 6, 0]  	249	2 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 9, 2, 0]  	250	2 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 8, 3, 3, 0]  	261	2 
[0, 1, 4, 6, 0]  	261	2 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[4, 1, 1, 1, 1]  	90	6 
[1, 7, 2, 0, 1]  	148	5 
[12, 0, 1, 2, 1]  	160	10 
[11, 0, 0, 3, 1]  	164	8 
[3, 0, 5, 2, 1]  	169	7 
[8, 2, 0, 3, 1]  	173	8 
[1, 0, 3, 4, 1]  	177	5 
[2, 0, 6, 2, 1]  	180	6 
[1, 6, 3, 1, 1]  	180	6 
[1, 6, 0, 3, 1]  	184	5 
[1, 6, 2, 2, 1]  	191	5 
[0, 13, 0, 0, 1]  	195	5 
[1, 5, 0, 4, 1]  	198	5 
[1, 0, 8, 2, 1]  	209	5 
[0, 12, 0, 1, 1]  	209	4 
[0, 7, 6, 0, 1]  	213	4 
[0, 12, 2, 0, 1]  	216	4 
[4, 1, 0, 6, 1]  	217	6 
[1, 2, 2, 5, 1]  	218	4 
[0, 8, 1, 3, 1]  	225	4 
[0, 9, 2, 2, 1]  	229	3 
[1, 1, 2, 6, 1]  	232	5 
[0, 8, 3, 2, 1]  	232	4 
[0, 4, 0, 6, 1]  	234	2 
[0, 6, 2, 4, 1]  	242	2 
[0, 1, 5, 5, 1]  	250	2 
[4, 2, 0, 5, 2]  	203	7 
[1, 12, 1, 0, 2]  	205	5 
[1, 0, 7, 3, 2]  	220	3 
[1, 5, 3, 3, 2]  	223	4 
[0, 5, 2, 4, 2]  	227	2 
[0, 7, 2, 3, 2]  	228	4 
[0, 4, 8, 1, 2]  	233	2 
[3, 0, 7, 1, 3]  	176	7 
[1, 4, 3, 3, 3]  	208	4 
[0, 11, 1, 1, 3]  	212	3 
[0, 3, 7, 2, 3]  	229	2 
[0, 1, 9, 3, 3]  	264	2 
[0, 3, 6, 3, 4]  	240	2 
[1, 1, 1, 6, 5]  	214	4 
[0, 11, 0, 2, 6]  	223	3 
[1, 5, 2, 3, 10]  	205	4 
[1, 0, 11, 0, 247]  	205	3 
[0, 5, 5, 2, 248]  	223	2 
[0, 8, 2, 2, 252]  	214	3 
[0, 2, 3, 5, 252]  	229	1 
[0, 2, 2, 6, 252]  	240	1 
[2, 6, 4, 0, 253]  	176	6 
[0, 5, 4, 2, 253]  	205	2 
[0, 6, 5, 1, 253]  	209	3 
[0, 5, 6, 1, 253]  	212	2 
[0, 5, 0, 5, 253]  	220	2 
[0, 0, 5, 6, 253]  	264	1 
[0, 10, 0, 2, 254]  	208	3 
[0, 1, 11, 0, 254]  	213	2 
[0, 0, 11, 1, 254]  	227	1 
[0, 2, 8, 2, 254]  	232	2 
[0, 2, 0, 7, 254]  	233	1 
[3, 1, 3, 0, 255]  	90	5 
[9, 0, 3, 1, 255]  	146	6 
[1, 1, 7, 0, 255]  	148	3 
[2, 6, 2, 1, 255]  	169	6 
[6, 1, 0, 4, 255]  	173	6 
[0, 7, 4, 0, 255]  	177	3 
[1, 0, 8, 1, 255]  	180	4 
[0, 6, 5, 0, 255]  	180	3 
[1, 0, 7, 2, 255]  	191	4 
[0, 0, 11, 0, 255]  	198	1 
[2, 1, 0, 6, 255]  	203	4 
[0, 8, 3, 1, 255]  	203	2 
[0, 4, 5, 2, 255]  	208	1 
[1, 0, 0, 7, 255]  	210	4 
[0, 2, 7, 2, 255]  	214	1 
[0, 2, 4, 4, 255]  	218	1 
[0, 3, 10, 0, 255]  	225	2 
[0, 0, 7, 4, 255]  	242	1 
[0, 1, 3, 6, 255]  	243	1 
[0, 0, 1, 8, 255]  	250	1 
------
The gap is between 11 and 246.
Lengths: 3 3 4 4 3 4.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^12
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[12295569864903849148 + 4140566322998975748*2^64 + 11302595687420413788*2^128 + 4462387862*2^192,16364436789736798456 + 13141702714891811207*2^64 + 12660509429334344*2^128 + 7680026780*2^192,7386600762002172250 + 13730200510763901796*2^64 + 14228119202117127942*2^128 + 7559983825*2^192,5895935226084599928 + 2679758135258498655*2^64 + 2953977311063031423*2^128 + 4943157107*2^192,2024200901333867200 + 17343932474247190582*2^64 + 18432726968117509965*2^128 + 6356136685*2^192,8744041544241623488 + 9692406692918455508*2^64 + 2926429418133540245*2^128 + 4107398216*2^192,367234670503046384 + 2784562487594705824*2^64 + 18250990598049058736*2^128 + 4296474446*2^192,1121049739629123752 + 15321077558601378213*2^64 + 11963494246588068138*2^128 + 1463523789*2^192,11033406831499379464 + 13000380201506183397*2^64 + 13422572721902607954*2^128 + 518010560*2^192,14986827130964455104 + 4745408496817328322*2^64 + 8074378684630143085*2^128 + 7989124874*2^192;\
9217597334073203736 + 14248341982226066495*2^64 + 16021284468193069871*2^128 + 2586178237*2^192,13705490982756973400 + 4727961444283455605*2^64 + 15019967050965346974*2^128 + 130972977*2^192,13849328255618085716 + 10577587157558932563*2^64 + 11359519082726105346*2^128 + 2702767746*2^192,14455146825881109872 + 8216421105895888651*2^64 + 16637278286366316996*2^128 + 4276218083*2^192,1293946988389365152 + 17346166033118538043*2^64 + 13866910010660049735*2^128 + 5680791262*2^192,6747370242758524448 + 16620739589692606050*2^64 + 10556940114321687134*2^128 + 6809886893*2^192,11591179305495753824 + 7312982213309587861*2^64 + 11501016188482630568*2^128 + 6069947953*2^192,5946878623490688944 + 12927236506182948156*2^64 + 16623366503037056193*2^128 + 5315201590*2^192,15116886060606343344 + 13288519066018066754*2^64 + 9029914639882557577*2^128 + 2806177196*2^192,13874472208767463104 + 12952056431173812936*2^64 + 3045153531988149543*2^128 + 7704376520*2^192;\
16222289892807835760 + 17524246310069407105*2^64 + 1461752638188612652*2^128 + 1456861009*2^192,3630200397029206376 + 7028585723628082007*2^64 + 18139958721109525504*2^128 + 3857640675*2^192,3124607402913522512 + 5865142766795038293*2^64 + 13060904431372406063*2^128 + 2883793033*2^192,16772659237884673856 + 7288961651857799442*2^64 + 4276481796297923728*2^128 + 5170451890*2^192,1778033478987392576 + 13966139091494930530*2^64 + 3222954152878760371*2^128 + 1933981060*2^192,4480613994421796992 + 4917989850654258509*2^64 + 8470165829333319835*2^128 + 2848053173*2^192,14624503276307183552 + 5257335954022281398*2^64 + 13498290174813626609*2^128 + 5614706285*2^192,8866242755425975264 + 5383421941739145964*2^64 + 7356673825559303243*2^128 + 1918210771*2^192,17544602073585155584 + 2213027450910354089*2^64 + 2358354409609111589*2^128 + 4337560665*2^192,392969189352074080 + 123682795880824775*2^64 + 4493660646980495063*2^128 + 2291301999*2^192;\
14250911680352029778 + 2358892675165323641*2^64 + 3058209721504371078*2^128 + 6000660416*2^192,16580882671287653652 + 1555216670716703528*2^64 + 4049727574755770756*2^128 + 5296669272*2^192,11267829449701690903 + 2049501162442131647*2^64 + 10060382564128726364*2^128 + 3263963830*2^192,14319999989807908692 + 13439238306890336785*2^64 + 4306153414540307420*2^128 + 7867811880*2^192,6893711059683179696 + 16302105547425786728*2^64 + 483113287771473279*2^128 + 5511721156*2^192,7210103609200545408 + 13278136135354074405*2^64 + 4796186682646633871*2^128 + 7288530631*2^192,12683951498992035128 + 4999800928373029943*2^64 + 16390470654124095557*2^128 + 7588209403*2^192,4811763533903932508 + 12551064605307514206*2^64 + 10099666173132416770*2^128 + 1620674026*2^192,8947940923482621692 + 7555230487155446136*2^64 + 16066167954670987189*2^128 + 5908775871*2^192,14062333312655314000 + 11162003744708163979*2^64 + 7984950340815980078*2^128 + 7280041108*2^192;\
326289118301164722 + 15950223685890847982*2^64 + 922951142474727530*2^128 + 529556296*2^192,7042494329787060836 + 12551872925504275008*2^64 + 8005537780838465967*2^128 + 4948552543*2^192,1809174884835688959 + 3905488546818079345*2^64 + 6503022293024359670*2^128 + 5706486897*2^192,7339038098250586244 + 9559131285203552046*2^64 + 7964696768990157366*2^128 + 6143081978*2^192,7405204442174805888 + 6486651694273182898*2^64 + 17629390149225071578*2^128 + 7699195718*2^192,6185540421343404256 + 8000280600159438361*2^64 + 12891384222259438606*2^128 + 5350044745*2^192,5157717764220280024 + 17285840695635824926*2^64 + 17713346117084814805*2^128 + 6821242045*2^192,13403694695633893244 + 3826191688294986072*2^64 + 18232591028897682000*2^128 + 3471384303*2^192,311958490602135420 + 13788009137268024862*2^64 + 16938997167865286554*2^128 + 1362865322*2^192,18128393200967497424 + 9671691251291108251*2^64 + 4006852013505279474*2^128 + 802073930*2^192;\
3780629033117020536 + 9915124626095843554*2^64 + 16256546344071771112*2^128 + 604059849*2^192,12245504809191837812 + 16125217960926182420*2^64 + 6035001002129211903*2^128 + 2325139282*2^192,1808506223763084408 + 3546645385197940322*2^64 + 7539520227313916156*2^128 + 1504428520*2^192,14706384644029727856 + 4300992593039832658*2^64 + 6201266670924332231*2^128 + 6093086755*2^192,7575674210191431408 + 16798600359978612894*2^64 + 7606501600658610506*2^128 + 1214871840*2^192,17090386349556859632 + 12407033221227121145*2^64 + 6391311910475970054*2^128 + 1280443909*2^192,2982838527585110592 + 18192242905990152281*2^64 + 7412329837450208472*2^128 + 8069243632*2^192,6017818866047466736 + 13805536665419952090*2^64 + 16975799298937261863*2^128 + 7666729444*2^192,13424385564078399408 + 4664402587659131546*2^64 + 14120913060791922360*2^128 + 5364795790*2^192,7259697845739753760 + 12585028901657726961*2^64 + 17406498736872926723*2^128 + 6512931710*2^192;\
17279072042648460012 + 4302151734895708734*2^64 + 8232309060681148373*2^128 + 6683074237*2^192,16208835249395231556 + 11688537504169048536*2^64 + 17470500696763692675*2^128 + 63196366*2^192,1547177807651959934 + 18435300330249964302*2^64 + 1273194485477713447*2^128 + 1595265748*2^192,1194198083881280440 + 14425619051732162665*2^64 + 8704968940642380618*2^128 + 1098731787*2^192,3685082899712897776 + 7944580759123890122*2^64 + 312309492416633975*2^128 + 3247172401*2^192,5864668870625067232 + 5147065942476844347*2^64 + 876087716422007683*2^128 + 4492423074*2^192,11388260345425210464 + 7279876831777491994*2^64 + 10197107828580452542*2^128 + 476052280*2^192,2963444996659351848 + 40261076660041165*2^64 + 13665726523905980351*2^128 + 7052532012*2^192,8779242155847317816 + 394216634113568475*2^64 + 10542339867550140249*2^128 + 653406847*2^192,17860713016204921680 + 14621115545231041657*2^64 + 8702607237162319316*2^128 + 8498057952*2^192;\
7913667548010496888 + 7795388271530187297*2^64 + 7913178418885305923*2^128 + 1540695970*2^192,3840362705516492040 + 5428656425134324204*2^64 + 15201172890665266838*2^128 + 5755531201*2^192,14094583634131757660 + 4118923942911074507*2^64 + 17955505665669132779*2^128 + 5428809906*2^192,5294239856236708048 + 1649183325750037015*2^64 + 2386156433622837733*2^128 + 1608526313*2^192,10577903412787726336 + 5265962311032149283*2^64 + 9017325695461579515*2^128 + 1733422084*2^192,9891034528974624512 + 13594877830728495878*2^64 + 5751186158128942776*2^128 + 7396687545*2^192,8148878224900503040 + 12789994884922537323*2^64 + 13606488542607183340*2^128 + 2972263705*2^192,6366329921419033232 + 5995637525054445118*2^64 + 10862871285248329069*2^128 + 653989086*2^192,10908939842222010512 + 365768495137125736*2^64 + 15955691041485688205*2^128 + 4671172517*2^192,18402924434038785760 + 15095215879105743060*2^64 + 15053770580751994605*2^128 + 6753441709*2^192;\
8019073709148349180 + 2945488609276712111*2^64 + 1507500775143682569*2^128 + 225399336*2^192,8946394200511442656 + 8815574661082519809*2^64 + 11308016360404305193*2^128 + 1767937660*2^192,17496167475890889914 + 2156793053833601609*2^64 + 9174904338399003300*2^128 + 5233020040*2^192,5504001377022209080 + 5641822888144094681*2^64 + 13465420674403247485*2^128 + 359810732*2^192,12476627216494893728 + 16545213300872904099*2^64 + 3597383768623350278*2^128 + 1504739727*2^192,7801016621436231296 + 7709281341474838207*2^64 + 17344909915205313569*2^128 + 7926172763*2^192,1392398561783813552 + 14136057948785075300*2^64 + 2888822767134752628*2^128 + 760214118*2^192,2685219658564192296 + 10291464554397408449*2^64 + 15315945660257436870*2^128 + 8450601858*2^192,12386829556234501768 + 5102964379793866553*2^64 + 9134949002867961033*2^128 + 7765165301*2^192,14091769492309928768 + 14815478397038842367*2^64 + 14761227055506930671*2^128 + 2042298838*2^192;\
15220829687216081292 + 10090377814676788627*2^64 + 3550328795781004124*2^128 + 5115756558*2^192,13395500437065406224 + 4517930034469557528*2^64 + 12776907769908863796*2^128 + 4434867059*2^192,862952400141860858 + 15892572526865744012*2^64 + 2641669519184898509*2^128 + 7668523785*2^192,4305466013658839480 + 5901931090718117199*2^64 + 14021095525061341677*2^128 + 1586067329*2^192,13620534549313309888 + 9494639386963251309*2^64 + 15185878194934699485*2^128 + 1573885897*2^192,16830743408683284864 + 7800944460517906555*2^64 + 15702193886533650604*2^128 + 6611630841*2^192,17443263948338507376 + 3883606386105157459*2^64 + 11480686126965157967*2^128 + 317994664*2^192,16962792240920348584 + 4621526737133816411*2^64 + 11539426033498623310*2^128 + 7599504742*2^192,1557693302779163208 + 10161075094310945762*2^64 + 5823627568272999225*2^128 + 12182768*2^192,5510434298253419872 + 17900234281248074678*2^64 + 5014834662266263191*2^128 + 5173286473*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4051 lists. */
The sign is: -1
The characteristic polynomial is: x^10 - 2*x^8 - 3*x^7 - 4*x^6 + 16*x^4 + 48*x^3 + 128*x^2 - 1024
Its Newton polygon is: [2, 2, 2, 1, 1, 1, 1, 0, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + 2*x^6 - 3*x^5 + 4*x^4 - 12*x^3 + 32*x^2 + 256, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 23
