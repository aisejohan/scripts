/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 210
[6, 3, 0, 0, 0]  	87	6 
[6, 2, 1, 0, 0]  	90	6 
[14, 0, 0, 0, 0]  	98	5  <--- 1
[3, 2, 3, 0, 0]  	105	4 
[4, 1, 1, 2, 0]  	119	7 
[3, 1, 3, 1, 0]  	119	7 
[3, 7, 0, 0, 0]  	126	7 
[3, 1, 5, 0, 0]  	126	7 
[2, 2, 5, 0, 0]  	134	5 
[3, 1, 1, 3, 0]  	141	6 
[2, 1, 3, 2, 0]  	141	6 
[10, 1, 0, 2, 0]  	143	11 
[6, 0, 1, 3, 0]  	147	10 
[2, 1, 5, 1, 0]  	148	4 
[2, 0, 1, 4, 0]  	148	5 
[1, 1, 7, 0, 0]  	148	4 
[2, 7, 2, 0, 0]  	155	6 
[13, 1, 3, 0, 0]  	160	12 
[12, 0, 1, 2, 0]  	160	11 
[7, 0, 3, 2, 0]  	161	10 
[3, 0, 3, 3, 0]  	162	7 
[2, 6, 0, 2, 0]  	162	7 
[12, 0, 3, 1, 0]  	167	11 
[13, 1, 2, 1, 0]  	171	11 
[12, 1, 4, 0, 0]  	171	10 
[8, 2, 0, 3, 0]  	173	8 
[4, 0, 5, 2, 0]  	176	7 
[3, 0, 7, 1, 0]  	176	7 
[1, 7, 2, 1, 0]  	177	5 
[1, 0, 3, 4, 0]  	177	5 
[13, 0, 0, 3, 0]  	178	8 
[2, 0, 6, 2, 0]  	180	6 
[1, 6, 3, 1, 0]  	180	6 
[13, 0, 5, 0, 0]  	181	9 
[9, 0, 5, 1, 0]  	182	8 
[8, 0, 7, 0, 0]  	182	10 
[3, 5, 0, 3, 0]  	183	7 
[1, 7, 4, 0, 0]  	184	5 
[10, 0, 0, 4, 0]  	186	7 
[6, 2, 0, 4, 0]  	188	8 
[2, 4, 0, 4, 0]  	190	6 
[2, 0, 5, 3, 0]  	191	5 
[1, 6, 2, 2, 0]  	191	5 
[0, 8, 4, 0, 0]  	192	5 
[2, 12, 0, 0, 0]  	194	6 
[2, 5, 1, 3, 0]  	194	6 
[0, 13, 0, 0, 0]  	195	5  <--- 2
[5, 3, 0, 4, 0]  	196	8 
[2, 11, 1, 0, 0]  	197	5 
[2, 4, 2, 3, 0]  	197	5 
[1, 4, 4, 2, 0]  	197	5 
[1, 5, 0, 4, 0]  	198	6 
[8, 0, 0, 5, 0]  	201	7 
[3, 0, 10, 0, 0]  	201	6 
[6, 1, 0, 5, 0]  	202	6 
[6, 0, 9, 0, 0]  	204	6 
[2, 3, 0, 5, 0]  	204	6 
[2, 0, 9, 1, 0]  	205	5 
[1, 12, 1, 0, 0]  	205	5 
[1, 6, 6, 0, 0]  	205	5 
[0, 7, 4, 1, 0]  	206	4 
[1, 11, 2, 0, 0]  	208	4 
[1, 4, 3, 3, 0]  	208	4 
[1, 0, 8, 2, 0]  	209	4 
[0, 12, 0, 1, 0]  	209	4 
[1, 3, 4, 3, 0]  	211	4 
[1, 2, 0, 6, 0]  	211	4 
[2, 0, 11, 0, 0]  	212	3 
[1, 4, 0, 5, 0]  	212	3 
[0, 11, 1, 1, 0]  	212	3 
[1, 2, 5, 3, 0]  	214	4 
[1, 1, 1, 6, 0]  	214	4 
[1, 10, 0, 2, 0]  	215	4 
[1, 3, 1, 5, 0]  	215	4 
[6, 0, 0, 6, 0]  	216	5 
[1, 0, 10, 1, 0]  	216	5 
[1, 9, 1, 2, 0]  	218	5 
[1, 3, 6, 2, 0]  	218	5 
[1, 2, 2, 5, 0]  	218	4 
[1, 5, 6, 1, 0]  	219	3 
[1, 4, 2, 4, 0]  	219	4 
[0, 5, 8, 0, 0]  	219	3 
[1, 0, 7, 3, 0]  	220	4 
[0, 7, 0, 4, 0]  	221	4 
[0, 4, 9, 0, 0]  	222	3 
[1, 0, 12, 0, 0]  	223	3 
[0, 11, 0, 2, 0]  	223	3 
[1, 1, 0, 7, 0]  	225	5 
[0, 10, 1, 2, 0]  	226	2 
[0, 4, 6, 2, 0]  	226	2 
[0, 6, 6, 1, 0]  	227	3 
[1, 0, 1, 7, 0]  	228	5 
[0, 5, 7, 1, 0]  	230	2 
[4, 0, 0, 7, 0]  	231	5 
[1, 8, 1, 3, 0]  	232	4 
[0, 8, 3, 2, 0]  	232	4 
[0, 10, 3, 1, 0]  	233	2 
[0, 4, 8, 1, 0]  	233	2 
[0, 3, 4, 4, 0]  	233	2 
[0, 12, 3, 0, 0]  	234	2 
[0, 5, 4, 3, 0]  	234	3 
[0, 2, 5, 4, 0]  	236	2 
[0, 10, 0, 3, 0]  	237	2 
[0, 4, 5, 3, 0]  	237	2 
[1, 0, 0, 8, 0]  	239	4 
[0, 3, 6, 3, 0]  	240	2 
[0, 4, 2, 5, 0]  	241	1 
[0, 8, 2, 3, 0]  	243	3 
[0, 3, 11, 0, 0]  	243	2 
[0, 3, 3, 5, 0]  	244	1 
[0, 3, 8, 2, 0]  	247	2 
[0, 2, 4, 5, 0]  	247	2 
[0, 3, 0, 7, 0]  	248	1 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 9, 2, 0]  	250	3 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[0, 2, 11, 1, 0]  	257	2 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 1, 4, 6, 0]  	261	2 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 9, 3, 0]  	264	2 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[2, 1, 1, 1, 1]  	76	3 
[2, 8, 0, 0, 1]  	134	5 
[1, 1, 5, 1, 1]  	141	5 
[11, 1, 3, 0, 1]  	146	11 
[2, 7, 0, 1, 1]  	148	3 
[1, 8, 2, 0, 1]  	163	5 
[8, 1, 0, 4, 1]  	187	8 
[4, 0, 9, 0, 1]  	190	7 
[1, 0, 9, 1, 1]  	198	5 
[4, 2, 0, 5, 1]  	203	7 
[1, 3, 2, 4, 1]  	204	5 
[1, 8, 0, 3, 1]  	214	4 
[0, 11, 3, 0, 1]  	219	3 
[0, 6, 4, 2, 1]  	220	3 
[0, 9, 0, 3, 1]  	222	3 
[0, 8, 1, 3, 1]  	225	4 
[0, 5, 2, 4, 1]  	227	2 
[0, 7, 2, 3, 1]  	228	4 
[0, 9, 2, 2, 1]  	229	3 
[0, 4, 0, 6, 1]  	234	2 
[0, 6, 0, 5, 1]  	235	3 
[0, 1, 11, 1, 1]  	242	2 
[0, 2, 8, 3, 1]  	261	2 
[2, 7, 0, 0, 2]  	119	6 
[1, 7, 0, 1, 2]  	141	5 
[12, 0, 0, 3, 2]  	171	8 
[2, 0, 10, 0, 2]  	194	5 
[1, 5, 2, 3, 2]  	205	4 
[0, 7, 6, 0, 2]  	213	4 
[4, 1, 0, 6, 2]  	217	8 
[0, 9, 3, 1, 2]  	218	4 
[0, 3, 7, 2, 2]  	229	2 
[0, 3, 9, 1, 2]  	236	2 
[0, 2, 7, 3, 2]  	243	2 
[0, 1, 5, 5, 2]  	250	2 
[8, 0, 5, 1, 3]  	175	10 
[2, 0, 8, 1, 3]  	187	6 
[0, 10, 2, 1, 5]  	215	3 
[0, 12, 2, 0, 5]  	216	4 
[0, 4, 7, 1, 251]  	215	2 
[1, 1, 2, 5, 252]  	203	5 
[0, 2, 3, 5, 252]  	229	1 
[1, 0, 1, 4, 253]  	141	4 
[7, 0, 7, 0, 253]  	175	7 
[1, 5, 6, 0, 253]  	190	3 
[0, 10, 3, 0, 253]  	204	4 
[0, 6, 7, 0, 253]  	216	3 
[1, 1, 3, 1, 254]  	105	3 
[1, 1, 5, 0, 254]  	112	3 
[10, 0, 1, 2, 254]  	146	9 
[1, 0, 11, 0, 254]  	205	2 
[0, 3, 6, 2, 254]  	211	2 
[2, 0, 0, 7, 254]  	217	5 
[0, 2, 4, 4, 254]  	218	1 
[0, 1, 1, 7, 254]  	236	1 
[0, 0, 7, 4, 254]  	242	1 
[0, 1, 3, 6, 254]  	243	1 
[0, 0, 1, 8, 254]  	250	1 
[1, 1, 3, 0, 255]  	76	2 
[1, 7, 0, 0, 255]  	112	4 
[6, 0, 0, 5, 255]  	187	4 
[1, 3, 0, 5, 255]  	197	3 
[0, 0, 11, 0, 255]  	198	1 
[0, 4, 8, 0, 255]  	204	1 
[0, 10, 0, 2, 255]  	208	2 
[1, 0, 0, 7, 255]  	210	4 
[0, 6, 2, 3, 255]  	213	2 
[0, 8, 2, 2, 255]  	214	2 
[0, 5, 3, 3, 255]  	216	2 
[0, 4, 4, 3, 255]  	219	2 
[0, 0, 9, 2, 255]  	220	1 
[0, 3, 5, 3, 255]  	222	2 
[0, 1, 2, 6, 255]  	225	1 
[0, 0, 0, 9, 255]  	261	1 
[0, 0, 5, 6, 255]  	264	1 
------
The gap is between 6 and 250.
Lengths: 3 3 4 6 3 4.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*z^12
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[1852551706778287248 + 8556544299619353855*2^64 + 5709438882668861372*2^128 + 12424819726*2^192,6651224906619649488 + 4530062702820387818*2^64 + 8299641302187784101*2^128 + 1298723483*2^192,12880294594044670080 + 17955113080095583127*2^64 + 14315921816303135934*2^128 + 8291686435*2^192,1334460187686020992 + 16290985053907453283*2^64 + 2690919916150362410*2^128 + 1396002327*2^192,9843073455085609600 + 13280801927208752281*2^64 + 12012327737288788309*2^128 + 2622837990*2^192,13429739363523596800 + 11251839826679171354*2^64 + 15951214787089341918*2^128 + 9064117673*2^192,16485791937925398656 + 14162948701722973049*2^64 + 16452924911784430133*2^128 + 9314840785*2^192,14959224991526957312 + 5296521761941078320*2^64 + 16015204566498024748*2^128 + 4541886070*2^192,17743018787989754944 + 3057256576101089616*2^64 + 16721167081658522847*2^128 + 4386094249*2^192,9849946900307114880 + 13813126203842295125*2^64 + 6564147613346967107*2^128 + 3167057867*2^192;\
14551879903590096160 + 6908351318384228687*2^64 + 9611725089834748274*2^128 + 1399983339*2^192,1254250509806042592 + 17517536612499979930*2^64 + 14400426156906323247*2^128 + 16733103635*2^192,1449727086358652560 + 3163334212060317443*2^64 + 8140816030747077624*2^128 + 3736466109*2^192,10022803826139847680 + 2086706730971330960*2^64 + 17209157284299705345*2^128 + 13270271213*2^192,15616318249163164032 + 16039091986364583958*2^64 + 1152789122012507159*2^128 + 15901566982*2^192,15458701977914964864 + 5804443178241481501*2^64 + 17063496560155358181*2^128 + 7860655110*2^192,7414684554223848832 + 10064477546596438293*2^64 + 11721270669236312761*2^128 + 12883972385*2^192,12878084884331681280 + 15725867565298533671*2^64 + 16593849604506576278*2^128 + 3820258246*2^192,14685368680374942336 + 6433183294719183681*2^64 + 233280542286385873*2^128 + 2878493075*2^192,14581117390810178944 + 16474437139624700473*2^64 + 12401001661531101567*2^128 + 16364929270*2^192;\
15967195909547165440 + 4101711755635972812*2^64 + 14483288983196635926*2^128 + 15000011122*2^192,4164792937021065616 + 12494954656484208254*2^64 + 957318774731987635*2^128 + 15722308338*2^192,6287393826754064016 + 15209524258933347723*2^64 + 15279652280256463678*2^128 + 10436890515*2^192,2222278571182839552 + 16465655349557754017*2^64 + 5697177734304860219*2^128 + 3804479660*2^192,14240386016812277184 + 16249860550598398751*2^64 + 12762740652066369538*2^128 + 5099152963*2^192,9767136478376387968 + 12206877793759104214*2^64 + 3704084418642727315*2^128 + 9920972288*2^192,13551527391280193728 + 15308438441228012221*2^64 + 1345362202725632215*2^128 + 1588352379*2^192,14619363314558877056 + 8317184120752439280*2^64 + 17352501866600142334*2^128 + 15814431565*2^192,7959864458614610560 + 6428300289246627342*2^64 + 7205664295231444030*2^128 + 3485241486*2^192,11628894971608560256 + 9961851859426857949*2^64 + 10159237332449830344*2^128 + 1888995699*2^192;\
8033369694998615518 + 4534689625088388449*2^64 + 3452358949798022003*2^128 + 15141217491*2^192,7113717738580660005 + 9892326119958768381*2^64 + 708032678936368094*2^128 + 3791768023*2^192,1985058174470970544 + 3387135161370537738*2^64 + 2259168754116732529*2^128 + 247690710*2^192,12468156315440161120 + 12792079976004641842*2^64 + 3718089928222801825*2^128 + 8181461998*2^192,13814610939069740728 + 11135506103997295343*2^64 + 5490328492668223958*2^128 + 6590297571*2^192,4821691424167569224 + 1218181723289549923*2^64 + 3844071767621770890*2^128 + 2695167903*2^192,7961159473483717736 + 13137137622983400585*2^64 + 15069695422564575012*2^128 + 13784437026*2^192,5739648244409730760 + 9746137513933604829*2^64 + 12983528671484116675*2^128 + 2024540477*2^192,6827833477113610600 + 4083907811810482618*2^64 + 13843456359648066042*2^128 + 7284506401*2^192,13133298126165774448 + 8701361727085929737*2^64 + 4009914857207009767*2^128 + 3890556066*2^192;\
14269439441886693734 + 4292939688712103159*2^64 + 11299949469740650840*2^128 + 6509360521*2^192,4786105874447729069 + 4867242151585722296*2^64 + 8247949300445545415*2^128 + 1808134088*2^192,1501411906936475680 + 2988907281605267747*2^64 + 12272177806822279534*2^128 + 11849237744*2^192,9530285449069750656 + 12881150501097696411*2^64 + 7309295908913823350*2^128 + 12735201592*2^192,6423444380018974424 + 8968810868859622377*2^64 + 18095459355882409655*2^128 + 14541463032*2^192,12263116857143782824 + 6690945294220188464*2^64 + 2724441802162277822*2^128 + 10126221031*2^192,12025609166683878184 + 1970576679969679597*2^64 + 5527648844552395226*2^128 + 15488208989*2^192,5868673060547731400 + 14308315718151252775*2^64 + 13860146704387414943*2^128 + 4320845641*2^192,5233860341705964616 + 1488691925671892731*2^64 + 7049505369100097426*2^128 + 11989362776*2^192,11614736535425526320 + 10084582256197805878*2^64 + 12613584656780093957*2^128 + 12498915704*2^192;\
12542191013338327236 + 9657422190592777876*2^64 + 13620183371959889895*2^128 + 15010736129*2^192,9493408682836337402 + 6782559232064910914*2^64 + 10533247811275819404*2^128 + 15974274315*2^192,1471132931088123968 + 17745885997098207529*2^64 + 3489004473268046863*2^128 + 5728464514*2^192,17745567409098956416 + 10906067271592590276*2^64 + 5590065524389449896*2^128 + 15720153029*2^192,11446796461680614320 + 2927293312111262670*2^64 + 10556884963748987964*2^128 + 5126302918*2^192,12335709581396619632 + 2235753600991384966*2^64 + 4421072010765191897*2^128 + 935644795*2^192,15511945354814202832 + 12591309882132506818*2^64 + 11492783352947595850*2^128 + 7679056489*2^192,2495117717161439888 + 16595009381042011877*2^64 + 10255668165493290072*2^128 + 9031523857*2^192,5014550102313682672 + 1789042165410407385*2^64 + 18009922221120963353*2^128 + 9351140646*2^192,3934900095987905184 + 7724759421448206253*2^64 + 863579095234951613*2^128 + 13679603555*2^192;\
7961873682065197626 + 10080935068142760021*2^64 + 5565872545257277811*2^128 + 3444398993*2^192,7620804455026005175 + 158199325034621069*2^64 + 10739905067310625449*2^128 + 14988913111*2^192,11591165420211932240 + 576623222873894566*2^64 + 18367650384573753424*2^128 + 3257760800*2^192,7799191288240955744 + 3585346225739539361*2^64 + 9007274256518008284*2^128 + 4542590750*2^192,8354323987687270696 + 610146376684750104*2^64 + 5837777097683420599*2^128 + 15563735708*2^192,219153386600519000 + 16484235122888853395*2^64 + 15459265114891481170*2^128 + 1769605170*2^192,13832428843661916664 + 4890469579248539219*2^64 + 949625578084449709*2^128 + 9401074980*2^192,8475081849585310232 + 6323926773254298601*2^64 + 3195157072608672280*2^128 + 7016128304*2^192,16623209619121219128 + 10950882033596102462*2^64 + 11321638497344315008*2^128 + 16466299867*2^192,469184857600174544 + 10430901527988547335*2^64 + 5629856240077553828*2^128 + 11663068636*2^192;\
13644815583048524332 + 9070756241472991383*2^64 + 8025832204508427220*2^128 + 14855938526*2^192,8056188881687810210 + 11756925239598712223*2^64 + 10908141576242935279*2^128 + 16571810049*2^192,18440942993322181280 + 12303742090817143368*2^64 + 2678002581766377505*2^128 + 16013678034*2^192,4754099159747648 + 9663681819265981347*2^64 + 8901725438786941982*2^128 + 230085403*2^192,13661108317910981680 + 11467081809935356235*2^64 + 12549420032609496080*2^128 + 9823635486*2^192,10325272960385590224 + 5167564423504089946*2^64 + 5743112333671058880*2^128 + 16954771787*2^192,6852559607454040976 + 12826529773105855971*2^64 + 10509993095905631350*2^128 + 9945072570*2^192,4181365725202698768 + 1507409139340227531*2^64 + 10640600227610127447*2^128 + 2100639102*2^192,8114993600008704208 + 8393783380471603381*2^64 + 1923844876224185349*2^128 + 15579797784*2^192,11166597053080369248 + 9131803010214688933*2^64 + 1099236477561541182*2^128 + 6077318849*2^192;\
6363505488737107308 + 11790637978202247214*2^64 + 11533778934887783194*2^128 + 16861748307*2^192,9476014477020362218 + 13041832098023631646*2^64 + 2897693469931799099*2^128 + 1045879147*2^192,17305357033902870560 + 14407394940168071463*2^64 + 6119231127172875859*2^128 + 3551703990*2^192,11628432402826727040 + 15976875707986447965*2^64 + 15879306206162682361*2^128 + 6085607159*2^192,3740468725091702064 + 9558703908381540938*2^64 + 6242673790179831598*2^128 + 15574405775*2^192,855861805978989264 + 6032849043068589624*2^64 + 11665178977422887867*2^128 + 13207205278*2^192,14900481497529212880 + 6447474498383420083*2^64 + 5727065874819520644*2^128 + 12389764263*2^192,1372412790925594320 + 1784616063195399625*2^64 + 15229481958880883855*2^128 + 2073586454*2^192,5646346256476008976 + 10896518008505675997*2^64 + 16131714445898186547*2^128 + 4573488490*2^192,877929235545453024 + 16734918428777218720*2^64 + 4181022293569864116*2^128 + 8050211704*2^192;\
3049796737126313424 + 12933747823152208103*2^64 + 12173305885008525272*2^128 + 9662712515*2^192,14650367513623993688 + 9566331125884670258*2^64 + 16347086173270411957*2^128 + 3612735178*2^192,14637468992645328176 + 12292496217005222074*2^64 + 11763930364675160096*2^128 + 11049127500*2^192,14295502644482296960 + 14245180574468842924*2^64 + 1433770915202754525*2^128 + 7214782849*2^192,715043260039163840 + 7088983131765276602*2^64 + 16702965967812775320*2^128 + 8596008079*2^192,16767980385844661440 + 4578612987724613391*2^64 + 3177480328600032577*2^128 + 5048906069*2^192,5193680574924400704 + 4608384365024334839*2^64 + 3668366171075076666*2^128 + 4411915968*2^192,15654340509700348672 + 2697519367691883992*2^64 + 9754731624897231786*2^128 + 1915654476*2^192,4706367060575956160 + 10554518132131172392*2^64 + 2271263366660046986*2^128 + 9303590511*2^192,15335881337670575936 + 11391755303195580904*2^64 + 15529947883374295161*2^128 + 7104942582*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 4062 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - 4*x^8 + 3*x^7 + 6*x^6 - 36*x^5 + 24*x^4 + 48*x^3 - 256*x^2 + 1024
Its Newton polygon is: [2, 2, 2, 1, 1, 1, 1, 0, 0, 0]
Its factorization is: Mat([x^10 - 4*x^8 + 3*x^7 + 6*x^6 - 36*x^5 + 24*x^4 + 48*x^3 - 256*x^2 + 1024, 1])
The valuation of f-g is: 25
The valuation of subst(g,x,A) is: 21
