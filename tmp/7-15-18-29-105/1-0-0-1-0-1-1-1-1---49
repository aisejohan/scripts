/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^2*z^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 93
[1, 1, 3, 0, 0]  	76	2 
[3, 2, 2, 0, 0]  	87	4 
[14, 0, 0, 0, 0]  	98	3  <--- 1
[2, 1, 1, 2, 0]  	105	3 
[0, 7, 0, 0, 0]  	105	3  <--- 2
[1, 0, 1, 4, 0]  	141	3 
[1, 1, 2, 3, 0]  	145	2 
[1, 0, 3, 3, 0]  	148	3 
[1, 0, 0, 5, 0]  	152	3 
[2, 6, 0, 2, 0]  	162	4 
[2, 0, 5, 2, 0]  	162	5 
[12, 1, 2, 1, 0]  	164	5 
[13, 0, 1, 2, 0]  	167	3 
[12, 0, 3, 1, 0]  	167	5 
[0, 2, 8, 0, 0]  	174	3 
[3, 0, 7, 1, 0]  	176	6 
[0, 6, 0, 3, 0]  	177	3 
[13, 0, 0, 3, 0]  	178	4 
[11, 1, 0, 3, 0]  	179	7 
[1, 0, 8, 1, 0]  	180	4 
[13, 6, 0, 0, 0]  	181	4 
[10, 0, 3, 2, 0]  	182	5 
[11, 0, 0, 4, 0]  	193	5 
[11, 6, 0, 1, 0]  	196	6 
[11, 0, 5, 1, 0]  	196	6 
[1, 5, 0, 4, 0]  	198	4 
[0, 6, 5, 1, 0]  	209	3 
[7, 5, 0, 3, 0]  	211	4 
[7, 0, 9, 0, 0]  	211	4 
[2, 0, 11, 0, 0]  	212	3 
[5, 0, 10, 0, 0]  	215	3 
[0, 6, 7, 0, 0]  	216	3 
[13, 0, 7, 0, 0]  	217	5 
[0, 6, 4, 2, 0]  	220	3 
[0, 4, 6, 2, 0]  	226	2 
[0, 5, 2, 4, 0]  	227	2 
[0, 3, 7, 2, 0]  	229	2 
[0, 5, 7, 1, 0]  	230	2 
[0, 3, 4, 4, 0]  	233	2 
[0, 5, 4, 3, 0]  	234	3 
[0, 2, 5, 4, 0]  	236	2 
[0, 4, 5, 3, 0]  	237	2 
[1, 0, 13, 0, 0]  	241	1 
[0, 4, 2, 5, 0]  	241	1 
[0, 3, 3, 5, 0]  	244	1 
[0, 3, 0, 7, 0]  	248	1 
[0, 5, 0, 6, 0]  	249	2 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 1, 4, 6, 0]  	261	2 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[2, 0, 1, 2, 1]  	90	4 
[1, 6, 0, 2, 1]  	155	4 
[1, 6, 2, 1, 1]  	162	5 
[5, 5, 0, 3, 1]  	197	5 
[0, 4, 0, 6, 1]  	234	2 
[0, 3, 6, 3, 1]  	240	2 
[0, 1, 11, 1, 1]  	242	2 
[0, 2, 7, 3, 1]  	243	2 
[0, 2, 4, 5, 1]  	247	2 
[0, 1, 5, 5, 1]  	250	2 
[0, 1, 9, 3, 1]  	264	2 
[1, 0, 7, 2, 2]  	191	4 
[1, 0, 12, 0, 2]  	223	3 
[9, 6, 0, 1, 3]  	182	7 
[9, 0, 5, 1, 252]  	182	5 
[0, 6, 4, 1, 253]  	191	3 
[0, 5, 5, 2, 254]  	223	2 
[1, 0, 3, 1, 255]  	90	3 
[1, 6, 0, 1, 255]  	126	4 
[5, 0, 9, 0, 255]  	197	3 
[0, 0, 13, 0, 255]  	234	1 
[0, 2, 2, 6, 255]  	240	1 
[0, 0, 7, 4, 255]  	242	1 
[0, 1, 3, 6, 255]  	243	1 
[0, 1, 0, 8, 255]  	247	1 
[0, 0, 1, 8, 255]  	250	1 
[0, 0, 5, 6, 255]  	264	1 
------
The gap is between 4 and 251.
Lengths: 3 3 4 4 3 3.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^10*y^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^4*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*y^3*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[14018576823903608786 + 1274815052098420975*2^64 + 565845653015397527*2^128 + 624344202*2^192,15673226677514652034 + 8772682938910486184*2^64 + 9116663657223944206*2^128 + 1530488668*2^192,11703426436188411650 + 4018361567879007562*2^64 + 15642992191899051833*2^128 + 598089659*2^192,10807924724320972800 + 14951723615535491875*2^64 + 9294046889866575686*2^128 + 413198540*2^192,17627393441863158944 + 8348334180962465237*2^64 + 2552103607189409026*2^128 + 1706656685*2^192,17474927009356393432 + 11647778658479030167*2^64 + 3695723674684059966*2^128 + 2028193263*2^192,16648424279285894888 + 17275633951152476693*2^64 + 7809453672608493675*2^128 + 1190093831*2^192,2280390760973838400 + 18017964531419793446*2^64 + 4640883618708030771*2^128 + 710057243*2^192,14584716795647111424 + 14436455354489946495*2^64 + 5138714493889868209*2^128 + 555259815*2^192,13596891225439289472 + 11607740328019507733*2^64 + 9319615349778571243*2^128 + 1862307703*2^192;\
10605316011748093144 + 12157425590906402252*2^64 + 2732924002802314370*2^128 + 1883066255*2^192,4916269834659714398 + 11653791565955720885*2^64 + 6625730553458576078*2^128 + 408050055*2^192,17776740042572492596 + 12629734851274573509*2^64 + 16136994880939351610*2^128 + 603892483*2^192,13351495776357679944 + 1667003614434395654*2^64 + 8848503801986235767*2^128 + 940635319*2^192,17373852053500844032 + 6023217535733017674*2^64 + 5981286986726945647*2^128 + 2131187957*2^192,16986215615438460080 + 3249198869982997188*2^64 + 12263723259477194980*2^128 + 1843083211*2^192,5659852727537231248 + 15764152275644679449*2^64 + 2382360078536194708*2^128 + 2031474195*2^192,3883552993255862064 + 15422565757983849473*2^64 + 9683214960736388964*2^128 + 893152836*2^192,3754457517523927760 + 9488826900987383940*2^64 + 6604126902087160601*2^128 + 1009995256*2^192,18445468045544576864 + 9988616223702004188*2^64 + 7072061867520047807*2^128 + 1340012091*2^192;\
10745403248333970706 + 241712699509285165*2^64 + 5488674047058589292*2^128 + 1123246431*2^192,1969030398258153476 + 8043742483358625853*2^64 + 10174253745249571102*2^128 + 1559160005*2^192,18349024222619438382 + 16630759647499156046*2^64 + 6622390643236411566*2^128 + 267099055*2^192,5919278285707510616 + 9631290863706233750*2^64 + 16079014587113642317*2^128 + 1824336312*2^192,11174289304411041680 + 8223044533108411449*2^64 + 9003270727618696021*2^128 + 537665092*2^192,7447954547488349328 + 17964782920312779762*2^64 + 18133338806663255898*2^128 + 410491752*2^192,9264165651627840496 + 9702524892554434412*2^64 + 11032663856590624774*2^128 + 2143117540*2^192,7466458476975529056 + 5042155593496233617*2^64 + 9279890598417221772*2^128 + 1222332055*2^192,17432486279299045472 + 9164995717748625450*2^64 + 4212320118548727751*2^128 + 1541873300*2^192,15437260430644370032 + 12056582545126226321*2^64 + 9403168960470180808*2^128 + 1097514484*2^192;\
16976136869553124904 + 12692109874405983189*2^64 + 4907328697334025080*2^128 + 432435000*2^192,15799608583026741157 + 1340333867020270578*2^64 + 15260744317287107184*2^128 + 374556582*2^192,3411227585732388245 + 17223130936246429686*2^64 + 6306103950719317486*2^128 + 875395929*2^192,18300032307970165064 + 2952522046885104624*2^64 + 8099550402421130965*2^128 + 343782564*2^192,5799938870848384464 + 14435360155781262934*2^64 + 17558555760513639951*2^128 + 627339157*2^192,9956986512421129884 + 2549478244607133854*2^64 + 7996878568700065748*2^128 + 444800727*2^192,2737186745601483012 + 13650911806876359272*2^64 + 18345159004472381383*2^128 + 192778615*2^192,11345970215789722248 + 10418533430086203821*2^64 + 12082390944302201984*2^128 + 786778024*2^192,11069558969277704472 + 4100437544721154467*2^64 + 17347842415435803262*2^128 + 592127033*2^192,3186208729030077064 + 16041721629896940048*2^64 + 6913778532710157288*2^128 + 531888080*2^192;\
14276872319508994868 + 13719806568222915318*2^64 + 8023764827844378344*2^128 + 231951497*2^192,12815028920845660088 + 2773308515273355617*2^64 + 7445541244870170631*2^128 + 1023472692*2^192,1611002199049064880 + 2932669315085013080*2^64 + 8674734870963782720*2^128 + 57109187*2^192,2416801183986781152 + 14017861201090175592*2^64 + 2779223187342019521*2^128 + 428019840*2^192,1869614721489154112 + 7158250756370166235*2^64 + 5369639250387888154*2^128 + 794929864*2^192,7962493788043053760 + 854805807058592097*2^64 + 14405572640736685890*2^128 + 549468519*2^192,527814745550645152 + 11349574840529126859*2^64 + 18433242614060788516*2^128 + 680262598*2^192,3120859447217769864 + 18353837651416304698*2^64 + 9779895337123557217*2^128 + 887108085*2^192,1914772988138183648 + 17724842285532979277*2^64 + 3061585141959296111*2^128 + 875601036*2^192,7276293131996877664 + 13322321668530174077*2^64 + 16777956903247353004*2^128 + 309602746*2^192;\
17646240489558262855 + 2530449100785476926*2^64 + 4823631677937804751*2^128 + 947903332*2^192,15773090631666776738 + 15684472630838308230*2^64 + 11621663356935964088*2^128 + 1564752972*2^192,13103301348075795850 + 13871889486806270159*2^64 + 15387791655337332484*2^128 + 831205653*2^192,3110117724841110632 + 10973654392958023593*2^64 + 3821918629174354308*2^128 + 613126000*2^192,14032951141229250816 + 2484904539931455440*2^64 + 14379802815708168103*2^128 + 24725915*2^192,2102846897741344604 + 2617107661344045236*2^64 + 3921618261719884172*2^128 + 1519187325*2^192,16135306761403648936 + 14311929617130600078*2^64 + 12547849242203930730*2^128 + 256370705*2^192,1605079058560291048 + 13022005113632831882*2^64 + 16485113207325717095*2^128 + 847185114*2^192,9153255058279554056 + 7381067185791013290*2^64 + 1006028683973397525*2^128 + 1681141596*2^192,2103942187407330520 + 531244889342197789*2^64 + 4594021036238452228*2^128 + 282151000*2^192;\
2118869681538599282 + 7016830417819571712*2^64 + 12317838672375276593*2^128 + 1603591867*2^192,4408213919912264874 + 4731361925579165204*2^64 + 1559995323687790552*2^128 + 547883835*2^192,15940530824438386440 + 14054161435808756730*2^64 + 13427239031502233599*2^128 + 1687608343*2^192,1026262500451111060 + 15351510681385990768*2^64 + 16234330498236532911*2^128 + 1904991982*2^192,1554414135325700740 + 834888044169731608*2^64 + 14427841830240113848*2^128 + 255888275*2^192,6810292639823858232 + 11675730160344510909*2^64 + 13266060705721278523*2^128 + 1922204493*2^192,1053682001191702992 + 7052764695582206625*2^64 + 10228085618488485224*2^128 + 1687874610*2^192,13590816452602773776 + 2797360243087917271*2^64 + 6336623667219993675*2^128 + 1248150596*2^192,1652182344003156392 + 17431549375911733455*2^64 + 10533334020410491660*2^128 + 1870045177*2^192,9050496708855070088 + 2887065460734679979*2^64 + 13454911323610362558*2^128 + 926785450*2^192;\
12488645975648418032 + 14846480302432272573*2^64 + 4887175193359584272*2^128 + 1037118428*2^192,4024358987301699278 + 15778124691949526834*2^64 + 6496126588173049399*2^128 + 876457659*2^192,8112654313887567542 + 1613902046812520961*2^64 + 12202810814665706918*2^128 + 873125308*2^192,113047353287846448 + 3621809367812232313*2^64 + 4973351642119522917*2^128 + 779728486*2^192,13549482151714421408 + 5750364576705008974*2^64 + 11051345000707299762*2^128 + 1032863789*2^192,6404923357914407400 + 9985136212823513083*2^64 + 1829727312238407110*2^128 + 579801831*2^192,10017390455765010808 + 5441748908433166799*2^64 + 15634090307726974076*2^128 + 55165243*2^192,4222250068940335744 + 4493491009739013876*2^64 + 15432892280040033059*2^128 + 729936675*2^192,3943158396059317720 + 5682956433714322329*2^64 + 13184370789557115055*2^128 + 1232380551*2^192,1734316685676141488 + 4193535489580284949*2^64 + 57958601975463652*2^128 + 756904127*2^192;\
13963037208530963048 + 2950709055862845581*2^64 + 1199714915338023076*2^128 + 1339821127*2^192,1417318130066847810 + 5641083920765329045*2^64 + 4373819490273386278*2^128 + 2024733255*2^192,10871037050138053242 + 16506148180229822658*2^64 + 12223390879736894810*2^128 + 81515216*2^192,1303702503383377980 + 6745515306504976283*2^64 + 9007877822619176060*2^128 + 1020028626*2^192,3133807595065107392 + 2367439923958399149*2^64 + 10254678963701958567*2^128 + 1296845546*2^192,16011742615806304312 + 5743123465267601096*2^64 + 2167989008444051353*2^128 + 2091834524*2^192,2539202355125861832 + 8758031566927648854*2^64 + 813407889694936981*2^128 + 409712601*2^192,15876380183936351856 + 15790925801541630450*2^64 + 9283120421800896536*2^128 + 482138662*2^192,16208015316570441576 + 5016334034818650992*2^64 + 9363114873288997053*2^128 + 1491741376*2^192,6961799818026978336 + 4934587276096919623*2^64 + 9951722289051029711*2^128 + 1034967914*2^192;\
3841347344861290206 + 15035049142444904252*2^64 + 9258802547132304091*2^128 + 1934400953*2^192,4804110707211099514 + 11806015860806123517*2^64 + 1080514400605309926*2^128 + 2133020382*2^192,821432888176384892 + 275855084364087883*2^64 + 7384690285183100284*2^128 + 178739548*2^192,11788665020292388052 + 7912951775471494613*2^64 + 12741675657970466186*2^128 + 14728465*2^192,2156523693736970840 + 9177040767531686921*2^64 + 17445814831765672818*2^128 + 1605479718*2^192,3560102285563706552 + 16073699588625742325*2^64 + 15768557719984787416*2^128 + 1586434386*2^192,9004732865019378928 + 18113504833448405837*2^64 + 2946399474141868294*2^128 + 968787769*2^192,16602581478044076624 + 4121460010138030381*2^64 + 9335297085085864539*2^128 + 1184825831*2^192,16086232914979012680 + 7485889143058873617*2^64 + 13188899908972678003*2^128 + 1595582679*2^192,5020426438992843016 + 9057278712618788649*2^64 + 12451874240754864192*2^128 + 708191047*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3814 lists. */
The sign is: 1
The characteristic polynomial is: x^10 - x^9 + 2*x^8 + 4*x^7 - 6*x^6 + 36*x^5 - 24*x^4 + 64*x^3 + 128*x^2 - 256*x + 1024
Its Newton polygon is: [2, 5/3, 5/3, 5/3, 1, 1, 1/3, 1/3, 1/3, 0]
Its factorization is: Mat([x^10 - x^9 + 2*x^8 + 4*x^7 - 6*x^6 + 36*x^5 - 24*x^4 + 64*x^3 + 128*x^2 - 256*x + 1024, 1])
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 31
