/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 181
[4, 2, 1, 0, 0]  	76	2 
[6, 3, 0, 0, 0]  	87	4 
[14, 0, 0, 0, 0]  	98	3  <--- 1
[2, 1, 1, 2, 0]  	105	3 
[0, 7, 0, 0, 0]  	105	2  <--- 2
[2, 2, 5, 0, 0]  	134	3 
[12, 2, 0, 1, 0]  	143	5 
[10, 0, 1, 2, 0]  	146	3 
[6, 0, 1, 3, 0]  	147	5 
[0, 6, 0, 2, 0]  	148	2 
[4, 0, 2, 3, 0]  	151	4 
[10, 1, 4, 0, 0]  	157	4 
[10, 2, 0, 2, 0]  	158	7 
[10, 0, 5, 0, 0]  	160	8 
[8, 1, 5, 0, 0]  	161	9 
[4, 0, 1, 4, 0]  	162	4 
[2, 0, 5, 2, 0]  	162	4 
[10, 1, 0, 3, 0]  	172	4 
[8, 0, 5, 1, 0]  	175	8 
[2, 6, 4, 0, 0]  	176	5 
[2, 0, 1, 5, 0]  	177	3 
[0, 6, 5, 0, 0]  	180	2 
[3, 5, 0, 3, 0]  	183	5 
[8, 1, 0, 4, 0]  	187	7 
[6, 2, 0, 4, 0]  	188	7 
[4, 3, 0, 4, 0]  	189	7 
[4, 0, 9, 0, 0]  	190	5 
[2, 5, 4, 1, 0]  	190	6 
[0, 2, 9, 0, 0]  	192	3 
[3, 1, 9, 0, 0]  	198	4 
[1, 6, 4, 1, 0]  	198	4 
[1, 3, 5, 2, 0]  	200	4 
[8, 0, 0, 5, 0]  	201	5 
[3, 0, 10, 0, 0]  	201	3 
[6, 1, 0, 5, 0]  	202	6 
[2, 3, 0, 5, 0]  	204	5 
[2, 5, 0, 4, 0]  	205	5 
[1, 4, 8, 0, 0]  	211	5 
[1, 5, 4, 2, 0]  	212	3 
[1, 4, 0, 5, 0]  	212	3 
[1, 1, 1, 6, 0]  	214	3 
[1, 3, 1, 5, 0]  	215	3 
[6, 0, 0, 6, 0]  	216	4 
[1, 5, 1, 4, 0]  	216	3 
[2, 2, 0, 6, 0]  	218	4 
[0, 5, 8, 0, 0]  	219	3 
[2, 1, 9, 1, 0]  	220	4 
[2, 0, 10, 1, 0]  	223	4 
[1, 3, 8, 1, 0]  	225	5 
[1, 3, 0, 6, 0]  	226	2 
[0, 4, 6, 2, 0]  	226	2 
[2, 1, 11, 0, 0]  	227	2 
[1, 0, 9, 2, 0]  	227	2 
[0, 5, 2, 4, 0]  	227	2 
[1, 1, 5, 4, 0]  	228	4 
[0, 3, 7, 2, 0]  	229	2 
[2, 0, 12, 0, 0]  	230	2 
[4, 0, 0, 7, 0]  	231	4 
[2, 1, 0, 7, 0]  	232	4 
[0, 4, 8, 1, 0]  	233	2 
[0, 3, 4, 4, 0]  	233	2 
[0, 5, 4, 3, 0]  	234	2 
[0, 4, 0, 6, 0]  	234	2 
[0, 2, 5, 4, 0]  	236	2 
[1, 2, 8, 2, 0]  	239	5 
[1, 0, 13, 0, 0]  	241	1 
[0, 4, 2, 5, 0]  	241	1 
[1, 0, 5, 5, 0]  	242	2 
[0, 3, 3, 5, 0]  	244	1 
[2, 0, 0, 8, 0]  	246	4 
[0, 2, 4, 5, 0]  	247	2 
[0, 3, 0, 7, 0]  	248	1 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[1, 0, 1, 8, 0]  	257	2 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 2, 8, 3, 0]  	261	2 
[0, 1, 4, 6, 0]  	261	2 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[4, 1, 1, 1, 1]  	90	4 
[2, 1, 5, 0, 1]  	119	4 
[8, 2, 0, 3, 1]  	173	8 
[4, 4, 0, 3, 1]  	175	7 
[10, 0, 0, 4, 1]  	186	7 
[2, 0, 10, 0, 1]  	194	3 
[1, 5, 5, 1, 1]  	201	3 
[1, 1, 9, 1, 1]  	213	3 
[4, 1, 0, 6, 1]  	217	6 
[0, 5, 7, 1, 1]  	230	2 
[1, 4, 3, 4, 1]  	237	3 
[0, 4, 5, 3, 1]  	237	2 
[0, 1, 11, 1, 1]  	242	2 
[1, 0, 7, 4, 1]  	249	2 
[0, 1, 9, 3, 1]  	264	2 
[6, 0, 5, 1, 2]  	161	8 
[3, 6, 2, 1, 2]  	176	6 
[3, 0, 3, 4, 2]  	191	6 
[1, 4, 7, 0, 2]  	193	4 
[1, 4, 4, 2, 2]  	197	4 
[4, 2, 0, 5, 2]  	203	7 
[1, 5, 2, 3, 2]  	205	3 
[1, 1, 7, 2, 2]  	206	4 
[1, 4, 3, 3, 2]  	208	3 
[3, 0, 9, 1, 2]  	212	4 
[1, 4, 2, 4, 2]  	219	3 
[1, 1, 11, 0, 2]  	220	3 
[1, 3, 3, 4, 2]  	222	3 
[1, 2, 4, 4, 2]  	225	4 
[1, 2, 6, 3, 2]  	232	4 
[1, 0, 3, 6, 2]  	235	3 
[1, 2, 3, 5, 2]  	236	2 
[1, 1, 4, 5, 2]  	239	4 
[1, 2, 0, 7, 2]  	240	3 
[0, 3, 6, 3, 2]  	240	2 
[0, 1, 5, 5, 2]  	250	2 
[1, 1, 0, 8, 2]  	254	2 
[1, 0, 0, 9, 2]  	268	3 
[1, 4, 6, 1, 3]  	204	5 
[1, 0, 11, 0, 3]  	205	3 
[1, 0, 7, 3, 3]  	220	3 
[1, 3, 7, 1, 4]  	207	3 
[1, 2, 2, 5, 4]  	218	4 
[1, 5, 6, 0, 5]  	190	4 
[0, 2, 7, 3, 5]  	243	2 
[1, 3, 4, 3, 6]  	211	4 
[0, 1, 3, 6, 251]  	243	1 
[1, 4, 2, 3, 252]  	190	3 
[1, 2, 0, 6, 252]  	211	3 
[0, 3, 8, 1, 252]  	218	3 
[0, 2, 1, 6, 252]  	222	1 
[0, 0, 1, 8, 252]  	250	1 
[0, 6, 4, 1, 253]  	191	3 
[0, 4, 8, 0, 253]  	204	3 
[0, 5, 4, 2, 253]  	205	1 
[0, 4, 0, 5, 253]  	205	1 
[0, 4, 5, 2, 253]  	208	1 
[0, 5, 1, 4, 253]  	209	2 
[0, 0, 13, 0, 253]  	234	1 
[0, 0, 5, 6, 253]  	264	1 
[4, 5, 0, 2, 254]  	161	5 
[2, 5, 0, 3, 254]  	176	4 
[0, 3, 1, 4, 254]  	179	1 
[0, 3, 0, 5, 254]  	190	1 
[0, 3, 5, 2, 254]  	193	2 
[0, 5, 5, 1, 254]  	194	2 
[1, 2, 3, 4, 254]  	207	2 
[0, 1, 1, 6, 254]  	207	1 
[0, 4, 4, 3, 254]  	219	2 
[0, 0, 9, 2, 254]  	220	1 
[0, 1, 5, 4, 254]  	221	2 
[0, 2, 8, 2, 254]  	232	3 
[0, 0, 5, 5, 254]  	235	1 
[2, 0, 1, 2, 255]  	90	3 
[8, 0, 5, 0, 255]  	146	6 
[4, 6, 0, 1, 255]  	147	3 
[0, 5, 1, 2, 255]  	151	1 
[0, 6, 4, 0, 255]  	162	2 
[0, 5, 5, 0, 255]  	165	1 
[6, 1, 0, 4, 255]  	173	4 
[2, 4, 4, 1, 255]  	175	3 
[0, 5, 4, 1, 255]  	176	2 
[1, 0, 7, 2, 255]  	191	4 
[2, 1, 0, 6, 255]  	203	4 
[0, 2, 8, 1, 255]  	203	3 
[0, 1, 9, 1, 255]  	206	2 
[0, 0, 5, 4, 255]  	206	1 
[2, 0, 0, 7, 255]  	217	3 
------
The gap is between 7 and 250.
Lengths: 3 3 4 4 3 3.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[12100229634260896392 + 13505565866547610458*2^64 + 6643985097541226569*2^128 + 1689888934*2^192,17845066640721232436 + 13868969134880947530*2^64 + 16721687358173922035*2^128 + 1550163306*2^192,5015935918950829856 + 12437907509938825677*2^64 + 13770865709195327502*2^128 + 194941265*2^192,16166287075529938448 + 6982491795090669956*2^64 + 15924791077973011006*2^128 + 313271303*2^192,11431709685211551328 + 12246186486800171893*2^64 + 1062665294880371827*2^128 + 859345858*2^192,16967763269820922616 + 786173779810163889*2^64 + 7741045752109098539*2^128 + 86434596*2^192,9739689798184646472 + 3579531231235498389*2^64 + 5154155246967619188*2^128 + 112274325*2^192,5969732774005902640 + 15688791558395775863*2^64 + 4794845662222740267*2^128 + 1859876757*2^192,10775938995120639504 + 17742757598296645782*2^64 + 11696003917587966296*2^128 + 1900069712*2^192,13466005764661537664 + 17149297152390944912*2^64 + 11268387337511199761*2^128 + 873885132*2^192;\
9119934442661793948 + 11154831155707650779*2^64 + 2064024739867748551*2^128 + 1311915013*2^192,5022038356841707966 + 6585703803606539026*2^64 + 8542957147463319541*2^128 + 1608351415*2^192,3052339706463529178 + 15545050798329177638*2^64 + 6623813941233758760*2^128 + 1692626567*2^192,6774662355026155672 + 6169510274017634417*2^64 + 17129278186430545312*2^128 + 1685717390*2^192,17944944861436726376 + 13004616761425263404*2^64 + 14266981896246741930*2^128 + 1199984913*2^192,8969207689942652888 + 10808132314959544816*2^64 + 17487752015385220334*2^128 + 805421471*2^192,10285085514820493920 + 1742255973285471128*2^64 + 504875841812608841*2^128 + 2137029531*2^192,16704719009563257920 + 16753324944096347775*2^64 + 3731076159774716256*2^128 + 1403049366*2^192,6672755526272895024 + 16050935147090104789*2^64 + 4645251354314088651*2^128 + 890757325*2^192,16051363212418722000 + 17954623723398329491*2^64 + 5494711317850578465*2^128 + 1076365176*2^192;\
8446258730448389866 + 12288659983098539625*2^64 + 2115039121531295245*2^128 + 637010148*2^192,578283669460027550 + 6826014726452624943*2^64 + 15551270601555973397*2^128 + 1691277248*2^192,63132343494410468 + 13475058300491582665*2^64 + 4811339964298019520*2^128 + 1035799299*2^192,2774094322119933784 + 17342719570205967857*2^64 + 1859042890117498448*2^128 + 1575746918*2^192,12919665731587224848 + 16891676496875871942*2^64 + 13054948563076144715*2^128 + 1405919576*2^192,17776158304352404640 + 7477342266169597200*2^64 + 3593124809107050176*2^128 + 1647546986*2^192,2119219066223979624 + 15185635126233463012*2^64 + 9132937698235561991*2^128 + 571751733*2^192,11660940776879203408 + 2949160317360806023*2^64 + 4929526337875136235*2^128 + 1594107187*2^192,1977807995403508384 + 16978150740328480095*2^64 + 1279171124604199173*2^128 + 1683605460*2^192,47663299422516080 + 5446389106952120091*2^64 + 17903372218974121367*2^128 + 1885094198*2^192;\
11003871392779235180 + 7628474744575388706*2^64 + 4817286412011765701*2^128 + 20757706*2^192,14098431510774365116 + 14378941638333226896*2^64 + 17652736106139179128*2^128 + 1678666871*2^192,13974983843126248428 + 13703877598863622161*2^64 + 14668607858683416339*2^128 + 1359788483*2^192,1481226212273985608 + 15408242986409274310*2^64 + 2775465291907973492*2^128 + 348315116*2^192,10057281585470573008 + 6233551050550162482*2^64 + 18052502948295434613*2^128 + 152962139*2^192,5440505476219180608 + 1514620695733654499*2^64 + 11272858945772139084*2^128 + 1585767792*2^192,706541321660360280 + 11773404871895435381*2^64 + 9361765051891629278*2^128 + 761122633*2^192,4973274328752671288 + 7135943782435030137*2^64 + 6799876330207192164*2^128 + 2068130586*2^192,13138754059895167176 + 13246068639225526788*2^64 + 17960816258147475103*2^128 + 273091253*2^192,6616355500034202616 + 2185492942533176446*2^64 + 4735892853222221091*2^128 + 1280951297*2^192;\
7326596453984720304 + 2787595657171833322*2^64 + 5002254232999205823*2^128 + 779197113*2^192,4455347490450027750 + 2265857185772203875*2^64 + 13920892563778087713*2^128 + 711285743*2^192,3777365167827660276 + 301691581268326449*2^64 + 5824246699488927424*2^128 + 466614631*2^192,10016554671965466880 + 8863333681553226725*2^64 + 8819128895869697002*2^128 + 1390914134*2^192,17280169508712021680 + 7313357509338460523*2^64 + 9358041242208731302*2^128 + 1849237461*2^192,14204467306518312084 + 1681058012972494695*2^64 + 15436665264570040318*2^128 + 1335980004*2^192,10265060288650805384 + 11476678469839329991*2^64 + 12954651187692659451*2^128 + 1472395353*2^192,14732494936644355768 + 27139645216429861*2^64 + 10820293692423868378*2^128 + 321958536*2^192,15646052015035689648 + 8291639025667277359*2^64 + 10671136021127915055*2^128 + 50081072*2^192,8061937772046726336 + 14629400042822551614*2^64 + 6358614520394015358*2^128 + 2007456512*2^192;\
9612621633966892086 + 6861880656105309918*2^64 + 1100396228082919829*2^128 + 624227552*2^192,11257732117785394978 + 11438760023208363643*2^64 + 12981688411236998808*2^128 + 1421056304*2^192,7280517803944364553 + 15003220109719221390*2^64 + 13289268159044787130*2^128 + 1540971430*2^192,11712519376917081688 + 15069982388284521369*2^64 + 18240926551310802130*2^128 + 960236477*2^192,13059050829828485852 + 8362506360250288178*2^64 + 1818047375499610363*2^128 + 951395718*2^192,10290324567968617276 + 12843538852560843413*2^64 + 8164020067629981411*2^128 + 1057974852*2^192,9966739253085418320 + 1154964070059301315*2^64 + 15202296312338669254*2^128 + 1775240420*2^192,9270205716810456896 + 15241432111592272874*2^64 + 16667172355130789911*2^128 + 1265485033*2^192,13496380285265174432 + 392577183877785952*2^64 + 15234656682371711497*2^128 + 1253503083*2^192,1161038015255576944 + 10465353039008494271*2^64 + 6027963918494445152*2^128 + 134426181*2^192;\
1519848839237188120 + 4528638107136534522*2^64 + 17723691259903149852*2^128 + 968627287*2^192,18173583402393509776 + 3131997596221696200*2^64 + 3149041011070265033*2^128 + 179025120*2^192,2228294435105724530 + 14788205567430952927*2^64 + 5695766415353733937*2^128 + 279924029*2^192,14052127715232061084 + 10026250855518186256*2^64 + 4275466123644207037*2^128 + 2107572325*2^192,5572133322741178908 + 16077516805612532024*2^64 + 17236234729832921290*2^128 + 1760272435*2^192,15469376369736956884 + 10229399442639132732*2^64 + 17406271258185458294*2^128 + 286077529*2^192,13049950088524669508 + 12933470577237110059*2^64 + 12918433180148033865*2^128 + 1745431291*2^192,5583312856115989624 + 17285826152378268058*2^64 + 684455932019757969*2^128 + 1257219485*2^192,9370690847434695856 + 7206392998626259218*2^64 + 1850607283473902140*2^128 + 775273770*2^192,15890070579771180600 + 6964075319680043201*2^64 + 16560146665427526953*2^128 + 1490290748*2^192;\
6638584950822096440 + 17285908617697764684*2^64 + 14439758162511325146*2^128 + 784112432*2^192,18034895623715751072 + 5817174425548572616*2^64 + 9623541331867860435*2^128 + 642859028*2^192,5565537313440793792 + 14362739191448306094*2^64 + 17652707726278717595*2^128 + 1504037913*2^192,15478485200736313672 + 12921104969578289536*2^64 + 3374153559700976741*2^128 + 1945471664*2^192,6346822610499234000 + 954332015573569558*2^64 + 15970813962776649799*2^128 + 1704468063*2^192,17609096806597252992 + 8211641903100846839*2^64 + 3304139366856006648*2^128 + 1666438716*2^192,449709411236349696 + 8538699527672261751*2^64 + 4331147001860507552*2^128 + 213167354*2^192,2664096810898164480 + 11777538626500958724*2^64 + 12836341780414786916*2^128 + 1405210406*2^192,6197155325838947128 + 12775125056611528801*2^64 + 5651693856068170286*2^128 + 1057751022*2^192,16676292770143722368 + 12425257517726959986*2^64 + 15675022745780640353*2^128 + 277598095*2^192;\
7801640911750617840 + 12652740158895752397*2^64 + 3220867155740523839*2^128 + 1254572082*2^192,4217502183962164520 + 1821266199172607034*2^64 + 680079124769763812*2^128 + 1085977451*2^192,5525289049291459672 + 5758350490786948464*2^64 + 3343983400573584108*2^128 + 880757125*2^192,1731572629648531464 + 4201300566308037918*2^64 + 6199526535140204237*2^128 + 535490531*2^192,3091793554634145392 + 8950226316796454788*2^64 + 5209729373642435189*2^128 + 1714127292*2^192,16857180876600491440 + 17695881289874930387*2^64 + 5839970819410334108*2^128 + 1711945010*2^192,4272893225298190216 + 14676862255303200534*2^64 + 11939463674103490587*2^128 + 1884854629*2^192,2925532077005672888 + 2801862286892567830*2^64 + 5934535050493102157*2^128 + 497309376*2^192,9988857344329005816 + 9551512993619849100*2^64 + 11500487517361430044*2^128 + 993762514*2^192,14421927100579896416 + 12753197833352974140*2^64 + 14223037116489222159*2^128 + 559794934*2^192;\
2447051205240579376 + 10950168767271021949*2^64 + 15146367003017209600*2^128 + 1500602877*2^192,6581155837153760936 + 15643949444866657793*2^64 + 12613855555397869142*2^128 + 1770927109*2^192,11313934876137397166 + 16885946811317364116*2^64 + 14901922964082855530*2^128 + 842426401*2^192,10486828720853336072 + 4812597954315028658*2^64 + 14255269502422856576*2^128 + 799619045*2^192,13530989685940102908 + 10137470669242510724*2^64 + 14641725411716733935*2^128 + 627461541*2^192,9881221806982402092 + 12642902920684062645*2^64 + 13473222500156876346*2^128 + 1984758771*2^192,16968100909901392264 + 10913843685418514347*2^64 + 15203306124802541729*2^128 + 1882536724*2^192,6382097217346942984 + 14322028294985993050*2^64 + 12543194895734532856*2^128 + 1298551966*2^192,12448855284126900816 + 13322175287537563929*2^64 + 6222851104804280232*2^128 + 949358294*2^192,2467166109046646888 + 7409644083305135171*2^64 + 11905878221080372062*2^128 + 1698517254*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3951 lists. */
The sign is: -1
The characteristic polynomial is: x^10 - x^9 - x^8 - 2*x^7 + 18*x^6 - 72*x^4 + 32*x^3 + 64*x^2 + 256*x - 1024
Its Newton polygon is: [2, 2, 3/2, 3/2, 1, 1, 1/2, 1/2, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 - x^7 + 3*x^6 - 6*x^5 + 30*x^4 - 24*x^3 + 48*x^2 - 64*x + 256, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29
