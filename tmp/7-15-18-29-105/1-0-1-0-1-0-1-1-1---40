/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 176
[4, 2, 1, 0, 0]  	76	3 
[4, 2, 0, 1, 0]  	87	4 
[14, 0, 0, 0, 0]  	98	3  <--- 1
[2, 1, 1, 2, 0]  	105	3 
[0, 7, 0, 0, 0]  	105	2  <--- 2
[2, 2, 5, 0, 0]  	134	2 
[0, 6, 0, 2, 0]  	148	2 
[4, 0, 2, 3, 0]  	151	4 
[12, 1, 0, 2, 0]  	157	5 
[12, 0, 1, 2, 0]  	160	3 
[10, 6, 0, 0, 0]  	160	4 
[8, 1, 5, 0, 0]  	161	7 
[8, 0, 1, 3, 0]  	161	7 
[4, 0, 1, 4, 0]  	162	4 
[2, 0, 5, 2, 0]  	162	4 
[12, 1, 4, 0, 0]  	171	4 
[8, 1, 4, 1, 0]  	172	5 
[8, 0, 5, 1, 0]  	175	6 
[2, 0, 1, 5, 0]  	177	3 
[10, 0, 6, 0, 0]  	178	5 
[0, 6, 5, 0, 0]  	180	2 
[3, 6, 4, 0, 0]  	183	5 
[3, 5, 0, 3, 0]  	183	5 
[8, 1, 0, 4, 0]  	187	7 
[4, 0, 9, 0, 0]  	190	4 
[2, 5, 4, 1, 0]  	190	5 
[2, 4, 0, 4, 0]  	190	5 
[0, 2, 9, 0, 0]  	192	3 
[3, 1, 9, 0, 0]  	198	4 
[1, 6, 4, 1, 0]  	198	4 
[1, 3, 5, 2, 0]  	200	4 
[8, 0, 0, 5, 0]  	201	7 
[3, 0, 10, 0, 0]  	201	4 
[6, 1, 0, 5, 0]  	202	6 
[2, 3, 0, 5, 0]  	204	5 
[2, 0, 9, 1, 0]  	205	5 
[1, 3, 4, 3, 0]  	211	4 
[2, 0, 11, 0, 0]  	212	4 
[1, 5, 4, 2, 0]  	212	4 
[1, 3, 1, 5, 0]  	215	3 
[6, 0, 0, 6, 0]  	216	5 
[1, 5, 1, 4, 0]  	216	3 
[2, 0, 0, 7, 0]  	217	5 
[2, 2, 0, 6, 0]  	218	4 
[1, 4, 2, 4, 0]  	219	3 
[0, 5, 8, 0, 0]  	219	3 
[0, 4, 6, 2, 0]  	226	2 
[1, 5, 0, 5, 0]  	227	2 
[1, 0, 9, 2, 0]  	227	2 
[0, 5, 2, 4, 0]  	227	2 
[1, 1, 5, 4, 0]  	228	4 
[1, 2, 1, 6, 0]  	229	2 
[0, 3, 7, 2, 0]  	229	2 
[0, 3, 4, 4, 0]  	233	2 
[0, 4, 0, 6, 0]  	234	2 
[0, 2, 5, 4, 0]  	236	2 
[1, 2, 0, 7, 0]  	240	3 
[1, 0, 13, 0, 0]  	241	1 
[0, 4, 2, 5, 0]  	241	1 
[1, 0, 5, 5, 0]  	242	3 
[1, 1, 1, 7, 0]  	243	2 
[0, 3, 3, 5, 0]  	244	1 
[0, 3, 0, 7, 0]  	248	1 
[1, 0, 7, 4, 0]  	249	2 
[0, 1, 13, 0, 0]  	249	2 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[1, 0, 1, 8, 0]  	257	2 
[0, 1, 7, 4, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[1, 0, 0, 9, 0]  	268	3 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 1, 5, 6, 0]  	279	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[4, 1, 1, 1, 1]  	90	4 
[2, 1, 5, 0, 1]  	119	4 
[10, 0, 1, 2, 1]  	146	5 
[8, 0, 0, 4, 1]  	172	7 
[2, 0, 10, 0, 1]  	194	2 
[1, 2, 5, 3, 1]  	214	4 
[0, 5, 4, 3, 1]  	234	2 
[0, 4, 5, 3, 1]  	237	2 
[1, 1, 4, 5, 1]  	239	4 
[0, 3, 6, 3, 1]  	240	2 
[0, 2, 7, 3, 1]  	243	2 
[0, 2, 4, 5, 1]  	247	2 
[1, 1, 3, 6, 1]  	250	3 
[1, 1, 0, 8, 1]  	254	2 
[0, 1, 9, 3, 1]  	264	2 
[3, 6, 2, 1, 2]  	176	7 
[2, 6, 4, 0, 2]  	176	5 
[3, 0, 3, 4, 2]  	191	6 
[1, 4, 7, 0, 2]  	193	4 
[1, 4, 6, 1, 2]  	204	4 
[1, 1, 7, 2, 2]  	206	4 
[1, 4, 3, 3, 2]  	208	3 
[1, 2, 2, 5, 2]  	218	4 
[1, 1, 11, 0, 2]  	220	3 
[1, 3, 3, 4, 2]  	222	3 
[1, 3, 8, 1, 2]  	225	5 
[1, 2, 4, 4, 2]  	225	4 
[1, 3, 0, 6, 2]  	226	2 
[1, 1, 2, 6, 2]  	232	4 
[0, 4, 8, 1, 2]  	233	2 
[1, 0, 3, 6, 2]  	235	3 
[0, 1, 4, 6, 2]  	261	2 
[6, 0, 6, 1, 3]  	179	5 
[1, 5, 5, 1, 3]  	201	3 
[1, 1, 9, 1, 3]  	213	3 
[1, 0, 7, 3, 3]  	220	3 
[1, 0, 12, 0, 3]  	223	3 
[0, 5, 7, 1, 3]  	230	2 
[1, 0, 11, 1, 3]  	234	3 
[0, 1, 11, 1, 3]  	242	2 
[1, 5, 2, 3, 4]  	205	4 
[1, 3, 7, 1, 4]  	207	4 
[1, 4, 0, 5, 4]  	212	3 
[0, 1, 5, 5, 4]  	250	2 
[0, 0, 1, 8, 250]  	250	1 
[2, 5, 0, 3, 252]  	176	4 
[1, 4, 1, 4, 252]  	201	2 
[0, 4, 2, 4, 252]  	212	1 
[0, 3, 5, 3, 252]  	222	2 
[0, 0, 13, 0, 252]  	234	1 
[0, 3, 1, 6, 252]  	237	1 
[0, 6, 4, 1, 253]  	191	3 
[0, 4, 1, 4, 253]  	194	1 
[1, 3, 2, 4, 253]  	204	4 
[0, 5, 4, 2, 253]  	205	2 
[0, 4, 5, 2, 253]  	208	1 
[1, 0, 5, 4, 253]  	213	2 
[0, 4, 4, 3, 253]  	219	2 
[0, 5, 0, 5, 253]  	220	1 
[0, 2, 1, 6, 253]  	222	1 
[0, 0, 7, 4, 253]  	242	1 
[0, 0, 0, 9, 253]  	261	1 
[0, 0, 5, 6, 253]  	264	1 
[8, 6, 0, 0, 254]  	146	3 
[8, 0, 6, 0, 254]  	164	3 
[0, 3, 1, 4, 254]  	179	1 
[0, 3, 5, 2, 254]  	193	2 
[0, 3, 4, 3, 254]  	204	2 
[1, 0, 11, 0, 254]  	205	3 
[0, 0, 5, 4, 254]  	206	1 
[1, 2, 3, 4, 254]  	207	3 
[0, 0, 9, 2, 254]  	220	1 
[1, 1, 0, 7, 254]  	225	3 
[0, 2, 0, 7, 254]  	233	1 
[0, 1, 1, 7, 254]  	236	1 
[2, 0, 1, 2, 255]  	90	3 
[0, 5, 1, 2, 255]  	151	1 
[0, 6, 4, 0, 255]  	162	2 
[0, 5, 5, 0, 255]  	165	1 
[2, 0, 9, 0, 255]  	176	3 
[1, 4, 3, 2, 255]  	179	3 
[1, 4, 5, 1, 255]  	186	3 
[1, 0, 7, 2, 255]  	191	4 
[0, 2, 5, 3, 255]  	207	2 
[0, 1, 1, 6, 255]  	207	1 
[0, 4, 7, 1, 255]  	215	2 
[0, 2, 4, 4, 255]  	218	2 
[0, 1, 0, 7, 255]  	218	1 
[0, 2, 8, 2, 255]  	232	3 
[0, 1, 4, 5, 255]  	232	2 
[0, 0, 0, 8, 255]  	232	1 
------
The gap is between 5 and 249.
Lengths: 3 3 4 4 3 3.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^8*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^5*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[6448394695196501128 + 1662962057759839405*2^64 + 12284340738178221792*2^128 + 407823107*2^192,17914688525476504544 + 10167307784537979013*2^64 + 8546055673278325861*2^128 + 975565109*2^192,9688332928991247384 + 17821337495294267031*2^64 + 2756871516908529522*2^128 + 1651713828*2^192,495297680180567968 + 11524972508276506260*2^64 + 11362830890863729027*2^128 + 328324549*2^192,7414908841030019296 + 16546141431817406418*2^64 + 4947687815558865507*2^128 + 524177691*2^192,3891500765674307064 + 4517046519363173302*2^64 + 11915036731545174465*2^128 + 454318512*2^192,1604163086967156824 + 1028683472544284396*2^64 + 15093771307722470077*2^128 + 1484243264*2^192,112205814131046576 + 955780723891363519*2^64 + 9250966285066042403*2^128 + 459782940*2^192,9294105514735327696 + 2305094820028010364*2^64 + 17934692479792485297*2^128 + 543876041*2^192,9208492567465629504 + 5503137589176587960*2^64 + 9754532448804816972*2^128 + 392620158*2^192;\
523267386153507024 + 969475772615449069*2^64 + 10645061361562617080*2^128 + 294597513*2^192,3801421987078359614 + 7682471115431471256*2^64 + 16086807974377344514*2^128 + 545971494*2^192,13175098966711140886 + 1375007505754639903*2^64 + 2544131991799760565*2^128 + 1749970477*2^192,10974680370672468712 + 397038755766353493*2^64 + 7563999900424688723*2^128 + 1906973635*2^192,13106786271941229688 + 3636250480562570291*2^64 + 9731815386172572149*2^128 + 1890761625*2^192,2126401007038171224 + 1191716197540109922*2^64 + 10651995836182505528*2^128 + 1029049789*2^192,1220196151242406832 + 8024753669985803416*2^64 + 6948141792175497754*2^128 + 1062621567*2^192,6667112593177549600 + 13267756283367214148*2^64 + 2417481801665815971*2^128 + 234478131*2^192,16013414984676959504 + 6811294439832191151*2^64 + 17224577412240384206*2^128 + 133507077*2^192,13508494633462054848 + 15717136399412325664*2^64 + 11985141513725458421*2^128 + 979343186*2^192;\
11663605631451836938 + 4352581663725446140*2^64 + 16945745864801701958*2^128 + 1145374893*2^192,461435823094210640 + 4967914356594460671*2^64 + 3285672034379340522*2^128 + 328954869*2^192,17142364367579647958 + 7284549494310527446*2^64 + 8234608315084007697*2^128 + 1444352592*2^192,15840601488001830312 + 15264590361667167390*2^64 + 3803627595278741495*2^128 + 1014675220*2^192,8479644430009166432 + 1937391286889454164*2^64 + 3282079268470676622*2^128 + 641435142*2^192,14532734458299550032 + 16746775061573198265*2^64 + 15262069279490354719*2^128 + 1312143171*2^192,10587548880765415328 + 16482971707311047794*2^64 + 12625243345531600855*2^128 + 794733075*2^192,5880885087020527024 + 17923924535652972719*2^64 + 11284551953210695894*2^128 + 1833119006*2^192,4920356280253414800 + 4843195551072483300*2^64 + 5018703811001807852*2^128 + 642671921*2^192,14993263974266195056 + 17008068357104819854*2^64 + 6523932969382582139*2^128 + 528333175*2^192;\
11707758047225213188 + 11764940361078446513*2^64 + 15898604092817480498*2^128 + 2034445362*2^192,8619933044290773236 + 1690509903764491608*2^64 + 14707002916307525562*2^128 + 723566919*2^192,1751840166128251316 + 18372045161650206242*2^64 + 11766710129424846759*2^128 + 925456824*2^192,18074308653576415376 + 13940463904908571467*2^64 + 17647975619564976462*2^128 + 1748505303*2^192,9965309811558641888 + 10152879423786388712*2^64 + 6887918072712436079*2^128 + 1853690419*2^192,12754385709902109992 + 7366460234893180017*2^64 + 16622713136492062777*2^128 + 1880499678*2^192,16388186806168245968 + 11626317257325855275*2^64 + 4491064533924774667*2^128 + 1934469840*2^192,6042275300814347288 + 13431166726350346186*2^64 + 1907225242252158869*2^128 + 1358825726*2^192,4646031067165898248 + 236293646781042006*2^64 + 6794747432176170402*2^128 + 1935562401*2^192,4968378623183988216 + 10417929190061200034*2^64 + 14303346722599644622*2^128 + 1034964954*2^192;\
8947522385846195488 + 12634181407374988978*2^64 + 11148167882224732337*2^128 + 305106140*2^192,13777304729466340380 + 9390221865182925911*2^64 + 15522181587332704934*2^128 + 592718806*2^192,1146174594162547124 + 18121252163971514760*2^64 + 8862226640012307433*2^128 + 1372476721*2^192,4175381944212925208 + 16034179197879986601*2^64 + 14128752571274556256*2^128 + 1362772952*2^192,17441315090902426672 + 6349877608524358901*2^64 + 8645914199924782316*2^128 + 328208210*2^192,16697074822767939244 + 15025245525744701637*2^64 + 4774402396283393309*2^128 + 241102910*2^192,2944151272704531568 + 11752429258162022046*2^64 + 11384486652708270334*2^128 + 1848989163*2^192,10557557189704357952 + 10011569452484421783*2^64 + 1265792271323131937*2^128 + 1710941321*2^192,15318191558770638440 + 16290964746134988419*2^64 + 3388323069489934391*2^128 + 828844829*2^192,1893987970908008640 + 1458318088960886128*2^64 + 11085935553455283038*2^128 + 1627392286*2^192;\
10171907707078868312 + 5482161990291689228*2^64 + 9886875429419354091*2^128 + 613910100*2^192,11266554307477018995 + 3200011329043780988*2^64 + 15491009859086347698*2^128 + 94459276*2^192,9972821646429636780 + 1604359706554427759*2^64 + 17285623309236178514*2^128 + 855782514*2^192,9553145495206745448 + 2269235298945577691*2^64 + 2400406810216883979*2^128 + 1446394575*2^192,7825792303119239116 + 17250989342410330011*2^64 + 6710809758057797707*2^128 + 904735793*2^192,16565357972372214344 + 8866597329214559885*2^64 + 2616100368408731116*2^128 + 26784557*2^192,16795265066089410792 + 18006410901926813886*2^64 + 4904405393027056606*2^128 + 1678946275*2^192,14316822253450273616 + 7806609702993752004*2^64 + 15496814282613286561*2^128 + 2141935086*2^192,16355945959130654352 + 14909687378310792015*2^64 + 15351607574030668037*2^128 + 607510909*2^192,3914526340820816392 + 15030689213702841486*2^64 + 7062428977308709261*2^128 + 1294797655*2^192;\
9591968581053322164 + 13402633226324685592*2^64 + 118312273877927025*2^128 + 643266888*2^192,5881521023328665146 + 10198549750981093633*2^64 + 98880788504326658*2^128 + 774198360*2^192,16487471067273960544 + 6197563196734155434*2^64 + 12392217141682682309*2^128 + 1334391342*2^192,242116259641806244 + 18139489238950827154*2^64 + 4416505361291474044*2^128 + 1316012368*2^192,7549990467116703324 + 9386703745488728860*2^64 + 3845074969247084038*2^128 + 1789076969*2^192,17151271366000819708 + 5899328761443325069*2^64 + 11000192690221222012*2^128 + 694567756*2^192,8627532668673195484 + 13750247716008410691*2^64 + 4270703883798014716*2^128 + 493877808*2^192,6899735986376032520 + 5369250017773092595*2^64 + 169642560599105938*2^128 + 959234143*2^192,17121443733794714416 + 2692988947057508347*2^64 + 8054863662516733405*2^128 + 666443305*2^192,575458073785995368 + 18240996133725831769*2^64 + 13837879445703697821*2^128 + 1078865355*2^192;\
3610115634729231696 + 3623099580395431196*2^64 + 15445399660735479304*2^128 + 1524775882*2^192,8514687774623047792 + 3748758664799575405*2^64 + 14974523834617276191*2^128 + 1915798019*2^192,14251951716851634576 + 13508453618967435507*2^64 + 13866066521834970217*2^128 + 136070448*2^192,1728080590845645016 + 13949651772580164099*2^64 + 6735371015606138432*2^128 + 2007265590*2^192,3469136865788853808 + 4358897727921863878*2^64 + 7453303252320146583*2^128 + 150523992*2^192,2738775995348266088 + 9438324369596475982*2^64 + 4227221864378565145*2^128 + 7065425*2^192,15451191730813005296 + 7894427744515389039*2^64 + 7942240895936075649*2^128 + 2073817278*2^192,2131931118881488168 + 11710552962268947364*2^64 + 15908393019706127611*2^128 + 1690274296*2^192,2248454636880905280 + 5374827671027382317*2^64 + 8727802326023523177*2^128 + 1934179254*2^192,14767851968227723760 + 8493181695553552548*2^64 + 11327713455673874614*2^128 + 168898821*2^192;\
660018287139155744 + 7019381564871814395*2^64 + 10581050017706933857*2^128 + 1999895868*2^192,16425954269944369640 + 7491490735821714275*2^64 + 2284564869535628325*2^128 + 1992354401*2^192,3997746491500507704 + 11587017774406627529*2^64 + 17564296472843291408*2^128 + 1695484244*2^192,6222383749288372080 + 13187818483722910942*2^64 + 959620229309004425*2^128 + 332079546*2^192,3117258970023012832 + 6041049669852863380*2^64 + 11302369816519863315*2^128 + 324748375*2^192,17471196474454335848 + 2627975239914118504*2^64 + 15237403788067522956*2^128 + 854497903*2^192,10862786048898455264 + 11057648682007884321*2^64 + 2179385261248892226*2^128 + 209089214*2^192,7503479847571353352 + 10154928459171258377*2^64 + 889539980244882653*2^128 + 1285475288*2^192,17175919313365352168 + 1120730776732338315*2^64 + 8216608525377680003*2^128 + 811854102*2^192,496009090603866816 + 12304292202016941154*2^64 + 16181007225765789593*2^128 + 786263593*2^192;\
6102042736942454816 + 12658171440977253655*2^64 + 8542792477885074596*2^128 + 191449027*2^192,16139825056150482466 + 14730114742307697132*2^64 + 2024703743573385673*2^128 + 1669854549*2^192,1835104581018389140 + 5929832216558235184*2^64 + 3463229623942921695*2^128 + 1058002906*2^192,11723294331617524584 + 1971072938478313660*2^64 + 14661953891467349255*2^128 + 955102700*2^192,15325430756125844444 + 1568782818450311967*2^64 + 7044913998497318085*2^128 + 563564140*2^192,12666107651724504104 + 4795506132970592904*2^64 + 16816223719420413219*2^128 + 954408301*2^192,9330938864913747500 + 13990198575478781967*2^64 + 17773620491652939432*2^128 + 1939731849*2^192,6773425140774863144 + 8880557583519176101*2^64 + 14064156066956899455*2^128 + 41878547*2^192,11920974408022663632 + 5637736120618273619*2^64 + 9603581505207627687*2^128 + 605138074*2^192,7256511877904918640 + 14814214916011859356*2^64 + 17415306953522490183*2^128 + 264574371*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3788 lists. */
The sign is: -1
The characteristic polynomial is: x^10 - x^8 + 2*x^6 - 8*x^4 + 64*x^2 - 1024
Its Newton polygon is: [2, 2, 3/2, 3/2, 1, 1, 1/2, 1/2, 0, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^4 - 3*x^2 + 16, 1; x^4 + 6*x^2 + 16, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 29
