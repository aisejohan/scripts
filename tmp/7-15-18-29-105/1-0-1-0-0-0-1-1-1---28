/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^15                     = Coefficient of   x^6 * y^3 * z^1         = Coefficient of   x^4 * y^2 * z^1 * w^1   = Coefficient of   x^3 * y^2 * z^3         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^1 * z^3 * w^1   = Coefficient of   y^7                     = Coefficient of   y^1 * z^5               = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^15 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 141
[4, 2, 1, 0, 0]  	76	2 
[4, 2, 0, 1, 0]  	87	3 
[14, 0, 0, 0, 0]  	98	2  <--- 1
[0, 7, 0, 0, 0]  	105	2  <--- 2
[0, 1, 5, 0, 0]  	105	2 
[10, 0, 1, 2, 0]  	146	2 
[0, 6, 0, 2, 0]  	148	2 
[10, 1, 4, 0, 0]  	157	3 
[10, 6, 0, 0, 0]  	160	3 
[6, 0, 5, 1, 0]  	161	4 
[10, 1, 0, 3, 0]  	172	3 
[6, 0, 1, 4, 0]  	176	2 
[10, 0, 6, 0, 0]  	178	3 
[0, 5, 1, 3, 0]  	180	2 
[3, 6, 4, 0, 0]  	183	3 
[3, 5, 0, 3, 0]  	183	3 
[6, 0, 0, 5, 0]  	187	4 
[4, 0, 9, 0, 0]  	190	3 
[3, 5, 4, 1, 0]  	197	3 
[3, 0, 5, 3, 0]  	198	2 
[3, 3, 1, 4, 0]  	200	2 
[3, 0, 10, 0, 0]  	201	2 
[0, 5, 4, 2, 0]  	205	2 
[3, 0, 1, 6, 0]  	213	2 
[2, 4, 0, 5, 0]  	219	2 
[0, 5, 0, 5, 0]  	220	2 
[3, 1, 4, 4, 0]  	224	3 
[2, 4, 2, 4, 0]  	226	2 
[2, 0, 7, 3, 0]  	227	2 
[1, 0, 9, 2, 0]  	227	2 
[2, 3, 3, 4, 0]  	229	2 
[1, 2, 1, 6, 0]  	229	2 
[2, 0, 12, 0, 0]  	230	2 
[1, 4, 1, 5, 0]  	230	2 
[0, 3, 4, 4, 0]  	233	2 
[2, 0, 11, 1, 0]  	241	1 
[1, 4, 0, 6, 0]  	241	1 
[1, 0, 13, 0, 0]  	241	1 
[0, 4, 2, 5, 0]  	241	1 
[2, 0, 3, 6, 0]  	242	2 
[1, 0, 5, 5, 0]  	242	2 
[0, 3, 3, 5, 0]  	244	1 
[4, 1, 0, 7, 0]  	246	3 
[2, 1, 4, 5, 0]  	246	3 
[2, 2, 0, 7, 0]  	247	2 
[0, 2, 4, 5, 0]  	247	2 
[0, 3, 0, 7, 0]  	248	1 
[0, 2, 1, 7, 0]  	251	1 
[0, 3, 2, 6, 0]  	255	1 
[0, 0, 11, 2, 0]  	256	1 
[1, 0, 1, 8, 0]  	257	2 
[0, 2, 3, 6, 0]  	258	1 
[0, 1, 4, 6, 0]  	261	2 
[0, 2, 0, 8, 0]  	262	1 
[0, 0, 13, 1, 0]  	263	1 
[0, 1, 1, 8, 0]  	265	1 
[0, 0, 15, 0, 0]  	270	1  <--- 3
[0, 0, 7, 5, 0]  	271	1 
[0, 1, 3, 7, 0]  	272	1 
[2, 0, 0, 9, 0]  	275	2 
[0, 1, 0, 9, 0]  	276	1 
[0, 0, 9, 4, 0]  	278	1 
[0, 0, 1, 9, 0]  	279	1 
[0, 0, 3, 8, 0]  	286	1 
[0, 0, 0, 10, 0]  	290	1  <--- 4
[0, 0, 5, 7, 0]  	293	1 
[4, 1, 1, 1, 1]  	90	3 
[0, 6, 4, 0, 1]  	162	3 
[4, 0, 5, 2, 1]  	176	3 
[10, 0, 0, 4, 1]  	186	4 
[4, 0, 0, 7, 1]  	231	3 
[0, 4, 0, 6, 1]  	234	2 
[4, 0, 2, 3, 2]  	151	2 
[4, 0, 1, 4, 2]  	162	3 
[3, 4, 4, 2, 2]  	211	3 
[3, 3, 0, 5, 2]  	211	3 
[2, 3, 4, 3, 2]  	218	3 
[1, 4, 4, 3, 2]  	226	3 
[1, 3, 0, 6, 2]  	226	2 
[3, 6, 2, 1, 4]  	176	4 
[3, 5, 2, 2, 4]  	190	3 
[1, 4, 2, 3, 4]  	190	3 
[3, 4, 3, 2, 4]  	193	2 
[1, 3, 2, 4, 4]  	204	3 
[1, 0, 11, 0, 4]  	205	2 
[3, 1, 3, 4, 4]  	206	2 
[1, 2, 3, 4, 4]  	207	2 
[3, 0, 9, 1, 4]  	212	3 
[3, 1, 2, 5, 4]  	217	3 
[1, 2, 2, 5, 4]  	218	3 
[3, 0, 0, 7, 4]  	224	3 
[1, 1, 2, 6, 4]  	232	3 
[1, 1, 0, 8, 4]  	254	2 
[3, 0, 3, 4, 5]  	191	2 
[3, 0, 7, 2, 5]  	205	4 
[1, 0, 7, 3, 5]  	220	2 
[1, 0, 3, 6, 5]  	235	2 
[1, 2, 0, 7, 5]  	240	2 
[1, 1, 1, 7, 5]  	243	2 
[1, 0, 0, 9, 5]  	268	2 
[0, 2, 2, 6, 243]  	240	1 
[0, 0, 1, 8, 243]  	250	1 
[0, 1, 3, 6, 247]  	243	1 
[1, 4, 0, 5, 248]  	212	1 
[0, 1, 4, 5, 248]  	232	2 
[0, 2, 0, 7, 248]  	233	1 
[0, 0, 0, 9, 248]  	261	1 
[2, 5, 0, 4, 249]  	205	2 
[0, 0, 13, 0, 249]  	234	1 
[2, 5, 4, 1, 250]  	190	2 
[0, 4, 0, 5, 250]  	205	1 
[2, 4, 1, 4, 250]  	208	1 
[1, 3, 4, 3, 250]  	211	2 
[0, 0, 9, 2, 250]  	220	1 
[0, 2, 1, 6, 250]  	222	1 
[2, 0, 10, 1, 250]  	223	1 
[2, 5, 0, 3, 251]  	176	2 
[2, 0, 5, 3, 251]  	191	1 
[0, 0, 5, 5, 251]  	235	1 
[2, 3, 1, 4, 252]  	193	1 
[2, 0, 10, 0, 252]  	194	1 
[0, 3, 4, 3, 252]  	204	2 
[2, 0, 1, 6, 252]  	206	1 
[0, 1, 1, 6, 252]  	207	1 
[0, 3, 1, 5, 252]  	208	1 
[2, 1, 4, 4, 252]  	217	2 
[0, 2, 4, 4, 252]  	218	2 
[1, 1, 0, 7, 252]  	225	2 
[0, 5, 0, 3, 253]  	162	2 
[0, 5, 1, 2, 254]  	151	1 
[0, 5, 4, 1, 254]  	176	2 
[0, 3, 1, 4, 254]  	179	1 
[0, 0, 10, 0, 254]  	180	1 
[0, 4, 4, 2, 254]  	190	2 
[0, 3, 0, 5, 254]  	190	1 
[0, 2, 0, 6, 254]  	204	1 
[0, 6, 0, 0, 255]  	90	2 
[4, 0, 6, 0, 255]  	136	2 
[4, 0, 5, 1, 255]  	147	3 
[0, 0, 5, 2, 255]  	148	1 
[3, 0, 7, 1, 255]  	176	3 
------
The gap is between 6 and 242.
Lengths: 3 3 4 4 3 3.
For 246 = 3*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*w^8
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^2*w^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^6

For 141 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^3*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^3

For 36 = d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[11313819217081373394 + 503553936548191600*2^64 + 9069741737310595533*2^128 + 415399594*2^192,9054133694977342340 + 1234846994879429215*2^64 + 15393465691445856121*2^128 + 1779341164*2^192,16551861367813353682 + 1195361947410509571*2^64 + 14970992424155354328*2^128 + 1732469812*2^192,15210032211581198872 + 16669638738906981032*2^64 + 11796418805389878215*2^128 + 615061277*2^192,16729910014351619080 + 3271549389992419794*2^64 + 15210800248571185208*2^128 + 810947794*2^192,9550755917454742400 + 5652607781328578384*2^64 + 6221518010706125514*2^128 + 67293743*2^192,2822878498633075424 + 12685661931035699891*2^64 + 3523443753789594527*2^128 + 2065955625*2^192,17056194353360040728 + 5162864807388026011*2^64 + 11553913508135045067*2^128 + 2760568*2^192,17758259767771107000 + 14986054948049819945*2^64 + 1875319064869678814*2^128 + 475865887*2^192,14425192579712657480 + 16043362608940754792*2^64 + 12771316025132991071*2^128 + 1071853577*2^192;\
11155640397577668036 + 6965871925195325112*2^64 + 10334107325508332658*2^128 + 2011770489*2^192,15208746956576547856 + 5435355349220631827*2^64 + 8649453755669347418*2^128 + 274475380*2^192,16365288267381495496 + 11775579327731274337*2^64 + 6399595192138215095*2^128 + 946630781*2^192,6879072960593479856 + 16766561232089030424*2^64 + 16578082433408846683*2^128 + 1515588420*2^192,14395034752197625208 + 16669861442994698854*2^64 + 18409890458633226647*2^128 + 158209224*2^192,17583403921854413552 + 15222213973270281112*2^64 + 14034780869153612881*2^128 + 1377596777*2^192,14318360065594573208 + 15084396175233296482*2^64 + 5514692544623219879*2^128 + 1305442222*2^192,8363086243662903904 + 1777671053037703670*2^64 + 15705836986027952101*2^128 + 19488143*2^192,3299308847233831264 + 1177227720929673549*2^64 + 4100729321166598033*2^128 + 1213442942*2^192,5754727235631301360 + 4766759407394839139*2^64 + 8156183181533169680*2^128 + 1818625679*2^192;\
4230139955640835008 + 13417394209229106509*2^64 + 10808332316953461566*2^128 + 1878134138*2^192,13481842578218605186 + 685247567664800955*2^64 + 15504945755231353065*2^128 + 1361582056*2^192,16325788080352026240 + 2083175424545510876*2^64 + 4501883412990934758*2^128 + 1378189708*2^192,16588004798059840792 + 9749618154657609565*2^64 + 11201662328262135666*2^128 + 1294049955*2^192,91690695355108608 + 6568024867527503545*2^64 + 3890125645916670282*2^128 + 913942800*2^192,3998929601280946304 + 8151096868974980115*2^64 + 4024221843161724469*2^128 + 866737574*2^192,17737051865047093280 + 11807923400489847176*2^64 + 5835825373115958656*2^128 + 2069415774*2^192,1657409539113352160 + 10918560469776828120*2^64 + 10262098874122207797*2^128 + 542404954*2^192,15452930028866672840 + 13326963319621892794*2^64 + 36344005584671465*2^128 + 2021308631*2^192,5851412277503055936 + 7440591830584493101*2^64 + 6074538951661409743*2^128 + 367268633*2^192;\
3309658448570085552 + 17038281205698806711*2^64 + 7123804614748231601*2^128 + 440143761*2^192,1146890327698340184 + 6941205585727983134*2^64 + 13195359954139162818*2^128 + 2029592399*2^192,10376095322286336720 + 4036267857468867250*2^64 + 2224782987375757537*2^128 + 1854869557*2^192,231919358114079640 + 12552046742735571443*2^64 + 17642078502574228836*2^128 + 384300861*2^192,17873959209552022592 + 3309656930900337287*2^64 + 5612753929070667517*2^128 + 692333535*2^192,4064806120707792016 + 15337167280241422039*2^64 + 2945307575029285909*2^128 + 826575733*2^192,9194940255446833984 + 10680464878764984551*2^64 + 10726546366025442895*2^128 + 1060153067*2^192,8697730799619423496 + 3294661047751096415*2^64 + 1056249943653257791*2^128 + 1165053396*2^192,7681684523878208408 + 4833080927113688026*2^64 + 13173288729382623509*2^128 + 1445710739*2^192,16347625785406418496 + 18394319024627717900*2^64 + 2033090174436769837*2^128 + 1393069031*2^192;\
10744234666957138234 + 2580439929253977289*2^64 + 11927443665839337762*2^128 + 806617316*2^192,17537223919400174652 + 7858212131370420683*2^64 + 11089200359573886158*2^128 + 1404557227*2^192,8375281002500627349 + 12311642841986075666*2^64 + 14628397579630148174*2^128 + 73782511*2^192,12312004591711104004 + 8804320688399193936*2^64 + 6586949382369902803*2^128 + 2051161669*2^192,11196823013824300692 + 9890483921559759602*2^64 + 16832226332493690620*2^128 + 274165594*2^192,9547960629102956728 + 6909043278729701865*2^64 + 4792594872398797790*2^128 + 1055335950*2^192,4695391743617488684 + 3429059933893048145*2^64 + 10849607279176402563*2^128 + 1823378869*2^192,10915121988071427564 + 15472299346186868846*2^64 + 12235694250316769251*2^128 + 106086113*2^192,659993937736912400 + 12212391261933073226*2^64 + 8473465722272737751*2^128 + 1695365897*2^192,940341495846202212 + 4267453444963511183*2^64 + 3155382607593886724*2^128 + 1239068126*2^192;\
11040124294438935322 + 2918545040588676101*2^64 + 3860555996716090536*2^128 + 1027953998*2^192,9168189467717377732 + 99406201928673168*2^64 + 9643278777109456940*2^128 + 2101724161*2^192,17943791848000733800 + 8063486169538263771*2^64 + 9160675750453804074*2^128 + 753784831*2^192,10814477887514864160 + 9156381303856210882*2^64 + 8633757836142031441*2^128 + 54796623*2^192,5568758476143367628 + 11038867033641783294*2^64 + 12072323367118269882*2^128 + 530667789*2^192,1192464158484103064 + 13493348718472837936*2^64 + 11718825460158883675*2^128 + 645383326*2^192,12507051023761653248 + 15110965800698991943*2^64 + 8733467191622550383*2^128 + 253111440*2^192,2645811646350317392 + 10624455718736630780*2^64 + 3378284492624007515*2^128 + 434565767*2^192,10179969238896102208 + 2232143561088925227*2^64 + 4074888533731367963*2^128 + 1487197376*2^192,8520355912883687464 + 1570565474385311469*2^64 + 1702291455275127345*2^128 + 1718985429*2^192;\
17104074548691449760 + 15054290632471345035*2^64 + 15726200936503794047*2^128 + 1482579309*2^192,13461572586673567844 + 6270563618259481248*2^64 + 4152789581069286667*2^128 + 1892665184*2^192,10278632023957233104 + 9844721388505532872*2^64 + 15345887223889100804*2^128 + 83303062*2^192,8290142346188463876 + 10431842175678654181*2^64 + 4946719241882664156*2^128 + 307628604*2^192,9228486219788396672 + 9714651114900655485*2^64 + 13482449870231305026*2^128 + 1187664314*2^192,4808170678848092548 + 16474313408018080663*2^64 + 324261555134575973*2^128 + 2063586094*2^192,4119242388079361472 + 6058254568324100293*2^64 + 11619092012582522364*2^128 + 2119969521*2^192,6293904602341859144 + 5755679275780498169*2^64 + 9420254954959033040*2^128 + 2079321855*2^192,14306570620707421248 + 15815411220241761189*2^64 + 1011363018901451889*2^128 + 429849738*2^192,1956264630073388000 + 99520359291367739*2^64 + 10396007634236742046*2^128 + 307548277*2^192;\
13862516195302146400 + 9851637595796872902*2^64 + 12597190607457114835*2^128 + 406601225*2^192,3958382017515237360 + 11069815830233456392*2^64 + 11895065800318309715*2^128 + 61105970*2^192,13349308472746903648 + 12274114108345502215*2^64 + 14698480220737267758*2^128 + 872969544*2^192,17897617925436270584 + 12687120525855022593*2^64 + 17575253612143949896*2^128 + 94872478*2^192,15052536562413367680 + 16627185323729178599*2^64 + 4756936191069368799*2^128 + 695217004*2^192,14758860415389058464 + 7210364087141227213*2^64 + 17846481559872758740*2^128 + 326639582*2^192,11278127222489829504 + 12256702084034114525*2^64 + 11770210624466645053*2^128 + 76503047*2^192,9489000234537498728 + 10301088601182475347*2^64 + 7733493176384284737*2^128 + 189557844*2^192,9028369882124963312 + 12174072444353979252*2^64 + 355489917251529964*2^128 + 1018030276*2^192,9895439520744914816 + 11201615431230802362*2^64 + 3941830265388819233*2^128 + 500023819*2^192;\
7458063389649350480 + 14118705888593835380*2^64 + 16565825846099216465*2^128 + 1161601253*2^192,5689923892500507404 + 5719463465622435708*2^64 + 14020200003050448271*2^128 + 507496108*2^192,5541348893728386744 + 12891007264917615672*2^64 + 16574787987142591998*2^128 + 2139317627*2^192,12440196158309248304 + 18118066062590448498*2^64 + 16968323504119731619*2^128 + 898555621*2^192,3717937177104457952 + 16084322028807826734*2^64 + 14423891650393143335*2^128 + 1903677291*2^192,44179400950606896 + 15091024013820264094*2^64 + 3692088775063955636*2^128 + 1865291818*2^192,7382787440945814752 + 2605208359770379168*2^64 + 15785152375315839814*2^128 + 1365929155*2^192,16306402709823633616 + 16053543078915699111*2^64 + 16975893193948691324*2^128 + 1078146952*2^192,4113262390516811920 + 5111122564175155696*2^64 + 4327649952389607124*2^128 + 604828493*2^192,9291337480229663976 + 1092829973957247385*2^64 + 9373071783990273825*2^128 + 1034014798*2^192;\
6381910906873992176 + 7031689028292617650*2^64 + 7209297367802720911*2^128 + 1351119994*2^192,16285141901742013592 + 6184375729062817824*2^64 + 9046952320852131518*2^128 + 1161867887*2^192,10202843043376733728 + 10021116187556221274*2^64 + 13137209206717020595*2^128 + 512319572*2^192,16259988617003030072 + 12568965098997911648*2^64 + 15775542781174637849*2^128 + 1447287445*2^192,1952690259674043072 + 16484095343555140058*2^64 + 15150305580043254950*2^128 + 1508403008*2^192,1416763955551440772 + 12337365132893949221*2^64 + 16306725756182447680*2^128 + 1148663746*2^192,7127181759369208896 + 17076718498052005611*2^64 + 7576652962231733090*2^128 + 1918059964*2^192,14020886710121975688 + 746108708085202936*2^64 + 4301091436664073389*2^128 + 1311738482*2^192,1531676993372211448 + 12051452659235533821*2^64 + 2748207307742904633*2^128 + 1466738408*2^192,15315824322683372064 + 18284777991112711806*2^64 + 13727977921349574238*2^128 + 865090598*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 3439 lists. */
The sign is: -1
The characteristic polynomial is: x^10 + x^9 + 2*x^8 + 4*x^7 + 2*x^6 - 8*x^4 - 64*x^3 - 128*x^2 - 256*x - 1024
Its Newton polygon is: [2, 5/3, 5/3, 5/3, 1, 1, 1/3, 1/3, 1/3, 0]
Its factorization is: [x - 2, 1; x + 2, 1; x^8 + x^7 + 6*x^6 + 8*x^5 + 26*x^4 + 32*x^3 + 96*x^2 + 64*x + 256, 1]
The valuation of f-g is: 30
The valuation of subst(g,x,A) is: 30
