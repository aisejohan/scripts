/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^14                     = Coefficient of   x^6 * y^2 * z^1         = Coefficient of   x^5 * y^2 * w^1         = Coefficient of   x^3 * y^1 * z^3         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^5               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   y^1 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^14 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 122
[2, 1, 2, 0, 0]  	51	2 
[2, 0, 2, 1, 0]  	57	3 
[14, 0, 0, 0, 0]  	70	2  <--- 1
[1, 5, 0, 0, 0]  	70	2 
[2, 0, 6, 0, 0]  	94	2 
[1, 0, 7, 0, 0]  	103	2 
[12, 1, 0, 2, 0]  	111	2 
[11, 0, 4, 0, 0]  	111	3 
[1, 4, 4, 0, 0]  	113	2 
[13, 4, 0, 0, 0]  	117	3 
[13, 0, 0, 3, 0]  	122	3 
[1, 4, 2, 2, 0]  	123	2 
[7, 1, 0, 4, 0]  	124	3 
[3, 0, 1, 5, 0]  	124	4 
[0, 10, 0, 0, 0]  	130	2  <--- 2
[5, 1, 0, 5, 0]  	133	3 
[1, 4, 0, 4, 0]  	133	2 
[1, 3, 5, 1, 0]  	133	2 
[1, 0, 1, 6, 0]  	133	4 
[1, 0, 4, 4, 0]  	137	4 
[5, 0, 0, 6, 0]  	139	4 
[0, 8, 0, 2, 0]  	142	2 
[2, 0, 0, 7, 0]  	143	2 
[1, 3, 3, 3, 0]  	143	2 
[0, 7, 1, 2, 0]  	143	2 
[10, 0, 0, 5, 0]  	145	3 
[1, 0, 6, 3, 0]  	146	4 
[0, 7, 4, 0, 0]  	147	2 
[0, 4, 0, 5, 0]  	147	2 
[0, 3, 5, 2, 0]  	147	2 
[1, 1, 0, 7, 0]  	151	4 
[1, 3, 1, 5, 0]  	153	2 
[1, 2, 6, 2, 0]  	153	2 
[0, 6, 4, 1, 0]  	153	2 
[0, 4, 2, 4, 0]  	156	1 
[0, 3, 7, 1, 0]  	156	1 
[0, 0, 3, 6, 0]  	156	1 
[1, 0, 0, 8, 0]  	157	1 
[0, 3, 3, 4, 0]  	157	1 
[0, 2, 8, 1, 0]  	157	1 
[0, 0, 2, 7, 0]  	161	1 
[0, 6, 6, 0, 0]  	162	1 
[0, 3, 2, 5, 0]  	162	1 
[0, 2, 7, 2, 0]  	162	1 
[0, 6, 2, 3, 0]  	163	2 
[0, 5, 7, 0, 0]  	163	2 
[0, 2, 10, 0, 0]  	166	1 
[0, 0, 1, 8, 0]  	166	1 
[0, 7, 0, 4, 0]  	167	1 
[0, 3, 1, 6, 0]  	167	1 
[0, 2, 6, 3, 0]  	167	1 
[0, 1, 11, 0, 0]  	167	1 
[0, 0, 8, 3, 0]  	169	1 
[0, 0, 0, 9, 0]  	171	1  <--- 4
[0, 3, 0, 7, 0]  	172	1 
[0, 2, 5, 4, 0]  	172	1 
[0, 1, 10, 1, 0]  	172	1 
[0, 0, 7, 4, 0]  	174	1 
[0, 2, 4, 5, 0]  	177	1 
[0, 1, 9, 2, 0]  	177	1 
[0, 0, 6, 5, 0]  	179	1 
[0, 0, 13, 0, 0]  	182	1  <--- 3
[0, 0, 12, 1, 0]  	187	1 
[0, 0, 11, 2, 0]  	192	1 
[2, 1, 1, 1, 1]  	56	2 
[13, 0, 0, 0, 1]  	65	3 
[0, 1, 0, 3, 1]  	70	2 
[11, 1, 0, 2, 1]  	106	3 
[1, 0, 6, 1, 1]  	108	2 
[12, 4, 0, 0, 1]  	112	4 
[12, 0, 0, 3, 1]  	117	3 
[1, 0, 4, 3, 1]  	118	2 
[1, 0, 2, 5, 1]  	128	2 
[11, 0, 1, 4, 1]  	145	3 
[6, 4, 0, 2, 2]  	120	4 
[1, 3, 4, 2, 2]  	138	4 
[1, 0, 0, 7, 2]  	138	2 
[0, 2, 9, 0, 2]  	152	2 
[0, 8, 1, 1, 3]  	137	4 
[0, 3, 6, 1, 3]  	142	2 
[0, 8, 3, 0, 3]  	146	3 
[0, 6, 5, 0, 3]  	148	2 
[0, 3, 8, 0, 3]  	151	2 
[0, 7, 3, 1, 3]  	152	3 
[0, 6, 3, 2, 4]  	158	2 
[0, 0, 9, 2, 247]  	164	1 
[0, 0, 12, 0, 247]  	168	1 
[0, 0, 4, 5, 248]  	151	1 
[0, 0, 7, 3, 248]  	155	1 
[0, 1, 9, 1, 248]  	158	1 
[0, 0, 2, 6, 249]  	142	1 
[0, 2, 6, 2, 249]  	148	1 
[0, 0, 0, 8, 249]  	152	1 
[0, 3, 7, 0, 251]  	137	1 
[0, 2, 8, 0, 251]  	138	1 
[0, 4, 4, 1, 252]  	127	1 
[0, 3, 5, 1, 252]  	128	1 
[0, 4, 6, 0, 252]  	136	1 
[0, 0, 9, 1, 252]  	145	1 
[0, 0, 11, 0, 252]  	154	1 
[0, 4, 4, 0, 253]  	108	1 
[0, 0, 8, 0, 253]  	112	1 
[0, 5, 1, 2, 253]  	117	1 
[0, 4, 2, 2, 253]  	118	1 
[0, 0, 6, 2, 253]  	122	1 
[0, 0, 4, 4, 253]  	132	1 
[0, 0, 5, 1, 254]  	89	1 
[0, 0, 7, 0, 254]  	98	1 
[1, 4, 3, 0, 254]  	99	2 
[0, 5, 0, 2, 254]  	103	1 
[1, 0, 3, 3, 254]  	104	2 
[0, 0, 1, 5, 254]  	109	1 
[0, 0, 4, 3, 254]  	113	1 
[5, 0, 0, 5, 254]  	120	2 
[0, 0, 0, 7, 254]  	133	1 
[0, 7, 2, 1, 254]  	138	2 
[0, 0, 4, 0, 255]  	56	1 
[0, 5, 0, 0, 255]  	65	1 
[0, 1, 2, 2, 255]  	79	1 
[1, 4, 2, 0, 255]  	85	2 
[1, 0, 2, 3, 255]  	90	2 
[0, 0, 0, 5, 255]  	95	1 
------
The gap is between 5 and 246.
Lengths: 2 2 4 7 2 8.
For 159 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^4*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10*w^1

For 89 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^10*y^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^6
1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1

For 19 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[4167906178112088584 + 16363254860391581907*2^64 + 3490688121119386657*2^128 + 4863804697*2^192,17886557380873358388 + 10238258244494069279*2^64 + 7175788534766116278*2^128 + 306564126*2^192,1244715576604786400 + 8167296052183222304*2^64 + 14038776556726470811*2^128 + 8257595908*2^192,18304813141276974272 + 1648719929013347341*2^64 + 4745067098341367979*2^128 + 4115059047*2^192,14966845592700357544 + 13198578713403355912*2^64 + 13459613092470869492*2^128 + 8409399401*2^192,2621743475219925112 + 13860137234340427164*2^64 + 13054760110110036585*2^128 + 6860766602*2^192,12044100984219316616 + 8439182106828480784*2^64 + 11697737050595044214*2^128 + 1446472669*2^192,16610158678166371888 + 9410990133135886694*2^64 + 14829353281517489418*2^128 + 2242476297*2^192;\
16032153775427873424 + 11753942511584206757*2^64 + 591014225255712393*2^128 + 1973774800*2^192,15974318018517555036 + 16941850618255423419*2^64 + 3400365212005423215*2^128 + 4950148883*2^192,3395658981390574150 + 16310111986192027016*2^64 + 17720229924869075074*2^128 + 8390475339*2^192,7391032633553227768 + 8405252493954440573*2^64 + 12239857937145832679*2^128 + 6363245939*2^192,9908316035426332936 + 4774682800345338023*2^64 + 212522802343224422*2^128 + 498953598*2^192,15686592022877532240 + 5756759901922222663*2^64 + 13804301693285126765*2^128 + 286436644*2^192,2697195008578924176 + 10375213607139544158*2^64 + 318556016007800030*2^128 + 4520845893*2^192,2933534696432431080 + 271064602843132379*2^64 + 9604398425319637998*2^128 + 6572938128*2^192;\
2876789539410029056 + 177441619629128484*2^64 + 4321114021595011109*2^128 + 1826978382*2^192,4061858872796169360 + 12482003195612067706*2^64 + 4432203536907998223*2^128 + 893167377*2^192,4026051800191515512 + 11551260641626824614*2^64 + 13755420010328068760*2^128 + 816214830*2^192,13261696267550389760 + 2308588010096264221*2^64 + 2861985577895497750*2^128 + 2478664961*2^192,9843392044538915488 + 4231749186189045055*2^64 + 18238747366201560464*2^128 + 1899621733*2^192,16082743575146219136 + 5004401570388953455*2^64 + 759345553132082839*2^128 + 3641376377*2^192,12651185159224242816 + 5075484316645413386*2^64 + 13776282758658608607*2^128 + 1877119619*2^192,7593821416693230112 + 2629408260746547172*2^64 + 6301352948663509443*2^128 + 4025430681*2^192;\
15588225967550990736 + 6802664071736480429*2^64 + 11670203973568458403*2^128 + 829336770*2^192,8489197752094352312 + 14888219625250861909*2^64 + 3464688113292003874*2^128 + 6816147703*2^192,15917855280782870592 + 17847428542797413487*2^64 + 4900066223241100983*2^128 + 927008668*2^192,2873945730262383104 + 9583941336036733632*2^64 + 8498541233502547605*2^128 + 6260036145*2^192,8751281781745952592 + 12552812575634911475*2^64 + 11580273869270414441*2^128 + 7169500163*2^192,5576769518935660464 + 10622885404137848496*2^64 + 6086804425262323600*2^128 + 7951613252*2^192,11698889819556271728 + 16448725514257185108*2^64 + 6984656236450043148*2^128 + 7977731521*2^192,11398945225113862720 + 3176272002727504330*2^64 + 18006270940132068845*2^128 + 1688922021*2^192;\
11762715675042264344 + 3050814040853148808*2^64 + 6501242595132503063*2^128 + 2177109024*2^192,13913620470655615900 + 9380395986280085142*2^64 + 1018472123901946592*2^128 + 726569809*2^192,16984891702603700128 + 13558932423965861487*2^64 + 17588006954187233099*2^128 + 7527299805*2^192,6161638957339654016 + 12403302358296075528*2^64 + 10689189103555952509*2^128 + 2295130005*2^192,14407084263684954168 + 14939347981735243241*2^64 + 10075265896270204227*2^128 + 6809140193*2^192,12966879568307194616 + 10636743283430091509*2^64 + 9839729270757483671*2^128 + 7768366407*2^192,1523278479846229032 + 2187715932171016842*2^64 + 7028741388268713731*2^128 + 6151354736*2^192,8878894836837469312 + 12559295038122033647*2^64 + 16673024306306825314*2^128 + 4796509515*2^192;\
12920941235521860872 + 13022593275203802739*2^64 + 4999566214867990657*2^128 + 1142087757*2^192,9013767656984499298 + 6346857337762042414*2^64 + 14932320060845720712*2^128 + 3495169346*2^192,17429357549794640913 + 1324137554975665300*2^64 + 12468332356371688586*2^128 + 6274789155*2^192,14851018964192541772 + 18173013716957082166*2^64 + 8934960260598664040*2^128 + 4622306878*2^192,18278974758737912924 + 5782340174277103862*2^64 + 2647598271506308147*2^128 + 1874562185*2^192,8269620951901629928 + 12191166182792412770*2^64 + 8989929741079289487*2^128 + 2757568413*2^192,8793295284987413800 + 15221450197173541995*2^64 + 17851779023764471737*2^128 + 3672963171*2^192,7457977905042409468 + 4790711299530059730*2^64 + 9138078383845473596*2^128 + 2103825448*2^192;\
14624218204181585568 + 7088221173651429431*2^64 + 8591112538291997920*2^128 + 2645706286*2^192,17712242778934825456 + 12770666593906104332*2^64 + 16143643087409265328*2^128 + 498224485*2^192,659294675429277824 + 7593172731945792705*2^64 + 1950445612032967406*2^128 + 4249445107*2^192,14032997966778238976 + 2564901145367037380*2^64 + 7855149318926102355*2^128 + 3752958925*2^192,7888582202572880800 + 16194005299575799597*2^64 + 33218490660985745*2^128 + 1194877614*2^192,10082234850549538144 + 14265762012414021337*2^64 + 2456897422324550427*2^128 + 767318389*2^192,17175155929725328512 + 6463892729162216111*2^64 + 14402462711737821163*2^128 + 2272613922*2^192,7587152003770710912 + 4594990710634328264*2^64 + 17778909881310908658*2^128 + 1790198612*2^192;\
780419020387485256 + 14539920294507640203*2^64 + 17899565973369978154*2^128 + 7247212554*2^192,1789340847319620850 + 12025214486494004315*2^64 + 12648866606952124887*2^128 + 1722124905*2^192,3160990373823699649 + 18003356208019671382*2^64 + 8743902381580813440*2^128 + 281221929*2^192,11003191752771420684 + 1415796509112996911*2^64 + 2793091937463820310*2^128 + 6241247383*2^192,15378514392722794428 + 11398089577165793651*2^64 + 6001411978448617145*2^128 + 6916071100*2^192,15180667765297523784 + 1058763816116432796*2^64 + 13986906183309703937*2^128 + 2907400528*2^192,9850485582459715368 + 17350193251437978391*2^64 + 2385833402878359962*2^128 + 1986955809*2^192,12963359214420600444 + 3545870894252323322*2^64 + 6918822187326530184*2^128 + 2890181156*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 3558 lists. */
