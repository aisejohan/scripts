/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^14                     = Coefficient of   x^6 * y^2 * z^1         = Coefficient of   x^5 * y^2 * w^1         = Coefficient of   x^3 * y^1 * z^3         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^5               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   y^1 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^14 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^2*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 205
[5, 2, 0, 0, 0]  	51	3 
[3, 1, 2, 0, 0]  	56	4 
[14, 0, 0, 0, 0]  	70	2  <--- 1
[2, 1, 2, 1, 0]  	70	4 
[2, 5, 0, 0, 0]  	75	5 
[4, 2, 0, 2, 0]  	84	5 
[3, 2, 1, 2, 0]  	93	5 
[10, 0, 2, 1, 0]  	97	7 
[3, 2, 0, 3, 0]  	98	5 
[1, 1, 2, 3, 0]  	103	5 
[3, 1, 0, 4, 0]  	104	7 
[3, 0, 5, 1, 0]  	104	8 
[6, 0, 4, 1, 0]  	105	9 
[5, 0, 3, 2, 0]  	105	10 
[10, 0, 4, 0, 0]  	106	8 
[9, 0, 3, 1, 0]  	106	9 
[1, 5, 0, 2, 0]  	108	6 
[5, 0, 6, 0, 0]  	109	6 
[3, 0, 4, 2, 0]  	109	7 
[2, 0, 3, 3, 0]  	109	6 
[5, 0, 2, 3, 0]  	110	7 
[12, 1, 0, 2, 0]  	111	6 
[9, 0, 2, 2, 0]  	111	7 
[2, 2, 0, 4, 0]  	112	5 
[2, 1, 1, 4, 0]  	113	6 
[2, 0, 2, 4, 0]  	114	6 
[9, 0, 5, 0, 0]  	115	5 
[12, 0, 0, 3, 0]  	117	6 
[1, 5, 2, 1, 0]  	117	5 
[2, 1, 0, 5, 0]  	118	6 
[2, 0, 5, 2, 0]  	118	6 
[2, 4, 0, 3, 0]  	119	6 
[5, 0, 0, 5, 0]  	120	7 
[2, 0, 8, 0, 0]  	122	4 
[1, 9, 0, 0, 0]  	122	4 
[0, 5, 0, 3, 0]  	122	4 
[1, 4, 2, 2, 0]  	123	5 
[1, 0, 3, 4, 0]  	123	5 
[3, 0, 1, 5, 0]  	124	6 
[1, 7, 2, 0, 0]  	124	5 
[2, 0, 7, 1, 0]  	127	6 
[1, 0, 6, 2, 0]  	127	4 
[3, 0, 0, 6, 0]  	129	5 
[1, 1, 8, 0, 0]  	130	5 
[1, 4, 4, 1, 0]  	132	4 
[1, 1, 0, 6, 0]  	132	4 
[1, 0, 5, 3, 0]  	132	4 
[2, 3, 6, 0, 0]  	133	4 
[1, 4, 0, 4, 0]  	133	5 
[1, 0, 8, 1, 0]  	136	5 
[0, 4, 2, 3, 0]  	137	3 
[2, 0, 1, 6, 0]  	138	3 
[1, 3, 4, 2, 0]  	138	3 
[1, 0, 0, 7, 0]  	138	3 
[0, 7, 2, 1, 0]  	138	3 
[1, 6, 4, 0, 0]  	139	4 
[1, 3, 0, 5, 0]  	139	4 
[1, 4, 6, 0, 0]  	141	3 
[1, 3, 7, 0, 0]  	142	2 
[0, 8, 0, 2, 0]  	142	2 
[0, 4, 1, 4, 0]  	142	2 
[0, 3, 6, 1, 0]  	142	2 
[0, 11, 0, 0, 0]  	143	3  <--- 2
[0, 3, 2, 4, 0]  	143	2 
[0, 6, 2, 2, 0]  	144	3 
[1, 0, 10, 0, 0]  	145	4 
[1, 0, 2, 6, 0]  	147	2 
[0, 7, 4, 0, 0]  	147	2 
[0, 4, 0, 5, 0]  	147	2 
[1, 2, 7, 1, 0]  	148	2 
[0, 3, 1, 5, 0]  	148	2 
[0, 5, 6, 0, 0]  	149	3 
[0, 3, 4, 3, 0]  	152	2 
[0, 6, 4, 1, 0]  	153	3 
[0, 3, 0, 6, 0]  	153	3 
[0, 1, 2, 6, 0]  	155	2 
[0, 0, 3, 6, 0]  	156	1 
[0, 2, 8, 1, 0]  	157	1 
[0, 10, 2, 0, 0]  	158	2 
[0, 2, 4, 4, 0]  	158	2 
[0, 0, 2, 7, 0]  	161	1 
[0, 2, 7, 2, 0]  	162	1 
[0, 2, 3, 5, 0]  	163	2 
[0, 1, 0, 8, 0]  	165	2 
[0, 2, 10, 0, 0]  	166	1 
[0, 0, 1, 8, 0]  	166	1 
[0, 2, 6, 3, 0]  	167	1 
[0, 1, 11, 0, 0]  	167	1 
[0, 0, 8, 3, 0]  	169	1 
[0, 0, 0, 9, 0]  	171	1  <--- 4
[0, 1, 10, 1, 0]  	172	1 
[0, 0, 7, 4, 0]  	174	1 
[0, 1, 9, 2, 0]  	177	1 
[0, 0, 6, 5, 0]  	179	1 
[0, 0, 13, 0, 0]  	182	1  <--- 3
[0, 0, 12, 1, 0]  	187	1 
[0, 0, 11, 2, 0]  	192	1 
[6, 1, 1, 0, 1]  	57	5 
[13, 0, 0, 0, 1]  	65	6 
[5, 1, 1, 1, 1]  	71	6 
[4, 2, 1, 1, 1]  	79	4 
[4, 1, 1, 2, 1]  	85	6 
[4, 0, 5, 0, 1]  	90	7 
[12, 1, 0, 1, 1]  	92	9 
[9, 1, 0, 2, 1]  	96	7 
[3, 1, 1, 3, 1]  	99	6 
[3, 0, 6, 0, 1]  	99	6 
[2, 4, 3, 0, 1]  	104	7 
[2, 0, 7, 0, 1]  	108	6 
[1, 8, 0, 0, 1]  	109	6 
[8, 1, 0, 3, 1]  	110	7 
[11, 0, 0, 3, 1]  	112	6 
[2, 0, 6, 1, 1]  	113	5 
[1, 0, 8, 0, 1]  	117	5 
[2, 3, 5, 0, 1]  	119	6 
[1, 0, 7, 1, 1]  	122	4 
[2, 0, 0, 6, 1]  	124	5 
[1, 5, 4, 0, 1]  	126	5 
[1, 4, 5, 0, 1]  	127	5 
[1, 4, 1, 3, 1]  	128	6 
[1, 3, 6, 0, 1]  	128	5 
[1, 7, 1, 1, 1]  	129	4 
[1, 2, 7, 0, 1]  	129	4 
[0, 10, 0, 0, 1]  	130	4 
[1, 3, 5, 1, 1]  	133	5 
[1, 0, 1, 6, 1]  	133	4 
[1, 3, 1, 4, 1]  	134	4 
[0, 9, 0, 1, 1]  	136	4 
[0, 8, 1, 1, 1]  	137	3 
[1, 2, 5, 2, 1]  	139	4 
[0, 4, 5, 1, 1]  	141	3 
[0, 4, 4, 2, 1]  	146	3 
[0, 3, 5, 2, 1]  	147	2 
[0, 6, 5, 0, 1]  	148	2 
[0, 1, 1, 7, 1]  	160	2 
[0, 1, 4, 5, 1]  	164	2 
[0, 1, 6, 4, 1]  	173	2 
[5, 1, 0, 2, 2]  	76	8 
[4, 1, 0, 3, 2]  	90	7 
[7, 0, 4, 0, 2]  	91	10 
[2, 1, 1, 3, 2]  	94	5 
[1, 1, 1, 4, 2]  	108	5 
[2, 4, 1, 2, 2]  	114	6 
[1, 6, 3, 0, 2]  	125	5 
[1, 0, 2, 5, 2]  	128	4 
[1, 2, 6, 1, 2]  	134	4 
[0, 5, 4, 1, 2]  	140	4 
[0, 7, 1, 2, 2]  	143	2 
[0, 2, 5, 3, 2]  	153	2 
[0, 2, 1, 6, 2]  	154	3 
[0, 1, 7, 3, 2]  	168	2 
[1, 5, 0, 1, 3]  	89	5 
[4, 0, 4, 1, 3]  	95	6 
[0, 9, 2, 0, 3]  	145	4 
[0, 8, 3, 0, 3]  	146	3 
[0, 4, 7, 0, 3]  	150	3 
[0, 3, 8, 0, 3]  	151	2 
[0, 2, 0, 7, 3]  	159	3 
[0, 2, 9, 0, 5]  	152	2 
[0, 0, 0, 8, 251]  	152	1 
[3, 0, 3, 2, 252]  	95	5 
[0, 4, 0, 4, 252]  	128	3 
[0, 1, 5, 4, 252]  	159	2 
[0, 0, 9, 2, 252]  	164	1 
[6, 0, 3, 1, 253]  	91	9 
[0, 3, 0, 5, 253]  	134	2 
[0, 1, 3, 5, 253]  	150	2 
[0, 0, 4, 5, 253]  	151	1 
[0, 0, 10, 1, 253]  	159	1 
[3, 2, 0, 2, 254]  	79	4 
[2, 0, 2, 3, 254]  	95	3 
[1, 0, 7, 0, 254]  	103	4 
[2, 1, 6, 0, 254]  	107	4 
[1, 0, 6, 1, 254]  	108	3 
[1, 3, 2, 2, 254]  	110	2 
[0, 3, 0, 4, 254]  	115	2 
[0, 6, 2, 1, 254]  	125	3 
[0, 4, 4, 1, 254]  	127	3 
[0, 6, 4, 0, 254]  	134	3 
[0, 2, 0, 6, 254]  	140	3 
[0, 0, 10, 0, 254]  	140	1 
[0, 2, 7, 1, 254]  	143	1 
[0, 1, 4, 4, 254]  	145	2 
[0, 1, 0, 7, 254]  	146	2 
[0, 0, 5, 4, 254]  	146	1 
[2, 0, 2, 1, 255]  	57	3 
[4, 2, 0, 1, 255]  	65	2 
[4, 0, 4, 0, 255]  	76	7 
[1, 1, 2, 2, 255]  	84	2 
[1, 1, 1, 3, 255]  	89	4 
[1, 0, 6, 0, 255]  	89	3 
[0, 1, 0, 4, 255]  	89	1 
[2, 4, 2, 0, 255]  	90	3 
[1, 0, 2, 3, 255]  	90	2 
[2, 2, 0, 3, 255]  	93	3 
[0, 0, 0, 5, 255]  	95	1 
[1, 4, 2, 1, 255]  	104	3 
[1, 4, 4, 0, 255]  	113	4 
[1, 3, 5, 0, 255]  	114	3 
[0, 2, 6, 1, 255]  	129	1 
[0, 0, 4, 4, 255]  	132	1 
[0, 3, 4, 2, 255]  	133	2 
[0, 1, 5, 3, 255]  	140	2 
[0, 5, 3, 2, 255]  	145	3 
[0, 0, 8, 2, 255]  	150	1 
------
The gap is between 6 and 250.
Lengths: 2 2 4 5 2 5.
For 159 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10*w^1

For 89 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1

For 19 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[6915736066331434844 + 632063214275969463*2^64 + 11516052517438640552*2^128 + 23709359315*2^192,2969698537735476364 + 5337044938229083209*2^64 + 12544633051172995865*2^128 + 1823866393*2^192,10687814038847975584 + 14823744124715424739*2^64 + 8886232469421969511*2^128 + 7888971856*2^192,17464817046852432712 + 17702360302773566656*2^64 + 8586139481758619814*2^128 + 23909578074*2^192,7637437014815903168 + 7912686147745478071*2^64 + 2638414049343322380*2^128 + 29436906360*2^192,416316023897476072 + 9056502404409133730*2^64 + 6173747401308877548*2^128 + 22867568209*2^192,13405940095645681840 + 1905814475039640580*2^64 + 11954191226461974694*2^128 + 23195295672*2^192,6638518191683706720 + 10847805333289645482*2^64 + 5138257726736687304*2^128 + 11682820874*2^192;\
11948523038856004778 + 17014941763239320235*2^64 + 16990914893467672094*2^128 + 27110527258*2^192,17103285557647725954 + 7444407718459428780*2^64 + 17197138683065811807*2^128 + 2917912653*2^192,8534724147423678112 + 81426036577767775*2^64 + 14897910869197318023*2^128 + 32066357493*2^192,8141089187026318348 + 9028648316800191416*2^64 + 18240586759495294298*2^128 + 6841836546*2^192,10486799985544800864 + 2814786895531674410*2^64 + 12895579792855600954*2^128 + 10453514555*2^192,12680492409432776444 + 9515008821484882146*2^64 + 3487555887053262002*2^128 + 31322127067*2^192,9060678153089247272 + 7212704370722596254*2^64 + 4866448449410386566*2^128 + 8703176166*2^192,17528217909120741616 + 3885440462650513591*2^64 + 1115632014575667423*2^128 + 10685600660*2^192;\
14434546626240763138 + 5381374148428922580*2^64 + 12465446153456652848*2^128 + 24168319243*2^192,3631536762095340514 + 13654992383033490058*2^64 + 8128177065400260522*2^128 + 14015355028*2^192,2831516090951468840 + 16060045672960182202*2^64 + 11452853282254187742*2^128 + 32661520595*2^192,8864850439653786572 + 15234434621353015319*2^64 + 15966690971506952985*2^128 + 13113535898*2^192,4743463097784341248 + 16154229722644125358*2^64 + 16519560342281648284*2^128 + 19935928958*2^192,15029085799935625660 + 8020305725843364707*2^64 + 5139197770933675593*2^128 + 27344756462*2^192,9724778169110226808 + 1844637831205807815*2^64 + 6136752562351527943*2^128 + 23894410173*2^192,3928100822654498880 + 2566405657387009669*2^64 + 11309785245065237236*2^128 + 23013022107*2^192;\
8443298932627186689 + 12703791885195340105*2^64 + 6817276020916806003*2^128 + 14759787787*2^192,1009230285159544305 + 1474885254631999219*2^64 + 8643840332149882890*2^128 + 8333906951*2^192,16654156414868877492 + 6560766995869548716*2^64 + 4964870048304843429*2^128 + 33574755496*2^192,5916646079977983142 + 5064102922162722597*2^64 + 16004963890101037991*2^128 + 27169006185*2^192,2215210208720456576 + 16691599671252290634*2^64 + 4383788178885177838*2^128 + 33646098089*2^192,14547451135944366046 + 15596355340936597415*2^64 + 6416127230054791516*2^128 + 6006607378*2^192,15251042666350008508 + 4495037523526477857*2^64 + 13333704567467052356*2^128 + 22128215450*2^192,5923822369974561056 + 11691098818368215642*2^64 + 2884050183278481645*2^128 + 12981726008*2^192;\
12693205635098646356 + 115660198089910501*2^64 + 4100712318985804015*2^128 + 11306098481*2^192,9503992003901864674 + 14887352436601199605*2^64 + 837057155870181897*2^128 + 30587121843*2^192,470452653663531558 + 13068245402890125507*2^64 + 9788209082362327102*2^128 + 1605054836*2^192,17758559540569516620 + 16442129119147359879*2^64 + 231917002852179573*2^128 + 18649169396*2^192,17832706438161968152 + 18125796246288867138*2^64 + 6837180171998623558*2^128 + 31081529244*2^192,10602045247755354780 + 782794641777021810*2^64 + 16796518825807895441*2^128 + 10145728999*2^192,11895758859624437732 + 5154468322267411218*2^64 + 4367317098197332649*2^128 + 4018004104*2^192,1694220415618308300 + 3051685096440608791*2^64 + 14241104199961983334*2^128 + 21416972783*2^192;\
2266527817055702442 + 8561287642023058263*2^64 + 10946132427894920964*2^128 + 31899303119*2^192,14923081256729855198 + 861533027029886054*2^64 + 1105850400398614443*2^128 + 2181578364*2^192,13221845302538188364 + 777232822941612081*2^64 + 4806386553803643266*2^128 + 10178028588*2^192,16319129370819842612 + 4699363419794741519*2^64 + 17774558225668732750*2^128 + 18675673670*2^192,17303839976684954384 + 12366209564875602610*2^64 + 15640368371984063357*2^128 + 21114451936*2^192,7417230830280961476 + 2389494299202712701*2^64 + 18445047712172670825*2^128 + 505780529*2^192,10542307444392136720 + 10412613422310736828*2^64 + 4605658368644961973*2^128 + 28949382900*2^192,12180132610948268040 + 12092064122136396113*2^64 + 11170583010615505295*2^128 + 27535741701*2^192;\
9371677476049289056 + 7044178455641097770*2^64 + 12825972019171944975*2^128 + 7512768753*2^192,9404185796824488544 + 10595182308808571554*2^64 + 17798294501699611141*2^128 + 4877852085*2^192,4009541774798064256 + 8531451004097406680*2^64 + 18316017750907532352*2^128 + 10661563272*2^192,16646241277742863936 + 15968718872475472149*2^64 + 5624095984074403939*2^128 + 10134162422*2^192,9662392301393116160 + 4517863716304148628*2^64 + 5772563724821820517*2^128 + 2746960901*2^192,17827689069334116160 + 7565604279151576117*2^64 + 11758291194086878488*2^128 + 11168366586*2^192,5283606037277949440 + 12120752671307114192*2^64 + 17348459726769311318*2^128 + 4837590630*2^192,882996180284604928 + 2163542433031956511*2^64 + 16849369899214033536*2^128 + 13695804311*2^192;\
10438416320206351489 + 12735197401705056868*2^64 + 5333465559918794794*2^128 + 31537905527*2^192,10085708693882547261 + 6886760626583025749*2^64 + 5364593406367873337*2^128 + 21297458842*2^192,1029605662117141200 + 13756322499475194541*2^64 + 10077251332964281358*2^128 + 1597798028*2^192,567582120827405806 + 13970097987854585867*2^64 + 9572585922153308330*2^128 + 14091825192*2^192,17444465038072469744 + 5824440080878935170*2^64 + 5335138224098687716*2^128 + 23486226515*2^192,6349220585924200134 + 11536997623038612988*2^64 + 1853109303352950361*2^128 + 33189151753*2^192,7838040086228622148 + 1221541181786790325*2^64 + 9207884034621306599*2^128 + 31304148865*2^192,10036926372658110360 + 8758598854162534447*2^64 + 9929773870386624990*2^128 + 21486235810*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 4386 lists. */
