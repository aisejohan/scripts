/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^14                     = Coefficient of   x^6 * y^2 * z^1         = Coefficient of   x^5 * y^2 * w^1         = Coefficient of   x^3 * y^1 * z^3         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^5               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   y^1 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^14 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*y^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 140
[5, 2, 0, 0, 0]  	51	3 
[1, 1, 0, 2, 0]  	56	2 
[14, 0, 0, 0, 0]  	70	3  <--- 1
[1, 5, 0, 0, 0]  	70	3 
[4, 1, 4, 0, 0]  	89	3 
[4, 0, 5, 0, 0]  	90	4 
[2, 4, 1, 1, 0]  	95	5 
[8, 0, 4, 0, 0]  	96	6 
[9, 0, 1, 2, 0]  	97	6 
[3, 1, 4, 1, 0]  	103	3 
[3, 0, 5, 1, 0]  	104	7 
[0, 4, 4, 0, 0]  	108	3 
[3, 0, 4, 2, 0]  	109	6 
[7, 0, 4, 1, 0]  	110	8 
[5, 0, 2, 3, 0]  	110	6 
[4, 0, 1, 4, 0]  	110	6 
[8, 0, 1, 3, 0]  	111	6 
[2, 0, 2, 4, 0]  	114	5 
[7, 0, 3, 2, 0]  	115	6 
[1, 0, 8, 0, 0]  	117	5 
[4, 0, 3, 3, 0]  	119	7 
[13, 0, 0, 3, 0]  	122	2 
[2, 0, 4, 3, 0]  	123	5 
[1, 0, 3, 4, 0]  	123	5 
[3, 3, 5, 0, 0]  	124	5 
[3, 0, 1, 5, 0]  	124	6 
[1, 3, 6, 0, 0]  	128	4 
[1, 0, 2, 5, 0]  	128	4 
[3, 0, 0, 6, 0]  	129	4 
[2, 0, 6, 2, 0]  	132	4 
[1, 0, 1, 6, 0]  	133	4 
[12, 0, 0, 4, 0]  	136	5 
[1, 0, 0, 7, 0]  	138	3 
[0, 7, 2, 1, 0]  	138	3 
[1, 0, 7, 2, 0]  	141	3 
[0, 8, 0, 2, 0]  	142	2 
[0, 3, 6, 1, 0]  	142	2 
[0, 11, 0, 0, 0]  	143	3  <--- 2
[0, 3, 2, 4, 0]  	143	2 
[0, 6, 2, 2, 0]  	144	3 
[0, 9, 2, 0, 0]  	145	4 
[1, 0, 6, 3, 0]  	146	3 
[0, 8, 3, 0, 0]  	146	3 
[0, 4, 0, 5, 0]  	147	2 
[0, 3, 5, 2, 0]  	147	2 
[1, 2, 7, 1, 0]  	148	2 
[0, 7, 0, 3, 0]  	148	3 
[11, 0, 0, 5, 0]  	150	5 
[0, 4, 3, 3, 0]  	151	2 
[0, 3, 8, 0, 0]  	151	2 
[0, 3, 4, 3, 0]  	152	3 
[0, 3, 0, 6, 0]  	153	2 
[0, 1, 2, 6, 0]  	155	2 
[0, 0, 3, 6, 0]  	156	1 
[0, 2, 8, 1, 0]  	157	1 
[0, 2, 4, 4, 0]  	158	2 
[0, 0, 2, 7, 0]  	161	1 
[0, 2, 7, 2, 0]  	162	1 
[0, 1, 0, 8, 0]  	165	2 
[0, 2, 10, 0, 0]  	166	1 
[0, 0, 1, 8, 0]  	166	1 
[0, 2, 6, 3, 0]  	167	1 
[0, 1, 11, 0, 0]  	167	1 
[0, 0, 8, 3, 0]  	169	1 
[0, 0, 0, 9, 0]  	171	1  <--- 4
[0, 1, 10, 1, 0]  	172	1 
[0, 1, 6, 4, 0]  	173	2 
[0, 0, 7, 4, 0]  	174	1 
[0, 1, 9, 2, 0]  	177	1 
[0, 0, 6, 5, 0]  	179	1 
[0, 0, 13, 0, 0]  	182	1  <--- 3
[0, 0, 12, 1, 0]  	187	1 
[0, 0, 11, 2, 0]  	192	1 
[5, 1, 0, 1, 1]  	57	4 
[13, 0, 0, 0, 1]  	65	4 
[4, 0, 4, 0, 1]  	76	4 
[3, 0, 4, 1, 1]  	90	5 
[5, 0, 2, 2, 1]  	91	7 
[2, 0, 4, 2, 1]  	104	6 
[12, 0, 0, 3, 1]  	117	5 
[2, 3, 5, 0, 1]  	119	6 
[2, 3, 4, 1, 1]  	124	5 
[11, 0, 0, 4, 1]  	131	5 
[1, 3, 5, 1, 1]  	133	4 
[0, 4, 2, 3, 1]  	137	3 
[10, 0, 0, 5, 1]  	145	4 
[0, 2, 9, 0, 1]  	152	2 
[0, 2, 3, 5, 1]  	163	2 
[0, 1, 7, 3, 1]  	168	2 
[0, 10, 0, 0, 2]  	130	4 
[1, 0, 5, 3, 2]  	132	4 
[0, 8, 1, 1, 2]  	137	4 
[0, 5, 0, 4, 2]  	141	3 
[0, 4, 1, 4, 2]  	142	2 
[0, 7, 1, 2, 2]  	143	2 
[0, 3, 1, 5, 2]  	148	2 
[0, 6, 1, 3, 2]  	149	3 
[0, 2, 5, 3, 2]  	153	2 
[0, 2, 1, 6, 2]  	154	3 
[0, 2, 0, 7, 2]  	159	3 
[0, 1, 1, 7, 2]  	160	2 
[0, 1, 4, 5, 2]  	164	2 
[1, 0, 7, 1, 3]  	122	4 
[1, 2, 7, 0, 3]  	129	4 
[0, 9, 0, 1, 3]  	136	4 
[2, 2, 6, 1, 3]  	139	4 
[2, 0, 3, 3, 4]  	109	5 
[3, 2, 6, 0, 5]  	125	5 
[0, 6, 3, 1, 249]  	139	3 
[1, 0, 2, 4, 252]  	109	4 
[2, 2, 5, 1, 252]  	125	4 
[1, 2, 6, 1, 252]  	134	3 
[1, 3, 5, 0, 253]  	114	4 
[1, 0, 6, 2, 253]  	127	3 
[0, 3, 7, 0, 253]  	137	2 
[0, 1, 8, 2, 253]  	163	1 
[0, 0, 12, 0, 253]  	168	1 
[4, 0, 1, 3, 254]  	91	4 
[3, 3, 4, 0, 254]  	110	4 
[0, 0, 6, 2, 254]  	122	1 
[0, 6, 2, 1, 254]  	125	2 
[0, 7, 0, 2, 254]  	129	2 
[0, 2, 6, 1, 254]  	129	1 
[0, 2, 2, 4, 254]  	130	1 
[0, 8, 2, 0, 254]  	132	2 
[0, 0, 10, 0, 254]  	140	1 
[0, 0, 2, 6, 254]  	142	1 
[1, 4, 0, 0, 255]  	57	3 
[4, 2, 0, 1, 255]  	65	3 
[5, 0, 1, 2, 255]  	77	3 
[3, 1, 4, 0, 255]  	84	3 
[1, 0, 1, 4, 255]  	95	3 
[1, 2, 6, 0, 255]  	115	1 
[1, 0, 0, 6, 255]  	119	2 
[0, 5, 0, 3, 255]  	122	2 
[0, 3, 2, 3, 255]  	124	2 
[0, 7, 3, 0, 255]  	133	3 
[0, 2, 0, 6, 255]  	140	3 
[0, 1, 3, 5, 255]  	150	2 
[0, 0, 0, 8, 255]  	152	1 
------
The gap is between 6 and 248.
Lengths: 2 2 4 4 2 3.
For 159 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10*w^1

For 89 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1

For 19 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8053797640040637808 + 5594235371037066036*2^64 + 17988475789795423001*2^128 + 6830503191*2^192,11151060069388467968 + 12016352455881468303*2^64 + 14811362613735580832*2^128 + 6706300420*2^192,17702551647975982208 + 5210218698886165355*2^64 + 11898728956461929635*2^128 + 5645078185*2^192,17822821444412003232 + 2422067761903425249*2^64 + 3707112029865309902*2^128 + 4674137210*2^192,11722324035673144352 + 4485992078394873098*2^64 + 10480466980560165632*2^128 + 5498537833*2^192,16424925595768898944 + 8274019063113261524*2^64 + 6754343655960928677*2^128 + 7536277219*2^192,7659680185529068032 + 18237679273657183451*2^64 + 12777952156926637873*2^128 + 6549373642*2^192,16621023938695676032 + 866309245901437465*2^64 + 326606696147756489*2^128 + 4135675680*2^192;\
4643248316070191274 + 9472550723703565168*2^64 + 6258363715244146213*2^128 + 3267115145*2^192,12231949365464267424 + 17834245574397407006*2^64 + 18114563863024199090*2^128 + 5556419276*2^192,13905189182037907008 + 3466551688412563402*2^64 + 6246935098142619748*2^128 + 967916509*2^192,357401627527549592 + 1030302751693549282*2^64 + 7818751803657561762*2^128 + 323506176*2^192,16528727174549424936 + 9050765007971560658*2^64 + 10822511791628693318*2^128 + 723208429*2^192,15292897448078234608 + 15358385147176172051*2^64 + 11093549629992762047*2^128 + 7407976408*2^192,13430913070350780992 + 17344817891306645054*2^64 + 16383901031972287933*2^128 + 3113973271*2^192,15458643744358427744 + 16517446800510637198*2^64 + 9518988888115396190*2^128 + 6182368852*2^192;\
7532516386729713264 + 14852207310496415834*2^64 + 15957985406679229144*2^128 + 738296233*2^192,8788562793455755680 + 6058070226701316014*2^64 + 2887167648072807038*2^128 + 7546230100*2^192,495936572438251200 + 2564418641680211671*2^64 + 15558524534583394707*2^128 + 7379883803*2^192,5494649163339557440 + 3240538261780551657*2^64 + 1838536773653494895*2^128 + 2736261627*2^192,15210431754789994688 + 12275448561999033755*2^64 + 10234670616239982124*2^128 + 4582393092*2^192,9464392296997438848 + 9358876853692725446*2^64 + 11670785038923639807*2^128 + 5186292934*2^192,4186324403138079840 + 4244483278999444948*2^64 + 3233743610211438215*2^128 + 7278018479*2^192,4654362868459151360 + 1357181979915251851*2^64 + 11969975830316970085*2^128 + 8561070995*2^192;\
2432075323698145184 + 3549864122524521932*2^64 + 11440653916109048110*2^128 + 6309033138*2^192,8674884242744875968 + 10503829667720484672*2^64 + 2787362277179284096*2^128 + 7269587684*2^192,5591759292768189280 + 5791970733887153827*2^64 + 17604733279648410485*2^128 + 893902192*2^192,15937514626474563616 + 17126946763269169072*2^64 + 16148163350199202565*2^128 + 7668893917*2^192,9891198350276445040 + 12251014663548537691*2^64 + 18133864670547868706*2^128 + 8042044868*2^192,13815044225609863712 + 7358086604079832928*2^64 + 15354209396475105493*2^128 + 5341638636*2^192,11512261634780935488 + 8160622307858846577*2^64 + 8808672001961570951*2^128 + 7942231034*2^192,3497807840590085184 + 8835981970371604437*2^64 + 10116972731252831872*2^128 + 943554551*2^192;\
3351248766929359192 + 15225576266404094752*2^64 + 14389209031384513973*2^128 + 6966667856*2^192,1262510151720012096 + 2279128375548077948*2^64 + 6261165104412470001*2^128 + 6988825656*2^192,8602479475612976192 + 5565091136233433382*2^64 + 18087708708580343469*2^128 + 3845355519*2^192,12704797677558416032 + 7057157364560075210*2^64 + 5512667304641208122*2^128 + 6350615088*2^192,8426770885190613328 + 9755693771922719303*2^64 + 11179739854619258817*2^128 + 1340226601*2^192,5155946026634250560 + 13213144164703151264*2^64 + 16145253126552697148*2^128 + 7776509722*2^192,10388132932527445440 + 3528120633894336299*2^64 + 4422080098593206995*2^128 + 1706545050*2^192,7674430183913850816 + 16457048482047313265*2^64 + 1011402863180746163*2^128 + 5617491954*2^192;\
9124576609718902177 + 17123323805835976293*2^64 + 7665422944004413210*2^128 + 1788961506*2^192,2716030284856787928 + 12397194366166181379*2^64 + 8258055075635656007*2^128 + 5925889847*2^192,14678495374406830416 + 17236884994955744522*2^64 + 16839730441486193492*2^128 + 2582987062*2^192,3636411974497174300 + 15099028862453379659*2^64 + 12507335997966749336*2^128 + 4319329822*2^192,13150742914540415236 + 13693782489649775917*2^64 + 11978208332453516215*2^128 + 7213308271*2^192,1549594104826614088 + 11139987294395956840*2^64 + 6517225511195577862*2^128 + 1937695380*2^192,16838243429811580992 + 5013748938623668626*2^64 + 6315842841392288770*2^128 + 4972654938*2^192,13426175130106463920 + 13773644816097938499*2^64 + 13442676554098220784*2^128 + 3198724199*2^192;\
13497495060744756382 + 8970159023234613667*2^64 + 7618556687300107622*2^128 + 6724394214*2^192,1982304707187518800 + 8022543511373437049*2^64 + 9036911530576249819*2^128 + 1012545694*2^192,10381850717235258608 + 2679283715524276306*2^64 + 7672205942287082483*2^128 + 692999834*2^192,18107386707060093992 + 9640468981599399888*2^64 + 1376439094948802967*2^128 + 4343204170*2^192,12982870395163689288 + 1287479105522533566*2^64 + 9995686191608525199*2^128 + 3444663328*2^192,14024730512042347984 + 11446553738102094854*2^64 + 10739332100702003177*2^128 + 1218104001*2^192,10951703658123792576 + 13822750709212184977*2^64 + 8934145567950288869*2^128 + 7761224550*2^192,15177933782198750112 + 8025637721677945359*2^64 + 15831328507111180709*2^128 + 3900060573*2^192;\
8688219817945368718 + 12354269348980879388*2^64 + 6102323907904857146*2^128 + 488856439*2^192,1259220149620607344 + 11197972648962741004*2^64 + 16008998135292315385*2^128 + 624821409*2^192,6352794908768619952 + 14919698203864026635*2^64 + 13639108887727114022*2^128 + 4944270728*2^192,3483191087427329192 + 12717055856536254308*2^64 + 10246105887403403174*2^128 + 1113864087*2^192,9460728734990108680 + 9146996986721294581*2^64 + 14222146030103613004*2^128 + 4436701909*2^192,5673733288763101520 + 2787156511755365187*2^64 + 2830109822820335021*2^128 + 7006593430*2^192,11647398893090697856 + 12792244679913996497*2^64 + 6943107803193661981*2^128 + 7023084912*2^192,11471256250542843328 + 13266359874176639773*2^64 + 2859090455896260850*2^128 + 387947396*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 4145 lists. */
