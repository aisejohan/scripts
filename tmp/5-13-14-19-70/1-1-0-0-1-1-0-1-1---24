/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^14                     = Coefficient of   x^6 * y^2 * z^1         = Coefficient of   x^5 * y^2 * w^1         = Coefficient of   x^3 * y^1 * z^3         = Coefficient of   x^2 * y^1 * z^2 * w^1   = Coefficient of   x^1 * y^5               = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   y^1 * w^3               = Coefficient of   z^5                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^14 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*y^2*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^5


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 161
[2, 1, 2, 0, 0]  	51	2 
[6, 2, 0, 0, 0]  	56	3 
[14, 0, 0, 0, 0]  	70	3  <--- 1
[1, 5, 0, 0, 0]  	70	3 
[4, 2, 0, 2, 0]  	84	3 
[9, 0, 2, 1, 0]  	92	7 
[2, 0, 6, 0, 0]  	94	2 
[4, 0, 4, 1, 0]  	95	4 
[8, 0, 4, 0, 0]  	96	6 
[3, 0, 5, 1, 0]  	104	7 
[5, 0, 3, 2, 0]  	105	7 
[4, 1, 0, 4, 0]  	109	5 
[3, 0, 4, 2, 0]  	109	4 
[2, 0, 3, 3, 0]  	109	5 
[12, 1, 0, 2, 0]  	111	3 
[2, 2, 0, 4, 0]  	112	3 
[2, 0, 2, 4, 0]  	114	4 
[6, 0, 2, 3, 0]  	115	6 
[12, 0, 0, 3, 0]  	117	5 
[5, 0, 0, 5, 0]  	120	6 
[1, 4, 2, 2, 0]  	123	4 
[2, 0, 0, 6, 0]  	124	5 
[1, 4, 5, 0, 0]  	127	3 
[1, 0, 6, 2, 0]  	127	4 
[4, 0, 1, 5, 0]  	129	4 
[1, 3, 2, 3, 0]  	129	4 
[1, 1, 8, 0, 0]  	130	4 
[0, 10, 0, 0, 0]  	130	3  <--- 2
[1, 4, 0, 4, 0]  	133	4 
[1, 3, 5, 1, 0]  	133	4 
[1, 0, 4, 4, 0]  	137	3 
[0, 8, 1, 1, 0]  	137	3 
[0, 4, 2, 3, 0]  	137	3 
[1, 3, 4, 2, 0]  	138	4 
[1, 3, 0, 5, 0]  	139	4 
[0, 2, 0, 6, 0]  	140	3 
[0, 5, 0, 4, 0]  	141	4 
[1, 3, 7, 0, 0]  	142	2 
[0, 8, 0, 2, 0]  	142	2 
[0, 4, 1, 4, 0]  	142	3 
[0, 7, 1, 2, 0]  	143	2 
[0, 3, 2, 4, 0]  	143	2 
[0, 8, 3, 0, 0]  	146	4 
[1, 0, 2, 6, 0]  	147	2 
[0, 7, 4, 0, 0]  	147	2 
[0, 4, 0, 5, 0]  	147	2 
[0, 3, 5, 2, 0]  	147	2 
[0, 7, 0, 3, 0]  	148	3 
[0, 3, 1, 5, 0]  	148	2 
[0, 6, 1, 3, 0]  	149	4 
[0, 7, 3, 1, 0]  	152	3 
[0, 3, 4, 3, 0]  	152	3 
[0, 6, 4, 1, 0]  	153	2 
[0, 3, 7, 1, 0]  	156	1 
[0, 0, 3, 6, 0]  	156	1 
[1, 0, 0, 8, 0]  	157	1 
[0, 2, 8, 1, 0]  	157	1 
[0, 0, 2, 7, 0]  	161	1 
[0, 6, 6, 0, 0]  	162	1 
[0, 2, 7, 2, 0]  	162	1 
[0, 5, 7, 0, 0]  	163	2 
[0, 1, 4, 5, 0]  	164	2 
[0, 2, 10, 0, 0]  	166	1 
[0, 0, 1, 8, 0]  	166	1 
[0, 2, 6, 3, 0]  	167	1 
[0, 1, 11, 0, 0]  	167	1 
[0, 1, 7, 3, 0]  	168	2 
[0, 0, 8, 3, 0]  	169	1 
[0, 0, 0, 9, 0]  	171	1  <--- 4
[0, 2, 5, 4, 0]  	172	1 
[0, 1, 10, 1, 0]  	172	1 
[1, 0, 12, 0, 0]  	173	2 
[0, 1, 6, 4, 0]  	173	2 
[0, 0, 7, 4, 0]  	174	1 
[0, 1, 9, 2, 0]  	177	1 
[0, 0, 6, 5, 0]  	179	1 
[0, 0, 13, 0, 0]  	182	1  <--- 3
[0, 0, 12, 1, 0]  	187	1 
[0, 0, 11, 2, 0]  	192	1 
[6, 1, 1, 0, 1]  	57	4 
[13, 0, 0, 0, 1]  	65	4 
[4, 1, 0, 2, 1]  	71	4 
[7, 0, 4, 0, 1]  	91	7 
[5, 0, 5, 0, 1]  	95	5 
[2, 1, 0, 4, 1]  	99	4 
[1, 1, 2, 3, 1]  	103	3 
[1, 1, 1, 4, 1]  	108	3 
[5, 4, 1, 1, 1]  	110	7 
[11, 0, 0, 3, 1]  	112	6 
[2, 4, 1, 2, 1]  	114	5 
[1, 0, 8, 0, 1]  	117	5 
[2, 0, 5, 2, 1]  	118	6 
[0, 5, 0, 3, 1]  	122	4 
[1, 0, 3, 4, 1]  	123	5 
[3, 4, 0, 3, 1]  	124	5 
[3, 0, 1, 5, 1]  	124	5 
[3, 3, 1, 3, 1]  	125	5 
[1, 4, 1, 3, 1]  	128	5 
[1, 3, 6, 0, 1]  	128	5 
[1, 2, 7, 0, 1]  	129	4 
[1, 4, 4, 1, 1]  	132	4 
[1, 1, 0, 6, 1]  	132	4 
[1, 0, 5, 3, 1]  	132	4 
[1, 0, 1, 6, 1]  	133	4 
[1, 0, 0, 7, 1]  	138	4 
[1, 2, 5, 2, 1]  	139	4 
[0, 9, 0, 1, 2]  	136	5 
[0, 2, 5, 3, 2]  	153	2 
[0, 1, 1, 7, 2]  	160	2 
[0, 2, 3, 5, 2]  	163	2 
[2, 4, 0, 3, 3]  	119	6 
[1, 0, 7, 1, 3]  	122	3 
[1, 0, 2, 5, 3]  	128	3 
[0, 7, 2, 1, 3]  	138	3 
[0, 3, 6, 1, 3]  	142	2 
[0, 9, 2, 0, 3]  	145	4 
[0, 6, 5, 0, 3]  	148	2 
[0, 4, 7, 0, 3]  	150	3 
[0, 2, 9, 0, 3]  	152	2 
[0, 6, 3, 2, 3]  	158	3 
[1, 2, 6, 1, 4]  	134	4 
[0, 4, 5, 1, 5]  	141	3 
[0, 6, 2, 2, 5]  	144	3 
[0, 4, 4, 2, 5]  	146	3 
[0, 5, 6, 0, 5]  	149	3 
[0, 1, 2, 6, 9]  	155	2 
[0, 2, 4, 4, 9]  	158	2 
[0, 1, 0, 8, 9]  	165	2 
[0, 3, 8, 0, 12]  	151	2 
[0, 0, 4, 5, 243]  	151	1 
[0, 0, 7, 3, 243]  	155	1 
[0, 1, 9, 1, 243]  	158	1 
[0, 1, 6, 3, 250]  	154	2 
[0, 1, 5, 4, 250]  	159	2 
[0, 3, 0, 5, 251]  	134	2 
[0, 4, 0, 4, 252]  	128	2 
[0, 3, 3, 3, 252]  	138	2 
[0, 1, 1, 6, 252]  	141	2 
[0, 0, 2, 6, 252]  	142	1 
[0, 2, 3, 4, 252]  	144	2 
[0, 1, 4, 4, 252]  	145	2 
[0, 1, 0, 7, 252]  	146	2 
[0, 2, 6, 2, 252]  	148	1 
[0, 2, 2, 5, 252]  	149	2 
[0, 0, 0, 8, 252]  	152	1 
[0, 0, 9, 2, 252]  	164	1 
[0, 0, 12, 0, 252]  	168	1 
[2, 0, 1, 5, 254]  	119	5 
[0, 1, 1, 5, 254]  	122	2 
[0, 0, 6, 2, 254]  	122	1 
[0, 0, 4, 4, 254]  	132	1 
[0, 1, 8, 1, 254]  	144	1 
[0, 1, 10, 0, 254]  	153	1 
[2, 0, 2, 1, 255]  	57	3 
[0, 5, 0, 0, 255]  	65	1 
[0, 3, 4, 0, 255]  	95	1 
[0, 3, 2, 2, 255]  	105	1 
[4, 0, 0, 5, 255]  	115	1 
[0, 3, 0, 4, 255]  	115	1 
[1, 4, 3, 1, 255]  	118	4 
[0, 1, 8, 0, 255]  	125	1 
------
The gap is between 13 and 242.
Lengths: 2 2 4 4 2 4.
For 159 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^5*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10*w^1

For 89 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^6
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^5*w^1

For 19 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 6.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[8505307777292113256 + 3204065826870454810*2^64 + 1393569119723218348*2^128 + 12255357320*2^192,10291137280089895164 + 9839971210036584686*2^64 + 4491821847446745924*2^128 + 6938790379*2^192,12346632358046449119 + 17646657262710471987*2^64 + 13615744693444702424*2^128 + 9546896232*2^192,1532796979728858690 + 7451765365306756795*2^64 + 7417762816864663645*2^128 + 6169881826*2^192,3761932436361425894 + 10915953547171446876*2^64 + 7008812546790249895*2^128 + 12476091965*2^192,17144341359578527703 + 871818441031675561*2^64 + 9928440524262239493*2^128 + 16418434311*2^192,5014386414551133440 + 5954371773212341803*2^64 + 3352085733987255708*2^128 + 8715940821*2^192,16695205413191621540 + 13959413550176470288*2^64 + 16783482933420865140*2^128 + 762414157*2^192;\
2303582433523817696 + 16000465953452034007*2^64 + 12832395687543749177*2^128 + 11287460027*2^192,2232777982594017248 + 3374091829554880038*2^64 + 14908948410794867360*2^128 + 1200886043*2^192,16187315974839416556 + 16766921977817741418*2^64 + 17728124565592312956*2^128 + 15432794104*2^192,12121343231585344808 + 17795322999587667221*2^64 + 14094802846998122677*2^128 + 11858660174*2^192,15770703046574509432 + 880140557551029837*2^64 + 1554649904449034822*2^128 + 5828688105*2^192,8237830675276928204 + 16570439303605010475*2^64 + 15201281179243603690*2^128 + 14169031304*2^192,1282005171249057024 + 12191320478406819580*2^64 + 14990068808869610708*2^128 + 10148313357*2^192,567520604240617424 + 3034339904553184308*2^64 + 2760339016296134673*2^128 + 15134364399*2^192;\
7356358785793906352 + 12864820637983390544*2^64 + 8209501596101902977*2^128 + 2391181355*2^192,8465885742531226568 + 820187167194394167*2^64 + 13538506955866689926*2^128 + 8931896991*2^192,4817641548677190298 + 16448079270592430086*2^64 + 3801372619635767166*2^128 + 15078025337*2^192,15034420197387179980 + 12867146150922162341*2^64 + 15069190078496079501*2^128 + 2296291883*2^192,9810991342405391268 + 3033479316685488328*2^64 + 13571155770332633238*2^128 + 11526000533*2^192,14853148434575515050 + 4623566557605902848*2^64 + 15387213558844623348*2^128 + 846819145*2^192,4712419160979802688 + 17814346878209298615*2^64 + 16061432651701711980*2^128 + 131954728*2^192,438555228155929752 + 4922204439924406521*2^64 + 6301468906185053514*2^128 + 4793676966*2^192;\
7941484158659580928 + 263566219589109556*2^64 + 10385060146935542594*2^128 + 16625315666*2^192,5092133675402955040 + 4432317808836805561*2^64 + 589005444223118174*2^128 + 5683110859*2^192,2377895252618534104 + 5343633119017742182*2^64 + 6198969819230949334*2^128 + 16566195964*2^192,18375676810643803728 + 14670101771319139240*2^64 + 6334508882046648196*2^128 + 8221549971*2^192,8863559012326706096 + 8132851418533634893*2^64 + 13291068999636058034*2^128 + 7341343063*2^192,1211067782693615608 + 4820177761727165602*2^64 + 3616889304960524115*2^128 + 9270150381*2^192,3749427431526118656 + 11923454055292894673*2^64 + 452383091507549331*2^128 + 808912426*2^192,16207602753889272736 + 118256747026910229*2^64 + 17497936803922805328*2^128 + 8240224051*2^192;\
11428606294341055912 + 10359979083062270384*2^64 + 8824235424397375560*2^128 + 2709248461*2^192,12861170447363117668 + 17113633154899835805*2^64 + 4004021609261877558*2^128 + 3622926021*2^192,13711680005273373739 + 4003451981008373220*2^64 + 17912666444485901715*2^128 + 16351104960*2^192,9180178338870426282 + 11456070475267624451*2^64 + 6244493544886369256*2^128 + 3504034142*2^192,8926919319314447518 + 6931982896933389681*2^64 + 11104172484740662553*2^128 + 16847940615*2^192,7716302614644284099 + 10882963125791685284*2^64 + 18412715449811268791*2^128 + 5675898221*2^192,3083183787084686336 + 10672092799838053706*2^64 + 759382357118927278*2^128 + 14353254448*2^192,9423525775597789556 + 3538148583165792084*2^64 + 12078756650007751585*2^128 + 593058486*2^192;\
13579001511089746496 + 13771085806411205503*2^64 + 5976435410987490967*2^128 + 11693048752*2^192,2916259471400749664 + 1089621609104814896*2^64 + 13268406756002656115*2^128 + 11542234686*2^192,4307868204009118900 + 6944051338809776778*2^64 + 8634635607260265351*2^128 + 13982369480*2^192,8895814316906944248 + 12671321503093083710*2^64 + 13804994286936964477*2^128 + 11804935176*2^192,8607940873575026728 + 9012635978022780820*2^64 + 8682257525165177620*2^128 + 10906652656*2^192,4519824336092394964 + 14266415534376421681*2^64 + 18349483199961165699*2^128 + 13458274442*2^192,18247156049325092224 + 8419243315960291226*2^64 + 13011652861536235400*2^128 + 9295984443*2^192,8219426886249938096 + 769609151895998706*2^64 + 11429194837207086392*2^128 + 4353125184*2^192;\
3161913932677507616 + 6443445248487814368*2^64 + 5756441503728885185*2^128 + 6224624671*2^192,13937045079235104240 + 906956693647970779*2^64 + 8739985444530569927*2^128 + 1607753332*2^192,14727954764829069836 + 9126378476674398300*2^64 + 12498618622289982206*2^128 + 2111247193*2^192,6558888986746425832 + 2657316002322949768*2^64 + 3440102283272860354*2^128 + 2272075034*2^192,14813879852646652344 + 12374231722209175162*2^64 + 10471033355150333255*2^128 + 6250273875*2^192,11309487320792871724 + 3752575899431704500*2^64 + 4664282230456525861*2^128 + 4291812607*2^192,11490030674345270080 + 18137125458123116110*2^64 + 5426539252423404614*2^128 + 4333619889*2^192,26159506013302224 + 12740816753534865171*2^64 + 11096145387020742216*2^128 + 2806478521*2^192;\
3896293622567223576 + 11136421737020060769*2^64 + 2811077538344929118*2^128 + 13701892278*2^192,5312117593425955780 + 13284755345907682127*2^64 + 5225005671322591971*2^128 + 6025894842*2^192,3850121747499826253 + 13071404294333277642*2^64 + 1878620524762571495*2^128 + 9869089903*2^192,15900551582989957734 + 1487153445099700484*2^64 + 4426968233632515604*2^128 + 14124332632*2^192,17430345012916640498 + 14300318315077557675*2^64 + 11638737096829015986*2^128 + 13964596290*2^192,17124130173003864277 + 11506262396637469133*2^64 + 6231126511880004884*2^128 + 520347368*2^192,2276047640036463744 + 9834533025343685967*2^64 + 480686535436807003*2^128 + 8718730096*2^192,2995397042902832172 + 5402058858004131188*2^64 + 7341076663046081923*2^128 + 14627985598*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 4245 lists. */
