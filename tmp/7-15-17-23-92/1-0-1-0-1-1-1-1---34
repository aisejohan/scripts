/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^11 * y^1               = Coefficient of   x^5 * z^2 * w^1         = Coefficient of   x^4 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * z^5               = Coefficient of   y^5 * z^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^11*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^3*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
The final length of G is 185
[1, 3, 1, 0, 0]  	69	2 
[11, 0, 0, 0, 0]  	77	4  <--- 1
[10, 1, 0, 0, 0]  	85	4 
[4, 2, 2, 0, 0]  	92	3 
[1, 0, 5, 0, 0]  	92	3 
[7, 3, 0, 1, 0]  	117	6 
[6, 0, 0, 4, 0]  	134	5 
[4, 4, 0, 2, 0]  	134	7 
[0, 8, 1, 0, 0]  	137	3 
[10, 0, 4, 0, 0]  	138	6 
[1, 3, 0, 4, 0]  	144	3 
[2, 6, 0, 2, 0]  	150	5 
[3, 1, 0, 5, 0]  	151	5 
[9, 6, 0, 0, 0]  	153	6 
[2, 5, 0, 3, 0]  	158	5 
[3, 8, 0, 1, 0]  	164	6 
[1, 6, 0, 3, 0]  	166	5 
[0, 7, 1, 2, 0]  	168	4 
[6, 7, 0, 1, 0]  	170	7 
[2, 9, 0, 1, 0]  	172	5 
[1, 8, 0, 2, 0]  	173	4 
[1, 0, 3, 5, 0]  	173	4 
[1, 2, 0, 6, 0]  	175	3 
[8, 8, 0, 0, 0]  	176	7 
[3, 1, 3, 4, 0]  	179	6 
[4, 1, 4, 3, 0]  	180	4 
[1, 10, 0, 1, 0]  	180	4 
[1, 2, 3, 4, 0]  	180	4 
[3, 0, 4, 4, 0]  	181	5 
[2, 2, 4, 3, 0]  	181	5 
[7, 0, 4, 3, 0]  	186	6 
[0, 6, 3, 2, 0]  	187	3 
[0, 3, 7, 1, 0]  	187	3 
[0, 8, 0, 3, 0]  	189	3 
[0, 5, 4, 2, 0]  	189	3 
[2, 2, 2, 5, 0]  	193	4 
[0, 6, 2, 3, 0]  	193	4 
[1, 1, 2, 6, 0]  	194	2 
[0, 5, 7, 0, 0]  	194	2 
[0, 3, 2, 5, 0]  	194	2 
[0, 13, 0, 0, 0]  	195	3  <--- 2
[0, 5, 3, 3, 0]  	195	3 
[0, 10, 0, 2, 0]  	196	2 
[0, 7, 4, 1, 0]  	196	2 
[0, 7, 0, 4, 0]  	197	3 
[2, 0, 0, 8, 0]  	198	3 
[0, 6, 5, 1, 0]  	198	3 
[0, 4, 0, 6, 0]  	198	3 
[7, 10, 0, 0, 0]  	199	4 
[0, 6, 1, 4, 0]  	199	3 
[0, 5, 6, 1, 0]  	200	3 
[0, 3, 1, 6, 0]  	200	3 
[0, 5, 2, 4, 0]  	201	2 
[0, 2, 6, 3, 0]  	201	2 
[0, 2, 2, 6, 0]  	202	2 
[0, 12, 0, 1, 0]  	203	2 
[0, 4, 3, 4, 0]  	203	2 
[0, 1, 3, 6, 0]  	204	2 
[0, 6, 0, 5, 0]  	205	2 
[0, 3, 4, 4, 0]  	205	2 
[0, 3, 0, 7, 0]  	206	3 
[0, 5, 1, 5, 0]  	207	3 
[0, 4, 6, 2, 0]  	208	2 
[0, 2, 1, 7, 0]  	208	2 
[0, 1, 2, 7, 0]  	210	2 
[0, 0, 7, 4, 0]  	211	1 
[0, 2, 8, 2, 0]  	212	2 
[1, 0, 0, 9, 0]  	214	3 
[0, 2, 11, 0, 0]  	217	1 
[0, 0, 6, 5, 0]  	217	1 
[0, 0, 2, 8, 0]  	218	1 
[0, 1, 12, 0, 0]  	219	1 
[6, 12, 0, 0, 0]  	222	2 
[0, 1, 0, 9, 0]  	222	2 
[0, 0, 1, 9, 0]  	224	1 
[0, 1, 11, 1, 0]  	225	1 
[0, 1, 10, 2, 0]  	231	1 
[0, 0, 11, 2, 0]  	233	1 
[0, 0, 14, 0, 0]  	238	1  <--- 3
[0, 0, 10, 3, 0]  	239	1 
[0, 0, 5, 7, 0]  	246	1 
[0, 0, 0, 11, 0]  	253	1  <--- 4
[4, 2, 1, 0, 1]  	75	4 
[3, 2, 0, 4, 1]  	143	4 
[6, 6, 0, 1, 1]  	155	6 
[2, 1, 3, 4, 1]  	172	5 
[0, 6, 5, 0, 1]  	175	3 
[6, 0, 4, 3, 1]  	179	6 
[0, 4, 6, 1, 1]  	185	3 
[3, 0, 1, 3, 2]  	107	3 
[9, 0, 0, 3, 2]  	132	4 
[5, 1, 4, 2, 2]  	164	7 
[8, 0, 4, 2, 2]  	170	6 
[2, 1, 2, 5, 2]  	178	4 
[0, 11, 0, 1, 2]  	188	3 
[5, 0, 0, 7, 2]  	196	3 
[0, 4, 8, 0, 2]  	196	2 
[5, 11, 0, 0, 2]  	200	4 
[3, 12, 0, 0, 2]  	201	2 
[1, 1, 0, 8, 2]  	206	3 
[1, 0, 1, 8, 2]  	208	2 
[0, 4, 5, 3, 2]  	214	3 
[0, 3, 10, 0, 2]  	215	2 
[0, 2, 5, 5, 2]  	230	2 
[3, 0, 0, 3, 3]  	90	4 
[4, 1, 4, 2, 3]  	157	7 
[7, 0, 4, 2, 3]  	163	7 
[3, 2, 4, 2, 3]  	165	5 
[2, 1, 4, 3, 3]  	166	5 
[2, 2, 2, 4, 3]  	170	5 
[2, 0, 0, 7, 3]  	175	4 
[0, 5, 5, 1, 3]  	183	4 
[2, 12, 0, 0, 3]  	194	2 
[0, 2, 10, 1, 3]  	223	2 
[2, 4, 0, 3, 4]  	143	5 
[2, 0, 0, 6, 4]  	152	3 
[2, 2, 4, 2, 4]  	158	5 
[2, 11, 0, 0, 4]  	179	4 
[0, 9, 0, 2, 4]  	181	4 
[1, 1, 0, 7, 4]  	183	5 
[1, 12, 0, 0, 4]  	187	3 
[1, 0, 2, 7, 4]  	202	2 
[0, 1, 1, 8, 4]  	216	2 
[1, 1, 0, 6, 5]  	160	4 
[1, 0, 1, 7, 5]  	185	4 
[1, 0, 0, 6, 6]  	145	4 
[2, 0, 4, 3, 7]  	151	6 
[1, 1, 4, 4, 7]  	182	3 
[1, 2, 4, 3, 246]  	174	4 
[0, 6, 0, 4, 246]  	182	2 
[0, 3, 0, 6, 247]  	183	3 
[1, 5, 0, 3, 248]  	151	5 
[0, 0, 5, 6, 249]  	223	1 
[0, 7, 1, 1, 250]  	145	2 
[0, 5, 5, 0, 250]  	160	3 
[0, 5, 0, 4, 250]  	167	2 
[0, 5, 2, 3, 250]  	178	2 
[0, 2, 1, 6, 250]  	185	1 
[0, 4, 5, 2, 250]  	191	3 
[0, 0, 0, 9, 250]  	207	1 
[0, 0, 10, 2, 250]  	216	1 
[1, 5, 0, 2, 251]  	128	3 
[0, 6, 2, 2, 251]  	170	3 
[1, 8, 0, 1, 252]  	150	4 
[1, 2, 0, 5, 252]  	152	1 
[0, 4, 0, 4, 252]  	152	2 
[0, 5, 2, 2, 252]  	155	2 
[0, 3, 0, 5, 252]  	160	2 
[0, 2, 1, 5, 252]  	162	1 
[0, 6, 3, 1, 252]  	164	2 
[0, 5, 4, 1, 252]  	166	2 
[0, 4, 5, 1, 252]  	168	3 
[1, 1, 2, 5, 252]  	171	1 
[0, 1, 2, 6, 252]  	187	2 
[0, 2, 8, 1, 252]  	189	2 
[0, 3, 6, 2, 252]  	193	2 
[0, 2, 10, 0, 252]  	200	2 
[0, 0, 5, 5, 252]  	200	1 
[0, 1, 11, 0, 252]  	202	1 
[0, 1, 10, 1, 252]  	208	1 
[1, 4, 0, 1, 253]  	90	3 
[2, 1, 4, 2, 253]  	143	5 
[1, 1, 4, 3, 253]  	159	2 
[1, 0, 4, 4, 253]  	167	2 
[0, 10, 0, 1, 253]  	173	3 
[0, 0, 6, 4, 253]  	194	1 
[0, 6, 1, 0, 254]  	107	2 
[1, 1, 0, 4, 254]  	114	1 
[0, 5, 2, 1, 254]  	132	2 
[0, 3, 0, 4, 254]  	137	1 
[0, 2, 1, 4, 254]  	139	1 
[0, 5, 4, 0, 254]  	143	2 
[0, 4, 5, 0, 254]  	145	2 
[0, 2, 0, 5, 254]  	145	1 
[0, 3, 6, 0, 254]  	147	2 
[1, 0, 3, 4, 254]  	150	1 
[0, 8, 0, 2, 254]  	166	4 
[0, 2, 8, 0, 254]  	166	2 
[0, 1, 1, 6, 254]  	170	2 
[0, 0, 5, 4, 254]  	177	1 
[0, 0, 0, 8, 254]  	184	1 
[0, 1, 10, 0, 254]  	185	1 
[1, 3, 0, 1, 255]  	75	3 
[3, 0, 4, 2, 255]  	135	5 
[1, 0, 4, 3, 255]  	144	2 
------
The gap is between 8 and 245.
Lengths: 2 2 5 6 2 3.
For 214 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^9*w^2

For 122 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^1*z^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*z^2*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 30 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[12925587063943169712 + 9375699617747518859*2^64 + 5701686711027242679*2^128 + 1075182476*2^192,14015552222060526198 + 4384110097560132419*2^64 + 9670132294043665122*2^128 + 3833602252*2^192,17703143781998705632 + 5300394905268390169*2^64 + 7744212090609360112*2^128 + 1645621221*2^192,3607239609756081568 + 8539092166165866535*2^64 + 17546033331924378510*2^128 + 539670886*2^192,3497340864388092972 + 12572380519778801903*2^64 + 14581315023223574514*2^128 + 3251230050*2^192,8538218847955063280 + 663240982261968377*2^64 + 8912124063373705422*2^128 + 3600550861*2^192,2079154485726790432 + 7768614832393494686*2^64 + 21743689772702035*2^128 + 4228534918*2^192,3231948367256213016 + 4708781038709471247*2^64 + 872833082110542871*2^128 + 4292745042*2^192,10021002812862252608 + 17828235117580214546*2^64 + 2090098914180195877*2^128 + 3733311372*2^192;\
2501140012765396016 + 8607476106566560313*2^64 + 15711717075953858935*2^128 + 1420729006*2^192,14398537131661493164 + 9445835104638862854*2^64 + 2888016199269611187*2^128 + 2048427240*2^192,18328572282123817152 + 15965650809423387145*2^64 + 5994386883645539370*2^128 + 1769387782*2^192,16948235098610661760 + 15767862609276069387*2^64 + 4387787989979058891*2^128 + 1151946719*2^192,3664961669748521968 + 8807209797290060136*2^64 + 13229953343866799214*2^128 + 3122592266*2^192,3012629237774764992 + 17915137722240596458*2^64 + 16601794437173219927*2^128 + 2704007991*2^192,6440774550740439936 + 5854208900388206423*2^64 + 11022550568036428797*2^128 + 3990527269*2^192,1603535927994834912 + 8726349487218016151*2^64 + 12982625439503638816*2^128 + 4242244196*2^192,12012194967202900224 + 10170930873909709546*2^64 + 11549615977613019235*2^128 + 2531407514*2^192;\
4307540893225486000 + 12390005207632754645*2^64 + 10281218664459711717*2^128 + 1411458546*2^192,16727977454257897974 + 9533712085453420370*2^64 + 7655556874768378251*2^128 + 429308139*2^192,17947466164704003960 + 2005653197610391636*2^64 + 8649527648860292107*2^128 + 877792083*2^192,189717310191458576 + 15581982927938888553*2^64 + 10292999296455597897*2^128 + 2017624700*2^192,8142220079195736784 + 14614458372989370283*2^64 + 1478059691190701533*2^128 + 772831889*2^192,17877810689598578368 + 16353901642215221056*2^64 + 13630997315474577534*2^128 + 1647866761*2^192,971271009515114144 + 1223439002973956012*2^64 + 10995734827814587786*2^128 + 1172845823*2^192,11216986342681942352 + 16541685228290019254*2^64 + 10315629675915086324*2^128 + 1679070036*2^192,18287563571294914048 + 9341118146761135801*2^64 + 4794100780291105305*2^128 + 1267644957*2^192;\
3016848801338436608 + 11906379663955380717*2^64 + 1758452842541690124*2^128 + 1876402219*2^192,14865448376021749020 + 8753995903448151852*2^64 + 16345592854508237020*2^128 + 1232620637*2^192,2270238189523536416 + 13572489651001689637*2^64 + 8107071263438470774*2^128 + 324296395*2^192,2243988435812364224 + 8152444286179499486*2^64 + 13164015946783094484*2^128 + 479384080*2^192,15536600480525395832 + 1881704639884960161*2^64 + 15501818457490691587*2^128 + 2115856242*2^192,16465442939002889760 + 2773640956410144054*2^64 + 15890865552264835202*2^128 + 1132048649*2^192,430001362598821664 + 875496848876981279*2^64 + 4469255206467348811*2^128 + 1653549425*2^192,17915708724393154848 + 2304793892337397569*2^64 + 18286114799396356236*2^128 + 2074749774*2^192,16471929943551700352 + 10128945521370503578*2^64 + 2280451378066856627*2^128 + 995411786*2^192;\
10991099700137089776 + 5617574869410179231*2^64 + 13409439382099686623*2^128 + 3502964336*2^192,1125564095544731008 + 15800115388562212569*2^64 + 1841864170634010536*2^128 + 2015506166*2^192,2703564595413057032 + 5523817100757739637*2^64 + 17091485906564927423*2^128 + 1232530542*2^192,4897046378580304792 + 3722024466833223260*2^64 + 3845719470594218051*2^128 + 3471111811*2^192,16467641665749507344 + 2728468105285711865*2^64 + 1372899062089513295*2^128 + 4079661545*2^192,7483245850537953536 + 13350212671861457949*2^64 + 13983805605533323317*2^128 + 3745036146*2^192,13458548774654592192 + 148046172831335758*2^64 + 3668291785873025583*2^128 + 3563508018*2^192,9900336282186352656 + 10665296148267258215*2^64 + 4597672099937385173*2^128 + 2220765134*2^192,10744941356789432128 + 3709672987341670802*2^64 + 12817125624867682310*2^128 + 437253425*2^192;\
7805263030226152924 + 434141953033615751*2^64 + 2708580086115712511*2^128 + 1080998944*2^192,2624939811125567467 + 8259668509312498148*2^64 + 2425851942359338757*2^128 + 1168486470*2^192,5074559359273771144 + 7072791598803243207*2^64 + 12722132716684849944*2^128 + 842031026*2^192,14106930227969972560 + 11647056811179261749*2^64 + 7743232425044369714*2^128 + 3244687686*2^192,3586907576573507650 + 13149313112907578804*2^64 + 15689496882399322283*2^128 + 1147722661*2^192,6378479670037098912 + 9717380007352705725*2^64 + 14477382007465450483*2^128 + 933049393*2^192,18233661122326025528 + 17586404428692226838*2^64 + 14994764991600103713*2^128 + 3499847240*2^192,10056431132403953808 + 9858658441313250732*2^64 + 14371699357951470782*2^128 + 351877619*2^192,2117903911766563056 + 9196629965515372324*2^64 + 5097018180118719463*2^128 + 539744133*2^192;\
3694541729332634880 + 1074910176316514662*2^64 + 17054474425718949686*2^128 + 3726390030*2^192,15969737543948160946 + 12339242412564034657*2^64 + 16622924570015695699*2^128 + 2798361968*2^192,4263096899708168264 + 3601671880748639534*2^64 + 930614397566522226*2^128 + 3969015639*2^192,9072558853058784264 + 12805103657624988431*2^64 + 2992358602858463629*2^128 + 299115071*2^192,16131993198688864928 + 13661682230037072916*2^64 + 17075827288777049477*2^128 + 496126395*2^192,9232341158980940432 + 4790935470115298063*2^64 + 12026098536091091234*2^128 + 1877526641*2^192,18199364240758382496 + 12639315962173273247*2^64 + 7053945053268412156*2^128 + 1240584138*2^192,15178985614989854500 + 17231108315526592420*2^64 + 4247478559681541442*2^128 + 431797327*2^192,6961769120163384944 + 17800759269610482579*2^64 + 18400880499301696682*2^128 + 676047653*2^192;\
7600400710228906176 + 4504929473438865511*2^64 + 6058836493183156301*2^128 + 3487789226*2^192,10988471924647647752 + 17705225638011806256*2^64 + 12315161330047566716*2^128 + 2065362581*2^192,12437170984929429976 + 11140799677271107728*2^64 + 10886204260289822564*2^128 + 1913646570*2^192,8478222138612747376 + 17136095889905798691*2^64 + 7341868036509370730*2^128 + 2622257471*2^192,15424980933684450816 + 5551426748634437981*2^64 + 12990527836635008298*2^128 + 4114999203*2^192,14392503331880199168 + 13619349687137166752*2^64 + 7079950834311510272*2^128 + 296246233*2^192,10050252401096648192 + 1952173075344513606*2^64 + 13554374495208081134*2^128 + 283024476*2^192,9971161655230082320 + 2796887682636813759*2^64 + 12938531013028048751*2^128 + 338235087*2^192,44334915841615360 + 15615452000329011488*2^64 + 5192695548341846476*2^128 + 2821654006*2^192;\
18416676202241035424 + 3166849577377823927*2^64 + 6700206716507905189*2^128 + 382340575*2^192,11480760917257530088 + 4275118196075370826*2^64 + 4053936490349914329*2^128 + 4122398205*2^192,7818680388762433816 + 8770963480135505787*2^64 + 4182660267646347924*2^128 + 1231136742*2^192,8217276967091890416 + 11712635299738571735*2^64 + 18320829039360214323*2^128 + 1720557521*2^192,2451544895994293296 + 17699681277311750408*2^64 + 13613421518242849750*2^128 + 1531235337*2^192,15287434865126068160 + 9245527131956606586*2^64 + 9468280315390835830*2^128 + 2001424941*2^192,6025523287877455040 + 9078881634911565553*2^64 + 1543139029814799771*2^128 + 833893848*2^192,1149868790605132016 + 3346636540377092503*2^64 + 13546850457466992185*2^128 + 1017951371*2^192,10543760854459949840 + 1424654248858433512*2^64 + 9548918676622567078*2^128 + 4093675694*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 3465 lists. */
