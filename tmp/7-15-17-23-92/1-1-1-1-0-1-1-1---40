/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^11 * y^1               = Coefficient of   x^5 * z^2 * w^1         = Coefficient of   x^4 * y^2 * z^2         = Coefficient of   x^2 * y^1 * z^1 * w^2   = Coefficient of   x^1 * y^3 * z^1 * w^1   = Coefficient of   x^1 * z^5               = Coefficient of   y^5 * z^1               = Coefficient of   w^4                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^11*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^5*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^2*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^1*w^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^5 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^5*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^4


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 251
[5, 0, 2, 0, 0]  	69	3 
[11, 0, 0, 0, 0]  	77	4  <--- 1
[10, 1, 0, 0, 0]  	85	5 
[4, 2, 2, 0, 0]  	92	4 
[2, 1, 1, 2, 0]  	92	4 
[4, 0, 5, 0, 0]  	113	5 
[8, 1, 0, 2, 0]  	117	8 
[4, 0, 0, 4, 0]  	120	5 
[2, 0, 5, 1, 0]  	122	5 
[3, 5, 2, 0, 0]  	130	5 
[8, 5, 0, 0, 0]  	131	7 
[5, 2, 0, 3, 0]  	134	8 
[4, 4, 0, 2, 0]  	134	9 
[3, 2, 5, 0, 0]  	136	7 
[3, 0, 0, 5, 0]  	136	7 
[3, 1, 6, 0, 0]  	138	5 
[4, 3, 0, 3, 0]  	142	8 
[4, 0, 4, 2, 0]  	142	8 
[3, 2, 0, 4, 0]  	143	7 
[2, 3, 5, 0, 0]  	144	6 
[4, 0, 3, 3, 0]  	148	7 
[3, 4, 0, 3, 0]  	150	9 
[2, 0, 0, 6, 0]  	152	5 
[2, 7, 2, 0, 0]  	153	6 
[3, 4, 3, 1, 0]  	155	5 
[2, 6, 3, 0, 0]  	155	5 
[3, 6, 0, 2, 0]  	157	7 
[3, 0, 8, 0, 0]  	157	7 
[3, 0, 4, 3, 0]  	158	6 
[1, 7, 0, 2, 0]  	158	6 
[2, 2, 0, 5, 0]  	159	5 
[1, 9, 1, 0, 0]  	159	5 
[1, 6, 1, 2, 0]  	160	5 
[1, 3, 5, 1, 0]  	160	5 
[1, 1, 0, 6, 0]  	160	5 
[1, 0, 9, 0, 0]  	160	5 
[2, 6, 2, 1, 0]  	161	5 
[3, 0, 3, 4, 0]  	164	5 
[2, 10, 0, 0, 0]  	164	6 
[2, 4, 4, 1, 0]  	165	7 
[2, 1, 8, 0, 0]  	165	6 
[1, 6, 0, 3, 0]  	166	5 
[1, 3, 4, 2, 0]  	166	6 
[1, 5, 1, 3, 0]  	168	5 
[1, 2, 5, 2, 0]  	168	5 
[1, 0, 0, 7, 0]  	168	5 
[5, 9, 0, 0, 0]  	170	7 
[1, 3, 7, 0, 0]  	171	5 
[2, 9, 0, 1, 0]  	172	6 
[1, 11, 0, 0, 0]  	172	6 
[1, 2, 8, 0, 0]  	173	4 
[1, 0, 3, 5, 0]  	173	4 
[2, 0, 4, 4, 0]  	174	5 
[0, 9, 1, 1, 0]  	175	4 
[1, 4, 1, 4, 0]  	176	5 
[1, 8, 3, 0, 0]  	178	5 
[1, 5, 3, 2, 0]  	179	4 
[1, 2, 7, 1, 0]  	179	4 
[1, 0, 2, 6, 0]  	179	4 
[1, 10, 0, 1, 0]  	180	4 
[1, 2, 3, 4, 0]  	180	4 
[1, 1, 8, 1, 0]  	181	5 
[1, 6, 5, 0, 0]  	182	4 
[1, 4, 0, 5, 0]  	182	4 
[1, 1, 4, 4, 0]  	182	4 
[0, 11, 1, 0, 0]  	182	4 
[0, 8, 1, 2, 0]  	183	4 
[1, 0, 5, 4, 0]  	184	5 
[1, 4, 3, 3, 0]  	187	3 
[1, 1, 7, 2, 0]  	187	3 
[0, 6, 3, 2, 0]  	187	3 
[1, 0, 8, 2, 0]  	189	3 
[0, 5, 4, 2, 0]  	189	3 
[1, 1, 6, 3, 0]  	193	5 
[0, 8, 3, 1, 0]  	194	3 
[1, 0, 7, 3, 0]  	195	3 
[0, 13, 0, 0, 0]  	195	3  <--- 2
[0, 5, 3, 3, 0]  	195	3 
[0, 10, 0, 2, 0]  	196	2 
[0, 4, 8, 0, 0]  	196	2 
[0, 4, 0, 6, 0]  	198	3 
[1, 3, 2, 5, 0]  	201	3 
[0, 10, 3, 0, 0]  	201	2 
[0, 5, 2, 4, 0]  	201	3 
[0, 4, 7, 1, 0]  	202	3 
[0, 12, 0, 1, 0]  	203	3 
[0, 9, 4, 0, 0]  	203	3 
[0, 9, 0, 3, 0]  	204	2 
[0, 3, 8, 1, 0]  	204	2 
[0, 8, 5, 0, 0]  	205	3 
[0, 7, 2, 3, 0]  	208	3 
[0, 4, 6, 2, 0]  	208	3 
[0, 3, 7, 2, 0]  	210	2 
[0, 3, 3, 5, 0]  	211	1 
[0, 0, 7, 4, 0]  	211	1 
[0, 8, 0, 4, 0]  	212	2 
[0, 2, 8, 2, 0]  	212	2 
[0, 3, 10, 0, 0]  	215	2 
[0, 3, 2, 6, 0]  	217	1 
[0, 2, 11, 0, 0]  	217	1 
[0, 0, 6, 5, 0]  	217	1 
[0, 2, 7, 3, 0]  	218	1 
[0, 0, 2, 8, 0]  	218	1 
[0, 2, 3, 6, 0]  	219	1 
[0, 1, 12, 0, 0]  	219	1 
[0, 2, 10, 1, 0]  	223	2 
[0, 7, 7, 0, 0]  	224	1 
[0, 2, 6, 4, 0]  	224	1 
[0, 0, 1, 9, 0]  	224	1 
[0, 2, 2, 7, 0]  	225	1 
[0, 1, 11, 1, 0]  	225	1 
[0, 3, 0, 8, 0]  	229	2 
[0, 2, 1, 8, 0]  	231	1 
[0, 1, 10, 2, 0]  	231	1 
[0, 0, 11, 2, 0]  	233	1 
[0, 1, 5, 6, 0]  	238	1 
[0, 0, 14, 0, 0]  	238	1  <--- 3
[0, 0, 10, 3, 0]  	239	1 
[0, 1, 0, 10, 0]  	245	1 
[0, 0, 5, 7, 0]  	246	1 
[0, 0, 0, 11, 0]  	253	1  <--- 4
[5, 0, 1, 1, 1]  	75	5 
[2, 3, 1, 1, 1]  	99	5 
[7, 3, 1, 0, 1]  	111	7 
[6, 4, 1, 0, 1]  	119	8 
[1, 6, 1, 1, 1]  	137	6 
[5, 6, 1, 0, 1]  	142	8 
[2, 4, 0, 3, 1]  	143	7 
[1, 5, 1, 2, 1]  	145	6 
[2, 8, 1, 0, 1]  	151	7 
[2, 3, 0, 4, 1]  	151	7 
[2, 2, 7, 0, 1]  	163	6 
[1, 9, 0, 1, 1]  	165	6 
[1, 0, 8, 1, 1]  	166	5 
[1, 5, 4, 1, 1]  	173	4 
[1, 7, 4, 0, 1]  	180	4 
[0, 5, 5, 1, 1]  	183	4 
[1, 5, 6, 0, 1]  	184	5 
[1, 3, 1, 5, 1]  	184	5 
[1, 2, 2, 5, 1]  	186	4 
[0, 11, 0, 1, 1]  	188	4 
[0, 8, 4, 0, 1]  	188	3 
[0, 8, 0, 3, 1]  	189	3 
[0, 7, 5, 0, 1]  	190	3 
[0, 7, 1, 3, 1]  	191	4 
[0, 5, 7, 0, 1]  	194	3 
[0, 7, 4, 1, 1]  	196	2 
[0, 7, 0, 4, 1]  	197	3 
[0, 6, 0, 5, 1]  	205	3 
[0, 3, 0, 7, 1]  	206	3 
[0, 1, 1, 8, 1]  	216	2 
[0, 2, 5, 5, 1]  	230	2 
[4, 5, 1, 0, 2]  	120	8 
[8, 0, 0, 3, 2]  	125	6 
[6, 5, 0, 1, 2]  	140	7 
[3, 7, 1, 0, 2]  	143	7 
[2, 6, 0, 2, 2]  	150	7 
[1, 4, 5, 0, 2]  	152	5 
[2, 8, 0, 1, 2]  	157	7 
[5, 7, 0, 1, 2]  	163	8 
[1, 1, 6, 2, 2]  	170	4 
[1, 5, 0, 4, 2]  	174	5 
[1, 3, 2, 4, 2]  	178	5 
[0, 9, 0, 2, 2]  	181	4 
[0, 3, 7, 1, 2]  	187	3 
[0, 6, 2, 3, 2]  	193	4 
[0, 3, 2, 5, 2]  	194	2 
[0, 1, 3, 6, 2]  	204	2 
[0, 5, 1, 5, 2]  	207	3 
[0, 1, 2, 7, 2]  	210	2 
[0, 1, 0, 9, 2]  	222	2 
[3, 6, 1, 0, 3]  	128	8 
[1, 2, 5, 1, 3]  	145	5 
[3, 7, 0, 1, 3]  	149	8 
[1, 3, 0, 5, 3]  	167	5 
[0, 3, 1, 6, 3]  	200	3 
[0, 2, 6, 3, 3]  	201	2 
[0, 4, 5, 3, 3]  	214	3 
[0, 3, 5, 4, 3]  	222	3 
[3, 3, 0, 3, 4]  	135	8 
[1, 3, 3, 3, 4]  	172	5 
[0, 7, 2, 2, 4]  	185	4 
[0, 6, 1, 4, 5]  	199	4 
[0, 2, 2, 6, 5]  	202	2 
[0, 4, 3, 4, 5]  	203	2 
[0, 3, 4, 4, 5]  	205	2 
[0, 2, 1, 7, 5]  	208	2 
[3, 0, 4, 2, 250]  	135	7 
[1, 0, 1, 6, 250]  	162	4 
[0, 1, 11, 0, 250]  	202	1 
[0, 1, 7, 3, 250]  	203	1 
[0, 0, 8, 3, 250]  	205	1 
[1, 0, 4, 4, 251]  	167	4 
[0, 1, 10, 1, 251]  	208	1 
[1, 0, 0, 6, 252]  	145	4 
[2, 0, 8, 0, 252]  	150	4 
[1, 0, 7, 2, 252]  	172	4 
[1, 0, 6, 3, 252]  	178	4 
[0, 0, 6, 4, 252]  	194	1 
[0, 2, 0, 8, 252]  	214	1 
[0, 0, 10, 2, 252]  	216	1 
[3, 4, 4, 0, 253]  	149	4 
[0, 6, 4, 1, 253]  	181	3 
[0, 4, 6, 1, 253]  	185	2 
[0, 1, 10, 0, 253]  	185	1 
[0, 0, 7, 3, 253]  	188	1 
[0, 1, 0, 8, 253]  	199	1 
[0, 0, 1, 8, 253]  	201	1 
[3, 2, 0, 3, 254]  	120	6 
[4, 0, 3, 2, 254]  	125	3 
[2, 3, 0, 3, 254]  	128	6 
[2, 0, 4, 2, 254]  	128	3 
[3, 4, 3, 0, 254]  	132	2 
[3, 0, 7, 0, 254]  	140	3 
[1, 6, 0, 2, 254]  	143	3 
[1, 0, 8, 0, 254]  	143	1 
[3, 0, 2, 4, 254]  	147	2 
[1, 2, 0, 5, 254]  	152	4 
[1, 0, 6, 2, 254]  	155	4 
[3, 9, 0, 0, 254]  	156	6 
[2, 5, 4, 0, 254]  	157	5 
[2, 0, 2, 5, 254]  	163	3 
[1, 4, 3, 2, 254]  	164	5 
[0, 8, 0, 2, 254]  	166	4 
[0, 6, 2, 2, 254]  	170	4 
[0, 0, 10, 0, 254]  	170	1 
[0, 8, 3, 0, 254]  	171	1 
[1, 2, 4, 3, 254]  	174	4 
[0, 0, 0, 8, 254]  	184	1 
[0, 3, 5, 3, 254]  	199	3 
[2, 1, 0, 2, 255]  	75	3 
[2, 0, 5, 0, 255]  	99	2 
[2, 0, 3, 2, 255]  	111	2 
[4, 0, 4, 1, 255]  	119	2 
[1, 0, 7, 0, 255]  	126	1 
[1, 0, 2, 4, 255]  	133	1 
[0, 9, 0, 0, 255]  	135	1 
[1, 3, 5, 0, 255]  	137	2 
[2, 6, 2, 0, 255]  	138	3 
[1, 5, 2, 1, 255]  	139	4 
[1, 2, 6, 0, 255]  	139	2 
[2, 4, 4, 0, 255]  	142	2 
[0, 2, 7, 0, 255]  	149	2 
[1, 5, 0, 3, 255]  	151	3 
[0, 2, 2, 4, 255]  	156	1 
[0, 4, 3, 2, 255]  	157	1 
[1, 4, 0, 4, 255]  	159	2 
[1, 6, 4, 0, 255]  	165	3 
[0, 5, 6, 0, 255]  	177	3 
[0, 0, 5, 4, 255]  	177	1 
[0, 1, 2, 6, 255]  	187	2 
------
The gap is between 6 and 249.
Lengths: 2 2 5 5 2 4.
For 214 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^8
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^9*w^2

For 122 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^5*z^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*z^5
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^5
1 + 0*2^64 + 0*2^128 + 0*2^192*y^7*z^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2*w^4

For 30 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^2

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[10232062880331305512 + 5787584547066904489*2^64 + 10915456765521343326*2^128 + 27302544402*2^192,6124292734835104422 + 3722666729248607680*2^64 + 2658530211182413183*2^128 + 32540676613*2^192,12116544829049697896 + 4748975313517917088*2^64 + 7037488879973932737*2^128 + 8293129326*2^192,10135265704376631664 + 13341862494445369442*2^64 + 4687701240536719712*2^128 + 12407334935*2^192,10545263880598577128 + 12637945085654240135*2^64 + 10115582906420702995*2^128 + 4279341594*2^192,2378116937830328464 + 2589931023854780085*2^64 + 18109075113515862737*2^128 + 30426198958*2^192,4866750315478426280 + 3992757955322470863*2^64 + 17698666967168998997*2^128 + 8474858148*2^192,13400505405754776104 + 11822908973545649769*2^64 + 9506340339447958285*2^128 + 17643691293*2^192,7787112223166636216 + 16855263354788510720*2^64 + 4087797142620194193*2^128 + 3397031853*2^192;\
10444203078753314240 + 6585978556107484155*2^64 + 469534714716531750*2^128 + 18363610272*2^192,11829330633838342944 + 2341630120218466539*2^64 + 14138290588559598564*2^128 + 25493979991*2^192,14226896764238585600 + 17420562093363660981*2^64 + 13139707541814288858*2^128 + 12668097629*2^192,3126396746767007872 + 2690861529903795162*2^64 + 430745496911829218*2^128 + 1866083718*2^192,10714917454670946560 + 13329169079944332253*2^64 + 13107687175592429194*2^128 + 24822425913*2^192,7531492062709705344 + 3974080928442812007*2^64 + 5252530029827872429*2^128 + 30629431348*2^192,8515600535200116992 + 8746103478192875857*2^64 + 5257924521065621924*2^128 + 18149813527*2^192,2607485587882111872 + 9046473542233883411*2^64 + 14569840371947956101*2^128 + 1015194249*2^192,13173784897267038336 + 8542061695927346454*2^64 + 7051287224229731248*2^128 + 33960965118*2^192;\
17100265045645910080 + 12629594923857060106*2^64 + 13124927791305526543*2^128 + 14503097059*2^192,9450110621884098144 + 12117185350162962324*2^64 + 17734043273685891626*2^128 + 21562027374*2^192,10151854021228524160 + 12388088548147897800*2^64 + 7702491711204427305*2^128 + 31067701291*2^192,14314529653440185216 + 424425346015544499*2^64 + 18212973497074904299*2^128 + 3824897677*2^192,6685252142887063040 + 2568894903253742764*2^64 + 886887513477164690*2^128 + 11188244919*2^192,13613309565885020800 + 10736648248350004773*2^64 + 11280850796417835366*2^128 + 27227621531*2^192,11191255627340762368 + 8511069160386053621*2^64 + 12264423962995837943*2^128 + 10137605575*2^192,1425588659591187456 + 8276357908712207837*2^64 + 3567842900733588814*2^128 + 33782089274*2^192,241063283857081088 + 93264941051164529*2^64 + 11679885709559518652*2^128 + 8518065737*2^192;\
10431528078809595492 + 12220442071848024708*2^64 + 11946892201372581022*2^128 + 3554480875*2^192,17620748561067502183 + 16676827916177065958*2^64 + 7739682726286129300*2^128 + 23703512970*2^192,9288832609100637604 + 6603776133381033373*2^64 + 14543549619000622443*2^128 + 24282144917*2^192,13466758115116746136 + 6664298444800328410*2^64 + 18012697842215750685*2^128 + 21717479001*2^192,16419823085550573604 + 3009327570526769844*2^64 + 2738523607741822153*2^128 + 27972412315*2^192,5703090514226610152 + 15172884971049638121*2^64 + 18349638026657824413*2^128 + 21981990743*2^192,5624667380682041284 + 10810703594630906103*2^64 + 11379131575291503089*2^128 + 21093034193*2^192,12712544011911992644 + 16954802526515306836*2^64 + 1298318039772981836*2^128 + 31067779667*2^192,8800300235412875180 + 10073788311994990811*2^64 + 1183427006588242285*2^128 + 18096126994*2^192;\
10184299669447111536 + 12144773600647815261*2^64 + 9152260470115252881*2^128 + 30500159346*2^192,7375553738430177500 + 12600121064308661559*2^64 + 16218131470571067821*2^128 + 23810994673*2^192,2817955577966603664 + 4235744703733233401*2^64 + 11220384035902387135*2^128 + 25898983131*2^192,17426264742595092384 + 2817938508262298725*2^64 + 10201339819683628774*2^128 + 20137308428*2^192,9561645267777500816 + 16848678613416871250*2^64 + 14274821350484192144*2^128 + 33252491052*2^192,3752121694858038240 + 3510039773482879969*2^64 + 16195909165205340543*2^128 + 24879946660*2^192,2553553749464333392 + 15103917213750619097*2^64 + 3930619086160868319*2^128 + 29341144372*2^192,16400026127801704976 + 9624562423440222205*2^64 + 2849721934754896188*2^128 + 17383518515*2^192,12926508385002410288 + 16611427203654846725*2^64 + 3460356180022971197*2^128 + 20480830517*2^192;\
12346381013205908912 + 16744460659917218677*2^64 + 15570475576357515705*2^128 + 3901541848*2^192,15462231275192747876 + 10068067407914753573*2^64 + 11409096917420398729*2^128 + 14182851002*2^192,17928985136176154160 + 600926423976619500*2^64 + 2527891588923204647*2^128 + 11877764580*2^192,1206700505445889056 + 11442245676709251908*2^64 + 4897342319070872406*2^128 + 23701604495*2^192,3627316033063397232 + 4320182719809236672*2^64 + 974674900947421443*2^128 + 20919007404*2^192,14711103293045794592 + 6048453274726583057*2^64 + 8627723880954363104*2^128 + 9875986265*2^192,10111012343149222128 + 2464953199811141598*2^64 + 15211713881297522857*2^128 + 1937324739*2^192,6957381818470902256 + 10686618478993113029*2^64 + 9772152264899509021*2^128 + 31120226739*2^192,12329124708772807760 + 11083081653423548711*2^64 + 4333644357443294721*2^128 + 31380598169*2^192;\
2881860901733130128 + 1232804525357063192*2^64 + 1909153400954628806*2^128 + 33884414204*2^192,11405771973792138508 + 18256856664562334747*2^64 + 3083618247920821179*2^128 + 25216757217*2^192,11311910772938755024 + 4666521577279848295*2^64 + 12855493641924683397*2^128 + 24851073849*2^192,17447618390923628128 + 17915307659186805582*2^64 + 13834989688363846654*2^128 + 25578435991*2^192,17963301660930570704 + 6036486035211115060*2^64 + 8335679899658127515*2^128 + 7232309933*2^192,6600327948287192672 + 14405533524852675934*2^64 + 4882482576542557362*2^128 + 29784590084*2^192,14219180806680909968 + 13954291842478000992*2^64 + 14614294902114179423*2^128 + 27800547130*2^192,7541512550213606096 + 16501518400883335746*2^64 + 15903528914980129353*2^128 + 18018647399*2^192,5294164226859130480 + 7592398464912109779*2^64 + 5731042637761146354*2^128 + 24089279397*2^192;\
17468428317327423840 + 10709246918203777575*2^64 + 11712592114639432588*2^128 + 13202885270*2^192,10922792641853965960 + 10233835327607876731*2^64 + 4853115617487702317*2^128 + 2486825516*2^192,10114855102949633888 + 4534820740597660438*2^64 + 6034752339657911018*2^128 + 14664061773*2^192,8249546634056376896 + 14298703808118733914*2^64 + 17097023208257007132*2^128 + 17827551051*2^192,13631041834613990368 + 17992601024410714277*2^64 + 5478468143129281955*2^128 + 16712537601*2^192,1378319564220371904 + 14031513727544499781*2^64 + 18249738340768735952*2^128 + 15940594564*2^192,1193789420791105504 + 17330003581537601345*2^64 + 12946406525272512552*2^128 + 7030794400*2^192,8804539006568488288 + 1533383092714656802*2^64 + 14392706979319553698*2^128 + 31908226827*2^192,3984250876165261472 + 14863774867301584957*2^64 + 361275670539355845*2^128 + 31948095162*2^192;\
2004650062037020288 + 1529073706305883896*2^64 + 12902032749996882697*2^128 + 27541953769*2^192,13256330628798705432 + 3312784338262686128*2^64 + 904777281198634266*2^128 + 19127805794*2^192,3260249869172758880 + 16958142406279262786*2^64 + 13067357814876092004*2^128 + 16945049687*2^192,15945764754510198528 + 13750471479874627142*2^64 + 11924579976819475081*2^128 + 34107083248*2^192,15693097709155192224 + 7696730262209562090*2^64 + 615109115496459820*2^128 + 13764643986*2^192,321228640995160128 + 11514410540275007556*2^64 + 11631743724337071766*2^128 + 16229375643*2^192,4463657829505668768 + 16255820379284045301*2^64 + 14865252112358407383*2^128 + 26290417985*2^192,10445145265386268576 + 2435882073695039960*2^64 + 2698414813698104926*2^128 + 28667567108*2^192,13507536813381594848 + 6720560411846912134*2^64 + 16934934900767142714*2^128 + 17902696365*2^192]
/* 
This matrix times 2^(-5) should be the matrix of frobenius.
*/ 
B = 2^(-5) * A; 
/* Freed 3865 lists. */
The sign is: 1
The characteristic polynomial is: x^9 + x^8 + 4*x^7 + 6*x^6 + 4*x^5 - 8*x^4 - 48*x^3 - 128*x^2 - 128*x - 512
Its Newton polygon is: [2, 3/2, 3/2, 1, 1, 1, 1/2, 1/2, 0]
Its factorization is: [x - 2, 1; x^8 + 3*x^7 + 10*x^6 + 26*x^5 + 56*x^4 + 104*x^3 + 160*x^2 + 192*x + 256, 1]
The valuation of f-g is: 25
The valuation of subst(g,x,A) is: 20
