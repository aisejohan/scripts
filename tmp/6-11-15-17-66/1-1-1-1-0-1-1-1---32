/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^11                     = Coefficient of   x^6 * z^2               = Coefficient of   x^3 * y^3 * z^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^1 * w^2   = Coefficient of   x^1 * z^4               = Coefficient of   y^6                     = Coefficient of   z^1 * w^3               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^11 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*z^2 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^4 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^6 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 145
[2, 2, 1, 0, 0]  	49	2 
[10, 0, 0, 0, 0]  	60	5  <--- 1
[6, 0, 2, 0, 0]  	66	3 
[1, 1, 1, 2, 0]  	66	3 
[7, 3, 0, 0, 0]  	75	7 
[5, 0, 1, 2, 0]  	79	7 
[4, 5, 0, 0, 0]  	79	7 
[3, 6, 0, 0, 0]  	84	4 
[3, 0, 1, 3, 0]  	84	4 
[4, 0, 2, 2, 0]  	88	3 
[3, 5, 0, 1, 0]  	90	6 
[9, 2, 0, 1, 0]  	93	6 
[2, 0, 2, 3, 0]  	93	3 
[1, 8, 0, 0, 0]  	94	5 
[2, 0, 1, 4, 0]  	95	4 
[3, 4, 0, 2, 0]  	96	6 
[6, 4, 0, 1, 0]  	97	8 
[5, 3, 0, 2, 0]  	97	7 
[8, 0, 0, 3, 0]  	99	6 
[0, 6, 0, 2, 0]  	100	3 
[3, 3, 0, 3, 0]  	102	7 
[2, 2, 0, 4, 0]  	102	7 
[8, 2, 0, 2, 0]  	104	9 
[2, 7, 0, 1, 0]  	106	2 
[1, 3, 0, 4, 0]  	107	5 
[1, 0, 7, 0, 0]  	111	4 
[1, 5, 0, 3, 0]  	112	4 
[1, 2, 6, 0, 0]  	118	4 
[3, 1, 6, 0, 0]  	119	5 
[0, 8, 1, 1, 0]  	120	3 
[0, 2, 2, 4, 0]  	120	3 
[7, 1, 0, 4, 0]  	121	7 
[1, 0, 2, 5, 0]  	121	3 
[1, 0, 1, 6, 0]  	123	3 
[0, 5, 0, 4, 0]  	123	3 
[1, 4, 5, 0, 0]  	125	5 
[7, 0, 0, 5, 0]  	127	6 
[0, 9, 2, 0, 0]  	129	2 
[0, 4, 0, 5, 0]  	129	2 
[0, 3, 3, 3, 0]  	129	2 
[1, 2, 0, 6, 0]  	130	3 
[1, 0, 6, 2, 0]  	130	3 
[0, 5, 5, 0, 0]  	130	3 
[6, 1, 0, 5, 0]  	132	5 
[1, 0, 5, 3, 0]  	132	4 
[0, 3, 1, 5, 0]  	133	3 
[1, 0, 4, 4, 0]  	134	3 
[0, 3, 0, 6, 0]  	135	1 
[0, 1, 6, 2, 0]  	135	1 
[0, 0, 9, 0, 0]  	135	1  <--- 3
[1, 1, 0, 7, 0]  	136	3 
[0, 11, 1, 0, 0]  	136	3 
[0, 5, 2, 3, 0]  	136	3 
[3, 0, 0, 7, 0]  	137	4 
[6, 0, 0, 6, 0]  	138	3 
[0, 11, 0, 1, 0]  	138	3 
[0, 2, 1, 6, 0]  	139	2 
[0, 1, 4, 4, 0]  	139	2 
[0, 2, 0, 7, 0]  	141	1 
[0, 1, 3, 5, 0]  	141	1 
[0, 0, 6, 3, 0]  	141	1 
[0, 3, 5, 2, 0]  	142	2 
[0, 13, 0, 0, 0]  	143	4  <--- 2
[0, 1, 1, 7, 0]  	145	2 
[0, 1, 0, 8, 0]  	147	1 
[0, 0, 3, 6, 0]  	147	1 
[0, 8, 4, 0, 0]  	148	2 
[0, 2, 5, 3, 0]  	148	2 
[0, 3, 8, 0, 0]  	153	1 
[0, 0, 0, 9, 0]  	153	1  <--- 4
[0, 2, 8, 1, 0]  	159	1 
[6, 0, 1, 0, 1]  	51	5 
[2, 1, 1, 1, 1]  	55	3 
[4, 0, 1, 2, 1]  	73	5 
[1, 7, 0, 0, 1]  	83	3 
[4, 4, 0, 1, 1]  	85	6 
[2, 6, 0, 1, 1]  	95	4 
[2, 3, 0, 3, 1]  	96	6 
[1, 3, 4, 0, 1]  	99	3 
[1, 2, 4, 1, 1]  	105	4 
[3, 0, 6, 0, 1]  	108	6 
[2, 1, 6, 0, 1]  	113	6 
[1, 2, 0, 5, 1]  	113	5 
[3, 1, 0, 5, 1]  	114	5 
[7, 2, 0, 3, 1]  	115	6 
[1, 0, 4, 3, 1]  	117	3 
[1, 6, 2, 1, 1]  	119	6 
[1, 5, 3, 1, 1]  	123	3 
[1, 1, 6, 1, 1]  	124	3 
[0, 2, 0, 6, 1]  	124	3 
[2, 1, 0, 6, 1]  	125	4 
[2, 0, 0, 7, 1]  	131	3 
[1, 6, 0, 0, 2]  	72	3 
[5, 2, 0, 3, 2]  	103	7 
[0, 8, 0, 1, 2]  	105	3 
[0, 8, 2, 0, 2]  	118	4 
[2, 0, 6, 1, 2]  	119	5 
[1, 1, 0, 6, 2]  	119	5 
[0, 7, 2, 1, 2]  	124	4 
[1, 0, 0, 7, 2]  	125	4 
[0, 12, 0, 0, 2]  	132	3 
[0, 5, 3, 2, 2]  	134	3 
[0, 7, 4, 0, 2]  	137	3 
[1, 1, 4, 1, 3]  	94	4 
[2, 5, 0, 2, 3]  	101	5 
[5, 0, 4, 0, 4]  	90	7 
[1, 5, 3, 0, 4]  	106	3 
[0, 6, 3, 0, 4]  	111	3 
[3, 0, 4, 2, 4]  	112	5 
[0, 4, 6, 1, 4]  	151	2 
[0, 4, 1, 4, 249]  	127	3 
[1, 4, 0, 3, 250]  	101	5 
[0, 2, 1, 4, 250]  	105	3 
[2, 4, 0, 2, 252]  	90	6 
[1, 0, 1, 5, 252]  	106	2 
[0, 1, 1, 5, 252]  	111	2 
[1, 4, 3, 1, 252]  	112	4 
[0, 0, 1, 8, 252]  	151	1 
[0, 1, 1, 4, 253]  	94	2 
[0, 0, 1, 6, 253]  	117	1 
[0, 3, 0, 5, 253]  	118	3 
[1, 0, 3, 4, 253]  	119	3 
[0, 2, 4, 3, 253]  	133	2 
[1, 0, 1, 3, 254]  	72	2 
[3, 5, 0, 0, 254]  	73	3 
[3, 3, 0, 2, 254]  	85	3 
[1, 1, 6, 0, 254]  	107	5 
[0, 2, 0, 5, 254]  	107	3 
[0, 9, 1, 0, 254]  	114	1 
[0, 1, 5, 2, 254]  	120	2 
[0, 1, 4, 3, 254]  	122	2 
[0, 0, 7, 2, 254]  	139	1 
[0, 2, 8, 0, 254]  	142	1 
[3, 3, 0, 0, 255]  	51	3 
[1, 0, 1, 2, 255]  	55	1 
[0, 0, 1, 4, 255]  	83	1 
[0, 8, 0, 0, 255]  	88	1 
[1, 2, 0, 4, 255]  	96	3 
[0, 3, 2, 2, 255]  	97	2 
[4, 1, 0, 4, 255]  	103	5 
[1, 2, 5, 0, 255]  	103	1 
[0, 1, 4, 2, 255]  	105	2 
[0, 0, 5, 2, 255]  	109	1 
[0, 1, 0, 6, 255]  	113	1 
[0, 0, 8, 0, 255]  	120	1 
------
The gap is between 5 and 248.
Lengths: 2 2 4 5 2 4.
For 149 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^4*z^7
1 + 0*2^64 + 0*2^128 + 0*2^192*z^2*w^7

For 83 = 2*d-d1-d2-d3-d4 you get 4 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^1*z^4
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^4

For 17 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*w^1

Extra powers of p used 4.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 
*/
A = \
[5525664910349077856 + 4891583889573038710*2^64 + 1437350875177613486*2^128 + 3256951823*2^192,11672237938004831360 + 15978878185101011902*2^64 + 298284730398754866*2^128 + 11055451126*2^192,16667841196444327680 + 9698565792264992770*2^64 + 10757922180081495762*2^128 + 5070432268*2^192,18125064631475250432 + 6246533276239406233*2^64 + 4814095077281155882*2^128 + 11901270703*2^192,11074134005866157824 + 11490027773549031100*2^64 + 11719605231251243464*2^128 + 3487020652*2^192,6772048624529214976 + 16185389156881885464*2^64 + 3704642643904171343*2^128 + 3310863993*2^192,511405833723776512 + 4749148527184722917*2^64 + 2258060696197725671*2^128 + 15438125379*2^192,10418079686763870976 + 9821411468057971388*2^64 + 7992623125363083609*2^128 + 813459799*2^192;\
8739747445888850382 + 9721546319732001988*2^64 + 2614266652128004606*2^128 + 13825027175*2^192,10803783203126521264 + 12977499569278242002*2^64 + 1743885579714537905*2^128 + 4297308274*2^192,16079874525998540992 + 2627510586894599249*2^64 + 7820504717964568772*2^128 + 11581769944*2^192,13046367466701376496 + 17929313554940124766*2^64 + 15660977268886685129*2^128 + 815042272*2^192,17071743583300972096 + 16901840822947996282*2^64 + 14510963523285586035*2^128 + 3050775434*2^192,17113423140646049472 + 16533276002820418424*2^64 + 758297153525342824*2^128 + 16151457737*2^192,16527624859098869216 + 715967913310866448*2^64 + 459180843758448491*2^128 + 11843322027*2^192,1428408685861931424 + 7956369809714114497*2^64 + 4749970671051894213*2^128 + 5154737152*2^192;\
4449952995306126848 + 5440945365432487581*2^64 + 3005885223918828541*2^128 + 12844283347*2^192,14773867358939101440 + 13001080789780346659*2^64 + 13974402159881582307*2^128 + 5753126158*2^192,15229970644373338624 + 898398427240564787*2^64 + 4990339139114599512*2^128 + 6375012898*2^192,12840757290748907168 + 14648485118680765041*2^64 + 13995879690201202385*2^128 + 6678412792*2^192,5981091993223662464 + 17993566129511787446*2^64 + 16866829127435756855*2^128 + 4135209045*2^192,6017865154037222912 + 12058169319599150204*2^64 + 9508800613854947883*2^128 + 8815407428*2^192,14139206056033315072 + 17044327821509724796*2^64 + 2729082836963527198*2^128 + 12823512186*2^192,5730152510584622592 + 13038869948036864723*2^64 + 5569931550435093269*2^128 + 17146225713*2^192;\
15802152134311403616 + 3387824620601876800*2^64 + 13064895218270140101*2^128 + 9548631423*2^192,8633214125264686592 + 17856766860254212824*2^64 + 13469773077441347503*2^128 + 5632594817*2^192,10334431067945298336 + 8682688892586576480*2^64 + 6659337431613596208*2^128 + 1037578875*2^192,8492904440791961824 + 9537855107621621961*2^64 + 4971347828978258512*2^128 + 1774590780*2^192,2092288472349508224 + 18061631472440460029*2^64 + 2302844083428676043*2^128 + 14070883274*2^192,5287756697851101184 + 3396446340185654595*2^64 + 8860506972367113466*2^128 + 16396718653*2^192,11259344462378563072 + 412302626745779259*2^64 + 14341231304757347505*2^128 + 7785498227*2^192,2241931229358612480 + 12236685634986482369*2^64 + 18221062629048106892*2^128 + 14198368379*2^192;\
17871258105987998586 + 11159557621150970390*2^64 + 13334082548954614719*2^128 + 6347667880*2^192,18379793555829431120 + 10183270080643265754*2^64 + 12883074880806749863*2^128 + 10918451372*2^192,13634741494128149344 + 2393046976730681748*2^64 + 18321178222953540406*2^128 + 3222814682*2^192,13452312516471702896 + 9529740083201507468*2^64 + 4716310384319772402*2^128 + 3044198010*2^192,779246537733059296 + 9064306474634634304*2^64 + 2453249014297822104*2^128 + 7473760392*2^192,3432496460447285120 + 5677641051482513940*2^64 + 3793882814296164328*2^128 + 4689997966*2^192,7372088238453225888 + 2491915098252090750*2^64 + 16618852646587135699*2^128 + 1649646097*2^192,8924975797718804064 + 11678200965641324663*2^64 + 12422936813092756867*2^128 + 1888638929*2^192;\
18068102599711085281 + 10127323502839115689*2^64 + 5520259654504605766*2^128 + 5101399619*2^192,97184340522454584 + 2168454948000873497*2^64 + 9099410193860512654*2^128 + 6970707930*2^192,18396924084473874400 + 4133962598463455557*2^64 + 17548861045982657527*2^128 + 15888586763*2^192,10618198670088065720 + 10035222596563920286*2^64 + 9838076605440808029*2^128 + 12289916031*2^192,3851530548145736784 + 9841099301756678454*2^64 + 900870288952731179*2^128 + 13595148770*2^192,4342724172352664672 + 16129252297080691808*2^64 + 12342712957860995742*2^128 + 11713459908*2^192,1853300400579345040 + 12423291990547588179*2^64 + 13896423356917667021*2^128 + 16689232257*2^192,3662673775982290096 + 58440469555016317*2^64 + 17426725600334948808*2^128 + 4062469637*2^192;\
5606246027692969264 + 4339976075821951296*2^64 + 6306863544646051350*2^128 + 2115783253*2^192,10060988702138534368 + 7823012489064426064*2^64 + 9215130828383876724*2^128 + 8228206431*2^192,6258613200092401664 + 6276140178345748453*2^64 + 2497054270635884660*2^128 + 8356729665*2^192,16945160521123644576 + 2185086567089309329*2^64 + 13404542390128328852*2^128 + 13824951517*2^192,14995310564641859360 + 417751098843875387*2^64 + 14178870055431031344*2^128 + 8757710059*2^192,14485282906396882560 + 9190941521092020110*2^64 + 8916013096469812943*2^128 + 4611843680*2^192,631937806936141056 + 9265214103623333775*2^64 + 14278478574222996402*2^128 + 10541707090*2^192,8655389982878209216 + 8075818481858939458*2^64 + 7825042435251002110*2^128 + 15441938602*2^192;\
10508707629983375512 + 6410870043586951671*2^64 + 1899117640791501567*2^128 + 15544912399*2^192,11320316945008494080 + 576107602651230966*2^64 + 14298339439937889345*2^128 + 4251442756*2^192,1084191720636715776 + 4777405018663464414*2^64 + 2522067433072114636*2^128 + 17085577403*2^192,16783592755689870400 + 13975165658382270375*2^64 + 6383094842003010991*2^128 + 4418123918*2^192,6501080929434556544 + 15843597278842093531*2^64 + 15055888363343262665*2^128 + 8512202455*2^192,6848733141377696384 + 14251569293136253986*2^64 + 7463638632415104580*2^128 + 8501303202*2^192,1436888289640156224 + 11664832002288937296*2^64 + 2285978172488345146*2^128 + 8573701594*2^192,525484582329411008 + 1143328324878819366*2^64 + 14133444417321193990*2^128 + 4960445830*2^192]
/* 
This matrix times 2^(-4) should be the matrix of frobenius.
*/ 
B = 2^(-4) * A; 
/* Freed 3341 lists. */
The sign is: 1
The characteristic polynomial is: x^8 + x^7 - x^6 - 4*x^5 - 12*x^4 - 16*x^3 - 16*x^2 + 64*x + 256
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 0, 0]
Its factorization is: [x^2 + 2*x + 4, 1; x^6 - x^5 - 3*x^4 + 6*x^3 - 12*x^2 - 16*x + 64, 1]
The valuation of f-g is: 26
The valuation of subst(g,x,A) is: 22
