/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9                     = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^8                     = Coefficient of   y^1 * w^3               = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 117
[3, 3, 0, 0, 0]  	51	5 
[2, 2, 0, 1, 0]  	55	3 
[8, 0, 0, 0, 0]  	64	3  <--- 1
[0, 8, 0, 0, 0]  	72	2  <--- 2
[0, 1, 0, 3, 0]  	72	2 
[7, 2, 1, 0, 0]  	91	6 
[7, 1, 2, 0, 0]  	99	5 
[4, 1, 1, 2, 0]  	100	5 
[7, 1, 0, 2, 0]  	107	4 
[4, 1, 4, 0, 0]  	109	5 
[7, 0, 2, 1, 0]  	111	3 
[6, 0, 0, 3, 0]  	111	4 
[6, 1, 2, 1, 0]  	112	4 
[4, 0, 1, 3, 0]  	112	5 
[0, 7, 3, 0, 0]  	114	2 
[0, 7, 2, 1, 0]  	118	2 
[6, 0, 3, 1, 0]  	120	3 
[2, 4, 4, 0, 0]  	120	3 
[4, 0, 4, 1, 0]  	121	4 
[3, 0, 2, 3, 0]  	121	4 
[2, 0, 0, 5, 0]  	121	4 
[1, 6, 1, 2, 0]  	121	4 
[3, 2, 5, 0, 0]  	127	5 
[2, 3, 5, 0, 0]  	128	5 
[1, 5, 2, 2, 0]  	129	3 
[2, 0, 3, 3, 0]  	130	4 
[6, 0, 5, 0, 0]  	133	4 
[2, 0, 2, 4, 0]  	134	3 
[3, 1, 6, 0, 0]  	135	5 
[1, 5, 5, 0, 0]  	138	2 
[0, 5, 3, 2, 0]  	138	2 
[3, 0, 7, 0, 0]  	143	4 
[1, 4, 6, 0, 0]  	146	2 
[0, 4, 4, 2, 0]  	146	2 
[3, 0, 6, 1, 0]  	147	1 
[1, 0, 2, 5, 0]  	147	1 
[0, 5, 6, 0, 0]  	147	1 
[0, 0, 0, 7, 0]  	147	1  <--- 4
[2, 1, 6, 1, 0]  	148	3 
[1, 2, 6, 1, 0]  	149	2 
[1, 4, 5, 1, 0]  	150	1 
[0, 3, 6, 1, 0]  	150	1 
[1, 1, 8, 0, 0]  	153	3 
[1, 3, 7, 0, 0]  	154	3 
[0, 4, 7, 0, 0]  	155	1 
[2, 0, 7, 1, 0]  	156	1 
[1, 0, 5, 3, 0]  	156	1 
[0, 0, 3, 5, 0]  	156	1 
[0, 2, 7, 1, 0]  	158	1 
[0, 2, 6, 2, 0]  	162	2 
[0, 3, 8, 0, 0]  	163	1 
[1, 0, 8, 1, 0]  	165	1 
[0, 0, 6, 3, 0]  	165	1 
[0, 1, 8, 1, 0]  	166	1 
[2, 0, 9, 0, 0]  	169	3 
[0, 2, 9, 0, 0]  	171	1 
[0, 0, 9, 1, 0]  	174	1 
[0, 1, 10, 0, 0]  	179	1 
[0, 0, 11, 0, 0]  	187	1  <--- 3
[7, 1, 1, 1, 1]  	103	4 
[6, 0, 2, 1, 1]  	103	5 
[2, 7, 2, 0, 1]  	113	6 
[2, 0, 2, 3, 1]  	113	6 
[7, 0, 4, 0, 1]  	124	3 
[1, 2, 4, 2, 1]  	136	3 
[1, 4, 3, 2, 1]  	137	4 
[3, 1, 5, 1, 1]  	139	4 
[2, 0, 6, 1, 1]  	139	3 
[1, 3, 5, 1, 1]  	141	2 
[1, 1, 5, 2, 1]  	144	3 
[1, 0, 1, 6, 1]  	151	2 
[2, 0, 8, 0, 1]  	152	3 
[0, 3, 5, 2, 1]  	154	2 
[0, 1, 7, 2, 1]  	170	2 
[2, 1, 1, 1, 2]  	63	4 
[3, 0, 3, 1, 2]  	96	5 
[4, 0, 4, 0, 2]  	100	5 
[2, 0, 4, 1, 2]  	105	5 
[1, 7, 2, 0, 2]  	105	5 
[2, 0, 3, 2, 2]  	109	3 
[0, 7, 1, 2, 2]  	122	3 
[0, 6, 3, 1, 2]  	126	2 
[1, 6, 4, 0, 2]  	130	4 
[1, 0, 1, 5, 2]  	130	3 
[1, 3, 6, 0, 2]  	137	3 
[0, 6, 5, 0, 2]  	139	2 
[1, 0, 10, 0, 2]  	178	2 
[0, 7, 2, 0, 3]  	97	2 
[0, 7, 0, 2, 3]  	105	3 
[2, 6, 3, 0, 3]  	121	4 
[1, 4, 5, 0, 3]  	129	3 
[1, 0, 4, 3, 3]  	139	3 
[1, 5, 4, 1, 3]  	142	2 
[1, 2, 7, 0, 3]  	145	3 
[1, 1, 7, 1, 3]  	157	2 
[1, 0, 7, 1, 5]  	148	2 
[0, 0, 2, 5, 249]  	139	1 
[0, 6, 2, 2, 250]  	130	2 
[0, 4, 5, 1, 251]  	142	1 
[0, 0, 5, 3, 251]  	148	1 
[1, 0, 0, 5, 252]  	113	3 
[0, 0, 0, 6, 252]  	126	1 
[0, 0, 0, 5, 253]  	105	1 
[0, 0, 8, 1, 253]  	157	1 
[0, 0, 0, 3, 254]  	63	1 
[2, 7, 1, 0, 254]  	96	4 
[1, 6, 0, 2, 254]  	104	3 
[1, 5, 1, 2, 254]  	112	3 
[1, 6, 3, 0, 254]  	113	3 
[1, 6, 2, 1, 254]  	117	2 
[1, 5, 4, 0, 254]  	121	3 
[0, 4, 4, 1, 254]  	125	1 
[0, 6, 3, 0, 255]  	105	2 
[1, 7, 1, 1, 255]  	109	2 
[0, 6, 2, 1, 255]  	109	1 
[0, 0, 8, 0, 255]  	136	1 
[0, 2, 6, 1, 255]  	141	1 
------
The gap is between 6 and 248.
Lengths: 2 2 2 2 2 3.
For 161 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*z^9
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 89 = 2*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 17 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 2.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 
*/
A = \
[15085758543044484752 + 5284759432651823607*2^64 + 9229197922685663264*2^128 + 1627600881*2^192,18149793577129573502 + 11116215515502393991*2^64 + 5444988058641297891*2^128 + 3329745831*2^192,18433806170076998912 + 390873959964761432*2^64 + 2737337860019901853*2^128 + 1730599555*2^192,7134006270880702752 + 15634778378897495030*2^64 + 9321333025036670990*2^128 + 4192251403*2^192,5528132026997126816 + 13694677166223923889*2^64 + 18409708229521567919*2^128 + 1780189513*2^192,7129792999049857376 + 5476530103572128088*2^64 + 4632433475663392304*2^128 + 1546483701*2^192;\
5585675170382509216 + 1151885759127610427*2^64 + 1548320001437931059*2^128 + 1172355114*2^192,5397813327108454184 + 14353393790943475244*2^64 + 8589571479877001101*2^128 + 1856806259*2^192,3121280672520070288 + 5096821170331775824*2^64 + 14266526811160714149*2^128 + 149273975*2^192,12802038617348830720 + 16064591397190235331*2^64 + 10105077963031296260*2^128 + 677416869*2^192,13626319078567998624 + 13062983172097362395*2^64 + 685006335880141032*2^128 + 2754310405*2^192,14076420731954628320 + 3698026349647424139*2^64 + 14665450932293045468*2^128 + 3895800577*2^192;\
4504235305963965440 + 5486187712990373548*2^64 + 5164343209751320391*2^128 + 3754396240*2^192,12601109436985133068 + 3303976773543829629*2^64 + 3344289887085315677*2^128 + 1979335491*2^192,11737730508741295904 + 14989538132637915840*2^64 + 8018567872884977703*2^128 + 2008531793*2^192,9466106928329483008 + 2015949618669515655*2^64 + 566617985420937685*2^128 + 3484399234*2^192,10265754999302386608 + 6266167450651334664*2^64 + 1694800173328486293*2^128 + 742849763*2^192,2486876665707576656 + 461778673274307129*2^64 + 2191022797522661646*2^128 + 1037227454*2^192;\
17686085258511868660 + 441046220503419623*2^64 + 12185753910939569848*2^128 + 3572762432*2^192,16650914313588409396 + 5562754913648743710*2^64 + 938558806516542583*2^128 + 3698855909*2^192,13214880247054669568 + 10611402273931761604*2^64 + 11060136386367497879*2^128 + 1455766538*2^192,7174625391848394248 + 7089848248177184079*2^64 + 14145969486479882173*2^128 + 1096304369*2^192,16631513908853785952 + 12306658958027021108*2^64 + 4509273946303709276*2^128 + 1114371098*2^192,8680283936666209856 + 17378091009368219190*2^64 + 1035249381034050005*2^128 + 1338345304*2^192;\
52420192930781688 + 11043990550553913476*2^64 + 10029307582337583986*2^128 + 3217619835*2^192,10847107378634407259 + 11329039640680366887*2^64 + 18045331391359389084*2^128 + 3662812183*2^192,4229847921220006616 + 4643356426661028640*2^64 + 5088929812483584183*2^128 + 4100532143*2^192,4803433283778694984 + 5304954141792522715*2^64 + 6355455835447946005*2^128 + 2535579710*2^192,3968849589530157344 + 1876388511488343429*2^64 + 11054600816446123974*2^128 + 2871483309*2^192,1721351816767843872 + 7545855705796761517*2^64 + 12729745670669325939*2^128 + 1930475949*2^192;\
7848027110457477088 + 3380010601609930843*2^64 + 10509177566024812349*2^128 + 4051195809*2^192,3847999551719870725 + 17591128617960510946*2^64 + 12467437862692506888*2^128 + 735222531*2^192,14881202150567884936 + 5203874881759622397*2^64 + 12414083315227487752*2^128 + 3680309368*2^192,18148658762124148568 + 15424938413495437958*2^64 + 13402338856964717744*2^128 + 61854226*2^192,7820895203827923600 + 8411342087027750462*2^64 + 9704698238713158580*2^128 + 3203918148*2^192,3208682377786817536 + 10800495842377733371*2^64 + 17426780698182121081*2^128 + 4146829934*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2439 lists. */
