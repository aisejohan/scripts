/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1               = Coefficient of   x^7 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^7               = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^6 * z^1               = Coefficient of   y^1 * w^3               = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 151
[3, 3, 0, 0, 0]  	39	5 
[7, 0, 0, 0, 0]  	42	5  <--- 1
[6, 0, 1, 0, 0]  	49	5 
[0, 6, 1, 0, 0]  	55	2 
[2, 7, 0, 0, 0]  	61	5 
[5, 1, 2, 0, 0]  	63	6 
[5, 1, 0, 2, 0]  	69	7 
[4, 2, 0, 2, 0]  	70	7 
[3, 1, 0, 3, 0]  	73	5 
[2, 2, 0, 3, 0]  	74	5 
[3, 2, 1, 2, 0]  	77	8 
[3, 1, 4, 0, 0]  	77	7 
[5, 0, 0, 3, 0]  	78	7 
[3, 0, 1, 3, 0]  	79	8 
[1, 6, 0, 2, 0]  	80	6 
[2, 1, 5, 0, 0]  	84	6 
[5, 0, 3, 1, 0]  	85	6 
[2, 4, 1, 2, 0]  	85	7 
[3, 0, 4, 1, 0]  	86	7 
[2, 5, 3, 0, 0]  	86	7 
[2, 0, 2, 3, 0]  	86	7 
[0, 5, 4, 0, 0]  	87	2 
[4, 0, 5, 0, 0]  	89	8 
[1, 12, 0, 0, 0]  	90	5 
[2, 3, 2, 2, 0]  	91	7 
[1, 3, 0, 4, 0]  	91	7 
[2, 4, 4, 0, 0]  	92	6 
[2, 0, 0, 5, 0]  	92	6 
[1, 10, 0, 1, 0]  	92	6 
[2, 0, 5, 1, 0]  	93	6 
[1, 1, 0, 5, 0]  	93	5 
[2, 0, 4, 2, 0]  	96	5 
[2, 2, 3, 2, 0]  	97	6 
[1, 2, 1, 4, 0]  	97	5 
[1, 3, 3, 2, 0]  	98	6 
[1, 5, 2, 2, 0]  	99	4 
[1, 4, 5, 0, 0]  	99	4 
[1, 0, 1, 5, 0]  	99	4 
[1, 1, 3, 3, 0]  	100	5 
[2, 3, 4, 1, 0]  	101	5 
[1, 3, 2, 3, 0]  	101	5 
[1, 5, 1, 3, 0]  	102	5 
[1, 0, 0, 6, 0]  	102	4 
[1, 3, 6, 0, 0]  	105	4 
[0, 15, 0, 0, 0]  	105	3  <--- 2
[1, 0, 4, 3, 0]  	106	4 
[0, 6, 0, 4, 0]  	106	4 
[1, 1, 6, 1, 0]  	107	3 
[0, 13, 0, 1, 0]  	107	3 
[0, 2, 1, 5, 0]  	107	3 
[1, 3, 5, 1, 0]  	108	3 
[0, 4, 0, 5, 0]  	108	3 
[0, 11, 0, 2, 0]  	109	3 
[0, 5, 2, 3, 0]  	109	2 
[0, 9, 0, 3, 0]  	111	3 
[0, 5, 1, 4, 0]  	112	2 
[0, 4, 4, 2, 0]  	112	2 
[0, 3, 7, 0, 0]  	112	2 
[1, 0, 7, 1, 0]  	113	2 
[0, 1, 2, 5, 0]  	113	2 
[0, 2, 4, 3, 0]  	114	2 
[0, 4, 3, 3, 0]  	115	2 
[2, 0, 8, 0, 0]  	116	3 
[1, 2, 5, 2, 0]  	117	3 
[1, 1, 8, 0, 0]  	117	3 
[0, 3, 0, 6, 0]  	117	3 
[0, 3, 5, 2, 0]  	118	2 
[0, 1, 0, 7, 0]  	119	1 
[0, 0, 3, 5, 0]  	119	1 
[0, 2, 7, 1, 0]  	121	1 
[1, 0, 9, 0, 0]  	123	3 
[0, 2, 6, 2, 0]  	124	2 
[0, 0, 1, 7, 0]  	125	1 
[0, 0, 6, 3, 0]  	126	1 
[0, 1, 8, 1, 0]  	127	1 
[0, 0, 0, 8, 0]  	128	1  <--- 4
[0, 2, 9, 0, 0]  	131	1 
[0, 0, 9, 1, 0]  	133	1 
[0, 1, 10, 0, 0]  	137	1 
[0, 0, 11, 0, 0]  	143	1  <--- 3
[3, 2, 0, 1, 1]  	48	5 
[2, 2, 1, 1, 1]  	55	5 
[3, 1, 1, 2, 1]  	70	8 
[5, 0, 2, 1, 1]  	72	8 
[2, 1, 2, 2, 1]  	77	7 
[4, 0, 3, 1, 1]  	79	7 
[2, 1, 1, 3, 1]  	80	6 
[1, 2, 1, 3, 1]  	81	5 
[4, 0, 2, 2, 1]  	82	6 
[2, 1, 0, 4, 1]  	83	5 
[2, 3, 4, 0, 1]  	85	6 
[1, 0, 3, 3, 1]  	93	5 
[1, 5, 3, 1, 1]  	96	4 
[2, 0, 7, 0, 1]  	103	5 
[1, 1, 2, 4, 1]  	103	4 
[1, 2, 4, 2, 1]  	104	5 
[0, 4, 1, 4, 1]  	105	3 
[0, 5, 3, 2, 1]  	106	3 
[1, 1, 5, 2, 1]  	110	5 
[1, 2, 7, 0, 1]  	111	3 
[0, 3, 2, 4, 1]  	111	3 
[0, 2, 3, 4, 1]  	117	3 
[3, 1, 2, 1, 2]  	67	7 
[3, 0, 5, 0, 2]  	83	8 
[3, 0, 3, 2, 2]  	89	6 
[1, 2, 6, 0, 2]  	98	5 
[1, 0, 6, 1, 2]  	100	4 
[1, 2, 5, 1, 2]  	101	4 
[1, 1, 7, 0, 2]  	104	5 
[0, 4, 6, 1, 2]  	122	2 
[0, 1, 7, 2, 2]  	130	2 
[2, 1, 3, 1, 3]  	74	6 
[2, 0, 6, 0, 3]  	90	6 
[1, 1, 4, 2, 3]  	97	5 
[1, 0, 8, 0, 3]  	110	4 
[1, 2, 3, 2, 4]  	91	6 
[0, 1, 5, 3, 5]  	120	2 
[1, 4, 4, 1, 6]  	102	4 
[0, 10, 0, 2, 249]  	102	3 
[0, 0, 8, 1, 251]  	120	1 
[0, 2, 0, 6, 252]  	110	3 
[1, 5, 3, 0, 253]  	80	4 
[1, 11, 0, 0, 253]  	83	4 
[0, 5, 1, 3, 253]  	96	2 
[2, 1, 0, 3, 254]  	67	5 
[2, 0, 1, 3, 254]  	73	5 
[1, 1, 1, 3, 254]  	74	4 
[0, 6, 0, 2, 254]  	74	3 
[0, 1, 0, 5, 254]  	87	1 
[1, 5, 0, 3, 254]  	89	4 
[1, 1, 6, 0, 254]  	91	5 
[0, 13, 0, 0, 254]  	91	1 
[1, 0, 2, 4, 254]  	96	4 
[0, 0, 1, 6, 254]  	109	1 
[0, 0, 10, 0, 254]  	130	1 
[1, 6, 0, 0, 255]  	48	2 
[2, 5, 1, 0, 255]  	60	5 
[1, 1, 0, 3, 255]  	61	2 
[3, 0, 0, 3, 255]  	66	4 
[1, 5, 2, 0, 255]  	67	3 
[2, 0, 0, 4, 255]  	76	4 
[2, 5, 0, 2, 255]  	79	4 
[1, 0, 2, 3, 255]  	80	4 
[1, 4, 4, 0, 255]  	86	4 
[0, 5, 2, 2, 255]  	93	2 
[0, 0, 1, 5, 255]  	93	1 
[1, 3, 4, 1, 255]  	95	2 
[1, 0, 7, 0, 255]  	97	4 
[0, 0, 8, 0, 255]  	104	1 
[0, 3, 4, 2, 255]  	105	1 
[0, 2, 5, 2, 255]  	111	1 
------
The gap is between 7 and 248.
Lengths: 2 2 5 6 2 2.
For 123 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 68 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^2*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^3*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 13 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 1.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[373608368273627944 + 6777933922798592707*2^64 + 13760788126187397085*2^128 + 391466852*2^192,17532459913125523884 + 3642002521564219488*2^64 + 8526067778245247405*2^128 + 2494421566*2^192,4722414318155024640 + 5846670202952391004*2^64 + 16410511343705020132*2^128 + 84775379*2^192,15237391395737166064 + 5692487967299678537*2^64 + 9203104625445470050*2^128 + 1699001096*2^192,16314245318746743136 + 522445589457400249*2^64 + 8062954408387790007*2^128 + 2127239446*2^192,8496507071341630576 + 11113493300321691455*2^64 + 1260189710861565763*2^128 + 852759878*2^192,7937087675714031408 + 17372129691820150112*2^64 + 7275572225248877032*2^128 + 3200519883*2^192,14849385968810630128 + 12268948508445381692*2^64 + 15849233632378397070*2^128 + 2130069314*2^192,11453352223678904560 + 14714798566818735879*2^64 + 1263689920649451220*2^128 + 152524603*2^192;\
3300376457555002048 + 7652014937222636932*2^64 + 4011081220823122789*2^128 + 3519175189*2^192,2431313949942042312 + 17068578134223350937*2^64 + 9587229395798377093*2^128 + 3151702424*2^192,3060950909962380800 + 15823999692230134894*2^64 + 3972029300208221918*2^128 + 2991175765*2^192,2352718262972936192 + 1615053155954979768*2^64 + 14938904212649345371*2^128 + 3209544540*2^192,10451118972522007792 + 15526409380346894796*2^64 + 13167998159418096413*2^128 + 3454387780*2^192,13988387738509488800 + 17913419162468647749*2^64 + 13186466264235720974*2^128 + 532395139*2^192,11749510773095747968 + 9094288138059204939*2^64 + 832435754041203282*2^128 + 2491093013*2^192,6173057504276420352 + 15860495192400930698*2^64 + 10600020176799763202*2^128 + 2388100035*2^192,8024087961626820672 + 16412246068773125189*2^64 + 16569504459687210308*2^128 + 3448686105*2^192;\
0 + 0*2^64 + 0*2^128 + 1442840576*2^192,0 + 0*2^64 + 0*2^128 + 285212672*2^192,10250701138584141832 + 5237561937588078428*2^64 + 15069447012531778926*2^128 + 918369502*2^192,0 + 0*2^64 + 0*2^128 + 1333788672*2^192,0 + 0*2^64 + 0*2^128 + 1224736768*2^192,0 + 0*2^64 + 0*2^128 + 100663296*2^192,0 + 0*2^64 + 0*2^128 + 243269632*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 1627389952*2^192;\
2426063583504893633 + 10012277507192880705*2^64 + 3161391179420406544*2^128 + 2635740463*2^192,15305281386748182627 + 7622822295835081264*2^64 + 3307805309091746571*2^128 + 1837649228*2^192,702976937377952196 + 16729135826484417499*2^64 + 11369813008223196692*2^128 + 4068103000*2^192,11411277093720046876 + 5334255537091127098*2^64 + 9443670859156994321*2^128 + 117688217*2^192,3975671542739964692 + 5971900186498298981*2^64 + 15977399265004029912*2^128 + 3418348761*2^192,14354699678687782904 + 7416456370958903960*2^64 + 6496487607306613987*2^128 + 359391130*2^192,3691069337318650480 + 2776882165585908955*2^64 + 2421129293543643077*2^128 + 3475553510*2^192,13769314208611655240 + 3329840149571242283*2^64 + 2359518943351619813*2^128 + 3075562366*2^192,11297925127238799828 + 8374354638281341512*2^64 + 17089122018921746008*2^128 + 1480266581*2^192;\
6080138255523975632 + 9871333938086592393*2^64 + 10811803407813672972*2^128 + 3441080419*2^192,15900747852444946472 + 8789386147332896035*2^64 + 17762547298954409294*2^128 + 3636813839*2^192,18011792856308696128 + 703090629760137017*2^64 + 13688255785263795447*2^128 + 2483618467*2^192,7687523065250662688 + 14668191434918116843*2^64 + 8060163403951659788*2^128 + 1804645776*2^192,12340979465461556736 + 2631327768938185059*2^64 + 3656321201200279447*2^128 + 4170080930*2^192,13057148556124246912 + 3019233324082930615*2^64 + 3528719703070065548*2^128 + 848889466*2^192,11851648192819671008 + 2219327755628226123*2^64 + 2954957626817132704*2^128 + 2367534470*2^192,16456695964780601424 + 2541458025854065296*2^64 + 7583581410274211344*2^128 + 3744994178*2^192,17364772503392192624 + 2790103186402595656*2^64 + 16163524527336459713*2^128 + 345378078*2^192;\
9600345881199383931 + 15911869509774811382*2^64 + 7180078407200519074*2^128 + 362402886*2^192,8456979318991131377 + 3668511990228062093*2^64 + 17741940450010954931*2^128 + 3627179201*2^192,8013610500165486908 + 8755956501869146531*2^64 + 15897569885044464290*2^128 + 3167776116*2^192,2587500477305830356 + 4011621404690873449*2^64 + 10733923042174266898*2^128 + 337535728*2^192,14985272694869666676 + 11962555194478536679*2^64 + 6951614729081428914*2^128 + 3422625394*2^192,2440176661903179320 + 16377936240069655838*2^64 + 2804173989069406706*2^128 + 2289103959*2^192,4001269853531342120 + 3352978610903355608*2^64 + 16537883931240531709*2^128 + 895922177*2^192,11974338381227873768 + 10808144819925664611*2^64 + 7963630894717829300*2^128 + 400104910*2^192,1317970034607932508 + 10414327609957708723*2^64 + 15106616146536278879*2^128 + 1317254991*2^192;\
12289293532109095884 + 1152435421496768131*2^64 + 14314999271292287969*2^128 + 12414137*2^192,6143198968029236908 + 14033527108365508619*2^64 + 10114414306804541213*2^128 + 2668301529*2^192,12358624011872431136 + 16831924802796535905*2^64 + 3598390150033821660*2^128 + 2334667616*2^192,1548296251117689448 + 3607955255432166147*2^64 + 16726970946623400140*2^128 + 2156524634*2^192,12323977460280702768 + 12634625989227471027*2^64 + 15281740938472408872*2^128 + 46540376*2^192,3213632816123633912 + 11292923635500476477*2^64 + 15241982859608320437*2^128 + 904991104*2^192,16536648414979189024 + 9071035748125771363*2^64 + 3697315691488106414*2^128 + 3084684899*2^192,17769474083515417568 + 12923547486321326488*2^64 + 6942994411750778560*2^128 + 2170853495*2^192,6451630739652704864 + 17082885519364788151*2^64 + 9843182072249270514*2^128 + 555588831*2^192;\
12560126785884994363 + 11003493886004467580*2^64 + 2029725396270391631*2^128 + 2619620912*2^192,1608512886858912317 + 18134451195972428528*2^64 + 2439718856236980718*2^128 + 435906012*2^192,9395680526695866532 + 8275028287366233083*2^64 + 3070955530940038164*2^128 + 811654965*2^192,11886166516751893028 + 9580296115922406531*2^64 + 4005498394819559483*2^128 + 420512445*2^192,16472626984413427508 + 3317343552956246901*2^64 + 12457249039182828062*2^128 + 2634456971*2^192,17548165034398800328 + 9767045618959145981*2^64 + 9447556724363407352*2^128 + 2273362586*2^192,18098662436767401240 + 3841226581129585346*2^64 + 11515540799413773076*2^128 + 1337246100*2^192,17226685458026062152 + 12113173922635510049*2^64 + 9714296558923919305*2^128 + 2110560873*2^192,5731874354217392684 + 15337743326836362021*2^64 + 17526259364600562718*2^128 + 3223981772*2^192;\
10053525481157604963 + 10183110422562238059*2^64 + 14395794768313204197*2^128 + 4090832821*2^192,4204900730731994269 + 18433230094679303476*2^64 + 2015733322212409859*2^128 + 1720481120*2^192,7688544042892411556 + 1758079660654373*2^64 + 1421381735296938025*2^128 + 2340600866*2^192,10798565289102404116 + 14630729760358214698*2^64 + 9210152567758172327*2^128 + 2126044552*2^192,9102154966130475300 + 8296981118275115371*2^64 + 5582038527202563818*2^128 + 3201057988*2^192,3115266875143717864 + 13818465833100596621*2^64 + 1131588374738596466*2^128 + 1460288118*2^192,4045893294994143080 + 47675163063626292*2^64 + 524157400135847861*2^128 + 1524525598*2^192,6780838626091084664 + 12399039052574954915*2^64 + 318932196471597036*2^128 + 639131603*2^192,8227255186048297548 + 11934822861898266759*2^64 + 2816397591524412759*2^128 + 389136227*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 4741 lists. */
The sign is: -1
The characteristic polynomial is: x^9 - 2*x^6 - 12*x^5 - 24*x^4 - 16*x^3 + 512
Its Newton polygon is: [5/3, 5/3, 5/3, 1, 1, 1, 1/3, 1/3, 1/3]
Its factorization is: [x - 2, 2; x + 2, 1; x^6 + 2*x^5 + 8*x^4 + 14*x^3 + 32*x^2 + 32*x + 64, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 29
