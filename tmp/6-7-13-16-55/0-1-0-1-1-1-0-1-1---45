/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1               = Coefficient of   x^7 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^7               = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^6 * z^1               = Coefficient of   y^1 * w^3               = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 134
[2, 2, 1, 0, 0]  	39	4 
[7, 0, 0, 0, 0]  	42	4  <--- 1
[6, 0, 1, 0, 0]  	49	4 
[1, 7, 0, 0, 0]  	55	2 
[1, 1, 2, 1, 0]  	55	3 
[1, 6, 1, 0, 0]  	61	4 
[5, 1, 2, 0, 0]  	63	6 
[5, 1, 0, 2, 0]  	69	5 
[4, 2, 0, 2, 0]  	70	6 
[5, 6, 0, 0, 0]  	72	6 
[1, 1, 1, 3, 0]  	74	5 
[4, 1, 0, 3, 0]  	79	7 
[4, 0, 3, 1, 0]  	79	7 
[2, 0, 4, 1, 0]  	80	6 
[1, 6, 0, 2, 0]  	80	5 
[3, 0, 5, 0, 0]  	83	6 
[6, 0, 0, 3, 0]  	84	5 
[1, 0, 5, 1, 0]  	87	2 
[0, 6, 1, 2, 0]  	87	4 
[1, 0, 4, 2, 0]  	90	4 
[5, 0, 1, 3, 0]  	91	2 
[1, 5, 4, 0, 0]  	93	5 
[1, 1, 0, 5, 0]  	93	5 
[1, 0, 3, 3, 0]  	93	5 
[2, 3, 0, 4, 0]  	97	7 
[4, 0, 2, 3, 0]  	98	8 
[3, 0, 0, 5, 0]  	98	6 
[1, 4, 5, 0, 0]  	99	4 
[1, 0, 1, 5, 0]  	99	4 
[0, 10, 1, 1, 0]  	99	4 
[1, 0, 0, 6, 0]  	102	4 
[1, 5, 0, 4, 0]  	105	4 
[0, 15, 0, 0, 0]  	105	4  <--- 2
[0, 9, 2, 1, 0]  	105	4 
[0, 6, 0, 4, 0]  	106	3 
[0, 5, 3, 2, 0]  	106	3 
[0, 8, 4, 0, 0]  	108	3 
[0, 11, 0, 2, 0]  	109	4 
[0, 5, 2, 3, 0]  	109	3 
[2, 1, 7, 0, 0]  	110	7 
[0, 8, 3, 1, 0]  	111	3 
[0, 5, 1, 4, 0]  	112	3 
[0, 4, 4, 2, 0]  	112	3 
[0, 1, 2, 5, 0]  	113	2 
[0, 7, 5, 0, 0]  	114	3 
[0, 5, 0, 5, 0]  	115	2 
[0, 4, 3, 3, 0]  	115	2 
[2, 0, 8, 0, 0]  	116	5 
[0, 13, 2, 0, 0]  	117	5 
[0, 7, 4, 1, 0]  	117	3 
[1, 3, 7, 0, 0]  	118	2 
[0, 10, 0, 3, 0]  	118	2 
[0, 4, 2, 4, 0]  	118	2 
[0, 3, 5, 2, 0]  	118	2 
[0, 4, 7, 0, 0]  	119	1 
[0, 1, 0, 7, 0]  	119	1 
[0, 0, 3, 5, 0]  	119	1 
[0, 1, 5, 3, 0]  	120	2 
[0, 4, 1, 5, 0]  	121	1 
[0, 3, 4, 3, 0]  	121	1 
[0, 2, 7, 1, 0]  	121	1 
[1, 0, 9, 0, 0]  	123	6 
[0, 4, 0, 6, 0]  	124	2 
[0, 3, 3, 4, 0]  	124	2 
[0, 2, 6, 2, 0]  	124	2 
[0, 3, 8, 0, 0]  	125	1 
[0, 0, 1, 7, 0]  	125	1 
[0, 0, 6, 3, 0]  	126	1 
[0, 1, 8, 1, 0]  	127	1 
[0, 0, 0, 8, 0]  	128	1  <--- 4
[0, 3, 1, 6, 0]  	130	2 
[0, 2, 4, 4, 0]  	130	2 
[0, 1, 7, 2, 0]  	130	2 
[0, 2, 9, 0, 0]  	131	1 
[0, 0, 9, 1, 0]  	133	1 
[0, 1, 10, 0, 0]  	137	1 
[0, 0, 11, 0, 0]  	143	1  <--- 3
[2, 1, 1, 1, 1]  	48	4 
[1, 2, 0, 3, 1]  	68	3 
[0, 7, 0, 2, 1]  	81	4 
[5, 0, 4, 0, 1]  	82	7 
[2, 0, 0, 5, 1]  	92	6 
[1, 0, 2, 4, 1]  	96	4 
[2, 1, 6, 0, 1]  	97	7 
[2, 0, 7, 0, 1]  	103	5 
[0, 13, 1, 0, 1]  	104	6 
[1, 3, 6, 0, 1]  	105	4 
[1, 0, 8, 0, 1]  	110	5 
[2, 1, 0, 3, 2]  	67	6 
[0, 2, 0, 5, 2]  	94	3 
[0, 12, 0, 1, 2]  	100	4 
[0, 4, 1, 4, 2]  	105	3 
[0, 10, 3, 0, 2]  	109	3 
[0, 3, 2, 4, 2]  	111	3 
[0, 2, 3, 4, 2]  	117	3 
[4, 0, 1, 3, 3]  	85	7 
[0, 7, 2, 1, 3]  	91	3 
[0, 6, 3, 1, 3]  	97	3 
[0, 14, 0, 0, 3]  	98	4 
[0, 5, 4, 1, 3]  	103	3 
[0, 6, 5, 0, 3]  	107	3 
[1, 2, 7, 0, 3]  	111	4 
[0, 5, 6, 0, 3]  	113	2 
[0, 2, 4, 3, 3]  	114	2 
[0, 4, 6, 1, 4]  	122	2 
[2, 0, 2, 3, 5]  	86	7 
[0, 3, 7, 0, 6]  	112	2 
[0, 2, 5, 2, 249]  	111	2 
[0, 1, 7, 1, 249]  	114	1 
[0, 9, 1, 1, 250]  	92	3 
[0, 0, 0, 7, 250]  	112	1 
[1, 4, 4, 0, 251]  	86	5 
[0, 1, 6, 2, 251]  	117	1 
[0, 3, 1, 4, 252]  	98	2 
[0, 1, 4, 3, 252]  	107	2 
[0, 0, 2, 6, 252]  	122	1 
[0, 8, 1, 1, 253]  	85	3 
[0, 1, 4, 2, 253]  	91	1 
[0, 1, 3, 3, 253]  	94	2 
[0, 0, 5, 2, 253]  	97	1 
[0, 7, 4, 0, 253]  	101	1 
[0, 0, 3, 4, 253]  	103	1 
[0, 0, 7, 1, 253]  	107	1 
[2, 0, 3, 1, 254]  	67	5 
[0, 1, 2, 3, 254]  	81	2 
[0, 1, 1, 5, 254]  	100	2 
[0, 0, 1, 6, 254]  	109	1 
[1, 6, 0, 0, 255]  	48	3 
[0, 1, 1, 3, 255]  	68	2 
[0, 6, 0, 2, 255]  	74	3 
[1, 5, 3, 0, 255]  	80	2 
[0, 1, 0, 5, 255]  	87	2 
[0, 0, 0, 6, 255]  	96	1 
[0, 1, 9, 0, 255]  	124	1 
------
The gap is between 7 and 248.
Lengths: 2 2 5 6 2 5.
For 123 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 68 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 13 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[17484559420024371592 + 12433783149076654456*2^64 + 11331208651406774124*2^128 + 6791020581*2^192,5966886995404358524 + 12620015961976993993*2^64 + 4356798617354859928*2^128 + 6900198573*2^192,2573211540639419664 + 9389188188352194237*2^64 + 10558299514268470505*2^128 + 4067782520*2^192,12710083081150272012 + 14326599051919091382*2^64 + 18051873339643494215*2^128 + 2583271003*2^192,353757054479074714 + 13769580664770822626*2^64 + 9442934788574659004*2^128 + 2738001697*2^192,15665203071136829164 + 75250867335518171*2^64 + 2118339091866105668*2^128 + 4584288826*2^192,3003221060842818256 + 1649184102280042752*2^64 + 7180463740340344097*2^128 + 2103136740*2^192,4257513354714825316 + 11816415051151890908*2^64 + 5636779931799494083*2^128 + 413785470*2^192,16465822664486083576 + 18413875121387798276*2^64 + 16484135204523146796*2^128 + 1138736549*2^192;\
4729518990524764864 + 472572865959898408*2^64 + 3215901752683157318*2^128 + 1093058218*2^192,14601068775686822396 + 3855437223998592271*2^64 + 7442135682751974775*2^128 + 5699932216*2^192,5254991284673409744 + 6049421905439836677*2^64 + 14901380755980979416*2^128 + 5458853866*2^192,10780080398694977028 + 5475153669719056607*2^64 + 11883230562768648760*2^128 + 1591858589*2^192,16552287324093886542 + 3045760655942674837*2^64 + 12055569152237385511*2^128 + 3019150431*2^192,9082551139426403588 + 9770296854592425811*2^64 + 16108116612814716367*2^128 + 3019808842*2^192,4246996971275557488 + 16871189520737432071*2^64 + 4113152104559112268*2^128 + 4956067323*2^192,4956086238437664748 + 13879983487933772127*2^64 + 7947424154517383791*2^128 + 2650325138*2^192,9524200196022557800 + 12410696149577886219*2^64 + 253440671442298781*2^128 + 4135067943*2^192;\
0 + 0*2^64 + 0*2^128 + 1610612736*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192,2054658203458732048 + 10475123875176156857*2^64 + 11692149951354006236*2^128 + 1635412413*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192,0 + 0*2^64 + 0*2^128 + 1610612736*2^192;\
5594977028238815776 + 9025203613736869604*2^64 + 18191005743656670527*2^128 + 2067707681*2^192,84530069558005584 + 4394859255056073902*2^64 + 8119232099478773080*2^128 + 2455432087*2^192,14839056751075304608 + 16413482959476696039*2^64 + 9506396101260996454*2^128 + 3124465629*2^192,5033282319282362912 + 9704312564385079536*2^64 + 11119562820460825994*2^128 + 3854103535*2^192,77587609594092344 + 4046354242737616432*2^64 + 14300887123180259419*2^128 + 960987659*2^192,2034771871265821392 + 4260782780790917187*2^64 + 12589252571908910804*2^128 + 1306369317*2^192,6086088651670715328 + 13270788938424074852*2^64 + 11196980333486762301*2^128 + 1745670603*2^192,7782952070960199664 + 9233781720238393595*2^64 + 6490830698793923358*2^128 + 3842298597*2^192,13469282046224049952 + 6529023982821677356*2^64 + 778324548382416757*2^128 + 327263034*2^192;\
0 + 0*2^64 + 0*2^128 + 67108864*2^192,0 + 0*2^64 + 0*2^128 + 2281701376*2^192,0 + 0*2^64 + 0*2^128 + 1879048192*2^192,0 + 0*2^64 + 0*2^128 + 2248146944*2^192,2054658203458732048 + 10475123875176156857*2^64 + 11692149951354006236*2^128 + 695888317*2^192,0 + 0*2^64 + 0*2^128 + 402653184*2^192,0 + 0*2^64 + 0*2^128 + 1140850688*2^192,0 + 0*2^64 + 0*2^128 + 2080374784*2^192,0 + 0*2^64 + 0*2^128 + 2852126720*2^192;\
13969202701722321144 + 17146303622660503106*2^64 + 2924615179806442181*2^128 + 1781133894*2^192,4618817253927749308 + 1396562499938320016*2^64 + 9632505597235907070*2^128 + 787048360*2^192,4658943697405571736 + 11601997080225045355*2^64 + 12257581743328604391*2^128 + 6803719960*2^192,9387787258219924148 + 7665728184883193550*2^64 + 12402401475168261335*2^128 + 1381250744*2^192,12056366317289288818 + 18016121741514898832*2^64 + 3884962021678238646*2^128 + 2171245338*2^192,15382668583629257820 + 12885043408055043097*2^64 + 7318850329475852549*2^128 + 8275212911*2^192,9819495971345874576 + 17142309711970793692*2^64 + 3039318709986122620*2^128 + 2567794340*2^192,7008588092595593572 + 3301582049063544351*2^64 + 13553844023310298684*2^128 + 1220694256*2^192,7882836918987068280 + 16213293852162287678*2^64 + 13957960011969550329*2^128 + 5607863203*2^192;\
7565460925194839904 + 12022118268790676392*2^64 + 8980246335932554406*2^128 + 721595253*2^192,7594103815612707718 + 2764460977997409893*2^64 + 15632341912507061504*2^128 + 7369761687*2^192,4495099778443022960 + 18064118099608941614*2^64 + 7874421078540203066*2^128 + 3692070255*2^192,4086328556469728378 + 896851115393145536*2^64 + 9089350676412153695*2^128 + 2466179786*2^192,11948339804579752743 + 14292196112221783093*2^64 + 1194086447391229006*2^128 + 6657071969*2^192,2850549410990608018 + 2006089964240837978*2^64 + 16871767234791450866*2^128 + 1924359434*2^192,4070678769365024584 + 6927064919434235164*2^64 + 5518831511815761984*2^128 + 6531969748*2^192,11858160689952972486 + 6398375599163609486*2^64 + 8088912950935658787*2^128 + 7620165627*2^192,11067907107406001428 + 16541639307113896059*2^64 + 7322225435594727253*2^128 + 8042540136*2^192;\
11146627370480712832 + 10979682443911283653*2^64 + 5841051310919375886*2^128 + 324019045*2^192,12325483462133016672 + 5810892984571174556*2^64 + 10219030431044383486*2^128 + 1562762663*2^192,2652384006940590688 + 7114277699425668972*2^64 + 8774377643815140080*2^128 + 688590386*2^192,9545046703470584000 + 16950163174350537556*2^64 + 11208963866946590029*2^128 + 3538291980*2^192,16253022999183967504 + 5010005865224192585*2^64 + 14612500868038240792*2^128 + 2181853005*2^192,15828750081294826144 + 218398814865046886*2^64 + 9116665498382691997*2^128 + 174163021*2^192,190297449959035520 + 6860453233485480120*2^64 + 5099929110269366296*2^128 + 2808577680*2^192,8314768993007550208 + 16499822333973045855*2^64 + 11163876849028305483*2^128 + 4072045032*2^192,619756055999074880 + 14224281540103148899*2^64 + 1065534360140608680*2^128 + 412155982*2^192;\
566554442797706176 + 18247240487933386819*2^64 + 12240666717114401672*2^128 + 5388858351*2^192,17875767075066717012 + 9810769991257832924*2^64 + 1798344167369248422*2^128 + 7368527978*2^192,10012539009140132736 + 2538368667125797481*2^64 + 4284096958139712582*2^128 + 1282493297*2^192,8378425082680499116 + 13293216144215488428*2^64 + 5840398246711511675*2^128 + 11762551*2^192,6570275388758823890 + 1389981005353361571*2^64 + 14716208457008217197*2^128 + 3791891705*2^192,10943647331415224156 + 9378521184223413858*2^64 + 8657544141935178175*2^128 + 6360779148*2^192,16398654903111822960 + 4758691140091103892*2^64 + 449029184221669055*2^128 + 7838159277*2^192,440509445897044628 + 10863005075695464903*2^64 + 3878333953330059964*2^128 + 8497671437*2^192,4155570570456717240 + 9688191037689799902*2^64 + 14251202866899874227*2^128 + 4037455724*2^192]
/* 
This matrix times 2^(-3) should be the matrix of frobenius.
*/ 
B = 2^(-3) * A; 
/* Freed 2491 lists. */
