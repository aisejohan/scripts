/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^8 * y^1               = Coefficient of   x^7 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^7               = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^6 * z^1               = Coefficient of   y^1 * w^3               = Coefficient of   z^3 * w^1               = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^7*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^7 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*w^3 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 130
[2, 2, 1, 0, 0]  	39	4 
[7, 0, 0, 0, 0]  	42	5  <--- 1
[6, 0, 1, 0, 0]  	49	4 
[1, 7, 0, 0, 0]  	55	3 
[1, 1, 2, 1, 0]  	55	4 
[1, 6, 1, 0, 0]  	61	5 
[5, 1, 2, 0, 0]  	63	6 
[5, 1, 0, 2, 0]  	69	5 
[4, 2, 0, 2, 0]  	70	6 
[5, 6, 0, 0, 0]  	72	8 
[1, 1, 1, 3, 0]  	74	3 
[4, 1, 0, 3, 0]  	79	8 
[4, 0, 3, 1, 0]  	79	8 
[2, 0, 4, 1, 0]  	80	6 
[1, 6, 0, 2, 0]  	80	5 
[3, 0, 5, 0, 0]  	83	6 
[6, 0, 0, 3, 0]  	84	6 
[2, 0, 2, 3, 0]  	86	7 
[1, 0, 5, 1, 0]  	87	4 
[1, 0, 4, 2, 0]  	90	5 
[5, 0, 1, 3, 0]  	91	6 
[0, 13, 0, 0, 0]  	91	4  <--- 2
[2, 0, 0, 5, 0]  	92	6 
[1, 5, 4, 0, 0]  	93	4 
[1, 0, 3, 3, 0]  	93	3 
[0, 6, 4, 0, 0]  	94	4 
[2, 3, 0, 4, 0]  	97	6 
[0, 12, 1, 0, 0]  	97	4 
[1, 4, 0, 4, 0]  	98	6 
[1, 4, 5, 0, 0]  	99	4 
[1, 0, 1, 5, 0]  	99	4 
[0, 10, 1, 1, 0]  	99	4 
[0, 11, 2, 0, 0]  	103	4 
[0, 7, 3, 1, 0]  	104	4 
[1, 3, 6, 0, 0]  	105	4 
[0, 9, 2, 1, 0]  	105	3 
[0, 5, 3, 2, 0]  	106	3 
[0, 7, 2, 2, 0]  	107	4 
[0, 11, 0, 2, 0]  	109	4 
[0, 5, 2, 3, 0]  	109	3 
[2, 1, 7, 0, 0]  	110	6 
[1, 2, 7, 0, 0]  	111	4 
[0, 9, 0, 3, 0]  	111	4 
[0, 5, 1, 4, 0]  	112	3 
[0, 4, 4, 2, 0]  	112	2 
[0, 5, 6, 0, 0]  	113	2 
[0, 1, 2, 5, 0]  	113	2 
[0, 4, 3, 3, 0]  	115	2 
[2, 0, 8, 0, 0]  	116	4 
[0, 5, 5, 1, 0]  	116	3 
[1, 1, 8, 0, 0]  	117	4 
[0, 8, 1, 3, 0]  	117	4 
[0, 2, 3, 4, 0]  	117	3 
[1, 0, 0, 7, 0]  	118	2 
[0, 3, 5, 2, 0]  	118	2 
[0, 4, 7, 0, 0]  	119	1 
[0, 1, 0, 7, 0]  	119	1 
[0, 0, 3, 5, 0]  	119	1 
[0, 4, 1, 5, 0]  	121	1 
[0, 3, 4, 3, 0]  	121	1 
[0, 2, 7, 1, 0]  	121	1 
[0, 4, 6, 1, 0]  	122	2 
[1, 3, 0, 6, 0]  	123	5 
[0, 4, 0, 6, 0]  	124	2 
[0, 2, 6, 2, 0]  	124	2 
[0, 3, 8, 0, 0]  	125	1 
[0, 0, 1, 7, 0]  	125	1 
[0, 0, 6, 3, 0]  	126	1 
[0, 2, 5, 3, 0]  	127	1 
[0, 1, 8, 1, 0]  	127	1 
[0, 0, 0, 8, 0]  	128	1  <--- 4
[0, 3, 1, 6, 0]  	130	2 
[0, 1, 7, 2, 0]  	130	2 
[0, 2, 9, 0, 0]  	131	1 
[0, 0, 9, 1, 0]  	133	1 
[1, 0, 10, 0, 0]  	136	4 
[0, 1, 10, 0, 0]  	137	1 
[0, 0, 11, 0, 0]  	143	1  <--- 3
[2, 1, 1, 1, 1]  	48	5 
[1, 2, 0, 3, 1]  	68	3 
[0, 7, 0, 2, 1]  	81	2 
[5, 0, 4, 0, 1]  	82	7 
[0, 6, 1, 2, 1]  	87	4 
[1, 0, 2, 4, 1]  	96	5 
[2, 1, 6, 0, 1]  	97	5 
[1, 2, 6, 0, 1]  	98	5 
[0, 12, 0, 1, 1]  	100	5 
[1, 0, 0, 6, 1]  	102	4 
[2, 0, 7, 0, 1]  	103	4 
[0, 4, 1, 4, 1]  	105	3 
[0, 10, 3, 0, 1]  	109	3 
[1, 0, 8, 0, 1]  	110	4 
[0, 3, 2, 4, 1]  	111	3 
[0, 3, 0, 6, 1]  	117	3 
[2, 1, 0, 3, 2]  	67	6 
[1, 1, 0, 5, 2]  	93	5 
[0, 6, 0, 4, 2]  	106	3 
[0, 5, 0, 5, 2]  	115	2 
[0, 1, 5, 3, 2]  	120	2 
[4, 0, 1, 3, 3]  	85	7 
[0, 2, 4, 3, 3]  	114	2 
[0, 3, 7, 0, 4]  	112	2 
[0, 3, 1, 5, 4]  	114	3 
[0, 2, 1, 5, 6]  	107	3 
[0, 4, 0, 5, 6]  	108	3 
[0, 1, 7, 1, 249]  	114	1 
[0, 3, 3, 3, 250]  	108	2 
[0, 2, 3, 3, 252]  	101	2 
[0, 1, 4, 3, 252]  	107	2 
[0, 0, 0, 7, 252]  	112	1 
[3, 5, 0, 2, 253]  	85	6 
[0, 0, 7, 1, 253]  	107	1 
[2, 0, 3, 1, 254]  	67	5 
[0, 5, 5, 0, 254]  	100	2 
[0, 4, 5, 1, 254]  	109	2 
[0, 3, 6, 1, 254]  	115	1 
[0, 0, 2, 6, 254]  	122	1 
[1, 6, 0, 0, 255]  	48	3 
[0, 0, 4, 1, 255]  	68	1 
[1, 5, 3, 0, 255]  	80	4 
[0, 6, 3, 0, 255]  	81	1 
[0, 5, 4, 0, 255]  	87	1 
[0, 0, 3, 3, 255]  	87	1 
[0, 11, 1, 0, 255]  	90	2 
[0, 11, 0, 1, 255]  	93	3 
[0, 5, 2, 2, 255]  	93	2 
[0, 5, 1, 3, 255]  	96	3 
[0, 4, 6, 0, 255]  	106	2 
[0, 0, 2, 5, 255]  	106	1 
[0, 2, 8, 0, 255]  	118	1 
------
The gap is between 7 and 248.
Lengths: 2 2 5 6 2 4.
For 123 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^7*w^2

For 68 = 2*d-d1-d2-d3-d4 you get 5 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^6*w^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*y^6*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*y^1*z^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1

For 13 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 7.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 
*/
A = \
[7114975124822308520 + 9108585264012189511*2^64 + 3812995046119509480*2^128 + 24749706147*2^192,5886160700403296928 + 14845484647868362594*2^64 + 11998287425904177186*2^128 + 13452898300*2^192,5900162951372045504 + 13682319498782475379*2^64 + 3405734210857306209*2^128 + 20443563879*2^192,15257331982221905280 + 14391487444416758542*2^64 + 17564819538808224974*2^128 + 41401063207*2^192,10037908717544678112 + 15114071072147341613*2^64 + 17798348669534265796*2^128 + 28757381764*2^192,2053831413164494272 + 5964249137679879405*2^64 + 9798449286768528319*2^128 + 40034329730*2^192,1256205863089255168 + 12020628775678216145*2^64 + 6048337213411084702*2^128 + 29321740378*2^192,15869124538630142784 + 13737789964479124817*2^64 + 4073881543265987735*2^128 + 29049570146*2^192,13440958772352383936 + 11695351632920592993*2^64 + 16558501780356991554*2^128 + 50127534556*2^192;\
2290066651535970238 + 5373826397370924452*2^64 + 2546201793060620840*2^128 + 37357350808*2^192,7083518335006543064 + 9199622014540384926*2^64 + 10308780655000961183*2^128 + 17723666554*2^192,9078862047728153936 + 13877557888936788106*2^64 + 6473215492335452339*2^128 + 49781816971*2^192,1131761949975723328 + 2541568676039772651*2^64 + 16980767339634344118*2^128 + 58445531076*2^192,9021310038192703400 + 2303359950555893903*2^64 + 7143159903017225997*2^128 + 44219054340*2^192,10053466037409199216 + 12151785273579735149*2^64 + 227257044147643644*2^128 + 68208460359*2^192,6576023175784459904 + 2668659917943286673*2^64 + 598996304995876133*2^128 + 54648492135*2^192,9675613727502666672 + 3415006937214756089*2^64 + 1084699057777729499*2^128 + 44810757446*2^192,1676191534760472464 + 18300199766658550733*2^64 + 1585706937200645324*2^128 + 43610951437*2^192;\
0 + 0*2^64 + 0*2^128 + 12884901888*2^192,0 + 0*2^64 + 0*2^128 + 12884901888*2^192,16437265627669856384 + 10014014706571048392*2^64 + 1303479242284291812*2^128 + 13083299309*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 12884901888*2^192,0 + 0*2^64 + 0*2^128 + 12884901888*2^192,0 + 0*2^64 + 0*2^128 + 12884901888*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192;\
6493759231002672102 + 5811611274859328132*2^64 + 3634565305133795650*2^128 + 4264542118*2^192,9369221041082247160 + 16034857840653285408*2^64 + 1229697598774502806*2^128 + 1429376821*2^192,16669923605717920656 + 14495817361941976610*2^64 + 12643391802519981854*2^128 + 8456064935*2^192,8637685882226138816 + 101694155653800431*2^64 + 9857612274710979341*2^128 + 40508144957*2^192,17705723167097327496 + 17112040844009836103*2^64 + 5175169937754078966*2^128 + 68273668055*2^192,2426509366620568368 + 1469091412302772206*2^64 + 6035186687726140299*2^128 + 15816296285*2^192,3514941079088823424 + 17877018221506562329*2^64 + 3473568468447771544*2^128 + 54945827082*2^192,15727337305726841072 + 9443995541826659697*2^64 + 7624164597200694369*2^128 + 66088900285*2^192,6533977901487479120 + 15923468986371673039*2^64 + 8586537515721917968*2^128 + 60244374424*2^192;\
14585848034879170240 + 8999647975853835825*2^64 + 10341694117837366933*2^128 + 66664603850*2^192,10461665292497810816 + 712971021265021223*2^64 + 7129358301770324295*2^128 + 19319981970*2^192,12433226033409563008 + 17693483328062963635*2^64 + 8542988263063314645*2^128 + 47940151504*2^192,2311198488060584192 + 13332576446323963235*2^64 + 15657974407052364379*2^128 + 67130112370*2^192,3623652979425918336 + 3116840542838690472*2^64 + 15230554242606417798*2^128 + 62416528597*2^192,11388484454535758208 + 14892160204292811418*2^64 + 14484692714533782636*2^128 + 36270866001*2^192,13715340387382510080 + 7028360187862685577*2^64 + 3273206274718171073*2^128 + 18277912066*2^192,3094814202896197376 + 10859775869500405443*2^64 + 10578900802974381974*2^128 + 35603676911*2^192,8109794972233911552 + 15707398053925175713*2^64 + 18237403127721899367*2^128 + 4070833431*2^192;\
7291082807714713186 + 15781596645741286643*2^64 + 3294768926613548388*2^128 + 51915441507*2^192,5790755290733819816 + 3646502243504252494*2^64 + 11250147015930868816*2^128 + 57755839248*2^192,10244804694022140976 + 1910242210497660240*2^64 + 12901427678233551492*2^128 + 28675317799*2^192,17218203918080843200 + 9363702898560671885*2^64 + 8651126398787976714*2^128 + 64683280376*2^192,9167303464747844952 + 5431185211789186342*2^64 + 16014664833607495753*2^128 + 5041998118*2^192,2994871326115983376 + 17767085088039769562*2^64 + 8325970607886496049*2^128 + 47162935633*2^192,1372298019578982528 + 3452652744606999106*2^64 + 11101203171154156103*2^128 + 43751031556*2^192,9052751761207095120 + 12433832271786603522*2^64 + 11596537214422083631*2^128 + 15999759418*2^192,6677223679038494576 + 5357154304701119270*2^64 + 17397705351087307562*2^128 + 65648116102*2^192;\
2993960382595456925 + 16611199022727060884*2^64 + 6675225548202594187*2^128 + 41276545688*2^192,16746572302979073092 + 11981342344438613427*2^64 + 7575275383937894788*2^128 + 29931537821*2^192,10849646970661204408 + 7881311282403237753*2^64 + 15920996392605471129*2^128 + 660612649*2^192,1507179034526953184 + 6645952468325810334*2^64 + 9886067921134120759*2^128 + 764227492*2^192,16792221801538162428 + 8870784815446772182*2^64 + 6137251398348982353*2^128 + 47843579890*2^192,9735951472449393000 + 11966552741910520254*2^64 + 1614306292572764699*2^128 + 46044261096*2^192,15423673883682233152 + 10337415294785669746*2^64 + 7659481509822115068*2^128 + 40921914281*2^192,13794388455576186632 + 1262179647178927160*2^64 + 5152289420474124905*2^128 + 2482053802*2^192,13381651585836154584 + 101528447895168080*2^64 + 1418683703255195210*2^128 + 24201251625*2^192;\
12149841658253225860 + 8685140356352992662*2^64 + 11044470104371798415*2^128 + 68299007775*2^192,5726180002508767056 + 6326376921668198919*2^64 + 3297915228895039793*2^128 + 12826138247*2^192,5332189803951556448 + 15032595477607304940*2^64 + 12632768684076378200*2^128 + 10289388275*2^192,578413685438488704 + 17529634031531629085*2^64 + 13109286208944755727*2^128 + 24161790308*2^192,12777130484783932592 + 3760155991197870341*2^64 + 321956227782521763*2^128 + 18663412844*2^192,3077103376026981664 + 12319238944909901255*2^64 + 8859011525285083567*2^128 + 7688281899*2^192,10698113022260105984 + 14971634138350712655*2^64 + 572333115960652448*2^128 + 51242557001*2^192,10885286705238397344 + 2166226367282305412*2^64 + 10134653073616121142*2^128 + 16539836230*2^192,5181226420957002976 + 5829018704243713257*2^64 + 17749510293783069317*2^128 + 32268197774*2^192;\
3196995975725136598 + 9845331903932254039*2^64 + 5656240047052863781*2^128 + 62112330028*2^192,9315653698840152248 + 15595728538647262125*2^64 + 534790552961856048*2^128 + 51364880865*2^192,9144518092683854096 + 14924032474840609868*2^64 + 7562363993445761394*2^128 + 55374418472*2^192,11859438632769671744 + 3693929343715605690*2^64 + 5060342739194493434*2^128 + 63559175116*2^192,7202702667741113032 + 228055659760157451*2^64 + 18303939775376275410*2^128 + 19870550461*2^192,12756241721664402608 + 12810632951256298923*2^64 + 6070354629395959223*2^128 + 18763835799*2^192,2417233459704109440 + 2371146856497058025*2^64 + 2682200036161548977*2^128 + 55435747285*2^192,609899249216413552 + 9064886937972947390*2^64 + 4286743593061905752*2^128 + 4384597749*2^192,1915018695847445200 + 470921912157128772*2^64 + 8111474913430407361*2^128 + 35352167711*2^192]
/* 
This matrix times 2^(-6) should be the matrix of frobenius.
*/ 
B = 2^(-6) * A; 
/* Freed 2818 lists. */
The sign is: -1
The characteristic polynomial is: x^9 - 5*x^7 - 6*x^6 + 16*x^5 + 32*x^4 - 48*x^3 - 160*x^2 + 512
Its Newton polygon is: [2, 2, 1, 1, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 2; x + 2, 1; x^6 + 2*x^5 + 3*x^4 + 12*x^2 + 32*x + 64, 1]
The valuation of f-g is: 24
The valuation of subst(g,x,A) is: 19

Please input coefficients below.
The polynomial is: 1*x^7*z^1 + 1*x^2*y^2*z^1*w^1 + 1*x^1*y^7 + 1*x^1*y^1*z^2*w^1 + 1*y^6*z^1 + 1*y^1*w^3 + 1*z^3*w^1
Total 583: 
Look at the ideal generated by: 
1*y^1
1*z^1
