/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^8 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^8                     = Coefficient of   z^3 * w^1               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
The final length of G is 54
[3, 3, 0, 0, 0]  	48	3 
[8, 0, 0, 0, 0]  	56	2  <--- 1
[3, 2, 0, 1, 0]  	63	2 
[0, 8, 0, 0, 0]  	72	2  <--- 2
[0, 0, 3, 1, 0]  	72	2 
[5, 0, 3, 0, 0]  	83	3 
[3, 0, 0, 3, 0]  	93	3 
[1, 2, 2, 2, 0]  	105	3 
[2, 5, 0, 2, 0]  	107	3 
[2, 0, 6, 0, 0]  	110	3 
[0, 7, 3, 0, 0]  	111	2 
[2, 5, 2, 1, 0]  	115	2 
[2, 1, 0, 4, 0]  	119	3 
[1, 2, 0, 4, 0]  	121	3 
[0, 4, 6, 0, 0]  	132	2 
[2, 0, 0, 5, 0]  	134	2 
[2, 0, 2, 4, 0]  	142	2 
[1, 1, 2, 4, 0]  	144	3 
[0, 3, 0, 5, 0]  	147	1 
[0, 6, 0, 4, 0]  	150	1 
[1, 0, 9, 0, 0]  	151	2 
[0, 1, 9, 0, 0]  	153	2 
[0, 2, 1, 5, 0]  	154	1 
[0, 5, 1, 4, 0]  	157	1 
[1, 0, 2, 5, 0]  	159	1 
[1, 1, 0, 6, 0]  	160	3 
[0, 1, 2, 5, 0]  	161	1 
[0, 4, 2, 4, 0]  	164	1 
[0, 0, 0, 7, 0]  	168	1  <--- 4
[0, 0, 12, 0, 0]  	192	1  <--- 3
[7, 0, 1, 0, 3]  	65	2 
[4, 0, 4, 0, 3]  	92	3 
[7, 0, 0, 2, 3]  	97	2 
[2, 4, 3, 0, 3]  	98	3 
[2, 4, 0, 3, 6]  	122	2 
[1, 3, 7, 0, 9]  	146	3 
[1, 6, 4, 0, 12]  	125	3 
[1, 4, 1, 3, 15]  	131	2 
[1, 7, 1, 2, 15]  	134	2 
[1, 0, 1, 5, 15]  	143	2 
[0, 0, 11, 0, 15]  	176	2 
[0, 3, 8, 0, 18]  	155	2 
[0, 3, 2, 4, 238]  	155	1 
[0, 3, 2, 3, 241]  	131	1 
[0, 6, 2, 2, 241]  	134	1 
[0, 0, 2, 5, 241]  	152	1 
[0, 5, 2, 2, 244]  	125	1 
[0, 5, 0, 4, 244]  	141	1 
[0, 2, 2, 3, 247]  	122	1 
[0, 2, 0, 5, 247]  	138	1 
[2, 3, 0, 1, 253]  	65	1 
[0, 2, 2, 2, 253]  	98	1 
[2, 0, 0, 4, 253]  	110	1 
[0, 2, 0, 4, 253]  	114	1 
------
The gap is between 19 and 237.
Lengths: 2 2 3 3 2 2.
For 160 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^6

For 88 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^2*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3

For 16 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 0.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[12894189391778863282 + 9442688250471819560*2^64 + 6246292253521155333*2^128 + 587046042*2^192,14424098715007877230 + 2771651637462267750*2^64 + 3782936127182774661*2^128 + 851021768*2^192,15655494501931934592 + 12229993521185146044*2^64 + 14184643716211267707*2^128 + 1105411829*2^192,6209620456381016320 + 6979825735315666046*2^64 + 10761363762789881483*2^128 + 278002057*2^192,3493377767107505880 + 10463241847171197726*2^64 + 17149377370234880145*2^128 + 893322331*2^192,15863853920146948608 + 10951431128988413624*2^64 + 14411123837667974258*2^128 + 640842044*2^192,2395664590245219120 + 15462702131166804820*2^64 + 163390906892981867*2^128 + 1881128448*2^192;\
5632477726244771712 + 18173651247009867406*2^64 + 4483086847719108*2^128 + 1651819739*2^192,12442325258760500338 + 9588262477980190840*2^64 + 2993656607158664857*2^128 + 90265239*2^192,3859854712562788992 + 5430645764857473901*2^64 + 15166391547170285381*2^128 + 609754497*2^192,8526602369866810408 + 9949404514013631594*2^64 + 1312847089678033996*2^128 + 1157367429*2^192,6660408696104151624 + 1147200681221126400*2^64 + 9530571451979206227*2^128 + 805750361*2^192,11961285903322022816 + 3701024700899660547*2^64 + 7578152732786675482*2^128 + 589397907*2^192,2563901209254769296 + 5003364658290341477*2^64 + 12359372489887087269*2^128 + 334262671*2^192;\
13094715749290410194 + 4676422883335430336*2^64 + 8308029876430854436*2^128 + 793751554*2^192,2733643648470813712 + 16880171577944291247*2^64 + 11073180577288769483*2^128 + 873278198*2^192,14544775564752267268 + 8815167446975976552*2^64 + 16653423500236792507*2^128 + 33335347*2^192,8514010564636083504 + 15600648043100017091*2^64 + 11734523079280524055*2^128 + 425373854*2^192,11102362576024128512 + 11782680994298246985*2^64 + 15831561506407896532*2^128 + 1057463261*2^192,6737150755671259968 + 18313143282914057539*2^64 + 4368928814403088565*2^128 + 27694781*2^192,5510051669062546176 + 5298648372870803324*2^64 + 13638566411126929330*2^128 + 1010634989*2^192;\
14931973999780155292 + 6332312426825141831*2^64 + 3652726429874737637*2^128 + 416031899*2^192,3900214628339567102 + 15713379451156088634*2^64 + 4387223563971758158*2^128 + 360558470*2^192,10582108517508130368 + 11432788508668366599*2^64 + 7312969326550180100*2^128 + 1479795495*2^192,1495854925061068544 + 2250121987880846672*2^64 + 7433873504812349867*2^128 + 1662227898*2^192,7559995435078260220 + 18132520410680321052*2^64 + 5538278226964394488*2^128 + 848088783*2^192,15241098186896643328 + 2272252259255390235*2^64 + 12403015771213123967*2^128 + 808498306*2^192,10592848920832774440 + 3280470398910981010*2^64 + 12414278268806883627*2^128 + 684490358*2^192;\
16593841718074782458 + 2347676495634074710*2^64 + 5263290420769439085*2^128 + 882234110*2^192,3207796845349662445 + 8921156156658141220*2^64 + 16379901567599661510*2^128 + 1686019601*2^192,14519293084226549056 + 7208665148744483348*2^64 + 11976001849180064806*2^128 + 232284045*2^192,1299989739320237288 + 2059055756416152185*2^64 + 16486761407484482973*2^128 + 1357774373*2^192,10858715404995124500 + 17920379021943377028*2^64 + 12923975306133830852*2^128 + 1283309512*2^192,17112749178732792152 + 317797697046002638*2^64 + 5247491588819052071*2^128 + 1231502878*2^192,10072638012638787080 + 13226470934849024298*2^64 + 17077003844398314452*2^128 + 1311122280*2^192;\
16142360616849040720 + 17239474671032530612*2^64 + 9431762519371576611*2^128 + 1214137796*2^192,14589976670150425728 + 12958545493004421077*2^64 + 3879785766429909526*2^128 + 1149369443*2^192,9032390005109554496 + 4691744069345694316*2^64 + 9878054194139221012*2^128 + 462007406*2^192,510708135679972864 + 16496512504131921279*2^64 + 6714995300568256887*2^128 + 1337056201*2^192,8910136054060023296 + 7303582810398788929*2^64 + 3423876644695714421*2^128 + 128763165*2^192,17211311223284918272 + 14024781229895563545*2^64 + 7164354370680964931*2^128 + 132664823*2^192,10559332053765749752 + 12350382497544623413*2^64 + 4359135565730840913*2^128 + 2038902958*2^192;\
2713534540640122112 + 4587683109957644588*2^64 + 7917537291602837416*2^128 + 153576815*2^192,9921227331895037112 + 11630900292959211183*2^64 + 4662347011849431055*2^128 + 1666238757*2^192,4855981199895875584 + 1302054637574985023*2^64 + 12342470854045919230*2^128 + 498471615*2^192,5175383915810059776 + 4952754118052417566*2^64 + 4822033906183180850*2^128 + 253141752*2^192,15924611454502091152 + 2255848954685129209*2^64 + 11170504044374871419*2^128 + 2028024205*2^192,15950359194153291768 + 3489312381126906354*2^64 + 17136878113994285983*2^128 + 1197133696*2^192,5090480971784646336 + 13847952125424909963*2^64 + 2801290938553693237*2^128 + 448186572*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 2297 lists. */
