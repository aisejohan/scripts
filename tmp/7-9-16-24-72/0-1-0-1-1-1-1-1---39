/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^8 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^8                     = Coefficient of   z^3 * w^1               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 126
[2, 2, 1, 0, 0]  	48	4 
[8, 0, 0, 0, 0]  	56	4  <--- 1
[1, 1, 2, 1, 0]  	72	3 
[0, 8, 0, 0, 0]  	72	2  <--- 2
[1, 0, 3, 1, 0]  	79	3 
[7, 1, 2, 0, 0]  	90	4 
[7, 0, 3, 0, 0]  	97	4 
[6, 1, 0, 2, 0]  	99	4 
[2, 0, 1, 3, 0]  	102	4 
[7, 0, 2, 1, 0]  	105	3 
[1, 0, 2, 3, 0]  	111	3 
[6, 0, 0, 3, 0]  	114	5 
[1, 7, 3, 0, 0]  	118	4 
[0, 0, 6, 1, 0]  	120	3 
[3, 6, 0, 2, 0]  	123	5 
[5, 1, 5, 0, 0]  	124	4 
[5, 0, 6, 0, 0]  	131	4 
[1, 5, 5, 0, 0]  	132	4 
[4, 1, 6, 0, 0]  	133	5 
[0, 2, 3, 3, 0]  	138	2 
[1, 4, 6, 0, 0]  	139	5 
[5, 1, 0, 4, 0]  	140	4 
[3, 0, 0, 5, 0]  	141	2 
[0, 5, 6, 0, 0]  	141	2 
[0, 5, 3, 2, 0]  	141	2 
[4, 2, 0, 4, 0]  	142	4 
[0, 1, 4, 3, 0]  	145	2 
[2, 4, 0, 4, 0]  	146	5 
[0, 3, 0, 5, 0]  	147	1 
[1, 5, 0, 4, 0]  	148	3 
[0, 4, 4, 2, 0]  	148	2 
[0, 6, 0, 4, 0]  	150	1 
[0, 2, 1, 5, 0]  	154	1 
[1, 4, 1, 4, 0]  	155	3 
[0, 3, 5, 2, 0]  	155	2 
[4, 0, 8, 0, 0]  	156	1 
[0, 5, 1, 4, 0]  	157	1 
[2, 0, 9, 0, 0]  	158	3 
[0, 1, 2, 5, 0]  	161	1 
[0, 2, 9, 0, 0]  	162	2 
[0, 4, 8, 0, 0]  	164	1 
[0, 4, 2, 4, 0]  	164	1 
[2, 1, 0, 6, 0]  	167	4 
[0, 0, 3, 5, 0]  	168	1 
[0, 0, 0, 7, 0]  	168	1  <--- 4
[1, 2, 0, 6, 0]  	169	3 
[1, 1, 10, 0, 0]  	176	3 
[1, 1, 1, 6, 0]  	176	3 
[1, 0, 11, 0, 0]  	183	1 
[0, 1, 11, 0, 0]  	185	1 
[0, 0, 12, 0, 0]  	192	1  <--- 3
[2, 1, 1, 1, 1]  	63	3 
[1, 1, 0, 3, 1]  	88	3 
[5, 0, 5, 0, 1]  	115	4 
[2, 7, 0, 2, 1]  	125	5 
[1, 0, 0, 5, 1]  	127	3 
[4, 0, 7, 0, 1]  	140	4 
[0, 4, 5, 1, 1]  	140	2 
[2, 0, 8, 0, 1]  	142	4 
[0, 7, 5, 0, 1]  	143	2 
[0, 4, 7, 0, 1]  	148	2 
[0, 0, 5, 3, 1]  	152	2 
[1, 2, 8, 0, 1]  	153	4 
[1, 1, 9, 0, 1]  	160	5 
[6, 0, 2, 1, 2]  	98	4 
[2, 6, 0, 2, 2]  	116	5 
[0, 3, 8, 0, 2]  	155	2 
[1, 0, 10, 0, 2]  	167	3 
[0, 1, 10, 0, 2]  	169	2 
[7, 0, 1, 0, 3]  	65	3 
[6, 1, 2, 0, 3]  	83	5 
[6, 0, 3, 0, 3]  	90	4 
[5, 1, 0, 2, 3]  	92	5 
[7, 0, 0, 2, 3]  	97	2 
[5, 0, 0, 3, 3]  	107	5 
[4, 0, 5, 0, 3]  	108	5 
[7, 7, 0, 0, 3]  	112	2 
[3, 1, 6, 0, 3]  	126	4 
[3, 0, 7, 0, 3]  	133	3 
[1, 7, 1, 2, 3]  	134	3 
[1, 0, 8, 0, 3]  	135	3 
[0, 0, 10, 0, 3]  	160	3 
[1, 6, 4, 0, 4]  	125	4 
[1, 3, 7, 0, 4]  	146	5 
[6, 7, 0, 0, 6]  	105	3 
[4, 5, 0, 2, 6]  	121	4 
[0, 1, 8, 0, 6]  	137	3 
[3, 5, 0, 2, 9]  	114	5 
[1, 3, 6, 0, 9]  	130	4 
[1, 4, 5, 0, 12]  	123	3 
[0, 3, 7, 0, 12]  	139	3 
[0, 4, 6, 0, 15]  	132	3 
[0, 4, 3, 2, 241]  	132	2 
[0, 3, 3, 2, 244]  	123	2 
[0, 2, 3, 2, 247]  	114	2 
[0, 1, 3, 2, 250]  	105	2 
[0, 6, 5, 0, 252]  	134	2 
[0, 4, 2, 3, 252]  	140	1 
[0, 7, 2, 2, 252]  	143	1 
[0, 0, 2, 5, 252]  	152	1 
[0, 1, 3, 1, 253]  	81	2 
[0, 0, 4, 2, 253]  	112	1 
[0, 5, 5, 0, 253]  	125	2 
[0, 0, 3, 4, 253]  	144	1 
[1, 2, 1, 1, 254]  	65	2 
[0, 0, 5, 1, 254]  	104	2 
[0, 1, 2, 3, 254]  	113	1 
[1, 0, 1, 4, 254]  	119	2 
[0, 7, 2, 1, 254]  	119	1 
[0, 7, 4, 0, 254]  	127	2 
[0, 0, 2, 4, 254]  	128	1 
[0, 5, 1, 3, 254]  	133	1 
[0, 0, 1, 5, 254]  	136	1 
[1, 0, 2, 1, 255]  	63	1 
[0, 1, 2, 1, 255]  	65	1 
[0, 0, 4, 1, 255]  	88	2 
[1, 0, 1, 3, 255]  	95	1 
[0, 1, 1, 3, 255]  	97	1 
[1, 7, 2, 0, 255]  	102	3 
[1, 6, 0, 2, 255]  	109	3 
[0, 7, 3, 0, 255]  	111	2 
[0, 0, 1, 4, 255]  	112	1 
[0, 0, 3, 3, 255]  	120	2 
[0, 6, 0, 3, 255]  	126	1 
[0, 1, 0, 5, 255]  	129	1 
[0, 0, 0, 6, 255]  	144	1 
------
The gap is between 16 and 240.
Lengths: 2 2 3 4 2 5.
For 160 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^4
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^6

For 88 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^4*y^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^4*w^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3

For 16 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 3.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[5553519602637284114 + 12449961040613914024*2^64 + 17471835656304646572*2^128 + 781017011*2^192,1472781818371636860 + 3561677626412864385*2^64 + 3167205811143645122*2^128 + 201034593*2^192,10484226888388700164 + 338752161982149093*2^64 + 7483775975603035744*2^128 + 2106317566*2^192,15647612563311757648 + 9241779424181756609*2^64 + 16658462016507027803*2^128 + 1147648503*2^192,15410310589495583996 + 16296444985764149707*2^64 + 4556613926170205508*2^128 + 1728926881*2^192,16138457953570286228 + 15647471671626191566*2^64 + 3396051021579219468*2^128 + 829499268*2^192,1885819696699772440 + 12317828836168809028*2^64 + 4184393968991361394*2^128 + 1309734835*2^192;\
4572408361061595584 + 12140305093819734941*2^64 + 5076947440342131432*2^128 + 2136282567*2^192,878570243825388206 + 1101916671092710218*2^64 + 2641624719748061836*2^128 + 2136339518*2^192,14853383940811225940 + 10472778159233348874*2^64 + 14485667219453335362*2^128 + 1556876832*2^192,17031078416617699120 + 525184850990706514*2^64 + 10926778680953330321*2^128 + 1011666433*2^192,9270312335997566548 + 15189978455512076345*2^64 + 779542486964945082*2^128 + 637607911*2^192,4496885945090628956 + 1522253528591926496*2^64 + 9648687997633906480*2^128 + 1604916516*2^192,2974181292562331272 + 2012015974710555132*2^64 + 18362263849895452022*2^128 + 1855714546*2^192;\
1398744257059703944 + 16091358958716381113*2^64 + 9159437454341555535*2^128 + 231058888*2^192,9963949766429195702 + 4251276622003296703*2^64 + 5556484000517848224*2^128 + 276748734*2^192,1258320579820590728 + 11649450177951045692*2^64 + 16614948760397370210*2^128 + 262946043*2^192,1521522162917678832 + 7929383253033406617*2^64 + 16634303138653854287*2^128 + 674837618*2^192,14343751023098619060 + 1065195695197729296*2^64 + 7758999161404615605*2^128 + 279537481*2^192,15780796073022213628 + 11531817466914374206*2^64 + 6234393693125868743*2^128 + 596718777*2^192,3367320511556012488 + 6243942014132807243*2^64 + 9417953173950379997*2^128 + 651454670*2^192;\
3664934852745496800 + 17017802447214794713*2^64 + 3451024741239322595*2^128 + 700985949*2^192,17664380564267331911 + 17384648537748172331*2^64 + 15369398574215450809*2^128 + 125907756*2^192,16593327334696518240 + 16112453460275096323*2^64 + 13646078157782363564*2^128 + 1804036813*2^192,14139508602638059964 + 17281834336989871625*2^64 + 5227982926377301548*2^128 + 1734825203*2^192,15647809076101023110 + 6471226820746063125*2^64 + 14870171556930769258*2^128 + 1478448478*2^192,7128915521116061354 + 13722116735407148775*2^64 + 14225884332532709426*2^128 + 401008693*2^192,4032708841146265580 + 11095263892083875299*2^64 + 13454811656758013616*2^128 + 632874888*2^192;\
23716747268591278 + 11933338197547447416*2^64 + 6612076673464531307*2^128 + 832389635*2^192,4272119660374422066 + 7933622495396179373*2^64 + 11151785289906416844*2^128 + 114340401*2^192,6060292799757787522 + 9146312604456523510*2^64 + 6722017173655399174*2^128 + 1316917558*2^192,15936015633845669232 + 9028559659167762955*2^64 + 8103210366162251139*2^128 + 369954601*2^192,15386617266761481900 + 2407069447464391956*2^64 + 11247970240964975216*2^128 + 1112815253*2^192,16711426564703719344 + 1205958894413867711*2^64 + 5800633005236051291*2^128 + 1245796741*2^192,11937626589742125696 + 18391385512000374414*2^64 + 12691741983893638491*2^128 + 2050597*2^192;\
7398342861047566112 + 11968292647832596721*2^64 + 6071948846157231875*2^128 + 125831385*2^192,15274324407560082476 + 553933927990269973*2^64 + 1831359195230714386*2^128 + 683384079*2^192,2386261675867646000 + 8849226812015022293*2^64 + 2802240966736647507*2^128 + 451773251*2^192,47574362489758880 + 1715113308371370030*2^64 + 1274982277567341574*2^128 + 915267492*2^192,13180559557178482344 + 4666285722143649625*2^64 + 6890852393023060903*2^128 + 553410835*2^192,15913750303534051264 + 17960013638775425175*2^64 + 2790969212257076370*2^128 + 931241594*2^192,13989997069281932432 + 3556070385025787224*2^64 + 9489755626889927978*2^128 + 547635219*2^192;\
1284740700964825440 + 7596886395438280440*2^64 + 13552775576218909084*2^128 + 877372013*2^192,5184977257988422878 + 1841330295245341961*2^64 + 5972013104695231235*2^128 + 1711934059*2^192,15031324292727707072 + 10553184594289597229*2^64 + 469830348113823855*2^128 + 2075484774*2^192,17580805366787156328 + 1320968997770452601*2^64 + 12067324003148525652*2^128 + 569305067*2^192,441803898425809772 + 10753810928361260455*2^64 + 16194329712507194526*2^128 + 990460508*2^192,15069406903029082108 + 3096314651071847849*2^64 + 7993441506168379515*2^128 + 1914523788*2^192,11005810002609537936 + 7536737771527476662*2^64 + 17376738716053607370*2^128 + 372746519*2^192]
/* 
This matrix times 2^(-1) should be the matrix of frobenius.
*/ 
B = 2^(-1) * A; 
/* Freed 2132 lists. */
The sign is: 1
The characteristic polynomial is: x^7 + 3*x^5 - 4*x^4 + 8*x^3 - 24*x^2 - 128
Its Newton polygon is: [2, 2, 1, 1, 1, 0, 0]
Its factorization is: [x - 2, 1; x^2 - 2*x + 4, 1; x^2 + x + 4, 1; x^2 + 3*x + 4, 1]
The valuation of f-g is: 29
The valuation of subst(g,x,A) is: 29
