/* Comments begin... 
No set up needed.

Please input coefficients below.
Coefficient of   x^9 * y^1               = Coefficient of   x^8 * z^1               = Coefficient of   x^3 * y^3 * w^1         = Coefficient of   x^2 * y^2 * z^1 * w^1   = Coefficient of   x^1 * y^1 * z^2 * w^1   = Coefficient of   y^8                     = Coefficient of   z^3 * w^1               = Coefficient of   w^3                     = 
Here is the polynomial we're using this time:

1 + 0*2^64 + 0*2^128 + 0*2^192*x^9*y^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^3*y^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^2*y^2*z^1*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*z^2*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*y^8 + 1 + 0*2^64 + 0*2^128 + 0*2^192*z^3*w^1 + 1 + 0*2^64 + 0*2^128 + 0*2^192*w^3


Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 107
[3, 3, 0, 0, 0]  	48	5 
[2, 2, 0, 1, 0]  	56	3 
[9, 0, 0, 0, 0]  	63	4  <--- 1
[8, 1, 0, 0, 0]  	65	3 
[0, 8, 0, 0, 0]  	72	2  <--- 2
[7, 2, 1, 0, 0]  	83	6 
[7, 1, 2, 0, 0]  	90	5 
[5, 1, 0, 2, 0]  	92	5 
[3, 0, 0, 3, 0]  	93	5 
[7, 0, 3, 0, 0]  	97	4 
[4, 1, 4, 0, 0]  	101	5 
[7, 0, 2, 1, 0]  	105	3 
[6, 1, 2, 1, 0]  	107	5 
[2, 0, 0, 4, 0]  	110	3 
[2, 1, 1, 3, 0]  	111	4 
[6, 0, 3, 1, 0]  	114	3 
[2, 4, 4, 0, 0]  	114	4 
[4, 0, 4, 1, 0]  	116	5 
[2, 0, 2, 3, 0]  	118	5 
[3, 2, 5, 0, 0]  	119	6 
[2, 3, 5, 0, 0]  	121	6 
[1, 4, 5, 0, 0]  	123	4 
[2, 7, 3, 0, 0]  	125	5 
[3, 1, 6, 0, 0]  	126	6 
[1, 1, 1, 4, 0]  	128	3 
[1, 3, 6, 0, 0]  	130	6 
[5, 0, 6, 0, 0]  	131	5 
[1, 5, 2, 2, 0]  	132	4 
[4, 1, 3, 2, 0]  	133	5 
[1, 3, 2, 3, 0]  	138	4 
[1, 4, 3, 2, 0]  	139	4 
[1, 4, 0, 4, 0]  	139	3 
[3, 0, 6, 1, 0]  	141	2 
[0, 5, 6, 0, 0]  	141	3 
[2, 1, 6, 1, 0]  	143	5 
[1, 1, 8, 0, 0]  	144	3 
[1, 2, 6, 1, 0]  	145	4 
[1, 2, 3, 3, 0]  	145	3 
[1, 2, 0, 5, 0]  	145	2 
[0, 3, 6, 1, 0]  	147	1 
[0, 3, 3, 3, 0]  	147	1 
[0, 3, 0, 5, 0]  	147	1 
[3, 0, 8, 0, 0]  	149	6 
[2, 0, 7, 1, 0]  	150	1 
[0, 6, 3, 2, 0]  	150	1 
[0, 6, 0, 4, 0]  	150	1 
[0, 2, 7, 1, 0]  	154	1 
[0, 2, 4, 3, 0]  	154	1 
[0, 2, 1, 5, 0]  	154	1 
[0, 3, 8, 0, 0]  	155	3 
[0, 5, 4, 2, 0]  	157	1 
[0, 5, 1, 4, 0]  	157	1 
[2, 0, 9, 0, 0]  	158	5 
[1, 0, 8, 1, 0]  	159	1 
[1, 0, 5, 3, 0]  	159	1 
[1, 0, 2, 5, 0]  	159	1 
[1, 1, 0, 6, 0]  	160	3 
[0, 1, 8, 1, 0]  	161	1 
[0, 1, 5, 3, 0]  	161	1 
[0, 1, 2, 5, 0]  	161	1 
[0, 2, 9, 0, 0]  	162	4 
[0, 4, 5, 2, 0]  	164	1 
[0, 4, 2, 4, 0]  	164	1 
[1, 0, 10, 0, 0]  	167	6 
[0, 0, 9, 1, 0]  	168	1 
[0, 0, 6, 3, 0]  	168	1 
[0, 0, 3, 5, 0]  	168	1 
[0, 0, 0, 7, 0]  	168	1  <--- 4
[0, 1, 10, 0, 0]  	169	4 
[0, 0, 12, 0, 0]  	192	1  <--- 3
[7, 1, 1, 1, 1]  	98	4 
[6, 0, 5, 0, 1]  	122	4 
[1, 1, 4, 2, 1]  	128	4 
[3, 1, 5, 1, 1]  	134	6 
[2, 0, 6, 1, 1]  	134	5 
[1, 0, 8, 0, 1]  	135	3 
[1, 3, 5, 1, 1]  	138	4 
[1, 5, 1, 3, 1]  	140	3 
[1, 0, 1, 5, 1]  	143	3 
[0, 0, 3, 1, 2]  	72	2 
[1, 5, 4, 0, 2]  	116	4 
[3, 0, 7, 0, 2]  	133	5 
[1, 7, 1, 2, 2]  	134	3 
[0, 7, 5, 0, 2]  	143	2 
[0, 4, 7, 0, 2]  	148	3 
[0, 0, 11, 0, 2]  	176	2 
[0, 4, 2, 3, 249]  	140	1 
[0, 7, 2, 2, 249]  	143	1 
[0, 0, 2, 5, 249]  	152	1 
[0, 6, 5, 0, 251]  	134	2 
[0, 2, 0, 5, 251]  	138	1 
[1, 5, 1, 2, 252]  	116	3 
[0, 0, 0, 5, 252]  	120	1 
[0, 4, 1, 3, 252]  	124	1 
[0, 6, 0, 3, 252]  	126	1 
[0, 0, 0, 3, 254]  	72	1 
[2, 7, 1, 0, 254]  	93	4 
[1, 5, 0, 2, 254]  	100	3 
[1, 7, 2, 0, 254]  	102	3 
[1, 4, 4, 0, 254]  	107	3 
[0, 7, 3, 0, 254]  	111	2 
[1, 6, 2, 1, 254]  	117	2 
[0, 7, 2, 1, 254]  	119	1 
[6, 0, 2, 1, 255]  	98	1 
[1, 7, 1, 1, 255]  	110	2 
[0, 6, 2, 1, 255]  	110	1 
[0, 0, 8, 0, 255]  	128	1 
------
The gap is between 3 and 248.
Lengths: 2 2 3 5 2 5.
For 160 = 3*d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*z^10
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^6

For 88 = 2*d-d1-d2-d3-d4 you get 3 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^8*z^2
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1*w^3
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1*w^3

For 16 = d-d1-d2-d3-d4 you get 2 in char 0.
1 + 0*2^64 + 0*2^128 + 0*2^192*x^1*y^1
1 + 0*2^64 + 0*2^128 + 0*2^192*z^1

Extra powers of p used 5.
The invariant extra is equal to 33.
Start computing 2^4 Delta^1 (x1x2x3x4)^1... Done.
Start computing 2^5 Delta^2 (x1x2x3x4)^1... Done.
Start computing 2^6 Delta^3 (x1x2x3x4)^1... Done.
Start computing 2^7 Delta^4 (x1x2x3x4)^1... Done.
Start computing 2^8 Delta^5 (x1x2x3x4)^1... Done.
Start computing 2^9 Delta^6 (x1x2x3x4)^1... Done.
Start computing 2^10 Delta^7 (x1x2x3x4)^1... Done.
Start computing 2^11 Delta^8 (x1x2x3x4)^1... Done.
Start computing 2^12 Delta^9 (x1x2x3x4)^1... Done.
Start computing 2^13 Delta^10 (x1x2x3x4)^1... Done.
Start computing 2^14 Delta^11 (x1x2x3x4)^1... Done.
Start computing 2^15 Delta^12 (x1x2x3x4)^1... Done.
Start computing 2^16 Delta^13 (x1x2x3x4)^1... Done.
Start computing 2^17 Delta^14 (x1x2x3x4)^1... Done.
Start computing 2^18 Delta^15 (x1x2x3x4)^1... Done.
Start computing 2^19 Delta^16 (x1x2x3x4)^1... Done.
Start computing 2^20 Delta^17 (x1x2x3x4)^1... Done.
Start computing 2^21 Delta^18 (x1x2x3x4)^1... Done.
Start computing 2^22 Delta^19 (x1x2x3x4)^1... Done.
Start computing 2^23 Delta^20 (x1x2x3x4)^1... Done.
Start computing 2^24 Delta^21 (x1x2x3x4)^1... Done.
Start computing 2^25 Delta^22 (x1x2x3x4)^1... Done.
Start computing 2^26 Delta^23 (x1x2x3x4)^1... Done.
Start computing 2^27 Delta^24 (x1x2x3x4)^1... Done.
Start computing 2^28 Delta^25 (x1x2x3x4)^1... Done.
Start computing 2^29 Delta^26 (x1x2x3x4)^1... Done.
Start computing 2^30 Delta^27 (x1x2x3x4)^1... Done.
Start computing 2^31 Delta^28 (x1x2x3x4)^1... Done.
Start computing 2^32 Delta^29 (x1x2x3x4)^1... Done.
Start computing 2^33 Delta^30 (x1x2x3x4)^1... Done.
Start computing 2^34 Delta^31 (x1x2x3x4)^1... Done.
Start computing 2^35 Delta^32 (x1x2x3x4)^1... Done.
Start computing 2^36 Delta^33 (x1x2x3x4)^1... Done.
Start computing 2^37 Delta^34 (x1x2x3x4)^1... Done.
Start computing 2^38 Delta^35 (x1x2x3x4)^1... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[978688247285556360 + 14890577302697135538*2^64 + 17344838806555313684*2^128 + 776225755*2^192,13827062077060894336 + 6196587587659796723*2^64 + 2802541532656710180*2^128 + 4023464836*2^192,12957407468383875264 + 7312519171931999707*2^64 + 15794140506104060493*2^128 + 526181007*2^192,10793423316786759616 + 2301036828271282571*2^64 + 9868428495003927243*2^128 + 586154353*2^192,7682773373238858496 + 11423644368879546961*2^64 + 7418591653548007936*2^128 + 208440896*2^192,10764326902876845472 + 18247767421983237875*2^64 + 1394369359145810925*2^128 + 3432051940*2^192,14829145207882713696 + 11695944106645509760*2^64 + 16327135469997211701*2^128 + 2346141089*2^192;\
4875957296640408630 + 14416183219238627856*2^64 + 12511200347367556057*2^128 + 1594043883*2^192,6901382025290822232 + 3625589476070382818*2^64 + 11438390806249784536*2^128 + 1729206411*2^192,10190052453165264096 + 11409654566521218869*2^64 + 3489529276971619018*2^128 + 1718688777*2^192,2648893168889220064 + 5883062741531707159*2^64 + 17214357247532649166*2^128 + 2898857258*2^192,14372112181794567872 + 14265191274460570649*2^64 + 14615741360522889108*2^128 + 1797525788*2^192,3912025152907617394 + 2030273650560428889*2^64 + 4889104702167979849*2^128 + 1670887514*2^192,9195294074728286470 + 584297154698373981*2^64 + 3111491920213469880*2^128 + 2439831588*2^192;\
0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,10250701138584141832 + 5237561937588078428*2^64 + 15069447012531778926*2^128 + 1623012574*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192,0 + 0*2^64 + 0*2^128 + 0*2^192;\
6177413331568706201 + 11611397110488096227*2^64 + 8313265518708572808*2^128 + 3459167127*2^192,5751564191260266440 + 13522900361076762325*2^64 + 5942325670740787860*2^128 + 2202059016*2^192,7590128770261592912 + 4882530606928893160*2^64 + 4716268542572786562*2^128 + 246367532*2^192,12996340661682762232 + 11610909290084941203*2^64 + 8773561994418342657*2^128 + 2809830136*2^192,6799642718669129232 + 10079315818984205275*2^64 + 152623981922115907*2^128 + 1401089270*2^192,14538396640068609739 + 18101998259813622868*2^64 + 5353762324029227945*2^128 + 1655952749*2^192,112412405726575193 + 6325241708124437650*2^64 + 17344481239946385989*2^128 + 982064564*2^192;\
9029765926467408836 + 1363225745482724234*2^64 + 4897662172269765852*2^128 + 3913475413*2^192,9374673473465460936 + 16639009148309153860*2^64 + 1867434566396510203*2^128 + 2128228787*2^192,13808954355518630144 + 14291214029157379613*2^64 + 1834264621194119508*2^128 + 40188029*2^192,2604267366536918384 + 1251733041756204748*2^64 + 2458933986754625480*2^128 + 728761643*2^192,11846073793997850576 + 6319829723687180999*2^64 + 15063025098989968519*2^128 + 51186862*2^192,13719227423449140681 + 3491386037740512729*2^64 + 2687592062137395160*2^128 + 1534883522*2^192,8821579102910206203 + 1309668118613036058*2^64 + 14158199476719654650*2^128 + 2016421045*2^192;\
18324206205024563414 + 13251745190982230713*2^64 + 16045416234721803908*2^128 + 1912913757*2^192,7966530596465458808 + 8494438714941656531*2^64 + 13419294519025514263*2^128 + 1959026782*2^192,9193746512493808544 + 266094355244984653*2^64 + 11233464791397484685*2^128 + 2580012931*2^192,17798583041719883328 + 11957422350850934424*2^64 + 5021744992310005011*2^128 + 2239666648*2^192,13157962525531849584 + 3183736692624390432*2^64 + 2358892569284551860*2^128 + 1932724232*2^192,4782514097738374569 + 18044177122902492230*2^64 + 2571628775354915804*2^128 + 1478739366*2^192,6177448225097887563 + 2880181814748887287*2^64 + 15402081961246816669*2^128 + 1914407551*2^192;\
13364520935990909502 + 1149354215216049910*2^64 + 3565170521694321474*2^128 + 1224168962*2^192,9914071423085216528 + 7602504893072071245*2^64 + 11620849794488874667*2^128 + 290610523*2^192,4353964031642720272 + 1874851191153604687*2^64 + 5619362486762845183*2^128 + 2685208911*2^192,18182294184633629840 + 10483721600735224308*2^64 + 13231862646233291796*2^128 + 1261588540*2^192,18338522704904912288 + 11279391866697180515*2^64 + 13915336453697361876*2^128 + 2310851975*2^192,18401908603411609765 + 13053415572781075499*2^64 + 12087629505495726388*2^128 + 3192509606*2^192,10026903531549266351 + 6181326484725567683*2^64 + 11763038570869442387*2^128 + 2568513009*2^192]
/* 
This matrix times 2^(-2) should be the matrix of frobenius.
*/ 
B = 2^(-2) * A; 
/* Freed 2439 lists. */
The sign is: -1
The characteristic polynomial is: x^7 - 2*x^6 - 64*x + 128
Its Newton polygon is: [1, 1, 1, 1, 1, 1, 1]
Its factorization is: [x - 2, 2; x + 2, 1; x^2 - 2*x + 4, 1; x^2 + 2*x + 4, 1]
The valuation of f-g is: 32
The valuation of subst(g,x,A) is: 35

Please input coefficients below.
The polynomial is: 1*x^9*y^1 + 1*x^3*y^3*w^1 + 1*x^2*y^2*z^1*w^1 + 1*x^1*y^1*z^2*w^1 + 1*y^8 + 1*z^3*w^1 + 1*w^3
Total 223: 2 
Look at the ideal generated by: 
1*y^1
1*w^1
